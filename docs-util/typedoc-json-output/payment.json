{
	"id": 6396,
	"name": "payment",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 6871,
			"name": "AddressDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 6872,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 6873,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 6874,
							"name": "address_1",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 6875,
							"name": "address_2",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 6876,
							"name": "company",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 6877,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 6878,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 6879,
							"name": "phone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 6880,
							"name": "postal_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 6881,
							"name": "province",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 6882,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 6883,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 6884,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 6885,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								6873,
								6874,
								6875,
								6876,
								6877,
								6878,
								6879,
								6880,
								6881,
								6882,
								6883,
								6884,
								6885
							]
						}
					]
				}
			}
		},
		{
			"id": 6573,
			"name": "FindConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to configure how an entity is retrieved from the database. It accepts as a typed parameter an "
					},
					{
						"kind": "code",
						"text": "`Entity`"
					},
					{
						"kind": "text",
						"text": " class,\nwhich provides correct typing of field names in its properties."
					}
				]
			},
			"children": [
				{
					"id": 6574,
					"name": "select",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being attribute names of the entity to retrieve in the result."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": 6584,
										"name": "Entity",
										"package": "@medusajs/types",
										"qualifiedName": "FindConfig.Entity",
										"refersToTypeParameter": true
									}
								}
							]
						}
					}
				},
				{
					"id": 6575,
					"name": "skip",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A number indicating the number of records to skip before retrieving the results."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 6576,
					"name": "take",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A number indicating the number of records to return in the result."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 6577,
					"name": "relations",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being relation names of the entity to retrieve in the result."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 6578,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to specify how to sort the returned records. Its keys are the names of attributes of the entity, and a key's value can either be "
							},
							{
								"kind": "code",
								"text": "`ASC`"
							},
							{
								"kind": "text",
								"text": "\nto sort retrieved records in an ascending order, or "
							},
							{
								"kind": "code",
								"text": "`DESC`"
							},
							{
								"kind": "text",
								"text": " to sort retrieved records in a descending order."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 6579,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"indexSignature": {
								"id": 6580,
								"name": "__index",
								"variant": "signature",
								"kind": 8192,
								"flags": {},
								"parameters": [
									{
										"id": 6581,
										"name": "K",
										"variant": "param",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "ASC"
										},
										{
											"type": "literal",
											"value": "DESC"
										}
									]
								}
							}
						}
					}
				},
				{
					"id": 6582,
					"name": "withDeleted",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean indicating whether deleted records should also be retrieved as part of the result. This only works if the entity extends the\n"
							},
							{
								"kind": "code",
								"text": "`SoftDeletableEntity`"
							},
							{
								"kind": "text",
								"text": " class."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 6583,
					"name": "filters",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Enable ORM specific defined filters"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6574,
						6575,
						6576,
						6577,
						6578,
						6582,
						6583
					]
				}
			],
			"typeParameters": [
				{
					"id": 6584,
					"name": "Entity",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 6941,
			"name": "CustomerAddressDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The customer address details."
					}
				]
			},
			"children": [
				{
					"id": 6942,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the customer address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6943,
					"name": "address_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The address name of the customer address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6944,
					"name": "is_default_shipping",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the customer address is default shipping."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 6945,
					"name": "is_default_billing",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the customer address is default billing."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 6946,
					"name": "customer_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated customer's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6947,
					"name": "company",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The company of the customer address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6948,
					"name": "first_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The first name of the customer address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6949,
					"name": "last_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The last name of the customer address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6950,
					"name": "address_1",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The address 1 of the customer address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6951,
					"name": "address_2",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The address 2 of the customer address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6952,
					"name": "city",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The city of the customer address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6953,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The country code of the customer address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6954,
					"name": "province",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The province of the customer address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6955,
					"name": "postal_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The postal code of the customer address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6956,
					"name": "phone",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The phone of the customer address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6957,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 6958,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The created at of the customer address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6959,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The updated at of the customer address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6942,
						6943,
						6944,
						6945,
						6946,
						6947,
						6948,
						6949,
						6950,
						6951,
						6952,
						6953,
						6954,
						6955,
						6956,
						6957,
						6958,
						6959
					]
				}
			]
		},
		{
			"id": 6886,
			"name": "CustomerDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The customer details."
					}
				]
			},
			"children": [
				{
					"id": 6887,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the customer."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6888,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The email of the customer."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6889,
					"name": "has_account",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A flag indicating if customer has an account or not."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 6890,
					"name": "default_billing_address_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated default billing address's ID."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 6891,
					"name": "default_shipping_address_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated default shipping address's ID."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 6892,
					"name": "company_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The company name of the customer."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 6893,
					"name": "first_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The first name of the customer."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 6894,
					"name": "last_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The last name of the customer."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 6895,
					"name": "addresses",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The addresses of the customer."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 6941,
							"name": "CustomerAddressDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 6896,
					"name": "phone",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The phone of the customer."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 6897,
					"name": "groups",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The groups of the customer."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 6898,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 6899,
										"name": "id",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"comment": {
											"summary": [
												{
													"kind": "text",
													"text": "The ID of the group."
												}
											]
										},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 6900,
										"name": "name",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"comment": {
											"summary": [
												{
													"kind": "text",
													"text": "The name of the group."
												}
											]
										},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											6899,
											6900
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 6901,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 6902,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Who created the customer."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 6903,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The deletion date of the customer."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 6904,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The creation date of the customer."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 6905,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The update date of the customer."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6887,
						6888,
						6889,
						6890,
						6891,
						6892,
						6893,
						6894,
						6895,
						6896,
						6897,
						6901,
						6902,
						6903,
						6904,
						6905
					]
				}
			]
		},
		{
			"id": 6783,
			"name": "BaseFilterable",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object used to allow specifying flexible queries with and/or conditions."
					}
				]
			},
			"children": [
				{
					"id": 6784,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 6783,
									"typeArguments": [
										{
											"type": "reference",
											"target": 6786,
											"name": "T",
											"package": "@medusajs/types",
											"qualifiedName": "BaseFilterable.T",
											"refersToTypeParameter": true
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 6786,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "BaseFilterable.T",
									"refersToTypeParameter": true
								}
							]
						}
					}
				},
				{
					"id": 6785,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 6783,
									"typeArguments": [
										{
											"type": "reference",
											"target": 6786,
											"name": "T",
											"package": "@medusajs/types",
											"qualifiedName": "BaseFilterable.T",
											"refersToTypeParameter": true
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 6786,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "BaseFilterable.T",
									"refersToTypeParameter": true
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6784,
						6785
					]
				}
			],
			"typeParameters": [
				{
					"id": 6786,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 6585,
					"name": "FilterablePaymentCollectionProps"
				},
				{
					"type": "reference",
					"target": 6647,
					"name": "FilterablePaymentSessionProps"
				},
				{
					"type": "reference",
					"target": 6659,
					"name": "FilterablePaymentProps"
				},
				{
					"type": "reference",
					"target": 6686,
					"name": "FilterablePaymentProviderProps"
				},
				{
					"type": "reference",
					"target": 6694,
					"name": "FilterableCaptureProps"
				},
				{
					"type": "reference",
					"target": 6710,
					"name": "FilterableRefundProps"
				}
			]
		},
		{
			"id": 6867,
			"name": "Query",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 6868,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 6868,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "intrinsic",
					"name": "object"
				},
				"trueType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 6868,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reference",
						"target": 6929,
						"name": "Scalar",
						"package": "@medusajs/types"
					},
					"trueType": {
						"type": "intrinsic",
						"name": "never"
					},
					"falseType": {
						"type": "reference",
						"target": 6933,
						"typeArguments": [
							{
								"type": "reference",
								"target": 6868,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterQuery",
						"package": "@medusajs/types"
					}
				},
				"falseType": {
					"type": "reference",
					"target": 6939,
					"typeArguments": [
						{
							"type": "reference",
							"target": 6868,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "FilterValue",
					"package": "@medusajs/types"
				}
			}
		},
		{
			"id": 6869,
			"name": "ExpandScalar",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 6870,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": null
					},
					{
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 6870,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "intrinsic",
							"name": "string"
						},
						"trueType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "RegExp"
									},
									"name": "RegExp",
									"package": "typescript"
								}
							]
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 6870,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							},
							"trueType": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"falseType": {
								"type": "reference",
								"target": 6870,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					}
				]
			}
		},
		{
			"id": 6929,
			"name": "Scalar",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "boolean"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "intrinsic",
						"name": "bigint"
					},
					{
						"type": "intrinsic",
						"name": "symbol"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "RegExp"
						},
						"name": "RegExp",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/node/buffer.d.ts",
							"qualifiedName": "__global.Buffer"
						},
						"name": "Buffer",
						"package": "@types/node",
						"qualifiedName": "__global.Buffer"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 6930,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 6931,
									"name": "toHexString",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"signatures": [
										{
											"id": 6932,
											"name": "toHexString",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"children": [
										6931
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 6973,
			"name": "ReadonlyPrimary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 6974,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 6974,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "array",
					"elementType": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				"trueType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Readonly"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": 6974,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "Readonly",
					"package": "typescript"
				},
				"falseType": {
					"type": "reference",
					"target": 6974,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				}
			}
		},
		{
			"id": 6963,
			"name": "Primary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 6972,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 6972,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reflection",
					"declaration": {
						"id": 6964,
						"name": "__type",
						"variant": "declaration",
						"kind": 65536,
						"flags": {},
						"children": [
							{
								"id": 6965,
								"name": "[PrimaryKeyType]",
								"variant": "declaration",
								"kind": 1024,
								"flags": {
									"isOptional": true
								},
								"type": {
									"type": "inferred",
									"name": "PK"
								}
							}
						],
						"groups": [
							{
								"title": "Properties",
								"children": [
									6965
								]
							}
						]
					}
				},
				"trueType": {
					"type": "reference",
					"target": 6973,
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../packages/types/src/dal/utils.ts",
								"qualifiedName": "PK"
							},
							"name": "PK",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "ReadonlyPrimary",
					"package": "@medusajs/types"
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 6972,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reflection",
						"declaration": {
							"id": 6966,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 6967,
									"name": "_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "inferred",
										"name": "PK"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										6967
									]
								}
							]
						}
					},
					"trueType": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 6973,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/types/src/dal/utils.ts",
											"qualifiedName": "PK"
										},
										"name": "PK",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ReadonlyPrimary",
								"package": "@medusajs/types"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"falseType": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 6972,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "reflection",
							"declaration": {
								"id": 6968,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 6969,
										"name": "uuid",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"type": {
											"type": "inferred",
											"name": "PK"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											6969
										]
									}
								]
							}
						},
						"trueType": {
							"type": "reference",
							"target": 6973,
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../../packages/types/src/dal/utils.ts",
										"qualifiedName": "PK"
									},
									"name": "PK",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "ReadonlyPrimary",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 6972,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reflection",
								"declaration": {
									"id": 6970,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 6971,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "inferred",
												"name": "PK"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												6971
											]
										}
									]
								}
							},
							"trueType": {
								"type": "reference",
								"target": 6973,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/types/src/dal/utils.ts",
											"qualifiedName": "PK"
										},
										"name": "PK",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ReadonlyPrimary",
								"package": "@medusajs/types"
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					}
				}
			}
		},
		{
			"id": 6787,
			"name": "OperatorMap",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 6808,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 6788,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 6789,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 6867,
									"typeArguments": [
										{
											"type": "reference",
											"target": 6808,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "Query",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 6790,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 6867,
									"typeArguments": [
										{
											"type": "reference",
											"target": 6808,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "Query",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 6791,
							"name": "$eq",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 6869,
										"typeArguments": [
											{
												"type": "reference",
												"target": 6808,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "ExpandScalar",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 6869,
											"typeArguments": [
												{
													"type": "reference",
													"target": 6808,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "ExpandScalar",
											"package": "@medusajs/types"
										}
									}
								]
							}
						},
						{
							"id": 6792,
							"name": "$ne",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 6869,
								"typeArguments": [
									{
										"type": "reference",
										"target": 6808,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 6793,
							"name": "$in",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 6869,
									"typeArguments": [
										{
											"type": "reference",
											"target": 6808,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "ExpandScalar",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 6794,
							"name": "$nin",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 6869,
									"typeArguments": [
										{
											"type": "reference",
											"target": 6808,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "ExpandScalar",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 6795,
							"name": "$not",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 6867,
								"typeArguments": [
									{
										"type": "reference",
										"target": 6808,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "Query",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 6796,
							"name": "$gt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 6869,
								"typeArguments": [
									{
										"type": "reference",
										"target": 6808,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 6797,
							"name": "$gte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 6869,
								"typeArguments": [
									{
										"type": "reference",
										"target": 6808,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 6798,
							"name": "$lt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 6869,
								"typeArguments": [
									{
										"type": "reference",
										"target": 6808,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 6799,
							"name": "$lte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 6869,
								"typeArguments": [
									{
										"type": "reference",
										"target": 6808,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 6800,
							"name": "$like",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 6801,
							"name": "$re",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 6802,
							"name": "$ilike",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 6803,
							"name": "$fulltext",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 6804,
							"name": "$overlap",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 6805,
							"name": "$contains",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 6806,
							"name": "$contained",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 6807,
							"name": "$exists",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								6789,
								6790,
								6791,
								6792,
								6793,
								6794,
								6795,
								6796,
								6797,
								6798,
								6799,
								6800,
								6801,
								6802,
								6803,
								6804,
								6805,
								6806,
								6807
							]
						}
					]
				}
			}
		},
		{
			"id": 6961,
			"name": "FilterValue2",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 6962,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 6962,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					{
						"type": "reference",
						"target": 6869,
						"typeArguments": [
							{
								"type": "reference",
								"target": 6962,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "ExpandScalar",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 6963,
						"typeArguments": [
							{
								"type": "reference",
								"target": 6962,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "Primary",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 6939,
			"name": "FilterValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 6940,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 6787,
						"typeArguments": [
							{
								"type": "reference",
								"target": 6961,
								"typeArguments": [
									{
										"type": "reference",
										"target": 6940,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "FilterValue2",
								"package": "@medusajs/types"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 6961,
						"typeArguments": [
							{
								"type": "reference",
								"target": 6940,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterValue2",
						"package": "@medusajs/types"
					},
					{
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 6961,
							"typeArguments": [
								{
									"type": "reference",
									"target": 6940,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "FilterValue2",
							"package": "@medusajs/types"
						}
					},
					{
						"type": "literal",
						"value": null
					}
				]
			}
		},
		{
			"id": 6960,
			"name": "PrevLimit",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "tuple",
				"elements": [
					{
						"type": "intrinsic",
						"name": "never"
					},
					{
						"type": "literal",
						"value": 1
					},
					{
						"type": "literal",
						"value": 2
					},
					{
						"type": "literal",
						"value": 3
					}
				]
			}
		},
		{
			"id": 6933,
			"name": "FilterQuery",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 6937,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 6938,
					"name": "Prev",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"default": {
						"type": "literal",
						"value": 3
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 6938,
					"name": "Prev",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "intrinsic",
					"name": "never"
				},
				"trueType": {
					"type": "intrinsic",
					"name": "never"
				},
				"falseType": {
					"type": "mapped",
					"parameter": "Key",
					"parameterType": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "reference",
							"target": 6937,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					},
					"templateType": {
						"type": "conditional",
						"checkType": {
							"type": "indexedAccess",
							"indexType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/types/src/dal/utils.ts",
									"qualifiedName": "Key"
								},
								"name": "Key",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"objectType": {
								"type": "reference",
								"target": 6937,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						"extendsType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "boolean"
								},
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "intrinsic",
									"name": "bigint"
								},
								{
									"type": "intrinsic",
									"name": "symbol"
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Date"
									},
									"name": "Date",
									"package": "typescript"
								}
							]
						},
						"trueType": {
							"type": "union",
							"types": [
								{
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/types/src/dal/utils.ts",
											"qualifiedName": "Key"
										},
										"name": "Key",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"objectType": {
										"type": "reference",
										"target": 6937,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								{
									"type": "reference",
									"target": 6787,
									"typeArguments": [
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/types/src/dal/utils.ts",
													"qualifiedName": "Key"
												},
												"name": "Key",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 6937,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									],
									"name": "OperatorMap",
									"package": "@medusajs/types"
								}
							]
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../packages/types/src/dal/utils.ts",
										"qualifiedName": "Key"
									},
									"name": "Key",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"objectType": {
									"type": "reference",
									"target": 6937,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							},
							"extendsType": {
								"type": "inferred",
								"name": "U"
							},
							"trueType": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../packages/types/src/dal/utils.ts",
										"qualifiedName": "U"
									},
									"name": "U",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"extendsType": {
									"type": "reflection",
									"declaration": {
										"id": 6934,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"indexSignature": {
											"id": 6935,
											"name": "__index",
											"variant": "signature",
											"kind": 8192,
											"flags": {},
											"parameters": [
												{
													"id": 6936,
													"name": "x",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "inferred",
												"name": "V"
											}
										}
									}
								},
								"trueType": {
									"type": "conditional",
									"checkType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/types/src/dal/utils.ts",
											"qualifiedName": "V"
										},
										"name": "V",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"extendsType": {
										"type": "intrinsic",
										"name": "object"
									},
									"trueType": {
										"type": "reference",
										"target": 6933,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Partial"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/types/src/dal/utils.ts",
															"qualifiedName": "V"
														},
														"name": "V",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "Partial",
												"package": "typescript"
											},
											{
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": 6938,
													"name": "Prev",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 6960,
													"name": "PrevLimit",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "FilterQuery",
										"package": "@medusajs/types"
									},
									"falseType": {
										"type": "intrinsic",
										"name": "never"
									}
								},
								"falseType": {
									"type": "intrinsic",
									"name": "never"
								}
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					},
					"optionalModifier": "+"
				}
			}
		},
		{
			"id": 6919,
			"name": "MessageBody",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 6928,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 6920,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 6921,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 6922,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 6923,
											"name": "service",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 6924,
											"name": "action",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 6925,
											"name": "object",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 6926,
											"name": "eventGroupId",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												6923,
												6924,
												6925,
												6926
											]
										}
									]
								}
							}
						},
						{
							"id": 6927,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 6928,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								6921,
								6927
							]
						}
					]
				}
			}
		},
		{
			"id": 6844,
			"name": "Message",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 6849,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 6845,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 6846,
							"name": "eventName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 6847,
							"name": "body",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 6919,
								"typeArguments": [
									{
										"type": "reference",
										"target": 6849,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "MessageBody",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 6848,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								6846,
								6847,
								6848
							]
						}
					]
				}
			}
		},
		{
			"id": 6856,
			"name": "MessageFormat",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 6866,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 6857,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 6858,
							"name": "eventName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 6859,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 6860,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 6861,
											"name": "service",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 6862,
											"name": "action",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 6863,
											"name": "object",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 6864,
											"name": "eventGroupId",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												6861,
												6862,
												6863,
												6864
											]
										}
									]
								}
							}
						},
						{
							"id": 6865,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 6866,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 6866,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								6858,
								6859,
								6865
							]
						}
					]
				}
			}
		},
		{
			"id": 6909,
			"name": "JoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 6910,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 6911,
							"name": "alias",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 6912,
							"name": "foreignKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 6913,
							"name": "primaryKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 6914,
							"name": "serviceName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 6915,
							"name": "isInternalService",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the relationship is an internal service from the medusa core\nTODO: Remove when there are no more \"internal\" services"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 6916,
							"name": "inverse",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "In an inverted relationship the foreign key is on the other service and the primary key is on the current service"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 6917,
							"name": "isList",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Force the relationship to return a list"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 6918,
							"name": "args",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Extra arguments to pass to the remoteFetchData callback"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								6911,
								6912,
								6913,
								6914,
								6915,
								6916,
								6917,
								6918
							]
						}
					]
				}
			}
		},
		{
			"id": 6906,
			"name": "JoinerServiceConfigAlias",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 6907,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 6908,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6907,
						6908
					]
				}
			]
		},
		{
			"id": 6821,
			"name": "JoinerServiceConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 6822,
					"name": "serviceName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6823,
					"name": "alias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Property name to use as entrypoint to the service"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 6906,
								"name": "JoinerServiceConfigAlias",
								"package": "@medusajs/types"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 6906,
									"name": "JoinerServiceConfigAlias",
									"package": "@medusajs/types"
								}
							}
						]
					}
				},
				{
					"id": 6824,
					"name": "fieldAlias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "alias for deeper nested relationships (e.g. { 'price': 'prices.calculated_price_set.amount' })"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 6825,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 6826,
													"name": "path",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 6827,
													"name": "forwardArgumentsOnPath",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														6826,
														6827
													]
												}
											]
										}
									}
								]
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 6828,
					"name": "primaryKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 6829,
					"name": "relationships",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 6909,
							"name": "JoinerRelationship",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 6830,
					"name": "extends",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 6831,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 6832,
										"name": "serviceName",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 6833,
										"name": "relationship",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "reference",
											"target": 6909,
											"name": "JoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											6832,
											6833
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 6834,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6822,
						6823,
						6824,
						6828,
						6829,
						6830,
						6834
					]
				}
			]
		},
		{
			"id": 6733,
			"name": "ModuleJoinerConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 6821,
								"name": "JoinerServiceConfig",
								"package": "@medusajs/types"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "serviceName"
									},
									{
										"type": "literal",
										"value": "primaryKeys"
									},
									{
										"type": "literal",
										"value": "relationships"
									},
									{
										"type": "literal",
										"value": "extends"
									}
								]
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 6734,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 6735,
									"name": "schema",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "GraphQL schema for the all module's available entities and fields"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 6736,
									"name": "relationships",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 6835,
											"name": "ModuleJoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 6737,
									"name": "extends",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 6738,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 6739,
														"name": "serviceName",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 6740,
														"name": "fieldAlias",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "Record"
															},
															"typeArguments": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "reflection",
																			"declaration": {
																				"id": 6741,
																				"name": "__type",
																				"variant": "declaration",
																				"kind": 65536,
																				"flags": {},
																				"children": [
																					{
																						"id": 6742,
																						"name": "path",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					},
																					{
																						"id": 6743,
																						"name": "forwardArgumentsOnPath",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"type": {
																							"type": "array",
																							"elementType": {
																								"type": "intrinsic",
																								"name": "string"
																							}
																						}
																					},
																					{
																						"id": 6744,
																						"name": "isList",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"type": {
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"children": [
																							6742,
																							6743,
																							6744
																						]
																					}
																				]
																			}
																		}
																	]
																}
															],
															"name": "Record",
															"package": "typescript"
														}
													},
													{
														"id": 6745,
														"name": "relationship",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": 6835,
															"name": "ModuleJoinerRelationship",
															"package": "@medusajs/types"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															6739,
															6740,
															6745
														]
													}
												]
											}
										}
									}
								},
								{
									"id": 6746,
									"name": "serviceName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 6747,
									"name": "primaryKeys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 6748,
									"name": "isLink",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If the module is a link module"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 6749,
									"name": "linkableKeys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Keys that can be used to link to other modules. e.g { product_id: \"Product\" } \"Product\" being the entity it refers to"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 6750,
									"name": "isReadOnlyLink",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true it expands a RemoteQuery property but doesn't create a pivot table"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 6751,
									"name": "databaseConfig",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 6752,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 6753,
													"name": "tableName",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Name of the pivot table. If not provided it is auto generated"
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 6754,
													"name": "idPrefix",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Prefix for the id column. If not provided it is \"link\""
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 6755,
													"name": "extraFields",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 6756,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 6757,
																			"name": "type",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": "date"
																					},
																					{
																						"type": "literal",
																						"value": "time"
																					},
																					{
																						"type": "literal",
																						"value": "datetime"
																					},
																					{
																						"type": "literal",
																						"value": "bigint"
																					},
																					{
																						"type": "literal",
																						"value": "blob"
																					},
																					{
																						"type": "literal",
																						"value": "uint8array"
																					},
																					{
																						"type": "literal",
																						"value": "array"
																					},
																					{
																						"type": "literal",
																						"value": "enumArray"
																					},
																					{
																						"type": "literal",
																						"value": "enum"
																					},
																					{
																						"type": "literal",
																						"value": "json"
																					},
																					{
																						"type": "literal",
																						"value": "integer"
																					},
																					{
																						"type": "literal",
																						"value": "smallint"
																					},
																					{
																						"type": "literal",
																						"value": "tinyint"
																					},
																					{
																						"type": "literal",
																						"value": "mediumint"
																					},
																					{
																						"type": "literal",
																						"value": "float"
																					},
																					{
																						"type": "literal",
																						"value": "double"
																					},
																					{
																						"type": "literal",
																						"value": "boolean"
																					},
																					{
																						"type": "literal",
																						"value": "decimal"
																					},
																					{
																						"type": "literal",
																						"value": "string"
																					},
																					{
																						"type": "literal",
																						"value": "uuid"
																					},
																					{
																						"type": "literal",
																						"value": "text"
																					}
																				]
																			}
																		},
																		{
																			"id": 6758,
																			"name": "defaultValue",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 6759,
																			"name": "nullable",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "boolean"
																			}
																		},
																		{
																			"id": 6760,
																			"name": "options",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "Mikro-orm options for the column"
																					}
																				]
																			},
																			"type": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																					"qualifiedName": "Record"
																				},
																				"typeArguments": [
																					{
																						"type": "intrinsic",
																						"name": "string"
																					},
																					{
																						"type": "intrinsic",
																						"name": "unknown"
																					}
																				],
																				"name": "Record",
																				"package": "typescript"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				6757,
																				6758,
																				6759,
																				6760
																			]
																		}
																	]
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														6753,
														6754,
														6755
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										6735,
										6736,
										6737,
										6746,
										6747,
										6748,
										6749,
										6750,
										6751
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 6835,
			"name": "ModuleJoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 6909,
						"name": "JoinerRelationship",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 6836,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 6837,
									"name": "isInternalService",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true, the relationship is an internal service from the medusa core TODO: Remove when there are no more \"internal\" services"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 6838,
									"name": "deleteCascade",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true, the link joiner will cascade deleting the relationship"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										6837,
										6838
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 6530,
			"name": "IModuleService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"extendedBy": [
				{
					"type": "reference",
					"target": 6397,
					"name": "IPaymentModuleService"
				}
			]
		},
		{
			"id": 6777,
			"name": "PaymentCollectionStatus",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The payment collection's status."
					}
				]
			},
			"children": [
				{
					"id": 6778,
					"name": "NOT_PAID",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment collection isn't paid."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "not_paid"
					}
				},
				{
					"id": 6779,
					"name": "AWAITING",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment sessions in the payment collection are await authorization."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "awaiting"
					}
				},
				{
					"id": 6780,
					"name": "AUTHORIZED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment sessions in the payment collection are authorized."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "authorized"
					}
				},
				{
					"id": 6781,
					"name": "PARTIALLY_AUTHORIZED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Some of the payments in the payment collection are authorized."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "partially_authorized"
					}
				},
				{
					"id": 6782,
					"name": "CANCELED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payments in the payment collection are canceled."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "canceled"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						6778,
						6779,
						6780,
						6781,
						6782
					]
				}
			]
		},
		{
			"id": 6815,
			"name": "PaymentSessionStatus",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The status of a payment session."
					}
				]
			},
			"children": [
				{
					"id": 6816,
					"name": "AUTHORIZED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment is authorized."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "authorized"
					}
				},
				{
					"id": 6817,
					"name": "PENDING",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment is pending."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "pending"
					}
				},
				{
					"id": 6818,
					"name": "REQUIRES_MORE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment requires an action."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "requires_more"
					}
				},
				{
					"id": 6819,
					"name": "ERROR",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An error occurred while processing the payment."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "error"
					}
				},
				{
					"id": 6820,
					"name": "CANCELED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment is canceled."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "canceled"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						6816,
						6817,
						6818,
						6819,
						6820
					]
				}
			]
		},
		{
			"id": 6558,
			"name": "PaymentCollectionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The payment collection details."
					}
				]
			},
			"children": [
				{
					"id": 6559,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the payment collection."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6560,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ISO 3 character currency code of the payment sessions and payments associated with payment collection."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6561,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The id of the associated region."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6562,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total amount to be authorized and captured."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 6776,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 6563,
					"name": "authorized_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount authorized within the associated payment sessions."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 6776,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 6564,
					"name": "refunded_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount refunded within the associated payments."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 6776,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 6565,
					"name": "completed_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the payment collection was completed."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 6566,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the payment collection was created."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 6567,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the payment collection was updated."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 6568,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 6569,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The status of the payment collection."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 6777,
						"name": "PaymentCollectionStatus",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 6570,
					"name": "payment_providers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment provider used to process the associated payment sessions and payments."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 6691,
							"name": "PaymentProviderDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 6571,
					"name": "payment_sessions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated payment sessions."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 6609,
							"name": "PaymentSessionDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 6572,
					"name": "payments",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated payments."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 6626,
							"name": "PaymentDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6559,
						6560,
						6561,
						6562,
						6563,
						6564,
						6565,
						6566,
						6567,
						6568,
						6569,
						6570,
						6571,
						6572
					]
				}
			]
		},
		{
			"id": 6585,
			"name": "FilterablePaymentCollectionProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on the retrieved payment collection."
					}
				]
			},
			"children": [
				{
					"id": 6590,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 6558,
									"name": "PaymentCollectionDTO",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 6783,
									"typeArguments": [
										{
											"type": "reference",
											"target": 6558,
											"name": "PaymentCollectionDTO",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 6784,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 6591,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 6558,
									"name": "PaymentCollectionDTO",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 6783,
									"typeArguments": [
										{
											"type": "reference",
											"target": 6558,
											"name": "PaymentCollectionDTO",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 6785,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 6586,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the payment collection by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 6587,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter by associated region's ID."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 6787,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 6588,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter payment collections by created date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 6787,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 6589,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter payment collections by updated date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 6787,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6590,
						6591,
						6586,
						6587,
						6588,
						6589
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 6783,
					"typeArguments": [
						{
							"type": "reference",
							"target": 6558,
							"name": "PaymentCollectionDTO",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 6647,
			"name": "FilterablePaymentSessionProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on the retrieved payment sessions."
					}
				]
			},
			"children": [
				{
					"id": 6657,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 6609,
									"name": "PaymentSessionDTO",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 6783,
									"typeArguments": [
										{
											"type": "reference",
											"target": 6609,
											"name": "PaymentSessionDTO",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 6784,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 6658,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 6609,
									"name": "PaymentSessionDTO",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 6783,
									"typeArguments": [
										{
											"type": "reference",
											"target": 6609,
											"name": "PaymentSessionDTO",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 6785,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 6648,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the payment sessions by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 6649,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the payment sessions by their currency code."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 6650,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the payment sessions by their amount."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 6776,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": 6787,
								"typeArguments": [
									{
										"type": "reference",
										"target": 6776,
										"name": "BigNumberValue",
										"package": "@medusajs/types"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 6651,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the payment sessions by the ID of their associated payment provider."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 6652,
					"name": "payment_collection_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the payment sessions by the ID of their associated payment collection."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 6653,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the payment sessions by the ID of their associated region."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 6787,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 6654,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the payment sessions by their creation date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 6787,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 6655,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the payment sessions by their update date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 6787,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 6656,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the payment sessions by their deletion date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 6787,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6657,
						6658,
						6648,
						6649,
						6650,
						6651,
						6652,
						6653,
						6654,
						6655,
						6656
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 6783,
					"typeArguments": [
						{
							"type": "reference",
							"target": 6609,
							"name": "PaymentSessionDTO",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 6694,
			"name": "FilterableCaptureProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on the retrieved captures."
					}
				]
			},
			"children": [
				{
					"id": 6702,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 6704,
									"name": "CaptureDTO",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 6783,
									"typeArguments": [
										{
											"type": "reference",
											"target": 6704,
											"name": "CaptureDTO",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 6784,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 6703,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 6704,
									"name": "CaptureDTO",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 6783,
									"typeArguments": [
										{
											"type": "reference",
											"target": 6704,
											"name": "CaptureDTO",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 6785,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 6695,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the captures by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 6696,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the captures by their currency code."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 6697,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the captures by their amounts."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 6776,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": 6787,
								"typeArguments": [
									{
										"type": "reference",
										"target": 6776,
										"name": "BigNumberValue",
										"package": "@medusajs/types"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 6698,
					"name": "payment_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the captures by the ID of their associated payment."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 6699,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the captures by their creation date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 6787,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 6700,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the captures by their update date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 6787,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 6701,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the captures by their deletion date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 6787,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6702,
						6703,
						6695,
						6696,
						6697,
						6698,
						6699,
						6700,
						6701
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 6783,
					"typeArguments": [
						{
							"type": "reference",
							"target": 6704,
							"name": "CaptureDTO",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 6710,
			"name": "FilterableRefundProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on the retrieved refunds."
					}
				]
			},
			"children": [
				{
					"id": 6718,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 6720,
									"name": "RefundDTO",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 6783,
									"typeArguments": [
										{
											"type": "reference",
											"target": 6720,
											"name": "RefundDTO",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 6784,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 6719,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 6720,
									"name": "RefundDTO",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 6783,
									"typeArguments": [
										{
											"type": "reference",
											"target": 6720,
											"name": "RefundDTO",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 6785,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 6711,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the refunds by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 6712,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the refunds by their currency code."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 6713,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the refunds by their amount."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 6776,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": 6787,
								"typeArguments": [
									{
										"type": "reference",
										"target": 6776,
										"name": "BigNumberValue",
										"package": "@medusajs/types"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 6714,
					"name": "payment_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the refunds by the ID of their associated payment."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 6715,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the refunds by their creation date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 6787,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 6716,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the refunds by their update date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 6787,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 6717,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the refunds by their deletion date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 6787,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6718,
						6719,
						6711,
						6712,
						6713,
						6714,
						6715,
						6716,
						6717
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 6783,
					"typeArguments": [
						{
							"type": "reference",
							"target": 6720,
							"name": "RefundDTO",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 6626,
			"name": "PaymentDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 6627,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the payment."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6628,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment's total amount."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 6776,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 6629,
					"name": "authorized_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The authorized amount of the payment."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 6776,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 6630,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ISO 3 character currency code of the payment."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6631,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated payment provider."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6632,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated cart."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6633,
					"name": "order_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated order."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6634,
					"name": "order_edit_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated order edit."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6635,
					"name": "customer_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated customer."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6636,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The data relevant for the payment provider to process the payment."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 6637,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the payment was created."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 6638,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the payment was updated."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 6639,
					"name": "captured_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the payment was captured."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 6640,
					"name": "canceled_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the payment was canceled."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 6641,
					"name": "captured_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The sum of the associated captures' amounts."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 6776,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 6642,
					"name": "refunded_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The sum of the associated refunds' amounts."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 6776,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 6643,
					"name": "captures",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated captures."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 6704,
							"name": "CaptureDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 6644,
					"name": "refunds",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated refunds."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 6720,
							"name": "RefundDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 6645,
					"name": "payment_collection",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated payment collection."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 6558,
						"name": "PaymentCollectionDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 6646,
					"name": "payment_session",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment session from which the payment is created."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 6609,
						"name": "PaymentSessionDTO",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6627,
						6628,
						6629,
						6630,
						6631,
						6632,
						6633,
						6634,
						6635,
						6636,
						6637,
						6638,
						6639,
						6640,
						6641,
						6642,
						6643,
						6644,
						6645,
						6646
					]
				}
			]
		},
		{
			"id": 6659,
			"name": "FilterablePaymentProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on the retrieved payments."
					}
				]
			},
			"children": [
				{
					"id": 6670,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 6659,
									"name": "FilterablePaymentProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 6783,
									"typeArguments": [
										{
											"type": "reference",
											"target": 6659,
											"name": "FilterablePaymentProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 6784,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 6671,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 6659,
									"name": "FilterablePaymentProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 6783,
									"typeArguments": [
										{
											"type": "reference",
											"target": 6659,
											"name": "FilterablePaymentProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 6785,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 6660,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the payments by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 6661,
					"name": "session_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the payments by the ID of their associated payment session."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 6787,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 6662,
					"name": "customer_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the payments by the ID of their associated customer."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 6787,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 6663,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the payments by the ID of their associated cart."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 6787,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 6664,
					"name": "order_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the payments by the ID of their associated order."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 6787,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 6665,
					"name": "order_edit_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the payments by the ID of their associated order edit."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 6787,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 6666,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the payments by their creation date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 6787,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 6667,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the payments by their update date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 6787,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 6668,
					"name": "captured_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the payments by their capture date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 6787,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 6669,
					"name": "canceled_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the payments by their cancelation date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 6787,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6670,
						6671,
						6660,
						6661,
						6662,
						6663,
						6664,
						6665,
						6666,
						6667,
						6668,
						6669
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 6783,
					"typeArguments": [
						{
							"type": "reference",
							"target": 6659,
							"name": "FilterablePaymentProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 6704,
			"name": "CaptureDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The capture details."
					}
				]
			},
			"children": [
				{
					"id": 6705,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the capture."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6706,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The captured amount."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 6776,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 6707,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The creation date of the capture."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 6708,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Who the capture was created by. For example,\nthe ID of a user."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6709,
					"name": "payment",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated payment."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 6626,
						"name": "PaymentDTO",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6705,
						6706,
						6707,
						6708,
						6709
					]
				}
			]
		},
		{
			"id": 6720,
			"name": "RefundDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The refund details."
					}
				]
			},
			"children": [
				{
					"id": 6721,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the refund"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6722,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The refunded amount."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 6776,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 6723,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The creation date of the refund."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 6724,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Who created the refund. For example,\nthe user's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6725,
					"name": "payment",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated payment."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 6626,
						"name": "PaymentDTO",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6721,
						6722,
						6723,
						6724,
						6725
					]
				}
			]
		},
		{
			"id": 6609,
			"name": "PaymentSessionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The payment session details."
					}
				]
			},
			"children": [
				{
					"id": 6610,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the payment session."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6611,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount to authorize."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 6776,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 6612,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The 3 character currency code of the payment session."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6613,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated payment provider."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6614,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The data necessary for the payment provider to process the payment session."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 6615,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The context necessary for the payment provider."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 6616,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The status of the payment session."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 6815,
						"name": "PaymentSessionStatus",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 6617,
					"name": "authorized_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the payment session was authorized."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 6618,
					"name": "payment_collection",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment collection the session is associated with."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 6558,
						"name": "PaymentCollectionDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 6619,
					"name": "payment",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment created from the session."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 6626,
						"name": "PaymentDTO",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6610,
						6611,
						6612,
						6613,
						6614,
						6615,
						6616,
						6617,
						6618,
						6619
					]
				}
			]
		},
		{
			"id": 6691,
			"name": "PaymentProviderDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The payment provider details."
					}
				]
			},
			"children": [
				{
					"id": 6692,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the payment provider."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6693,
					"name": "is_enabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the payment provider is enabled."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6692,
						6693
					]
				}
			]
		},
		{
			"id": 6686,
			"name": "FilterablePaymentProviderProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on the retrieved payment providers."
					}
				]
			},
			"children": [
				{
					"id": 6689,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 6691,
									"name": "PaymentProviderDTO",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 6783,
									"typeArguments": [
										{
											"type": "reference",
											"target": 6691,
											"name": "PaymentProviderDTO",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 6784,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 6690,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 6691,
									"name": "PaymentProviderDTO",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 6783,
									"typeArguments": [
										{
											"type": "reference",
											"target": 6691,
											"name": "PaymentProviderDTO",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 6785,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 6687,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the payment collection by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 6787,
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 6688,
					"name": "is_enabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter by whether the payment provider is enabled."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6689,
						6690,
						6687,
						6688
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 6783,
					"typeArguments": [
						{
							"type": "reference",
							"target": 6691,
							"name": "PaymentProviderDTO",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 6541,
			"name": "CreatePaymentCollectionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The payment collection to be created."
					}
				]
			},
			"children": [
				{
					"id": 6542,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated region's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6543,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ISO 3 character currency code of the payment collection."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6544,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of the payment collection."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 6761,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 6545,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6542,
						6543,
						6544,
						6545
					]
				}
			]
		},
		{
			"id": 6597,
			"name": "UpsertPaymentCollectionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes in the payment collection to be created or updated."
					}
				]
			},
			"children": [
				{
					"id": 6598,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the payment collection."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6599,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated region's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6600,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ISO 3 character currency code of the payment collection."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6601,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of the payment collection."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 6761,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 6602,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6598,
						6599,
						6600,
						6601,
						6602
					]
				}
			]
		},
		{
			"id": 6592,
			"name": "PaymentCollectionUpdatableFields",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in the payment collection."
					}
				]
			},
			"children": [
				{
					"id": 6593,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated region's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6594,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "{The ISO 3 character currency code of the payment collection."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6595,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of the payment collection."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 6761,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 6596,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6593,
						6594,
						6595,
						6596
					]
				}
			]
		},
		{
			"id": 6672,
			"name": "UpdatePaymentDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in the payment."
					}
				]
			},
			"children": [
				{
					"id": 6673,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the payment."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6674,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated cart's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6675,
					"name": "order_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated order's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6676,
					"name": "order_edit_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated order edit's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6677,
					"name": "customer_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated customer's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6673,
						6674,
						6675,
						6676,
						6677
					]
				}
			]
		},
		{
			"id": 6678,
			"name": "CreateCaptureDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The capture to be created."
					}
				]
			},
			"children": [
				{
					"id": 6679,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of the capture."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 6761,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 6680,
					"name": "payment_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated payment's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6681,
					"name": "captured_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Who captured the payment. For example,\na user's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6679,
						6680,
						6681
					]
				}
			]
		},
		{
			"id": 6682,
			"name": "CreateRefundDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The refund to be created."
					}
				]
			},
			"children": [
				{
					"id": 6683,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of the refund."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 6761,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 6684,
					"name": "payment_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated payment's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6685,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Who refunded the payment. For example,\na user's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6683,
						6684,
						6685
					]
				}
			]
		},
		{
			"id": 6603,
			"name": "CreatePaymentSessionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The payment session to be created."
					}
				]
			},
			"children": [
				{
					"id": 6604,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The provider's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6605,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ISO 3 character currency code of the payment session."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6606,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount to be authorized."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 6761,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 6607,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Necessary data for the associated payment provider to process the payment."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 6608,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Necessary context data for the associated payment provider."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 6809,
						"name": "PaymentProviderContext",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6604,
						6605,
						6606,
						6607,
						6608
					]
				}
			]
		},
		{
			"id": 6620,
			"name": "UpdatePaymentSessionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in a payment session."
					}
				]
			},
			"children": [
				{
					"id": 6621,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment session's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6622,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Necessary data for the associated payment provider to process the payment."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 6623,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ISO 3 character currency code."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6624,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount to be authorized."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 6761,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 6625,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Necessary context data for the associated payment provider."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 6809,
						"name": "PaymentProviderContext",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6621,
						6622,
						6623,
						6624,
						6625
					]
				}
			]
		},
		{
			"id": 6726,
			"name": "ProviderWebhookPayload",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the webhook event payload."
					}
				]
			},
			"children": [
				{
					"id": 6727,
					"name": "provider",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the provider to pass the webhook event payload to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6728,
					"name": "payload",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The webhook event payload passed to the specified provider."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 6729,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 6730,
									"name": "data",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The parsed webhook body."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 6731,
									"name": "rawData",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The raw webhook request body."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/@types/node/buffer.d.ts",
													"qualifiedName": "__global.Buffer"
												},
												"name": "Buffer",
												"package": "@types/node",
												"qualifiedName": "__global.Buffer"
											}
										]
									}
								},
								{
									"id": 6732,
									"name": "headers",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The headers of the webhook request."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										6730,
										6731,
										6732
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6727,
						6728
					]
				}
			]
		},
		{
			"id": 6809,
			"name": "PaymentProviderContext",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Context data provided to the payment provider when authorizing a payment session."
					}
				]
			},
			"children": [
				{
					"id": 6810,
					"name": "billing_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment's billing address."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Partial"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 6871,
								"name": "AddressDTO",
								"package": "@medusajs/types"
							}
						],
						"name": "Partial",
						"package": "typescript"
					}
				},
				{
					"id": 6811,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated customer's email."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6812,
					"name": "resource_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the resource the payment is associated with. For example, the ID of the payment session."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6813,
					"name": "customer",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer associated with this payment."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Partial"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 6886,
								"name": "CustomerDTO",
								"package": "@medusajs/types"
							}
						],
						"name": "Partial",
						"package": "typescript"
					}
				},
				{
					"id": 6814,
					"name": "extra",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The extra fields specific to the provider session."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6810,
						6811,
						6812,
						6813,
						6814
					]
				}
			]
		},
		{
			"id": 6397,
			"name": "IPaymentModuleService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The main service interface for the Payment Module."
					}
				]
			},
			"children": [
				{
					"id": 6398,
					"name": "createPaymentCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 6399,
							"name": "createPaymentCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates payment collections."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created payment collections."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst paymentCollections = await paymentModuleService.createPaymentCollections([\n  {\n    region_id: \"reg_123\",\n    currency_code: \"usd\",\n    amount: 3000,\n  },\n  {\n    region_id: \"reg_321\",\n    currency_code: \"eur\",\n    amount: 2000,\n  },\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 6400,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The payment collections to create."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 6541,
											"name": "CreatePaymentCollectionDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 6401,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6546,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 6558,
											"name": "PaymentCollectionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 6402,
							"name": "createPaymentCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates a payment collection."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created payment collection."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst paymentCollection =\n  await paymentModuleService.createPaymentCollections({\n    region_id: \"reg_123\",\n    currency_code: \"usd\",\n    amount: 3000,\n  })\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 6403,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The payment collection to create."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6541,
										"name": "CreatePaymentCollectionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6404,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6546,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 6558,
										"name": "PaymentCollectionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6405,
					"name": "retrievePaymentCollection",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 6406,
							"name": "retrievePaymentCollection",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a payment collection by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved payment collection."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a {type name} by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst paymentCollection =\n  await paymentModuleService.retrievePaymentCollection(\n    \"pay_col_123\"\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst paymentCollection =\n  await paymentModuleService.retrievePaymentCollection(\n    \"pay_col_123\",\n    {\n      relations: [\"payment_sessions\"],\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 6407,
									"name": "paymentCollectionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The payment collection's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 6408,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the payment collection is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a payment collection."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6573,
										"typeArguments": [
											{
												"type": "reference",
												"target": 6558,
												"name": "PaymentCollectionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6409,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6546,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 6558,
										"name": "PaymentCollectionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6410,
					"name": "listPaymentCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 6411,
							"name": "listPaymentCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of payment collections based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of payment collections."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of payment collections using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst paymentCollections =\n  await paymentModuleService.listPaymentCollections({\n    id: [\"pay_col_123\", \"pay_col_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the payment collection:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst paymentCollections =\n  await paymentModuleService.listPaymentCollections(\n    {\n      id: [\"pay_col_123\", \"pay_col_321\"],\n    },\n    {\n      relations: [\"payment_sessions\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst paymentCollections =\n  await paymentModuleService.listPaymentCollections(\n    {\n      id: [\"pay_col_123\", \"pay_col_321\"],\n    },\n    {\n      relations: [\"payment_sessions\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 6412,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved payment collection."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6585,
										"name": "FilterablePaymentCollectionProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6413,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the payment collection is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a payment collection."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6573,
										"typeArguments": [
											{
												"type": "reference",
												"target": 6558,
												"name": "PaymentCollectionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6414,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6546,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 6558,
											"name": "PaymentCollectionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6415,
					"name": "listAndCountPaymentCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 6416,
							"name": "listAndCountPaymentCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of payment collections along with the total count of available payment collections satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of payment collections along with their total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of {type name} using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst paymentCollections =\n  await paymentModuleService.listAndCountPaymentCollections({\n    id: [\"pay_col_123\", \"pay_col_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the {type name}:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst paymentCollections =\n  await paymentModuleService.listAndCountPaymentCollections(\n    {\n      id: [\"pay_col_123\", \"pay_col_321\"],\n    },\n    {\n      relations: [\"payment_sessions\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`{default limit}`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst paymentCollections =\n  await paymentModuleService.listAndCountPaymentCollections(\n    {\n      id: [\"pay_col_123\", \"pay_col_321\"],\n    },\n    {\n      relations: [\"payment_sessions\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 6417,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved payment collection."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6585,
										"name": "FilterablePaymentCollectionProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6418,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the payment collection is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a payment collection."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6573,
										"typeArguments": [
											{
												"type": "reference",
												"target": 6558,
												"name": "PaymentCollectionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6419,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6546,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 6558,
													"name": "PaymentCollectionDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6420,
					"name": "updatePaymentCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 6421,
							"name": "updatePaymentCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates an existing payment collection."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated payment collection."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst paymentCollection =\n  await paymentModuleService.updatePaymentCollections(\n    \"pay_col_123\",\n    {\n      amount: 3000,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 6422,
									"name": "paymentCollectionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The payment collection's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 6423,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the payment collection."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6592,
										"name": "PaymentCollectionUpdatableFields",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6424,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6546,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 6558,
										"name": "PaymentCollectionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 6425,
							"name": "updatePaymentCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing payment collections matching the specified filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated payment collections."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst paymentCollections =\n  await paymentModuleService.updatePaymentCollections(\n    {\n      id: [\"pay_col_123\", \"pay_col_321\"],\n    },\n    {\n      currency_code: \"usd\",\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 6426,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters specifying which payment collections to update."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6585,
										"name": "FilterablePaymentCollectionProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6427,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the payment collections."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6592,
										"name": "PaymentCollectionUpdatableFields",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6428,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6546,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 6558,
											"name": "PaymentCollectionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6429,
					"name": "upsertPaymentCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 6430,
							"name": "upsertPaymentCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates or creates payment collections if they don't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created or updated payment collections."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst paymentCollections =\n  await paymentModuleService.upsertPaymentCollections([\n    {\n      id: \"pay_col_123\",\n      region_id: \"reg_123\",\n    },\n    {\n      region_id: \"reg_123\",\n      currency_code: \"usd\",\n      amount: 3000,\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 6431,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes in the payment collections to be created or updated. If\nthe object includes the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " field, then the payment collection is updated. Otherise, it's created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 6597,
											"name": "UpsertPaymentCollectionDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 6432,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6546,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 6558,
											"name": "PaymentCollectionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 6433,
							"name": "upsertPaymentCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates or creates a payment collection if it doesn't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created or updated payment collection."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst paymentCollection =\n  await paymentModuleService.upsertPaymentCollections({\n    id: \"pay_col_123\",\n    region_id: \"reg_123\",\n  })\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 6434,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes in the payment collection to be created or updated. If the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": "\nfield is included, the payment collection is updated. Otherwise, it's created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6597,
										"name": "UpsertPaymentCollectionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6435,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6546,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 6558,
										"name": "PaymentCollectionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6436,
					"name": "deletePaymentCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 6437,
							"name": "deletePaymentCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes a payment collection by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the payment collection is deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait paymentModuleService.deletePaymentCollections([\n  \"pay_col_123\",\n  \"pay_col_321\",\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 6438,
									"name": "paymentCollectionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The payment collection's ID."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 6439,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6546,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 6440,
							"name": "deletePaymentCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes a payment collection by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the payment collection is deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait paymentModuleService.deletePaymentCollections(\n  \"pay_col_123\"\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 6441,
									"name": "paymentCollectionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The payment collection's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 6442,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6546,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6443,
					"name": "completePaymentCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 6444,
							"name": "completePaymentCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method marks a payment collection as completed by settings its "
									},
									{
										"kind": "code",
										"text": "`completed_at`"
									},
									{
										"kind": "text",
										"text": " field to the current date and time."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The payment collection's details."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst paymentCollection =\n  await paymentModuleService.completePaymentCollections(\n    \"pay_col_123\"\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 6445,
									"name": "paymentCollectionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The payment collection's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 6446,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6546,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 6558,
										"name": "PaymentCollectionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 6447,
							"name": "completePaymentCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method marks payment collections as completed by settings their "
									},
									{
										"kind": "code",
										"text": "`completed_at`"
									},
									{
										"kind": "text",
										"text": " field to the current date and time."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The payment collections' details."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst paymentCollection =\n  await paymentModuleService.completePaymentCollections([\n    \"pay_col_123\",\n    \"pay_col_321\",\n  ])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 6448,
									"name": "paymentCollectionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The payment collections' IDs."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 6449,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6546,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 6558,
											"name": "PaymentCollectionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6450,
					"name": "createPaymentSession",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 6451,
							"name": "createPaymentSession",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates a payment session in a payment collection."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The payment collection's details."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst paymentSession =\n  await paymentModuleService.createPaymentSession(\n    \"pay_col_1\",\n    {\n      provider_id: \"stripe\",\n      currency_code: \"usd\",\n      amount: 3000,\n      data: {},\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 6452,
									"name": "paymentCollectionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the payment collection to create the session for."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 6453,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The details of the payment session."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6603,
										"name": "CreatePaymentSessionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6454,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6546,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 6609,
										"name": "PaymentSessionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6455,
					"name": "updatePaymentSession",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 6456,
							"name": "updatePaymentSession",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates a payment session."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The payment session's details."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst paymentSession =\n  await paymentModuleService.updatePaymentSession({\n    id: \"payses_123\",\n    currency_code: \"usd\",\n    amount: 3000,\n    data: {},\n  })\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 6457,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the payment session."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6620,
										"name": "UpdatePaymentSessionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6458,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6546,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 6609,
										"name": "PaymentSessionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6459,
					"name": "deletePaymentSession",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 6460,
							"name": "deletePaymentSession",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes a payment session."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves whent the payment session is deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait paymentModuleService.deletePaymentSession(\"payses_123\")\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 6461,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the payment session."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 6462,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6546,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6463,
					"name": "authorizePaymentSession",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 6464,
							"name": "authorizePaymentSession",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method authorizes a payment session using its associated payment provider. This creates a payment that can later be captured.\n\nLearn more about the payment flow in [this guide](https://docs.medusajs.com/experimental/payment/payment-flow/)"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created payment."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst payment =\n  await paymentModuleService.authorizePaymentSession(\n    \"payses_123\",\n    {}\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 6465,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The payment session's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 6466,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Context data to pass to the associated payment provider."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 6467,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6546,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 6626,
										"name": "PaymentDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6468,
					"name": "listPaymentSessions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 6469,
							"name": "listPaymentSessions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of payment sessions based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of payment sessions."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of payment sessions using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst paymentSessions =\n  await paymentModuleService.listPaymentSessions({\n    id: [\"payses_123\", \"payses_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the payment session:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst paymentSessions =\n  await paymentModuleService.listPaymentSessions(\n    {\n      id: [\"payses_123\", \"payses_321\"],\n    },\n    {\n      relations: [\"payment\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst paymentSessions =\n  await paymentModuleService.listPaymentSessions(\n    {\n      id: [\"payses_123\", \"payses_321\"],\n    },\n    {\n      relations: [\"payment\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 6470,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved payment sessions."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6647,
										"name": "FilterablePaymentSessionProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6471,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the payment session is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a payment session."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6573,
										"typeArguments": [
											{
												"type": "reference",
												"target": 6609,
												"name": "PaymentSessionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6472,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6546,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 6609,
											"name": "PaymentSessionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6473,
					"name": "listPayments",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 6474,
							"name": "listPayments",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of payments based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A list of payment."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of payments using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst payments = await paymentModuleService.listPayments({\n  id: [\"pay_123\", \"pay_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the payment:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst payments = await paymentModuleService.listPayments(\n  {\n    id: [\"pay_123\", \"pay_321\"],\n  },\n  {\n    relations: [\"payment_session\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst payments = await paymentModuleService.listPayments(\n  {\n    id: [\"pay_123\", \"pay_321\"],\n  },\n  {\n    relations: [\"payment_session\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 6475,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved payment."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6659,
										"name": "FilterablePaymentProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6476,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the payment is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a payment."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6573,
										"typeArguments": [
											{
												"type": "reference",
												"target": 6626,
												"name": "PaymentDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6477,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6546,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 6626,
											"name": "PaymentDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6478,
					"name": "updatePayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 6479,
							"name": "updatePayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates an existing payment."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated payment."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst payment = await paymentModuleService.updatePayment({\n  id: \"pay_123\",\n  customer_id: \"cus_123\",\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 6480,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the payment."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6672,
										"name": "UpdatePaymentDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6481,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6546,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 6626,
										"name": "PaymentDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6482,
					"name": "capturePayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 6483,
							"name": "capturePayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method captures a payment using its associated payment provider.\n\nLearn more about the payment flow in [this guide](https://docs.medusajs.com/experimental/payment/payment-flow/)"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The payment's details."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst payment = await paymentModuleService.capturePayment({\n  payment_id: \"pay_123\",\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 6484,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The payment capture to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6678,
										"name": "CreateCaptureDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6485,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6546,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 6626,
										"name": "PaymentDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6486,
					"name": "refundPayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 6487,
							"name": "refundPayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method refunds a payment using its associated payment provider. An amount can only be refunded if it has been captured first."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The payment's details."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst payment = await paymentModuleService.refundPayment({\n  payment_id: \"pay_123\",\n  amount: 300,\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 6488,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The refund to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6682,
										"name": "CreateRefundDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6489,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6546,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 6626,
										"name": "PaymentDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6490,
					"name": "cancelPayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 6491,
							"name": "cancelPayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method cancels a payment."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The payment's details."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst payment =\n  await paymentModuleService.cancelPayment(\"pay_123\")\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 6492,
									"name": "paymentId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The payment's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 6493,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6546,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 6626,
										"name": "PaymentDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6494,
					"name": "listPaymentProviders",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 6495,
							"name": "listPaymentProviders",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of payment providers based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of payment providers."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of payment providers using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst paymentProviders =\n  await paymentModuleService.listPaymentProviders({\n    id: [\"stripe\", \"system\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst paymentProviders =\n  await paymentModuleService.listPaymentProviders(\n    {\n      id: [\"stripe\", \"system\"],\n    },\n    {\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 6496,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved payment providers."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6686,
										"name": "FilterablePaymentProviderProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6497,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the payment provider is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a payment provider."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6573,
										"typeArguments": [
											{
												"type": "reference",
												"target": 6691,
												"name": "PaymentProviderDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6498,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6546,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 6691,
											"name": "PaymentProviderDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6499,
					"name": "listAndCountPaymentProviders",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 6500,
							"name": "listAndCountPaymentProviders",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 6501,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 6686,
										"name": "FilterablePaymentProviderProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6502,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 6573,
										"typeArguments": [
											{
												"type": "reference",
												"target": 6691,
												"name": "PaymentProviderDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6503,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 6546,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 6691,
													"name": "PaymentProviderDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6504,
					"name": "listCaptures",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 6505,
							"name": "listCaptures",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of captures based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of captures."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of captures using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst captures = await paymentModuleService.listCaptures({\n  id: [\"capt_123\", \"capt_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the capture:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst captures = await paymentModuleService.listCaptures(\n  {\n    id: [\"capt_123\", \"capt_321\"],\n  },\n  {\n    relations: [\"payment\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst captures = await paymentModuleService.listCaptures(\n  {\n    id: [\"capt_123\", \"capt_321\"],\n  },\n  {\n    relations: [\"payment\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 6506,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved captures."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6694,
										"name": "FilterableCaptureProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6507,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the capture is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a capture."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6573,
										"typeArguments": [
											{
												"type": "reference",
												"target": 6704,
												"name": "CaptureDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6508,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6546,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 6704,
											"name": "CaptureDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6509,
					"name": "listRefunds",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 6510,
							"name": "listRefunds",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of refunds based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of refunds."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of refunds using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst refunds = await paymentModuleService.listRefunds({\n  id: [\"ref_123\", \"ref_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the refund:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst refunds = await paymentModuleService.listRefunds(\n  {\n    id: [\"ref_123\", \"ref_321\"],\n  },\n  {\n    relations: [\"payment\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst refunds = await paymentModuleService.listRefunds(\n  {\n    id: [\"ref_123\", \"ref_321\"],\n  },\n  {\n    relations: [\"payment\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 6511,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved refunds."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6710,
										"name": "FilterableRefundProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6512,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the refund is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a refund."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6573,
										"typeArguments": [
											{
												"type": "reference",
												"target": 6720,
												"name": "RefundDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6513,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6546,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 6720,
											"name": "RefundDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6514,
					"name": "processEvent",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 6515,
							"name": "processEvent",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method handles a webhook event with the associated payment provider.\n\nLearn more about handling webhook events in [this guide](https://docs.medusajs.com/experimental/payment/webhook-events/)"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the webhook event is handled successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "In the following example, "
											},
											{
												"kind": "code",
												"text": "`req`"
											},
											{
												"kind": "text",
												"text": " is an instance of "
											},
											{
												"kind": "code",
												"text": "`MedusaRequest`"
											},
											{
												"kind": "text",
												"text": ":\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nawait paymentModuleService.processEvent({\n  provider: \"stripe\",\n  payload: {\n    data: req.body,\n    rawData: req.rawBody,\n    headers: req.headers,\n  },\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 6516,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The webhook event's details."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6726,
										"name": "ProviderWebhookPayload",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						6398,
						6405,
						6410,
						6415,
						6420,
						6429,
						6436,
						6443,
						6450,
						6455,
						6459,
						6463,
						6468,
						6473,
						6478,
						6482,
						6486,
						6490,
						6494,
						6499,
						6504,
						6509,
						6514
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 6530,
					"name": "IModuleService",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 6527,
			"name": "PaymentModuleOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The options that the Payment Module accepts."
					}
				]
			},
			"children": [
				{
					"id": 6528,
					"name": "webhook_delay",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The delay in milliseconds before processing the webhook event."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n5000\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 6529,
					"name": "webhook_retries",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of times to retry the webhook event processing in case of an error."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n3\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6528,
						6529
					]
				}
			]
		},
		{
			"id": 6850,
			"name": "MessageAggregatorFormat",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 6851,
					"name": "groupBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 6852,
					"name": "sortBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 6853,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"indexSignature": {
								"id": 6854,
								"name": "__index",
								"variant": "signature",
								"kind": 8192,
								"flags": {},
								"parameters": [
									{
										"id": 6855,
										"name": "key",
										"variant": "param",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "union",
									"types": [
										{
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "number"
										}
									]
								}
							}
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6851,
						6852
					]
				}
			]
		},
		{
			"id": 6762,
			"name": "IMessageAggregator",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 6763,
					"name": "save",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 6764,
							"name": "save",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 6765,
									"name": "msg",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 6844,
												"name": "Message",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 6844,
													"name": "Message",
													"package": "@medusajs/types"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 6766,
					"name": "getMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 6767,
							"name": "getMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 6768,
									"name": "format",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 6850,
										"name": "MessageAggregatorFormat",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 6844,
											"name": "Message",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6769,
					"name": "clearMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 6770,
							"name": "clearMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 6771,
					"name": "saveRawMessageData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 6772,
							"name": "saveRawMessageData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameter": [
								{
									"id": 6773,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 6774,
									"name": "messageData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 6856,
												"typeArguments": [
													{
														"type": "reference",
														"target": 6773,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "MessageFormat",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 6856,
													"typeArguments": [
														{
															"type": "reference",
															"target": 6773,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													],
													"name": "MessageFormat",
													"package": "@medusajs/types"
												}
											}
										]
									}
								},
								{
									"id": 6775,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						6763,
						6766,
						6769,
						6771
					]
				}
			]
		},
		{
			"id": 6546,
			"name": "Context",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A context used to share resources, such as transaction manager, between the application and the module."
					}
				]
			},
			"children": [
				{
					"id": 6547,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "literal",
						"value": "MedusaContext"
					}
				},
				{
					"id": 6548,
					"name": "transactionManager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a transaction manager of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`transactionManager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 6557,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 6549,
					"name": "manager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a manager, typically an entity manager, of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`manager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 6557,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 6550,
					"name": "isolationLevel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the isolation level of the context. Possible values are "
							},
							{
								"kind": "code",
								"text": "`READ UNCOMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`READ COMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`REPEATABLE READ`"
							},
							{
								"kind": "text",
								"text": ", or "
							},
							{
								"kind": "code",
								"text": "`SERIALIZABLE`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6551,
					"name": "enableNestedTransactions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean value indicating whether nested transactions are enabled."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 6552,
					"name": "eventGroupId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the group to aggregate the events to be emitted at a later point."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6553,
					"name": "transactionId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current transaction."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6554,
					"name": "messageAggregator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a message aggregator, which is used to aggregate messages to be emitted at a later point."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 6762,
						"name": "IMessageAggregator",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 6555,
					"name": "requestId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current request."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6556,
					"name": "idempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the idempotencyKey of the current workflow execution."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6547,
						6548,
						6549,
						6550,
						6551,
						6552,
						6553,
						6554,
						6555,
						6556
					]
				}
			],
			"typeParameters": [
				{
					"id": 6557,
					"name": "TManager",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			]
		},
		{
			"id": 6839,
			"name": "BigNumberRawValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 6840,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 6841,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								6841
							]
						}
					],
					"indexSignature": {
						"id": 6842,
						"name": "__index",
						"variant": "signature",
						"kind": 8192,
						"flags": {},
						"parameters": [
							{
								"id": 6843,
								"name": "key",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "unknown"
						}
					}
				}
			}
		},
		{
			"id": 6761,
			"name": "BigNumberInput",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 6839,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/bignumber.js/bignumber.d.ts",
							"qualifiedName": "BigNumber"
						},
						"name": "BigNumberJS",
						"package": "bignumber.js",
						"qualifiedName": "BigNumber"
					}
				]
			}
		},
		{
			"id": 6776,
			"name": "BigNumberValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/bignumber.js/bignumber.d.ts",
							"qualifiedName": "BigNumber"
						},
						"name": "BigNumberJS",
						"package": "bignumber.js",
						"qualifiedName": "BigNumber"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				]
			}
		}
	],
	"groups": [
		{
			"title": "Enumerations",
			"children": [
				6777,
				6815
			]
		},
		{
			"title": "Interfaces",
			"children": [
				6573,
				6941,
				6886,
				6783,
				6906,
				6821,
				6530,
				6558,
				6585,
				6647,
				6694,
				6710,
				6626,
				6659,
				6704,
				6720,
				6609,
				6691,
				6686,
				6541,
				6597,
				6592,
				6672,
				6678,
				6682,
				6603,
				6620,
				6726,
				6809,
				6397,
				6527,
				6850,
				6762,
				6546
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				6871,
				6867,
				6869,
				6929,
				6973,
				6963,
				6787,
				6961,
				6939,
				6960,
				6933,
				6919,
				6844,
				6856,
				6909,
				6733,
				6835,
				6839,
				6761,
				6776
			]
		}
	],
	"packageName": "@medusajs/types",
	"symbolIdMap": {
		"6396": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": ""
		},
		"6397": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService"
		},
		"6398": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.createPaymentCollections"
		},
		"6399": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.createPaymentCollections"
		},
		"6400": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "data"
		},
		"6401": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"6402": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.createPaymentCollections"
		},
		"6403": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "data"
		},
		"6404": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"6405": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.retrievePaymentCollection"
		},
		"6406": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.retrievePaymentCollection"
		},
		"6407": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "paymentCollectionId"
		},
		"6408": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "config"
		},
		"6409": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"6410": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listPaymentCollections"
		},
		"6411": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listPaymentCollections"
		},
		"6412": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "filters"
		},
		"6413": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "config"
		},
		"6414": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"6415": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listAndCountPaymentCollections"
		},
		"6416": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listAndCountPaymentCollections"
		},
		"6417": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "filters"
		},
		"6418": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "config"
		},
		"6419": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"6420": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.updatePaymentCollections"
		},
		"6421": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.updatePaymentCollections"
		},
		"6422": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "paymentCollectionId"
		},
		"6423": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "data"
		},
		"6424": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"6425": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.updatePaymentCollections"
		},
		"6426": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "selector"
		},
		"6427": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "data"
		},
		"6428": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"6429": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.upsertPaymentCollections"
		},
		"6430": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.upsertPaymentCollections"
		},
		"6431": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "data"
		},
		"6432": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"6433": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.upsertPaymentCollections"
		},
		"6434": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "data"
		},
		"6435": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"6436": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.deletePaymentCollections"
		},
		"6437": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.deletePaymentCollections"
		},
		"6438": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "paymentCollectionId"
		},
		"6439": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"6440": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.deletePaymentCollections"
		},
		"6441": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "paymentCollectionId"
		},
		"6442": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"6443": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.completePaymentCollections"
		},
		"6444": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.completePaymentCollections"
		},
		"6445": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "paymentCollectionId"
		},
		"6446": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"6447": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.completePaymentCollections"
		},
		"6448": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "paymentCollectionId"
		},
		"6449": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"6450": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.createPaymentSession"
		},
		"6451": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.createPaymentSession"
		},
		"6452": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "paymentCollectionId"
		},
		"6453": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "data"
		},
		"6454": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"6455": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.updatePaymentSession"
		},
		"6456": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.updatePaymentSession"
		},
		"6457": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "data"
		},
		"6458": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"6459": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.deletePaymentSession"
		},
		"6460": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.deletePaymentSession"
		},
		"6461": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "id"
		},
		"6462": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"6463": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.authorizePaymentSession"
		},
		"6464": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.authorizePaymentSession"
		},
		"6465": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "id"
		},
		"6466": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "context"
		},
		"6467": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"6468": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listPaymentSessions"
		},
		"6469": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listPaymentSessions"
		},
		"6470": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "filters"
		},
		"6471": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "config"
		},
		"6472": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"6473": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listPayments"
		},
		"6474": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listPayments"
		},
		"6475": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "filters"
		},
		"6476": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "config"
		},
		"6477": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"6478": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.updatePayment"
		},
		"6479": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.updatePayment"
		},
		"6480": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "data"
		},
		"6481": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"6482": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.capturePayment"
		},
		"6483": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.capturePayment"
		},
		"6484": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "data"
		},
		"6485": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"6486": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.refundPayment"
		},
		"6487": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.refundPayment"
		},
		"6488": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "data"
		},
		"6489": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"6490": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.cancelPayment"
		},
		"6491": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.cancelPayment"
		},
		"6492": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "paymentId"
		},
		"6493": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"6494": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listPaymentProviders"
		},
		"6495": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listPaymentProviders"
		},
		"6496": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "filters"
		},
		"6497": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "config"
		},
		"6498": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"6499": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listAndCountPaymentProviders"
		},
		"6500": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listAndCountPaymentProviders"
		},
		"6501": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "filters"
		},
		"6502": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "config"
		},
		"6503": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"6504": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listCaptures"
		},
		"6505": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listCaptures"
		},
		"6506": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "filters"
		},
		"6507": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "config"
		},
		"6508": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"6509": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listRefunds"
		},
		"6510": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listRefunds"
		},
		"6511": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "filters"
		},
		"6512": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "config"
		},
		"6513": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"6514": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.processEvent"
		},
		"6515": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.processEvent"
		},
		"6516": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "data"
		},
		"6527": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "PaymentModuleOptions"
		},
		"6528": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "PaymentModuleOptions.webhook_delay"
		},
		"6529": {
			"sourceFileName": "../../../packages/types/src/payment/service.ts",
			"qualifiedName": "PaymentModuleOptions.webhook_retries"
		},
		"6530": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "IModuleService"
		},
		"6541": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "CreatePaymentCollectionDTO"
		},
		"6542": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "CreatePaymentCollectionDTO.region_id"
		},
		"6543": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "CreatePaymentCollectionDTO.currency_code"
		},
		"6544": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "CreatePaymentCollectionDTO.amount"
		},
		"6545": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "CreatePaymentCollectionDTO.metadata"
		},
		"6546": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "Context"
		},
		"6547": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.__type"
		},
		"6548": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionManager"
		},
		"6549": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.manager"
		},
		"6550": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"6551": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"6552": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"6553": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionId"
		},
		"6554": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.messageAggregator"
		},
		"6555": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.requestId"
		},
		"6556": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.idempotencyKey"
		},
		"6557": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "TManager"
		},
		"6558": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionDTO"
		},
		"6559": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionDTO.id"
		},
		"6560": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionDTO.currency_code"
		},
		"6561": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionDTO.region_id"
		},
		"6562": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionDTO.amount"
		},
		"6563": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionDTO.authorized_amount"
		},
		"6564": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionDTO.refunded_amount"
		},
		"6565": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionDTO.completed_at"
		},
		"6566": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionDTO.created_at"
		},
		"6567": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionDTO.updated_at"
		},
		"6568": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionDTO.metadata"
		},
		"6569": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionDTO.status"
		},
		"6570": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionDTO.payment_providers"
		},
		"6571": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionDTO.payment_sessions"
		},
		"6572": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionDTO.payments"
		},
		"6573": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig"
		},
		"6574": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.select"
		},
		"6575": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.skip"
		},
		"6576": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.take"
		},
		"6577": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.relations"
		},
		"6578": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.order"
		},
		"6579": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"6580": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.__index"
		},
		"6582": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.withDeleted"
		},
		"6583": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.filters"
		},
		"6584": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.Entity"
		},
		"6585": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentCollectionProps"
		},
		"6586": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentCollectionProps.id"
		},
		"6587": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentCollectionProps.region_id"
		},
		"6588": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentCollectionProps.created_at"
		},
		"6589": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentCollectionProps.updated_at"
		},
		"6590": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"6591": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"6592": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "PaymentCollectionUpdatableFields"
		},
		"6593": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "PaymentCollectionUpdatableFields.region_id"
		},
		"6594": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "PaymentCollectionUpdatableFields.currency_code"
		},
		"6595": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "PaymentCollectionUpdatableFields.amount"
		},
		"6596": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "PaymentCollectionUpdatableFields.metadata"
		},
		"6597": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "UpsertPaymentCollectionDTO"
		},
		"6598": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "UpsertPaymentCollectionDTO.id"
		},
		"6599": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "UpsertPaymentCollectionDTO.region_id"
		},
		"6600": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "UpsertPaymentCollectionDTO.currency_code"
		},
		"6601": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "UpsertPaymentCollectionDTO.amount"
		},
		"6602": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "UpsertPaymentCollectionDTO.metadata"
		},
		"6603": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "CreatePaymentSessionDTO"
		},
		"6604": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "CreatePaymentSessionDTO.provider_id"
		},
		"6605": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "CreatePaymentSessionDTO.currency_code"
		},
		"6606": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "CreatePaymentSessionDTO.amount"
		},
		"6607": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "CreatePaymentSessionDTO.data"
		},
		"6608": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "CreatePaymentSessionDTO.context"
		},
		"6609": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentSessionDTO"
		},
		"6610": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentSessionDTO.id"
		},
		"6611": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentSessionDTO.amount"
		},
		"6612": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentSessionDTO.currency_code"
		},
		"6613": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentSessionDTO.provider_id"
		},
		"6614": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentSessionDTO.data"
		},
		"6615": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentSessionDTO.context"
		},
		"6616": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentSessionDTO.status"
		},
		"6617": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentSessionDTO.authorized_at"
		},
		"6618": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentSessionDTO.payment_collection"
		},
		"6619": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentSessionDTO.payment"
		},
		"6620": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "UpdatePaymentSessionDTO"
		},
		"6621": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "UpdatePaymentSessionDTO.id"
		},
		"6622": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "UpdatePaymentSessionDTO.data"
		},
		"6623": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "UpdatePaymentSessionDTO.currency_code"
		},
		"6624": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "UpdatePaymentSessionDTO.amount"
		},
		"6625": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "UpdatePaymentSessionDTO.context"
		},
		"6626": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO"
		},
		"6627": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.id"
		},
		"6628": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.amount"
		},
		"6629": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.authorized_amount"
		},
		"6630": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.currency_code"
		},
		"6631": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.provider_id"
		},
		"6632": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.cart_id"
		},
		"6633": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.order_id"
		},
		"6634": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.order_edit_id"
		},
		"6635": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.customer_id"
		},
		"6636": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.data"
		},
		"6637": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.created_at"
		},
		"6638": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.updated_at"
		},
		"6639": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.captured_at"
		},
		"6640": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.canceled_at"
		},
		"6641": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.captured_amount"
		},
		"6642": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.refunded_amount"
		},
		"6643": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.captures"
		},
		"6644": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.refunds"
		},
		"6645": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.payment_collection"
		},
		"6646": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.payment_session"
		},
		"6647": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentSessionProps"
		},
		"6648": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentSessionProps.id"
		},
		"6649": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentSessionProps.currency_code"
		},
		"6650": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentSessionProps.amount"
		},
		"6651": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentSessionProps.provider_id"
		},
		"6652": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentSessionProps.payment_collection_id"
		},
		"6653": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentSessionProps.region_id"
		},
		"6654": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentSessionProps.created_at"
		},
		"6655": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentSessionProps.updated_at"
		},
		"6656": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentSessionProps.deleted_at"
		},
		"6657": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"6658": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"6659": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentProps"
		},
		"6660": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentProps.id"
		},
		"6661": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentProps.session_id"
		},
		"6662": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentProps.customer_id"
		},
		"6663": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentProps.cart_id"
		},
		"6664": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentProps.order_id"
		},
		"6665": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentProps.order_edit_id"
		},
		"6666": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentProps.created_at"
		},
		"6667": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentProps.updated_at"
		},
		"6668": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentProps.captured_at"
		},
		"6669": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentProps.canceled_at"
		},
		"6670": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"6671": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"6672": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "UpdatePaymentDTO"
		},
		"6673": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "UpdatePaymentDTO.id"
		},
		"6674": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "UpdatePaymentDTO.cart_id"
		},
		"6675": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "UpdatePaymentDTO.order_id"
		},
		"6676": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "UpdatePaymentDTO.order_edit_id"
		},
		"6677": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "UpdatePaymentDTO.customer_id"
		},
		"6678": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "CreateCaptureDTO"
		},
		"6679": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "CreateCaptureDTO.amount"
		},
		"6680": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "CreateCaptureDTO.payment_id"
		},
		"6681": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "CreateCaptureDTO.captured_by"
		},
		"6682": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "CreateRefundDTO"
		},
		"6683": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "CreateRefundDTO.amount"
		},
		"6684": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "CreateRefundDTO.payment_id"
		},
		"6685": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "CreateRefundDTO.created_by"
		},
		"6686": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentProviderProps"
		},
		"6687": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentProviderProps.id"
		},
		"6688": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentProviderProps.is_enabled"
		},
		"6689": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"6690": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"6691": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentProviderDTO"
		},
		"6692": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentProviderDTO.id"
		},
		"6693": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentProviderDTO.is_enabled"
		},
		"6694": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterableCaptureProps"
		},
		"6695": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterableCaptureProps.id"
		},
		"6696": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterableCaptureProps.currency_code"
		},
		"6697": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterableCaptureProps.amount"
		},
		"6698": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterableCaptureProps.payment_id"
		},
		"6699": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterableCaptureProps.created_at"
		},
		"6700": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterableCaptureProps.updated_at"
		},
		"6701": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterableCaptureProps.deleted_at"
		},
		"6702": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"6703": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"6704": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "CaptureDTO"
		},
		"6705": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "CaptureDTO.id"
		},
		"6706": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "CaptureDTO.amount"
		},
		"6707": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "CaptureDTO.created_at"
		},
		"6708": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "CaptureDTO.created_by"
		},
		"6709": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "CaptureDTO.payment"
		},
		"6710": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterableRefundProps"
		},
		"6711": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterableRefundProps.id"
		},
		"6712": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterableRefundProps.currency_code"
		},
		"6713": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterableRefundProps.amount"
		},
		"6714": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterableRefundProps.payment_id"
		},
		"6715": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterableRefundProps.created_at"
		},
		"6716": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterableRefundProps.updated_at"
		},
		"6717": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "FilterableRefundProps.deleted_at"
		},
		"6718": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"6719": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"6720": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "RefundDTO"
		},
		"6721": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "RefundDTO.id"
		},
		"6722": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "RefundDTO.amount"
		},
		"6723": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "RefundDTO.created_at"
		},
		"6724": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "RefundDTO.created_by"
		},
		"6725": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "RefundDTO.payment"
		},
		"6726": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "ProviderWebhookPayload"
		},
		"6727": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "ProviderWebhookPayload.provider"
		},
		"6728": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "ProviderWebhookPayload.payload"
		},
		"6729": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "__type"
		},
		"6730": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "__type.data"
		},
		"6731": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "__type.rawData"
		},
		"6732": {
			"sourceFileName": "../../../packages/types/src/payment/mutations.ts",
			"qualifiedName": "__type.headers"
		},
		"6733": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerConfig"
		},
		"6734": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"6735": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.schema"
		},
		"6736": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationships"
		},
		"6737": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extends"
		},
		"6738": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"6739": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"6740": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.fieldAlias"
		},
		"6741": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"6742": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.path"
		},
		"6743": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"6744": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isList"
		},
		"6745": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"6746": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"6747": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.primaryKeys"
		},
		"6748": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isLink"
		},
		"6749": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.linkableKeys"
		},
		"6750": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isReadOnlyLink"
		},
		"6751": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.databaseConfig"
		},
		"6752": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"6753": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.tableName"
		},
		"6754": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.idPrefix"
		},
		"6755": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraFields"
		},
		"6756": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"6757": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.type"
		},
		"6758": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultValue"
		},
		"6759": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.nullable"
		},
		"6760": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"6761": {
			"sourceFileName": "../../../packages/types/src/totals/big-number.ts",
			"qualifiedName": "BigNumberInput"
		},
		"6762": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator"
		},
		"6763": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"6764": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"6765": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "msg"
		},
		"6766": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"6767": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"6768": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "format"
		},
		"6769": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"6770": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"6771": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"6772": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"6773": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "T"
		},
		"6774": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "messageData"
		},
		"6775": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "options"
		},
		"6776": {
			"sourceFileName": "../../../packages/types/src/totals/big-number.ts",
			"qualifiedName": "BigNumberValue"
		},
		"6777": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionStatus"
		},
		"6778": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionStatus.NOT_PAID"
		},
		"6779": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionStatus.AWAITING"
		},
		"6780": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionStatus.AUTHORIZED"
		},
		"6781": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionStatus.PARTIALLY_AUTHORIZED"
		},
		"6782": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionStatus.CANCELED"
		},
		"6783": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable"
		},
		"6784": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"6785": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"6786": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.T"
		},
		"6787": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "OperatorMap"
		},
		"6788": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"6789": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$and"
		},
		"6790": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$or"
		},
		"6791": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$eq"
		},
		"6792": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$ne"
		},
		"6793": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$in"
		},
		"6794": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$nin"
		},
		"6795": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$not"
		},
		"6796": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$gt"
		},
		"6797": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$gte"
		},
		"6798": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$lt"
		},
		"6799": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$lte"
		},
		"6800": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$like"
		},
		"6801": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$re"
		},
		"6802": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$ilike"
		},
		"6803": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$fulltext"
		},
		"6804": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$overlap"
		},
		"6805": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$contains"
		},
		"6806": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$contained"
		},
		"6807": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$exists"
		},
		"6808": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"6809": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "PaymentProviderContext"
		},
		"6810": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "__type.billing_address"
		},
		"6811": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "__type.email"
		},
		"6812": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "__type.resource_id"
		},
		"6813": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "__type.customer"
		},
		"6814": {
			"sourceFileName": "../../../packages/types/src/payment/provider.ts",
			"qualifiedName": "__type.extra"
		},
		"6815": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentSessionStatus"
		},
		"6816": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentSessionStatus.AUTHORIZED"
		},
		"6817": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentSessionStatus.PENDING"
		},
		"6818": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentSessionStatus.REQUIRES_MORE"
		},
		"6819": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentSessionStatus.ERROR"
		},
		"6820": {
			"sourceFileName": "../../../packages/types/src/payment/common.ts",
			"qualifiedName": "PaymentSessionStatus.CANCELED"
		},
		"6821": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig"
		},
		"6822": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.serviceName"
		},
		"6823": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.alias"
		},
		"6824": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.fieldAlias"
		},
		"6825": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"6826": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.path"
		},
		"6827": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"6828": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.primaryKeys"
		},
		"6829": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.relationships"
		},
		"6830": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.extends"
		},
		"6831": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"6832": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"6833": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"6834": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.args"
		},
		"6835": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerRelationship"
		},
		"6836": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"6837": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isInternalService"
		},
		"6838": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.deleteCascade"
		},
		"6839": {
			"sourceFileName": "../../../packages/types/src/totals/big-number.ts",
			"qualifiedName": "BigNumberRawValue"
		},
		"6840": {
			"sourceFileName": "../../../packages/types/src/totals/big-number.ts",
			"qualifiedName": "__type"
		},
		"6841": {
			"sourceFileName": "../../../packages/types/src/totals/big-number.ts",
			"qualifiedName": "__type.value"
		},
		"6842": {
			"sourceFileName": "../../../packages/types/src/totals/big-number.ts",
			"qualifiedName": "__type.__index"
		},
		"6844": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "Message"
		},
		"6845": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"6846": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventName"
		},
		"6847": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.body"
		},
		"6848": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"6849": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "T"
		},
		"6850": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat"
		},
		"6851": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.groupBy"
		},
		"6852": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.sortBy"
		},
		"6853": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type"
		},
		"6854": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.__index"
		},
		"6856": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "MessageFormat"
		},
		"6857": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"6858": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventName"
		},
		"6859": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"6860": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"6861": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.service"
		},
		"6862": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.action"
		},
		"6863": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.object"
		},
		"6864": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"6865": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"6866": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "T"
		},
		"6867": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "Query"
		},
		"6868": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"6869": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "ExpandScalar"
		},
		"6870": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"6871": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "AddressDTO"
		},
		"6872": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type"
		},
		"6873": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.id"
		},
		"6874": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.address_1"
		},
		"6875": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.address_2"
		},
		"6876": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.company"
		},
		"6877": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.country_code"
		},
		"6878": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.city"
		},
		"6879": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.phone"
		},
		"6880": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.postal_code"
		},
		"6881": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.province"
		},
		"6882": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"6883": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.created_at"
		},
		"6884": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.updated_at"
		},
		"6885": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.deleted_at"
		},
		"6886": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO"
		},
		"6887": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.id"
		},
		"6888": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.email"
		},
		"6889": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.has_account"
		},
		"6890": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.default_billing_address_id"
		},
		"6891": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.default_shipping_address_id"
		},
		"6892": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.company_name"
		},
		"6893": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.first_name"
		},
		"6894": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.last_name"
		},
		"6895": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.addresses"
		},
		"6896": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.phone"
		},
		"6897": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.groups"
		},
		"6898": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "__type"
		},
		"6899": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "__type.id"
		},
		"6900": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "__type.name"
		},
		"6901": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.metadata"
		},
		"6902": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.created_by"
		},
		"6903": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.deleted_at"
		},
		"6904": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.created_at"
		},
		"6905": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.updated_at"
		},
		"6906": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias"
		},
		"6907": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.name"
		},
		"6908": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.args"
		},
		"6909": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerRelationship"
		},
		"6910": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"6911": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.alias"
		},
		"6912": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.foreignKey"
		},
		"6913": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.primaryKey"
		},
		"6914": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"6915": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.isInternalService"
		},
		"6916": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.inverse"
		},
		"6917": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.isList"
		},
		"6918": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.args"
		},
		"6919": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "MessageBody"
		},
		"6920": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"6921": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"6922": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"6923": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.service"
		},
		"6924": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.action"
		},
		"6925": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.object"
		},
		"6926": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"6927": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"6928": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "T"
		},
		"6929": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "Scalar"
		},
		"6930": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"6931": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.toHexString"
		},
		"6932": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.toHexString"
		},
		"6933": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "FilterQuery"
		},
		"6934": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"6935": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"6937": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"6938": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "Prev"
		},
		"6939": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "FilterValue"
		},
		"6940": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"6941": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO"
		},
		"6942": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.id"
		},
		"6943": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.address_name"
		},
		"6944": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.is_default_shipping"
		},
		"6945": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.is_default_billing"
		},
		"6946": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.customer_id"
		},
		"6947": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.company"
		},
		"6948": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.first_name"
		},
		"6949": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.last_name"
		},
		"6950": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.address_1"
		},
		"6951": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.address_2"
		},
		"6952": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.city"
		},
		"6953": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.country_code"
		},
		"6954": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.province"
		},
		"6955": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.postal_code"
		},
		"6956": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.phone"
		},
		"6957": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.metadata"
		},
		"6958": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.created_at"
		},
		"6959": {
			"sourceFileName": "../../../packages/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.updated_at"
		},
		"6960": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "PrevLimit"
		},
		"6961": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "FilterValue2"
		},
		"6962": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"6963": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "Primary"
		},
		"6964": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"6965": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.[PrimaryKeyType]"
		},
		"6966": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"6967": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type._id"
		},
		"6968": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"6969": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.uuid"
		},
		"6970": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"6971": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.id"
		},
		"6972": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"6973": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "ReadonlyPrimary"
		},
		"6974": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		}
	}
}