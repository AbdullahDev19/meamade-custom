{
	"id": 27544,
	"name": "types",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 27545,
			"name": "AddressDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 27546,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 27547,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 27548,
							"name": "address_1",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 27549,
							"name": "address_2",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 27550,
							"name": "company",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 27551,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 27552,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 27553,
							"name": "phone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 27554,
							"name": "postal_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 27555,
							"name": "province",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 27556,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 27557,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 27558,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 27559,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								27547,
								27548,
								27549,
								27550,
								27551,
								27552,
								27553,
								27554,
								27555,
								27556,
								27557,
								27558,
								27559
							]
						}
					]
				}
			}
		},
		{
			"id": 27560,
			"name": "CacheTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 27561,
					"name": "ICacheService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 27562,
							"name": "get",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 27563,
									"name": "get",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 27564,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 27565,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"target": 27564,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 27566,
							"name": "set",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 27567,
									"name": "set",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 27568,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 27569,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										},
										{
											"id": 27570,
											"name": "ttl",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 27571,
							"name": "invalidate",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 27572,
									"name": "invalidate",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 27573,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								27562,
								27566,
								27571
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						27561
					]
				}
			]
		},
		{
			"id": 30550,
			"name": "SessionOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Options to pass to "
					},
					{
						"kind": "code",
						"text": "`express-session`"
					},
					{
						"kind": "text",
						"text": "."
					}
				]
			},
			"children": [
				{
					"id": 30551,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the session ID cookie to set in the response (and read from in the request). The default value is "
							},
							{
								"kind": "code",
								"text": "`connect.sid`"
							},
							{
								"kind": "text",
								"text": ".\nRefer to [express-session’s documentation](https://www.npmjs.com/package/express-session#name) for more details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 30552,
					"name": "resave",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the session should be saved back to the session store, even if the session was never modified during the request. The default value is "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": ".\nRefer to [express-session’s documentation](https://www.npmjs.com/package/express-session#resave) for more details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 30553,
					"name": "rolling",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the session identifier cookie should be force-set on every response. The default value is "
							},
							{
								"kind": "code",
								"text": "`false`"
							},
							{
								"kind": "text",
								"text": ".\nRefer to [express-session’s documentation](https://www.npmjs.com/package/express-session#rolling) for more details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 30554,
					"name": "saveUninitialized",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether a session that is \"uninitialized\" is forced to be saved to the store. The default value is "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": ".\nRefer to [express-session’s documentation](https://www.npmjs.com/package/express-session#saveUninitialized) for more details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 30555,
					"name": "secret",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The secret to sign the session ID cookie. By default, the value of "
							},
							{
								"kind": "code",
								"text": "`cookie_secret`"
							},
							{
								"kind": "text",
								"text": " is used.\nRefer to [express-session’s documentation](https://www.npmjs.com/package/express-session#secret) for details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 30556,
					"name": "ttl",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Used when calculating the "
							},
							{
								"kind": "code",
								"text": "`Expires`"
							},
							{
								"kind": "text",
								"text": " "
							},
							{
								"kind": "code",
								"text": "`Set-Cookie`"
							},
							{
								"kind": "text",
								"text": " attribute of cookies. By default, its value is "
							},
							{
								"kind": "code",
								"text": "`10 * 60 * 60 * 1000`"
							},
							{
								"kind": "text",
								"text": ".\nRefer to [express-session’s documentation](https://www.npmjs.com/package/express-session#cookiemaxage) for details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						30551,
						30552,
						30553,
						30554,
						30555,
						30556
					]
				}
			]
		},
		{
			"id": 27574,
			"name": "CommonTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 27575,
					"name": "WithRequiredProperty",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Utility type used to remove some optional attributes (coming from K) from a type T"
							}
						]
					},
					"typeParameters": [
						{
							"id": 27576,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 27577,
							"name": "K",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "reference",
									"target": 27576,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 27576,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							{
								"type": "mapped",
								"parameter": "Property",
								"parameterType": {
									"type": "reference",
									"target": 27577,
									"name": "K",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"templateType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/types/src/common/common.ts",
											"qualifiedName": "Property"
										},
										"name": "Property",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"objectType": {
										"type": "reference",
										"target": 27576,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								"optionalModifier": "-"
							}
						]
					}
				},
				{
					"id": 27581,
					"name": "BaseEntity",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Representing a table in the database."
							}
						]
					},
					"children": [
						{
							"id": 27582,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of an entity's record."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 27583,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date an entity's record was created."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 27584,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date an entity's record was updated."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								27582,
								27583,
								27584
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 27585,
							"name": "SoftDeletableEntity"
						}
					]
				},
				{
					"id": 27585,
					"name": "SoftDeletableEntity",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Representing a deletable entity."
							}
						]
					},
					"children": [
						{
							"id": 27587,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of an entity's record."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 27582,
								"name": "BaseEntity.id"
							}
						},
						{
							"id": 27588,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date an entity's record was created."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 27583,
								"name": "BaseEntity.created_at"
							}
						},
						{
							"id": 27589,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date an entity's record was updated."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 27584,
								"name": "BaseEntity.updated_at"
							}
						},
						{
							"id": 27586,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date an entity's record was deleted."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								27587,
								27588,
								27589,
								27586
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 27581,
							"name": "BaseEntity",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 27592,
					"name": "FindConfig",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object that is used to configure how an entity is retrieved from the database. It accepts as a typed parameter an "
							},
							{
								"kind": "code",
								"text": "`Entity`"
							},
							{
								"kind": "text",
								"text": " class,\nwhich provides correct typing of field names in its properties."
							}
						]
					},
					"children": [
						{
							"id": 27593,
							"name": "select",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of strings, each being attribute names of the entity to retrieve in the result."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"target": 27603,
												"name": "Entity",
												"package": "@medusajs/types",
												"qualifiedName": "FindConfig.Entity",
												"refersToTypeParameter": true
											}
										}
									]
								}
							}
						},
						{
							"id": 27594,
							"name": "skip",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A number indicating the number of records to skip before retrieving the results."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 27595,
							"name": "take",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A number indicating the number of records to return in the result."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 27596,
							"name": "relations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of strings, each being relation names of the entity to retrieve in the result."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 27597,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An object used to specify how to sort the returned records. Its keys are the names of attributes of the entity, and a key's value can either be "
									},
									{
										"kind": "code",
										"text": "`ASC`"
									},
									{
										"kind": "text",
										"text": "\nto sort retrieved records in an ascending order, or "
									},
									{
										"kind": "code",
										"text": "`DESC`"
									},
									{
										"kind": "text",
										"text": " to sort retrieved records in a descending order."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 27598,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"indexSignature": {
										"id": 27599,
										"name": "__index",
										"variant": "signature",
										"kind": 8192,
										"flags": {},
										"parameters": [
											{
												"id": 27600,
												"name": "K",
												"variant": "param",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "union",
											"types": [
												{
													"type": "literal",
													"value": "ASC"
												},
												{
													"type": "literal",
													"value": "DESC"
												}
											]
										}
									}
								}
							}
						},
						{
							"id": 27601,
							"name": "withDeleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A boolean indicating whether deleted records should also be retrieved as part of the result. This only works if the entity extends the\n"
									},
									{
										"kind": "code",
										"text": "`SoftDeletableEntity`"
									},
									{
										"kind": "text",
										"text": " class."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 27602,
							"name": "filters",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Enable ORM specific defined filters"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								27593,
								27594,
								27595,
								27596,
								27597,
								27601,
								27602
							]
						}
					],
					"typeParameters": [
						{
							"id": 27603,
							"name": "Entity",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					]
				},
				{
					"id": 27641,
					"name": "RequestQueryFields",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Fields that can be passed in the query parameters of a request."
							}
						]
					},
					"children": [
						{
							"id": 27642,
							"name": "expand",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Comma-separated relations that should be expanded in the returned data."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 27643,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Comma-separated fields that should be included in the returned data."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 27644,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of items to skip when retrieving a list."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 27645,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Limit the number of items returned in the list."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 27646,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Field to sort items in the list by."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								27642,
								27643,
								27644,
								27645,
								27646
							]
						}
					]
				},
				{
					"id": 27647,
					"name": "PaginatedResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Fields included in the response if it's paginated."
							}
						]
					},
					"children": [
						{
							"id": 27648,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The limit applied on the retrieved items."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 27649,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of items skipped before retrieving the list of items."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 27650,
							"name": "count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The total count of items."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								27648,
								27649,
								27650
							]
						}
					],
					"typeParameters": [
						{
							"id": 27651,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					]
				},
				{
					"id": 27652,
					"name": "DeleteResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The fields returned in the response of a DELETE request."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 27653,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 27654,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the item that was deleted."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 27655,
									"name": "object",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The type of the item that was deleted."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 27656,
									"name": "deleted",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Whether the item was deleted successfully."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										27654,
										27655,
										27656
									]
								}
							]
						}
					}
				},
				{
					"id": 27657,
					"name": "EmptyQueryParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Requests that don't accept any query parameters can use this type."
							}
						]
					}
				},
				{
					"id": 27658,
					"name": "RepositoryTransformOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"extendedBy": [
						{
							"type": "reference",
							"target": 30507,
							"name": "ProductCategoryTransformOptions"
						}
					]
				},
				{
					"id": 27659,
					"name": "DateComparisonOperator",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Fields used to apply flexible filters on dates."
							}
						]
					},
					"children": [
						{
							"id": 27660,
							"name": "lt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered date must be less than this value."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 27661,
							"name": "gt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered date must be greater than this value."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 27662,
							"name": "gte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered date must be greater than or equal to this value."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 27663,
							"name": "lte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered date must be less than or equal to this value."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								27660,
								27661,
								27662,
								27663
							]
						}
					]
				},
				{
					"id": 27664,
					"name": "StringComparisonOperator",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Fields used to apply flexible filters on strings."
							}
						]
					},
					"children": [
						{
							"id": 27665,
							"name": "lt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered string must be less than this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 27666,
							"name": "gt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered string must be greater than this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 27667,
							"name": "gte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered string must be greater than or equal to this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 27668,
							"name": "lte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered string must be less than or equal to this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 27669,
							"name": "contains",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered string must contain this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 27670,
							"name": "starts_with",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered string must start with this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 27671,
							"name": "ends_with",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered string must end with this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								27665,
								27666,
								27667,
								27668,
								27669,
								27670,
								27671
							]
						}
					]
				},
				{
					"id": 27672,
					"name": "NumericalComparisonOperator",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Fields used to apply flexible filters on numbers."
							}
						]
					},
					"children": [
						{
							"id": 27673,
							"name": "lt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered number must be less than this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 27674,
							"name": "gt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered number must be greater than this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 27675,
							"name": "gte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered number must be greater than or equal to this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 27676,
							"name": "lte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered number must be less than or equal to this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								27673,
								27674,
								27675,
								27676
							]
						}
					]
				},
				{
					"id": 27677,
					"name": "AddressPayload",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Address fields used when creating/updating an address."
							}
						]
					},
					"children": [
						{
							"id": 27678,
							"name": "first_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "First name"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 27679,
							"name": "last_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Last name"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 27680,
							"name": "phone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Phone Number"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 27681,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 27682,
							"name": "company",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Company"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 27683,
							"name": "address_1",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Address line 1"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 27684,
							"name": "address_2",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Address line 2"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 27685,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "City"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 27686,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The 2 character ISO code of the country in lower case"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 27687,
							"name": "province",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Province"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 27688,
							"name": "postal_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Postal Code"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								27678,
								27679,
								27680,
								27681,
								27682,
								27683,
								27684,
								27685,
								27686,
								27687,
								27688
							]
						}
					]
				},
				{
					"id": 27689,
					"name": "AddressCreatePayload",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Address fields used when creating an address."
							}
						]
					},
					"children": [
						{
							"id": 27690,
							"name": "first_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "First name"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 27691,
							"name": "last_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Last name"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 27692,
							"name": "phone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Phone Number"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 27693,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 27694,
							"name": "company",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Company"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 27695,
							"name": "address_1",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Address line 1"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 27696,
							"name": "address_2",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Address line 2"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 27697,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "City"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 27698,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The 2 character ISO code of the country in lower case"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 27699,
							"name": "province",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Province"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 27700,
							"name": "postal_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Postal Code"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								27690,
								27691,
								27692,
								27693,
								27694,
								27695,
								27696,
								27697,
								27698,
								27699,
								27700
							]
						}
					]
				},
				{
					"id": 27701,
					"name": "FindParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Parameters that can be used to configure how data is retrieved."
							}
						]
					},
					"children": [
						{
							"id": 27702,
							"name": "expand",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Comma-separated relations that should be expanded in the returned data."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 27703,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Comma-separated fields that should be included in the returned data."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								27702,
								27703
							]
						}
					]
				},
				{
					"id": 27704,
					"name": "FindPaginationParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Parameters that can be used to configure how a list of data is paginated."
							}
						]
					},
					"children": [
						{
							"id": 27705,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of items to skip when retrieving a list."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 27706,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Limit the number of items returned in the list."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								27705,
								27706
							]
						}
					]
				},
				{
					"id": 27709,
					"name": "SnakeCase",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 27710,
							"name": "S",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 27710,
							"name": "S",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "templateLiteral",
							"head": "",
							"tail": [
								[
									{
										"type": "inferred",
										"name": "T"
									},
									""
								],
								[
									{
										"type": "inferred",
										"name": "U"
									},
									""
								],
								[
									{
										"type": "inferred",
										"name": "V"
									},
									""
								]
							]
						},
						"trueType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/types/src/common/common.ts",
									"qualifiedName": "U"
								},
								"name": "U",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Uppercase"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/types/src/common/common.ts",
											"qualifiedName": "U"
										},
										"name": "U",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "Uppercase",
								"package": "typescript"
							},
							"trueType": {
								"type": "templateLiteral",
								"head": "",
								"tail": [
									[
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Lowercase"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../packages/types/src/common/common.ts",
														"qualifiedName": "T"
													},
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "Lowercase",
											"package": "typescript"
										},
										"_"
									],
									[
										{
											"type": "reference",
											"target": 27709,
											"typeArguments": [
												{
													"type": "templateLiteral",
													"head": "",
													"tail": [
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Lowercase"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/types/src/common/common.ts",
																			"qualifiedName": "U"
																		},
																		"name": "U",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	}
																],
																"name": "Lowercase",
																"package": "typescript"
															},
															""
														],
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/types/src/common/common.ts",
																	"qualifiedName": "V"
																},
																"name": "V",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															""
														]
													]
												}
											],
											"name": "SnakeCase",
											"package": "@medusajs/types"
										},
										""
									]
								]
							},
							"falseType": {
								"type": "templateLiteral",
								"head": "",
								"tail": [
									[
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/types/src/common/common.ts",
												"qualifiedName": "T"
											},
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										""
									],
									[
										{
											"type": "reference",
											"target": 27709,
											"typeArguments": [
												{
													"type": "templateLiteral",
													"head": "",
													"tail": [
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/types/src/common/common.ts",
																	"qualifiedName": "U"
																},
																"name": "U",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															""
														],
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/types/src/common/common.ts",
																	"qualifiedName": "V"
																},
																"name": "V",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															""
														]
													]
												}
											],
											"name": "SnakeCase",
											"package": "@medusajs/types"
										},
										""
									]
								]
							}
						},
						"falseType": {
							"type": "reference",
							"target": 27710,
							"name": "S",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				},
				{
					"id": 27711,
					"name": "KebabCase",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 27712,
							"name": "S",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 27712,
							"name": "S",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "templateLiteral",
							"head": "",
							"tail": [
								[
									{
										"type": "inferred",
										"name": "T"
									},
									""
								],
								[
									{
										"type": "inferred",
										"name": "U"
									},
									""
								],
								[
									{
										"type": "inferred",
										"name": "V"
									},
									""
								]
							]
						},
						"trueType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/types/src/common/common.ts",
									"qualifiedName": "U"
								},
								"name": "U",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Uppercase"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/types/src/common/common.ts",
											"qualifiedName": "U"
										},
										"name": "U",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "Uppercase",
								"package": "typescript"
							},
							"trueType": {
								"type": "templateLiteral",
								"head": "",
								"tail": [
									[
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Lowercase"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../packages/types/src/common/common.ts",
														"qualifiedName": "T"
													},
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "Lowercase",
											"package": "typescript"
										},
										"-"
									],
									[
										{
											"type": "reference",
											"target": 27711,
											"typeArguments": [
												{
													"type": "templateLiteral",
													"head": "",
													"tail": [
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Lowercase"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/types/src/common/common.ts",
																			"qualifiedName": "U"
																		},
																		"name": "U",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	}
																],
																"name": "Lowercase",
																"package": "typescript"
															},
															""
														],
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/types/src/common/common.ts",
																	"qualifiedName": "V"
																},
																"name": "V",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															""
														]
													]
												}
											],
											"name": "KebabCase",
											"package": "@medusajs/types"
										},
										""
									]
								]
							},
							"falseType": {
								"type": "templateLiteral",
								"head": "",
								"tail": [
									[
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/types/src/common/common.ts",
												"qualifiedName": "T"
											},
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										""
									],
									[
										{
											"type": "reference",
											"target": 27711,
											"typeArguments": [
												{
													"type": "templateLiteral",
													"head": "",
													"tail": [
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/types/src/common/common.ts",
																	"qualifiedName": "U"
																},
																"name": "U",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															""
														],
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/types/src/common/common.ts",
																	"qualifiedName": "V"
																},
																"name": "V",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															""
														]
													]
												}
											],
											"name": "KebabCase",
											"package": "@medusajs/types"
										},
										""
									]
								]
							}
						},
						"falseType": {
							"type": "reference",
							"target": 27712,
							"name": "S",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				},
				{
					"id": 27713,
					"name": "HttpCompressionOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "HTTP compression configurations."
							}
						]
					},
					"children": [
						{
							"id": 27714,
							"name": "enabled",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether HTTP compression is enabled. By default, it's "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 27715,
							"name": "level",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The level of zlib compression to apply to responses. A higher level will result in better compression but will take longer to complete.\nA lower level will result in less compression but will be much faster. The default value is "
									},
									{
										"kind": "code",
										"text": "`6`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 27716,
							"name": "memLevel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "How much memory should be allocated to the internal compression state. It's an integer in the range of 1 (minimum level) and 9 (maximum level).\nThe default value is "
									},
									{
										"kind": "code",
										"text": "`8`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 27717,
							"name": "threshold",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The minimum response body size that compression is applied on. Its value can be the number of bytes or any string accepted by the\n[bytes](https://www.npmjs.com/package/bytes) module. The default value is "
									},
									{
										"kind": "code",
										"text": "`1024`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								27714,
								27715,
								27716,
								27717
							]
						}
					]
				},
				{
					"id": 27718,
					"name": "ProjectConfigOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Essential configurations related to the Medusa backend, such as database and CORS configurations."
							}
						]
					},
					"children": [
						{
							"id": 27719,
							"name": "store_cors",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The Medusa backend’s API Routes are protected by Cross-Origin Resource Sharing (CORS). So, only allowed URLs or URLs matching a specified pattern can send requests to the backend’s API Routes.\n\n"
									},
									{
										"kind": "code",
										"text": "`store_cors`"
									},
									{
										"kind": "text",
										"text": " is a string used to specify the accepted URLs or patterns for store API Routes. It can either be one accepted origin, or a comma-separated list of accepted origins.\n\nEvery origin in that list must either be:\n\n1. A URL. For example, "
									},
									{
										"kind": "code",
										"text": "`http://localhost:8000`"
									},
									{
										"kind": "text",
										"text": ". The URL must not end with a backslash;\n2. Or a regular expression pattern that can match more than one origin. For example, "
									},
									{
										"kind": "code",
										"text": "`.example.com`"
									},
									{
										"kind": "text",
										"text": ". The regex pattern that the backend tests for is "
									},
									{
										"kind": "code",
										"text": "`^([/~@;%#'])(.*?)\\1([gimsuy]*)$`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "Some example values of common use cases:\n\n"
											},
											{
												"kind": "code",
												"text": "```bash\n# Allow different ports locally starting with 800\nSTORE_CORS=/http://localhost:800\\d+$/\n\n# Allow any origin ending with vercel.app. For example, storefront.vercel.app\nSTORE_CORS=/vercel\\.app$/\n\n# Allow all HTTP requests\nSTORE_CORS=/http://.+/\n```"
											},
											{
												"kind": "text",
												"text": "\n\nThen, set the configuration in "
											},
											{
												"kind": "code",
												"text": "`medusa-config.js`"
											},
											{
												"kind": "text",
												"text": ":\n\n"
											},
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    store_cors: process.env.STORE_CORS,\n    // ...\n  },\n  // ...\n}\n```"
											},
											{
												"kind": "text",
												"text": "\n\nIf you’re adding the value directly within "
											},
											{
												"kind": "code",
												"text": "`medusa-config.js`"
											},
											{
												"kind": "text",
												"text": ", make sure to add an extra escaping "
											},
											{
												"kind": "code",
												"text": "`/`"
											},
											{
												"kind": "text",
												"text": " for every backslash in the pattern. For example:\n\n"
											},
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    store_cors: \"/vercel\\\\.app$/\",\n    // ...\n  },\n  // ...\n}\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 27720,
							"name": "admin_cors",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The Medusa backend’s API Routes are protected by Cross-Origin Resource Sharing (CORS). So, only allowed URLs or URLs matching a specified pattern can send requests to the backend’s API Routes.\n\n"
									},
									{
										"kind": "code",
										"text": "`admin_cors`"
									},
									{
										"kind": "text",
										"text": " is a string used to specify the accepted URLs or patterns for admin API Routes. It can either be one accepted origin, or a comma-separated list of accepted origins.\n\nEvery origin in that list must either be:\n\n1. A URL. For example, "
									},
									{
										"kind": "code",
										"text": "`http://localhost:7001`"
									},
									{
										"kind": "text",
										"text": ". The URL must not end with a backslash;\n2. Or a regular expression pattern that can match more than one origin. For example, "
									},
									{
										"kind": "code",
										"text": "`.example.com`"
									},
									{
										"kind": "text",
										"text": ". The regex pattern that the backend tests for is "
									},
									{
										"kind": "code",
										"text": "`^([/~@;%#'])(.*?)\\1([gimsuy]*)$`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "Some example values of common use cases:\n\n"
											},
											{
												"kind": "code",
												"text": "```bash\n# Allow different ports locally starting with 700\nADMIN_CORS=/http://localhost:700\\d+$/\n\n# Allow any origin ending with vercel.app. For example, admin.vercel.app\nADMIN_CORS=/vercel\\.app$/\n\n# Allow all HTTP requests\nADMIN_CORS=/http://.+/\n```"
											},
											{
												"kind": "text",
												"text": "\n\nThen, set the configuration in "
											},
											{
												"kind": "code",
												"text": "`medusa-config.js`"
											},
											{
												"kind": "text",
												"text": ":\n\n"
											},
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    admin_cors: process.env.ADMIN_CORS,\n    // ...\n  },\n  // ...\n}\n```"
											},
											{
												"kind": "text",
												"text": "\n\nIf you’re adding the value directly within "
											},
											{
												"kind": "code",
												"text": "`medusa-config.js`"
											},
											{
												"kind": "text",
												"text": ", make sure to add an extra escaping "
											},
											{
												"kind": "code",
												"text": "`/`"
											},
											{
												"kind": "text",
												"text": " for every backslash in the pattern. For example:\n\n"
											},
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    admin_cors: \"/http:\\\\/\\\\/localhost:700\\\\d+$/\",\n    // ...\n  },\n  // ...\n}\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 27721,
							"name": "auth_cors",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The Medusa backend’s API Routes are protected by Cross-Origin Resource Sharing (CORS). So, only allowed URLs or URLs matching a specified pattern can send requests to the backend’s API Routes.\n\n"
									},
									{
										"kind": "code",
										"text": "`auth_cors`"
									},
									{
										"kind": "text",
										"text": " is a string used to specify the accepted URLs or patterns for API Routes starting with "
									},
									{
										"kind": "code",
										"text": "`/auth`"
									},
									{
										"kind": "text",
										"text": ". It can either be one accepted origin, or a comma-separated list of accepted origins.\n\nEvery origin in that list must either be:\n\n1. A URL. For example, "
									},
									{
										"kind": "code",
										"text": "`http://localhost:7001`"
									},
									{
										"kind": "text",
										"text": ". The URL must not end with a backslash;\n2. Or a regular expression pattern that can match more than one origin. For example, "
									},
									{
										"kind": "code",
										"text": "`.example.com`"
									},
									{
										"kind": "text",
										"text": ". The regex pattern that the backend tests for is "
									},
									{
										"kind": "code",
										"text": "`^([/~@;%#'])(.*?)\\1([gimsuy]*)$`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "Some example values of common use cases:\n\n"
											},
											{
												"kind": "code",
												"text": "```bash\n# Allow different ports locally starting with 700\nAUTH_CORS=/http://localhost:700\\d+$/\n\n# Allow any origin ending with vercel.app. For example, admin.vercel.app\nAUTH_CORS=/vercel\\.app$/\n\n# Allow all HTTP requests\nAUTH_CORS=/http://.+/\n```"
											},
											{
												"kind": "text",
												"text": "\n\nThen, set the configuration in "
											},
											{
												"kind": "code",
												"text": "`medusa-config.js`"
											},
											{
												"kind": "text",
												"text": ":\n\n"
											},
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    auth_cors: process.env.AUTH_CORS,\n    // ...\n  },\n  // ...\n}\n```"
											},
											{
												"kind": "text",
												"text": "\n\nIf you’re adding the value directly within "
											},
											{
												"kind": "code",
												"text": "`medusa-config.js`"
											},
											{
												"kind": "text",
												"text": ", make sure to add an extra escaping "
											},
											{
												"kind": "code",
												"text": "`/`"
											},
											{
												"kind": "text",
												"text": " for every backslash in the pattern. For example:\n\n"
											},
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    auth_cors: \"/http:\\\\/\\\\/localhost:700\\\\d+$/\",\n    // ...\n  },\n  // ...\n}\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 27722,
							"name": "cookie_secret",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A random string used to create cookie tokens. Although this configuration option is not required, it’s highly recommended to set it for better security.\n\nIn a development environment, if this option is not set, the default secret is "
									},
									{
										"kind": "code",
										"text": "`supersecret`"
									},
									{
										"kind": "text",
										"text": " However, in production, if this configuration is not set, an error is thrown and\nthe backend crashes."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    cookie_secret: process.env.COOKIE_SECRET ||\n      \"supersecret\",\n    // ...\n  },\n  // ...\n}\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 27723,
							"name": "jwt_secret",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A random string used to create authentication tokens. Although this configuration option is not required, it’s highly recommended to set it for better security.\n\nIn a development environment, if this option is not set the default secret is "
									},
									{
										"kind": "code",
										"text": "`supersecret`"
									},
									{
										"kind": "text",
										"text": " However, in production, if this configuration is not set an error, an\nerror is thrown and the backend crashes."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    jwt_secret: process.env.JWT_SECRET ||\n      \"supersecret\",\n    // ...\n  },\n  // ...\n}\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 27724,
							"name": "database_database",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the database to connect to. If specified in "
									},
									{
										"kind": "code",
										"text": "`database_url`"
									},
									{
										"kind": "text",
										"text": ", then it’s not required to include it.\n\nMake sure to create the PostgreSQL database before using it. You can check how to create a database in\n[PostgreSQL's documentation](https://www.postgresql.org/docs/current/sql-createdatabase.html)."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    database_database: process.env.DATABASE_DATABASE ||\n      \"medusa-store\",\n    // ...\n  },\n  // ...\n}\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 27725,
							"name": "database_url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The connection URL of the database. The format of the connection URL for PostgreSQL is:\n\n"
									},
									{
										"kind": "code",
										"text": "```bash\npostgres://[user][:password]@[host][:port]/[dbname]\n```"
									},
									{
										"kind": "text",
										"text": "\n\nWhere:\n\n- "
									},
									{
										"kind": "code",
										"text": "`[user]`"
									},
									{
										"kind": "text",
										"text": ": (required) your PostgreSQL username. If not specified, the system's username is used by default. The database user that you use must have create privileges. If you're using the "
									},
									{
										"kind": "code",
										"text": "`postgres`"
									},
									{
										"kind": "text",
										"text": " superuser, then it should have these privileges by default. Otherwise, make sure to grant your user create privileges. You can learn how to do that in [PostgreSQL's documentation](https://www.postgresql.org/docs/current/ddl-priv.html).\n- "
									},
									{
										"kind": "code",
										"text": "`[:password]`"
									},
									{
										"kind": "text",
										"text": ": an optional password for the user. When provided, make sure to put "
									},
									{
										"kind": "code",
										"text": "`:`"
									},
									{
										"kind": "text",
										"text": " before the password.\n- "
									},
									{
										"kind": "code",
										"text": "`[host]`"
									},
									{
										"kind": "text",
										"text": ": (required) your PostgreSQL host. When run locally, it should be "
									},
									{
										"kind": "code",
										"text": "`localhost`"
									},
									{
										"kind": "text",
										"text": ".\n- "
									},
									{
										"kind": "code",
										"text": "`[:port]`"
									},
									{
										"kind": "text",
										"text": ": an optional port that the PostgreSQL server is listening on. By default, it's "
									},
									{
										"kind": "code",
										"text": "`5432`"
									},
									{
										"kind": "text",
										"text": ". When provided, make sure to put "
									},
									{
										"kind": "code",
										"text": "`:`"
									},
									{
										"kind": "text",
										"text": " before the port.\n- "
									},
									{
										"kind": "code",
										"text": "`[dbname]`"
									},
									{
										"kind": "text",
										"text": ": (required) the name of the database.\n\nYou can learn more about the connection URL format in [PostgreSQL’s documentation](https://www.postgresql.org/docs/current/libpq-connect.html)."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "For example, set the following database URL in your environment variables:\n\n"
											},
											{
												"kind": "code",
												"text": "```bash\nDATABASE_URL=postgres://postgres@localhost/medusa-store\n```"
											},
											{
												"kind": "text",
												"text": "\n\nThen, use the value in "
											},
											{
												"kind": "code",
												"text": "`medusa-config.js`"
											},
											{
												"kind": "text",
												"text": ":\n\n"
											},
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    database_url: process.env.DATABASE_URL,\n    // ...\n  },\n  // ...\n}\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 27726,
							"name": "database_schema",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The database schema to connect to. This is not required to provide if you’re using the default schema, which is "
									},
									{
										"kind": "code",
										"text": "`public`"
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    database_schema: process.env.DATABASE_SCHEMA ||\n      \"custom\",\n    // ...\n  },\n  // ...\n}\n```"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 27727,
							"name": "database_logging",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This configuration specifies what database messages to log. Its value can be one of the following:\n\n- (default) A boolean value that indicates whether any messages should be logged.\n- The string value "
									},
									{
										"kind": "code",
										"text": "`all`"
									},
									{
										"kind": "text",
										"text": " that indicates all types of messages should be logged.\n- An array of log-level strings to indicate which type of messages to show in the logs. The strings can be "
									},
									{
										"kind": "code",
										"text": "`query`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`schema`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`error`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`warn`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`info`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`log`"
									},
									{
										"kind": "text",
										"text": ", or "
									},
									{
										"kind": "code",
										"text": "`migration`"
									},
									{
										"kind": "text",
										"text": ". Refer to [Typeorm’s documentation](https://typeorm.io/logging#logging-options) for more details on what each of these values means.\n\nIf this configuration isn't set, its default value is "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": ", meaning no database messages are logged."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    database_logging: [\n      \"query\", \"error\",\n    ],\n    // ...\n  },\n  // ...\n}\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/typeorm/logger/LoggerOptions.d.ts",
									"qualifiedName": "LoggerOptions"
								},
								"name": "LoggerOptions",
								"package": "typeorm"
							}
						},
						{
							"id": 27729,
							"name": "database_extra",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An object that includes additional configurations to pass to the database connection. You can pass any configuration. One defined configuration to pass is\n"
									},
									{
										"kind": "code",
										"text": "`ssl`"
									},
									{
										"kind": "text",
										"text": " which enables support for TLS/SSL connections.\n\nThis is useful for production databases, which can be supported by setting the "
									},
									{
										"kind": "code",
										"text": "`rejectUnauthorized`"
									},
									{
										"kind": "text",
										"text": " attribute of "
									},
									{
										"kind": "code",
										"text": "`ssl`"
									},
									{
										"kind": "text",
										"text": " object to "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": ".\nDuring development, it’s recommended not to pass this option."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    database_extra:\n      process.env.NODE_ENV !== \"development\"\n        ? { ssl: { rejectUnauthorized: false } }\n        : {},\n    // ...\n  },\n  // ...\n}\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 27730,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 27731,
													"name": "ssl",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Configure support for TLS/SSL connection"
															}
														]
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 27732,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 27733,
																	"name": "rejectUnauthorized",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Whether to fail connection if the server certificate is verified against the list of supplied CAs and the hostname and no match is found."
																			}
																		]
																	},
																	"type": {
																		"type": "literal",
																		"value": false
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		27733
																	]
																}
															]
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														27731
													]
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 27734,
							"name": "database_driver_options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An object that includes additional configurations to pass to the database connection for v2. You can pass any configuration. One defined configuration to pass is\n"
									},
									{
										"kind": "code",
										"text": "`ssl`"
									},
									{
										"kind": "text",
										"text": " which enables support for TLS/SSL connections.\n\nThis is useful for production databases, which can be supported by setting the "
									},
									{
										"kind": "code",
										"text": "`rejectUnauthorized`"
									},
									{
										"kind": "text",
										"text": " attribute of "
									},
									{
										"kind": "code",
										"text": "`ssl`"
									},
									{
										"kind": "text",
										"text": " object to "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": ".\nDuring development, it’s recommended not to pass this option."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    database_driver_options:\n      process.env.NODE_ENV !== \"development\"\n        ? { connection: { ssl: { rejectUnauthorized: false } } }\n        : {},\n    // ...\n  },\n  // ...\n}\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 27735,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 27736,
													"name": "connection",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 27737,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 27738,
																	"name": "ssl",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure support for TLS/SSL connection"
																			}
																		]
																	},
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 27739,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 27740,
																					"name": "rejectUnauthorized",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"comment": {
																						"summary": [
																							{
																								"kind": "text",
																								"text": "Whether to fail connection if the server certificate is verified against the list of supplied CAs and the hostname and no match is found."
																							}
																						]
																					},
																					"type": {
																						"type": "literal",
																						"value": false
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						27740
																					]
																				}
																			]
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		27738
																	]
																}
															]
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														27736
													]
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 27741,
							"name": "redis_url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Used to specify the URL to connect to Redis. This is only used for scheduled jobs. If you omit this configuration, scheduled jobs won't work.\n\n:::note\n\nYou must first have Redis installed. You can refer to [Redis's installation guide](https://redis.io/docs/getting-started/installation/).\n\n:::\n\nThe Redis connection URL has the following format:\n\n"
									},
									{
										"kind": "code",
										"text": "```bash\nredis[s]://[[username][:password]@][host][:port][/db-number]\n```"
									},
									{
										"kind": "text",
										"text": "\n\nFor a local Redis installation, the connection URL should be "
									},
									{
										"kind": "code",
										"text": "`redis://localhost:6379`"
									},
									{
										"kind": "text",
										"text": " unless you’ve made any changes to the Redis configuration during installation."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    redis_url: process.env.REDIS_URL ||\n      \"redis://localhost:6379\",\n    // ...\n  },\n  // ...\n}\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 27742,
							"name": "redis_prefix",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The prefix set on all keys stored in Redis. The default value is "
									},
									{
										"kind": "code",
										"text": "`sess:`"
									},
									{
										"kind": "text",
										"text": ".\n\nIf this configuration option is provided, it is prepended to "
									},
									{
										"kind": "code",
										"text": "`sess:`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    redis_prefix: process.env.REDIS_PREFIX ||\n      \"medusa:\",\n    // ...\n  },\n  // ...\n}\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 27743,
							"name": "redis_options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An object of options to pass ioredis. You can refer to [ioredis’s RedisOptions documentation](https://redis.github.io/ioredis/index.html#RedisOptions)\nfor the list of available options."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    redis_options: {\n      connectionName: process.env.REDIS_CONNECTION_NAME ||\n        \"medusa\",\n    },\n    // ...\n  },\n  // ...\n}\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/ioredis/built/redis/RedisOptions.d.ts",
									"qualifiedName": "RedisOptions"
								},
								"name": "RedisOptions",
								"package": "ioredis"
							}
						},
						{
							"id": 27744,
							"name": "session_options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An object of options to pass to [express-session](https://www.npmjs.com/package/express-session)."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    session_options: {\n      name: process.env.SESSION_NAME ||\n        \"custom\",\n    },\n    // ...\n  },\n  // ...\n}\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 30550,
								"name": "SessionOptions",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 27745,
							"name": "http_compression",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Configure HTTP compression from the application layer. If you have access to the HTTP server, the recommended approach would be to enable it there.\nHowever, some platforms don't offer access to the HTTP layer and in those cases, this is a good alternative.\n\nIts value is an object that has the following properties:\n\nIf you enable HTTP compression and you want to disable it for specific API Routes, you can pass in the request header "
									},
									{
										"kind": "code",
										"text": "`\"x-no-compression\": true`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    http_compression: {\n      enabled: true,\n      level: 6,\n      memLevel: 8,\n      threshold: 1024,\n    },\n    // ...\n  },\n  // ...\n}\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 27713,
								"name": "HttpCompressionOptions",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 27746,
							"name": "jobs_batch_size",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Configure the number of staged jobs that are polled from the database. Default is "
									},
									{
										"kind": "code",
										"text": "`1000`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    jobs_batch_size: 100\n    // ...\n  },\n  // ...\n}\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 27747,
							"name": "worker_mode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Configure the application's worker mode. Default is "
									},
									{
										"kind": "code",
										"text": "`shared`"
									},
									{
										"kind": "text",
										"text": ".\n\n- Use "
									},
									{
										"kind": "code",
										"text": "`shared`"
									},
									{
										"kind": "text",
										"text": " to run the application in a single process.\n- Use "
									},
									{
										"kind": "code",
										"text": "`worker`"
									},
									{
										"kind": "text",
										"text": " to run the a worker process only.\n- Use "
									},
									{
										"kind": "code",
										"text": "`server`"
									},
									{
										"kind": "text",
										"text": " to run the application server only.\n\nLearn more in [this guide](https://docs.medusajs.com/development/medusa-worker)."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    worker_mode: \"shared\"\n    // ...\n  },\n  // ...\n}\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "shared"
									},
									{
										"type": "literal",
										"value": "worker"
									},
									{
										"type": "literal",
										"value": "server"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								27719,
								27720,
								27721,
								27722,
								27723,
								27724,
								27725,
								27726,
								27727,
								27729,
								27734,
								27741,
								27742,
								27743,
								27744,
								27745,
								27746,
								27747
							]
						}
					]
				},
				{
					"id": 27748,
					"name": "ConfigModule",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The configurations for your Medusa backend are in "
							},
							{
								"kind": "code",
								"text": "`medusa-config.js`"
							},
							{
								"kind": "text",
								"text": " located in the root of your Medusa project. The configurations include database, modules, and plugin configurations, among other configurations.\n\n"
							},
							{
								"kind": "code",
								"text": "`medusa-config.js`"
							},
							{
								"kind": "text",
								"text": " exports an object having the following properties:\n\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "projectConfig",
								"target": 27749,
								"tsLinkText": "projectConfig"
							},
							{
								"kind": "text",
								"text": ": (required): An object that holds general configurations related to the Medusa backend, such as database or CORS configurations.\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "plugins",
								"target": 27750,
								"tsLinkText": "plugins"
							},
							{
								"kind": "text",
								"text": ": An array of plugin configurations that defines what plugins are installed and optionally specifies each of their configurations.\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "modules",
								"target": 27754,
								"tsLinkText": "modules"
							},
							{
								"kind": "text",
								"text": ": An object that defines what modules are installed and optionally specifies each of their configurations.\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "featureFlags",
								"target": 27755,
								"tsLinkText": "featureFlags"
							},
							{
								"kind": "text",
								"text": ": An object that enables or disables features guarded by a feature flag.\n\nFor example:\n\n"
							},
							{
								"kind": "code",
								"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig,\n  plugins,\n  modules,\n  featureFlags,\n}\n```"
							},
							{
								"kind": "text",
								"text": "\n\n---\n\n## Environment Variables\n\nIt's highly recommended to store the values of configurations in environment variables, then reference them within "
							},
							{
								"kind": "code",
								"text": "`medusa-config.js`"
							},
							{
								"kind": "text",
								"text": ".\n\nDuring development, you can set your environment variables in the "
							},
							{
								"kind": "code",
								"text": "`.env`"
							},
							{
								"kind": "text",
								"text": " file at the root of your Medusa backend project. In production,\nsetting the environment variables depends on the hosting provider.\n\n---"
							}
						]
					},
					"children": [
						{
							"id": 27749,
							"name": "projectConfig",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This property holds essential configurations related to the Medusa backend, such as database and CORS configurations."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 27718,
								"name": "ProjectConfigOptions",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 27750,
							"name": "plugins",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "On your Medusa backend, you can use [Plugins](https://docs.medusajs.com/development/plugins/overview) to add custom features or integrate third-party services.\nFor example, installing a plugin to use Stripe as a payment processor.\n\nAside from installing the plugin with NPM, you need to pass the plugin you installed into the "
									},
									{
										"kind": "code",
										"text": "`plugins`"
									},
									{
										"kind": "text",
										"text": " array defined in "
									},
									{
										"kind": "code",
										"text": "`medusa-config.js`"
									},
									{
										"kind": "text",
										"text": ".\n\nThe items in the array can either be:\n\n- A string, which is the name of the plugin to add. You can pass a plugin as a string if it doesn’t require any configurations.\n- An object having the following properties:\n    - "
									},
									{
										"kind": "code",
										"text": "`resolve`"
									},
									{
										"kind": "text",
										"text": ": The name of the plugin.\n    - "
									},
									{
										"kind": "code",
										"text": "`options`"
									},
									{
										"kind": "text",
										"text": ": An object that includes the plugin’s options. These options vary for each plugin, and you should refer to the plugin’s documentation for available options."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  plugins: [\n    `medusa-my-plugin-1`,\n    {\n      resolve: `medusa-my-plugin`,\n      options: {\n        apiKey: process.env.MY_API_KEY ||\n          `test`,\n      },\n    },\n    // ...\n  ],\n  // ...\n}\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 27751,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 27752,
														"name": "resolve",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 27753,
														"name": "options",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "Record"
															},
															"typeArguments": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "intrinsic",
																	"name": "unknown"
																}
															],
															"name": "Record",
															"package": "typescript"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															27752,
															27753
														]
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 27754,
							"name": "modules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "In Medusa, commerce and core logic are modularized to allow developers to extend or replace certain [modules](https://docs.medusajs.com/development/modules/overview)\nwith custom implementations.\n\nAside from installing the module with NPM, you must add it to the exported object in "
									},
									{
										"kind": "code",
										"text": "`medusa-config.js`"
									},
									{
										"kind": "text",
										"text": ".\n\nThe keys of the "
									},
									{
										"kind": "code",
										"text": "`modules`"
									},
									{
										"kind": "text",
										"text": " configuration object refer to the type of module. Its value can be one of the following:\n\n1. A boolean value indicating whether the module type is enabled;\n2. Or a string value indicating the name of the module to be used for the module type. This can be used if the module does not require any options;\n3. Or an object having the following properties, but typically you would mainly use the "
									},
									{
										"kind": "code",
										"text": "`resolve`"
									},
									{
										"kind": "text",
										"text": " and "
									},
									{
										"kind": "code",
										"text": "`options`"
									},
									{
										"kind": "text",
										"text": " properties only:\n    1. "
									},
									{
										"kind": "code",
										"text": "`resolve`"
									},
									{
										"kind": "text",
										"text": ": a string indicating the name of the module.\n    2. "
									},
									{
										"kind": "code",
										"text": "`options`"
									},
									{
										"kind": "text",
										"text": ": an object indicating the options to pass to the module. These options vary for each module, and you should refer to the module’s documentation for details on them.\n    3. "
									},
									{
										"kind": "code",
										"text": "`resources`"
									},
									{
										"kind": "text",
										"text": ": a string indicating whether the module shares the dependency container with the Medusa core. Its value can either be "
									},
									{
										"kind": "code",
										"text": "`shared`"
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "code",
										"text": "`isolated`"
									},
									{
										"kind": "text",
										"text": ". Refer to the [Modules documentation](https://docs.medusajs.com/development/modules/create#module-scope) for more details.\n    4. "
									},
									{
										"kind": "code",
										"text": "`alias`"
									},
									{
										"kind": "text",
										"text": ": a string indicating a unique alias to register the module under. Other modules can’t use the same alias.\n    5. "
									},
									{
										"kind": "code",
										"text": "`main`"
									},
									{
										"kind": "text",
										"text": ": a boolean value indicating whether this module is the main registered module. This is useful when an alias is used."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  modules: {\n    eventBus: {\n      resolve: \"@medusajs/event-bus-local\",\n    },\n    cacheService: {\n      resolve: \"@medusajs/cache-redis\",\n      options: {\n        redisUrl: process.env.CACHE_REDIS_URL,\n        ttl: 30,\n      },\n    },\n    // ...\n  },\n  // ...\n}\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Partial"
												},
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "reference",
																"target": 28974,
																"name": "InternalModuleDeclaration",
																"package": "@medusajs/types"
															},
															{
																"type": "reference",
																"target": 28985,
																"name": "ExternalModuleDeclaration",
																"package": "@medusajs/types"
															}
														]
													}
												],
												"name": "Partial",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 27755,
							"name": "featureFlags",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Some features in the Medusa backend are guarded by a feature flag. This ensures constant shipping of new features while maintaining the engine’s stability.\n\nYou can specify whether a feature should or shouldn’t be used in your backend by enabling its feature flag. Feature flags can be enabled through either environment\nvariables or through this configuration exported in "
									},
									{
										"kind": "code",
										"text": "`medusa-config.js`"
									},
									{
										"kind": "text",
										"text": ".\n\nIf you want to use the environment variables method, learn more about it in the [Feature Flags documentation](https://docs.medusajs.com/development/feature-flags/toggle#method-one-using-environment-variables).\n\nThe "
									},
									{
										"kind": "code",
										"text": "`featureFlags`"
									},
									{
										"kind": "text",
										"text": " configuration is an object. Its properties are the names of the feature flags. Each property’s value is a boolean indicating whether the feature flag is enabled.\n\nYou can find available feature flags and their key name [here](https://github.com/medusajs/medusa/tree/master/packages/medusa/src/loaders/feature-flags)."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  featureFlags: {\n    product_categories: true,\n    // ...\n  },\n  // ...\n}\n```"
											},
											{
												"kind": "text",
												"text": "\n\n:::note\n\nAfter enabling a feature flag, make sure to [run migrations](https://docs.medusajs.com/development/entities/migrations/overview#migrate-command) as it may require making changes to the database.\n\n:::"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								27749,
								27750,
								27754,
								27755
							]
						}
					]
				},
				{
					"id": 27756,
					"name": "MedusaContainer",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Medusa Container extends [Awilix](https://github.com/jeffijoe/awilix) to \nprovide dependency injection functionalities."
							}
						]
					},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/awilix/lib/container.d.ts",
									"qualifiedName": "AwilixContainer"
								},
								"name": "AwilixContainer",
								"package": "awilix"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 27757,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						]
					}
				},
				{
					"id": 27767,
					"name": "ContainerLike",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 27768,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 27769,
									"name": "resolve",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"signatures": [
										{
											"id": 27770,
											"name": "resolve",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"typeParameter": [
												{
													"id": 27771,
													"name": "T",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"default": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											],
											"parameters": [
												{
													"id": 27772,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 27771,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"children": [
										27769
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						27581,
						27585,
						27592,
						27641,
						27647,
						27657,
						27658,
						27659,
						27664,
						27672,
						27677,
						27689,
						27701,
						27704,
						27713,
						27718,
						27748
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						27575,
						27652,
						27709,
						27711,
						27756,
						27767
					]
				}
			]
		},
		{
			"id": 27773,
			"name": "DAL",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 27951,
					"name": "EntityDateColumns",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "created_at"
							},
							{
								"type": "literal",
								"value": "updated_at"
							}
						]
					}
				},
				{
					"id": 27952,
					"name": "SoftDeletableEntityDateColumns",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "deleted_at"
							},
							{
								"type": "reference",
								"target": 27951,
								"name": "EntityDateColumns",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 27802,
					"name": "BaseFilterable",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 27803,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 27802,
											"typeArguments": [
												{
													"type": "reference",
													"target": 27805,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "BaseFilterable.T",
													"refersToTypeParameter": true
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 27805,
											"name": "T",
											"package": "@medusajs/types",
											"qualifiedName": "BaseFilterable.T",
											"refersToTypeParameter": true
										}
									]
								}
							}
						},
						{
							"id": 27804,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 27802,
											"typeArguments": [
												{
													"type": "reference",
													"target": 27805,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "BaseFilterable.T",
													"refersToTypeParameter": true
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 27805,
											"name": "T",
											"package": "@medusajs/types",
											"qualifiedName": "BaseFilterable.T",
											"refersToTypeParameter": true
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								27803,
								27804
							]
						}
					],
					"typeParameters": [
						{
							"id": 27805,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 28101,
							"name": "FilterableFulfillmentSetProps"
						},
						{
							"type": "reference",
							"target": 28117,
							"name": "FilterableShippingProfileProps"
						},
						{
							"type": "reference",
							"target": 28136,
							"name": "FilterableShippingOptionRuleProps"
						},
						{
							"type": "reference",
							"target": 28163,
							"name": "FilterableShippingOptionProps"
						},
						{
							"type": "reference",
							"target": 28202,
							"name": "FilterableShippingOptionTypeProps"
						},
						{
							"type": "reference",
							"target": 28219,
							"name": "FilterableServiceZoneProps"
						},
						{
							"type": "reference",
							"target": 28239,
							"name": "FilterableGeoZoneProps"
						},
						{
							"type": "reference",
							"target": 28274,
							"name": "FilterableFulfillmentProps"
						},
						{
							"type": "reference",
							"target": 29496,
							"name": "FilterableOrderProps"
						},
						{
							"type": "reference",
							"target": 29505,
							"name": "FilterableOrderAddressProps"
						},
						{
							"type": "reference",
							"target": 29509,
							"name": "FilterableOrderLineItemProps"
						},
						{
							"type": "reference",
							"target": 29517,
							"name": "FilterableOrderLineItemAdjustmentProps"
						},
						{
							"type": "reference",
							"target": 29525,
							"name": "FilterableOrderShippingMethodProps"
						},
						{
							"type": "reference",
							"target": 29532,
							"name": "FilterableOrderShippingMethodAdjustmentProps"
						},
						{
							"type": "reference",
							"target": 29540,
							"name": "FilterableOrderLineItemTaxLineProps"
						},
						{
							"type": "reference",
							"target": 29550,
							"name": "FilterableOrderShippingMethodTaxLineProps"
						},
						{
							"type": "reference",
							"target": 29560,
							"name": "FilterableOrderChangeProps"
						},
						{
							"type": "reference",
							"target": 29570,
							"name": "FilterableOrderChangeActionProps"
						},
						{
							"type": "reference",
							"target": 29577,
							"name": "FilterableOrderTransactionProps"
						}
					]
				},
				{
					"id": 27806,
					"name": "OptionsQuery",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The options to apply when retrieving an item."
							}
						]
					},
					"children": [
						{
							"id": 27807,
							"name": "populate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Relations to populate in the retrieved items."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 27808,
							"name": "orderBy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Fields to sort-order items by."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 30562,
										"typeArguments": [
											{
												"type": "reference",
												"target": 27814,
												"name": "T",
												"package": "@medusajs/types",
												"qualifiedName": "OptionsQuery.T",
												"refersToTypeParameter": true
											}
										],
										"name": "Order",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 30562,
											"typeArguments": [
												{
													"type": "reference",
													"target": 27814,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "OptionsQuery.T",
													"refersToTypeParameter": true
												}
											],
											"name": "Order",
											"package": "@medusajs/types"
										}
									}
								]
							}
						},
						{
							"id": 27809,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Limit the number of items retrieved in the list."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 27810,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of items to skip before the retrieved items in the list."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 27811,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The fields to include in each of the items."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 27812,
							"name": "groupBy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Group results by a field or set of fields."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 27813,
							"name": "filters",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filters to apply on the retrieved items."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 30564,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "reference",
														"target": 30564,
														"name": "Dictionary",
														"package": "@medusajs/types"
													}
												]
											}
										],
										"name": "Dictionary",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								27807,
								27808,
								27809,
								27810,
								27811,
								27812,
								27813
							]
						}
					],
					"typeParameters": [
						{
							"id": 27814,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 27815,
							"name": "P",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"default": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					]
				},
				{
					"id": 27816,
					"name": "FindOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to specify filters and options on a list of items."
							}
						]
					},
					"children": [
						{
							"id": 27817,
							"name": "where",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filters to apply on the items."
									}
								]
							},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "mapped",
										"parameter": "Key",
										"parameterType": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "intrinsic",
													"name": "number"
												},
												{
													"type": "intrinsic",
													"name": "symbol"
												}
											]
										},
										"templateType": {
											"type": "conditional",
											"checkType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../packages/types/src/dal/utils.ts",
														"qualifiedName": "Key"
													},
													"name": "Key",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 27825,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											},
											"extendsType": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "intrinsic",
														"name": "bigint"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Date"
														},
														"name": "Date",
														"package": "typescript"
													}
												]
											},
											"trueType": {
												"type": "union",
												"types": [
													{
														"type": "indexedAccess",
														"indexType": {
															"type": "intrinsic",
															"name": "any"
														},
														"objectType": {
															"type": "intrinsic",
															"name": "any"
														}
													},
													{
														"type": "reference",
														"target": 27780,
														"typeArguments": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "intrinsic",
																	"name": "any"
																},
																"objectType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														],
														"name": "OperatorMap",
														"package": "@medusajs/types"
													}
												]
											},
											"falseType": {
												"type": "conditional",
												"checkType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/types/src/dal/utils.ts",
															"qualifiedName": "Key"
														},
														"name": "Key",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													"objectType": {
														"type": "reference",
														"target": 27825,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												},
												"extendsType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../packages/types/src/dal/utils.ts",
														"qualifiedName": "U"
													},
													"name": "U",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"trueType": {
													"type": "conditional",
													"checkType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/types/src/dal/utils.ts",
															"qualifiedName": "U"
														},
														"name": "U",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													"extendsType": {
														"type": "reflection",
														"declaration": {
															"id": 27818,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"indexSignature": {
																"id": 27819,
																"name": "__index",
																"variant": "signature",
																"kind": 8192,
																"flags": {},
																"parameters": [
																	{
																		"id": 27820,
																		"name": "x",
																		"variant": "param",
																		"kind": 32768,
																		"flags": {},
																		"type": {
																			"type": "intrinsic",
																			"name": "number"
																		}
																	}
																],
																"type": {
																	"type": "inferred",
																	"name": "V"
																}
															}
														}
													},
													"trueType": {
														"type": "conditional",
														"checkType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																"qualifiedName": "V"
															},
															"name": "V",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														"extendsType": {
															"type": "intrinsic",
															"name": "object"
														},
														"trueType": {
															"type": "mapped",
															"parameter": "Key",
															"parameterType": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	},
																	{
																		"type": "intrinsic",
																		"name": "symbol"
																	}
																]
															},
															"templateType": {
																"type": "conditional",
																"checkType": {
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "unknown",
																		"name": "..."
																	},
																	"objectType": {
																		"type": "unknown",
																		"name": "..."
																	}
																},
																"extendsType": {
																	"type": "union",
																	"types": [
																		{
																			"type": "unknown",
																			"name": "..."
																		},
																		{
																			"type": "unknown",
																			"name": "..."
																		},
																		{
																			"type": "unknown",
																			"name": "..."
																		},
																		{
																			"type": "unknown",
																			"name": "..."
																		},
																		{
																			"type": "unknown",
																			"name": "..."
																		},
																		{
																			"type": "unknown",
																			"name": "..."
																		},
																		{
																			"type": "unknown",
																			"name": "..."
																		}
																	]
																},
																"trueType": {
																	"type": "union",
																	"types": [
																		{
																			"type": "unknown",
																			"name": "..."
																		},
																		{
																			"type": "unknown",
																			"name": "..."
																		}
																	]
																},
																"falseType": {
																	"type": "conditional",
																	"checkType": {
																		"type": "unknown",
																		"name": "..."
																	},
																	"extendsType": {
																		"type": "unknown",
																		"name": "..."
																	},
																	"trueType": {
																		"type": "unknown",
																		"name": "..."
																	},
																	"falseType": {
																		"type": "unknown",
																		"name": "..."
																	}
																}
															},
															"optionalModifier": "+"
														},
														"falseType": {
															"type": "intrinsic",
															"name": "never"
														}
													},
													"falseType": {
														"type": "intrinsic",
														"name": "never"
													}
												},
												"falseType": {
													"type": "intrinsic",
													"name": "never"
												}
											}
										},
										"optionalModifier": "+"
									},
									{
										"type": "reference",
										"target": 27802,
										"typeArguments": [
											{
												"type": "mapped",
												"parameter": "Key",
												"parameterType": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "number"
														},
														{
															"type": "intrinsic",
															"name": "symbol"
														}
													]
												},
												"templateType": {
													"type": "conditional",
													"checkType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																"qualifiedName": "Key"
															},
															"name": "Key",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": 27825,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													},
													"extendsType": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "intrinsic",
																"name": "bigint"
															},
															{
																"type": "intrinsic",
																"name": "boolean"
															},
															{
																"type": "intrinsic",
																"name": "symbol"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Date"
																},
																"name": "Date",
																"package": "typescript"
															}
														]
													},
													"trueType": {
														"type": "union",
														"types": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "intrinsic",
																	"name": "any"
																},
																"objectType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															},
															{
																"type": "reference",
																"target": 27780,
																"typeArguments": [
																	{
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "intrinsic",
																			"name": "any"
																		},
																		"objectType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																],
																"name": "OperatorMap",
																"package": "@medusajs/types"
															}
														]
													},
													"falseType": {
														"type": "conditional",
														"checkType": {
															"type": "indexedAccess",
															"indexType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																	"qualifiedName": "Key"
																},
																"name": "Key",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															"objectType": {
																"type": "reference",
																"target": 27825,
																"name": "T",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														},
														"extendsType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																"qualifiedName": "U"
															},
															"name": "U",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														"trueType": {
															"type": "conditional",
															"checkType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																	"qualifiedName": "U"
																},
																"name": "U",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															"extendsType": {
																"type": "reflection",
																"declaration": {
																	"id": 27821,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"indexSignature": {
																		"id": 27822,
																		"name": "__index",
																		"variant": "signature",
																		"kind": 8192,
																		"flags": {},
																		"parameters": [
																			{
																				"id": 27823,
																				"name": "x",
																				"variant": "param",
																				"kind": 32768,
																				"flags": {},
																				"type": {
																					"type": "intrinsic",
																					"name": "number"
																				}
																			}
																		],
																		"type": {
																			"type": "inferred",
																			"name": "V"
																		}
																	}
																}
															},
															"trueType": {
																"type": "conditional",
																"checkType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																		"qualifiedName": "V"
																	},
																	"name": "V",
																	"package": "@medusajs/types",
																	"refersToTypeParameter": true
																},
																"extendsType": {
																	"type": "intrinsic",
																	"name": "object"
																},
																"trueType": {
																	"type": "mapped",
																	"parameter": "Key",
																	"parameterType": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			},
																			{
																				"type": "intrinsic",
																				"name": "symbol"
																			}
																		]
																	},
																	"templateType": {
																		"type": "conditional",
																		"checkType": {
																			"type": "unknown",
																			"name": "..."
																		},
																		"extendsType": {
																			"type": "unknown",
																			"name": "..."
																		},
																		"trueType": {
																			"type": "unknown",
																			"name": "..."
																		},
																		"falseType": {
																			"type": "unknown",
																			"name": "..."
																		}
																	},
																	"optionalModifier": "+"
																},
																"falseType": {
																	"type": "intrinsic",
																	"name": "never"
																}
															},
															"falseType": {
																"type": "intrinsic",
																"name": "never"
															}
														},
														"falseType": {
															"type": "intrinsic",
															"name": "never"
														}
													}
												},
												"optionalModifier": "+"
											}
										],
										"name": "BaseFilterable",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 27824,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The options to apply when retrieving the items."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 27806,
								"typeArguments": [
									{
										"type": "reference",
										"target": 27825,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "OptionsQuery",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								27817,
								27824
							]
						}
					],
					"typeParameters": [
						{
							"id": 27825,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 27826,
					"name": "UpsertWithReplaceConfig",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to specify the configuration of how the upsert should be performed."
							}
						]
					},
					"children": [
						{
							"id": 27827,
							"name": "relations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The relationships that will be updated/created/deleted as part of the upsert"
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": 27828,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								27827
							]
						}
					],
					"typeParameters": [
						{
							"id": 27828,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					]
				},
				{
					"id": 27829,
					"name": "RepositoryService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Data access layer (DAL) interface to implements for any repository service.\nThis layer helps to separate the business logic (service layer) from accessing the\nORM directly and allows to switch to another ORM without changing the business logic."
							}
						]
					},
					"children": [
						{
							"id": 27878,
							"name": "transaction",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 27879,
									"name": "transaction",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 27880,
											"name": "TManager",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"parameters": [
										{
											"id": 27881,
											"name": "task",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 27882,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"signatures": [
														{
															"id": 27883,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"parameters": [
																{
																	"id": 27884,
																	"name": "transactionManager",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 27880,
																		"name": "TManager",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										},
										{
											"id": 27885,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 27886,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 27887,
															"name": "isolationLevel",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 27888,
															"name": "transaction",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": 27880,
																"name": "TManager",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														},
														{
															"id": 27889,
															"name": "enableNestedTransactions",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																27887,
																27888,
																27889
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 30571,
										"name": "BaseRepositoryService.transaction"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 30570,
								"name": "BaseRepositoryService.transaction"
							}
						},
						{
							"id": 27890,
							"name": "getFreshManager",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 27891,
									"name": "getFreshManager",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 27892,
											"name": "TManager",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 27892,
										"name": "TManager",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 30583,
										"name": "BaseRepositoryService.getFreshManager"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 30582,
								"name": "BaseRepositoryService.getFreshManager"
							}
						},
						{
							"id": 27893,
							"name": "getActiveManager",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 27894,
									"name": "getActiveManager",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 27895,
											"name": "TManager",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 27895,
										"name": "TManager",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 30586,
										"name": "BaseRepositoryService.getActiveManager"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 30585,
								"name": "BaseRepositoryService.getActiveManager"
							}
						},
						{
							"id": 27896,
							"name": "serialize",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 27897,
									"name": "serialize",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 27898,
											"name": "TOutput",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "object"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "object"
														}
													}
												]
											}
										}
									],
									"parameters": [
										{
											"id": 27899,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 27900,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 27898,
												"name": "TOutput",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 30589,
										"name": "BaseRepositoryService.serialize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 30588,
								"name": "BaseRepositoryService.serialize"
							}
						},
						{
							"id": 27830,
							"name": "find",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 27831,
									"name": "find",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 27832,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 27816,
												"typeArguments": [
													{
														"type": "reference",
														"target": 27901,
														"name": "T",
														"package": "@medusajs/types",
														"qualifiedName": "RepositoryService.T",
														"refersToTypeParameter": true
													}
												],
												"name": "FindOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 27833,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 27901,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "RepositoryService.T",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 27834,
							"name": "findAndCount",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 27835,
									"name": "findAndCount",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 27836,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 27816,
												"typeArguments": [
													{
														"type": "reference",
														"target": 27901,
														"name": "T",
														"package": "@medusajs/types",
														"qualifiedName": "RepositoryService.T",
														"refersToTypeParameter": true
													}
												],
												"name": "FindOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 27837,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 27901,
															"name": "T",
															"package": "@medusajs/types",
															"qualifiedName": "RepositoryService.T",
															"refersToTypeParameter": true
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 27838,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 27839,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 27840,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 27841,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 27901,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "RepositoryService.T",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 27842,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 27843,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 27844,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 27845,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 27846,
																"name": "entity",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "any"
																}
															},
															{
																"id": 27847,
																"name": "update",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	27846,
																	27847
																]
															}
														]
													}
												}
											}
										},
										{
											"id": 27848,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 27901,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "RepositoryService.T",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 27849,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 27850,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 27851,
											"name": "idsOrPKs",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "mapped",
														"parameter": "Key",
														"parameterType": {
															"type": "union",
															"types": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "intrinsic",
																	"name": "number"
																},
																{
																	"type": "intrinsic",
																	"name": "symbol"
																}
															]
														},
														"templateType": {
															"type": "conditional",
															"checkType": {
																"type": "indexedAccess",
																"indexType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																		"qualifiedName": "Key"
																	},
																	"name": "Key",
																	"package": "@medusajs/types",
																	"refersToTypeParameter": true
																},
																"objectType": {
																	"type": "reference",
																	"target": 27901,
																	"name": "T",
																	"package": "@medusajs/types",
																	"qualifiedName": "RepositoryService.T",
																	"refersToTypeParameter": true
																}
															},
															"extendsType": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	},
																	{
																		"type": "intrinsic",
																		"name": "bigint"
																	},
																	{
																		"type": "intrinsic",
																		"name": "boolean"
																	},
																	{
																		"type": "intrinsic",
																		"name": "symbol"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Date"
																		},
																		"name": "Date",
																		"package": "typescript"
																	}
																]
															},
															"trueType": {
																"type": "union",
																"types": [
																	{
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "intrinsic",
																			"name": "any"
																		},
																		"objectType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	},
																	{
																		"type": "reference",
																		"target": 27780,
																		"typeArguments": [
																			{
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "intrinsic",
																					"name": "any"
																				},
																				"objectType": {
																					"type": "intrinsic",
																					"name": "any"
																				}
																			}
																		],
																		"name": "OperatorMap",
																		"package": "@medusajs/types"
																	}
																]
															},
															"falseType": {
																"type": "conditional",
																"checkType": {
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																			"qualifiedName": "Key"
																		},
																		"name": "Key",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	},
																	"objectType": {
																		"type": "reference",
																		"target": 27901,
																		"name": "T",
																		"package": "@medusajs/types",
																		"qualifiedName": "RepositoryService.T",
																		"refersToTypeParameter": true
																	}
																},
																"extendsType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																		"qualifiedName": "U"
																	},
																	"name": "U",
																	"package": "@medusajs/types",
																	"refersToTypeParameter": true
																},
																"trueType": {
																	"type": "conditional",
																	"checkType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																			"qualifiedName": "U"
																		},
																		"name": "U",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	},
																	"extendsType": {
																		"type": "reflection",
																		"declaration": {
																			"id": 27852,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"indexSignature": {
																				"id": 27853,
																				"name": "__index",
																				"variant": "signature",
																				"kind": 8192,
																				"flags": {},
																				"parameters": [
																					{
																						"id": 27854,
																						"name": "x",
																						"variant": "param",
																						"kind": 32768,
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "number"
																						}
																					}
																				],
																				"type": {
																					"type": "inferred",
																					"name": "V"
																				}
																			}
																		}
																	},
																	"trueType": {
																		"type": "conditional",
																		"checkType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																				"qualifiedName": "V"
																			},
																			"name": "V",
																			"package": "@medusajs/types",
																			"refersToTypeParameter": true
																		},
																		"extendsType": {
																			"type": "intrinsic",
																			"name": "object"
																		},
																		"trueType": {
																			"type": "mapped",
																			"parameter": "Key",
																			"parameterType": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "string"
																					},
																					{
																						"type": "intrinsic",
																						"name": "number"
																					},
																					{
																						"type": "intrinsic",
																						"name": "symbol"
																					}
																				]
																			},
																			"templateType": {
																				"type": "conditional",
																				"checkType": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "unknown",
																						"name": "..."
																					},
																					"objectType": {
																						"type": "unknown",
																						"name": "..."
																					}
																				},
																				"extendsType": {
																					"type": "union",
																					"types": [
																						{
																							"type": "unknown",
																							"name": "..."
																						},
																						{
																							"type": "unknown",
																							"name": "..."
																						},
																						{
																							"type": "unknown",
																							"name": "..."
																						},
																						{
																							"type": "unknown",
																							"name": "..."
																						},
																						{
																							"type": "unknown",
																							"name": "..."
																						},
																						{
																							"type": "unknown",
																							"name": "..."
																						},
																						{
																							"type": "unknown",
																							"name": "..."
																						}
																					]
																				},
																				"trueType": {
																					"type": "union",
																					"types": [
																						{
																							"type": "unknown",
																							"name": "..."
																						},
																						{
																							"type": "unknown",
																							"name": "..."
																						}
																					]
																				},
																				"falseType": {
																					"type": "conditional",
																					"checkType": {
																						"type": "unknown",
																						"name": "..."
																					},
																					"extendsType": {
																						"type": "unknown",
																						"name": "..."
																					},
																					"trueType": {
																						"type": "unknown",
																						"name": "..."
																					},
																					"falseType": {
																						"type": "unknown",
																						"name": "..."
																					}
																				}
																			},
																			"optionalModifier": "+"
																		},
																		"falseType": {
																			"type": "intrinsic",
																			"name": "never"
																		}
																	},
																	"falseType": {
																		"type": "intrinsic",
																		"name": "never"
																	}
																},
																"falseType": {
																	"type": "intrinsic",
																	"name": "never"
																}
															}
														},
														"optionalModifier": "+"
													},
													{
														"type": "reference",
														"target": 27802,
														"typeArguments": [
															{
																"type": "mapped",
																"parameter": "Key",
																"parameterType": {
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "intrinsic",
																			"name": "number"
																		},
																		{
																			"type": "intrinsic",
																			"name": "symbol"
																		}
																	]
																},
																"templateType": {
																	"type": "conditional",
																	"checkType": {
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																				"qualifiedName": "Key"
																			},
																			"name": "Key",
																			"package": "@medusajs/types",
																			"refersToTypeParameter": true
																		},
																		"objectType": {
																			"type": "reference",
																			"target": 27901,
																			"name": "T",
																			"package": "@medusajs/types",
																			"qualifiedName": "RepositoryService.T",
																			"refersToTypeParameter": true
																		}
																	},
																	"extendsType": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			},
																			{
																				"type": "intrinsic",
																				"name": "bigint"
																			},
																			{
																				"type": "intrinsic",
																				"name": "boolean"
																			},
																			{
																				"type": "intrinsic",
																				"name": "symbol"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																					"qualifiedName": "Date"
																				},
																				"name": "Date",
																				"package": "typescript"
																			}
																		]
																	},
																	"trueType": {
																		"type": "union",
																		"types": [
																			{
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "intrinsic",
																					"name": "any"
																				},
																				"objectType": {
																					"type": "intrinsic",
																					"name": "any"
																				}
																			},
																			{
																				"type": "reference",
																				"target": 27780,
																				"typeArguments": [
																					{
																						"type": "indexedAccess",
																						"indexType": {
																							"type": "intrinsic",
																							"name": "any"
																						},
																						"objectType": {
																							"type": "intrinsic",
																							"name": "any"
																						}
																					}
																				],
																				"name": "OperatorMap",
																				"package": "@medusajs/types"
																			}
																		]
																	},
																	"falseType": {
																		"type": "conditional",
																		"checkType": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																					"qualifiedName": "Key"
																				},
																				"name": "Key",
																				"package": "@medusajs/types",
																				"refersToTypeParameter": true
																			},
																			"objectType": {
																				"type": "reference",
																				"target": 27901,
																				"name": "T",
																				"package": "@medusajs/types",
																				"qualifiedName": "RepositoryService.T",
																				"refersToTypeParameter": true
																			}
																		},
																		"extendsType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																				"qualifiedName": "U"
																			},
																			"name": "U",
																			"package": "@medusajs/types",
																			"refersToTypeParameter": true
																		},
																		"trueType": {
																			"type": "conditional",
																			"checkType": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																					"qualifiedName": "U"
																				},
																				"name": "U",
																				"package": "@medusajs/types",
																				"refersToTypeParameter": true
																			},
																			"extendsType": {
																				"type": "reflection",
																				"declaration": {
																					"id": 27855,
																					"name": "__type",
																					"variant": "declaration",
																					"kind": 65536,
																					"flags": {},
																					"indexSignature": {
																						"id": 27856,
																						"name": "__index",
																						"variant": "signature",
																						"kind": 8192,
																						"flags": {},
																						"parameters": [
																							{
																								"id": 27857,
																								"name": "x",
																								"variant": "param",
																								"kind": 32768,
																								"flags": {},
																								"type": {
																									"type": "intrinsic",
																									"name": "number"
																								}
																							}
																						],
																						"type": {
																							"type": "inferred",
																							"name": "V"
																						}
																					}
																				}
																			},
																			"trueType": {
																				"type": "conditional",
																				"checkType": {
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																						"qualifiedName": "V"
																					},
																					"name": "V",
																					"package": "@medusajs/types",
																					"refersToTypeParameter": true
																				},
																				"extendsType": {
																					"type": "intrinsic",
																					"name": "object"
																				},
																				"trueType": {
																					"type": "mapped",
																					"parameter": "Key",
																					"parameterType": {
																						"type": "union",
																						"types": [
																							{
																								"type": "intrinsic",
																								"name": "string"
																							},
																							{
																								"type": "intrinsic",
																								"name": "number"
																							},
																							{
																								"type": "intrinsic",
																								"name": "symbol"
																							}
																						]
																					},
																					"templateType": {
																						"type": "conditional",
																						"checkType": {
																							"type": "unknown",
																							"name": "..."
																						},
																						"extendsType": {
																							"type": "unknown",
																							"name": "..."
																						},
																						"trueType": {
																							"type": "unknown",
																							"name": "..."
																						},
																						"falseType": {
																							"type": "unknown",
																							"name": "..."
																						}
																					},
																					"optionalModifier": "+"
																				},
																				"falseType": {
																					"type": "intrinsic",
																					"name": "never"
																				}
																			},
																			"falseType": {
																				"type": "intrinsic",
																				"name": "never"
																			}
																		},
																		"falseType": {
																			"type": "intrinsic",
																			"name": "never"
																		}
																	}
																},
																"optionalModifier": "+"
															}
														],
														"name": "BaseFilterable",
														"package": "@medusajs/types"
													}
												]
											}
										},
										{
											"id": 27858,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 27859,
							"name": "softDelete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 27860,
									"name": "softDelete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Soft delete entities and cascade to related entities if configured."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "[T[], Record<string, string[]>] the second value being the map of the entity names and ids that were soft deleted"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 27861,
											"name": "idsOrFilter",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 27862,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {}
														}
													}
												]
											}
										},
										{
											"id": 27863,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 27901,
															"name": "T",
															"package": "@medusajs/types",
															"qualifiedName": "RepositoryService.T",
															"refersToTypeParameter": true
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "unknown"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 27864,
							"name": "restore",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 27865,
									"name": "restore",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 27866,
											"name": "idsOrFilter",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 27867,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {}
														}
													}
												]
											}
										},
										{
											"id": 27868,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 27901,
															"name": "T",
															"package": "@medusajs/types",
															"qualifiedName": "RepositoryService.T",
															"refersToTypeParameter": true
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "unknown"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 27869,
							"name": "upsert",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 27870,
									"name": "upsert",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 27871,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 27872,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 27901,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "RepositoryService.T",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 27873,
							"name": "upsertWithReplace",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 27874,
									"name": "upsertWithReplace",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 27875,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 27876,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 27826,
												"typeArguments": [
													{
														"type": "reference",
														"target": 27901,
														"name": "T",
														"package": "@medusajs/types",
														"qualifiedName": "RepositoryService.T",
														"refersToTypeParameter": true
													}
												],
												"name": "UpsertWithReplaceConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 27877,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 27901,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "RepositoryService.T",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								27878,
								27890,
								27893,
								27896,
								27830,
								27834,
								27838,
								27842,
								27849,
								27859,
								27864,
								27869,
								27873
							]
						}
					],
					"typeParameters": [
						{
							"id": 27901,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 30569,
							"typeArguments": [
								{
									"type": "reference",
									"target": 27901,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "RepositoryService.T",
									"refersToTypeParameter": true
								}
							],
							"name": "BaseRepositoryService",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 27902,
					"name": "TreeRepositoryService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Data access layer (DAL) interface to implements for any repository service.\nThis layer helps to separate the business logic (service layer) from accessing the\nORM directly and allows to switch to another ORM without changing the business logic."
							}
						]
					},
					"children": [
						{
							"id": 27921,
							"name": "transaction",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 27922,
									"name": "transaction",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 27923,
											"name": "TManager",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"parameters": [
										{
											"id": 27924,
											"name": "task",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 27925,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"signatures": [
														{
															"id": 27926,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"parameters": [
																{
																	"id": 27927,
																	"name": "transactionManager",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 27880,
																		"name": "TManager",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										},
										{
											"id": 27928,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 27929,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 27930,
															"name": "isolationLevel",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 27931,
															"name": "transaction",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": 27880,
																"name": "TManager",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														},
														{
															"id": 27932,
															"name": "enableNestedTransactions",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																27930,
																27931,
																27932
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 30571,
										"name": "BaseRepositoryService.transaction"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 30570,
								"name": "BaseRepositoryService.transaction"
							}
						},
						{
							"id": 27933,
							"name": "getFreshManager",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 27934,
									"name": "getFreshManager",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 27935,
											"name": "TManager",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 27892,
										"name": "TManager",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 30583,
										"name": "BaseRepositoryService.getFreshManager"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 30582,
								"name": "BaseRepositoryService.getFreshManager"
							}
						},
						{
							"id": 27936,
							"name": "getActiveManager",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 27937,
									"name": "getActiveManager",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 27938,
											"name": "TManager",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 27895,
										"name": "TManager",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 30586,
										"name": "BaseRepositoryService.getActiveManager"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 30585,
								"name": "BaseRepositoryService.getActiveManager"
							}
						},
						{
							"id": 27939,
							"name": "serialize",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 27940,
									"name": "serialize",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 27941,
											"name": "TOutput",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "object"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "object"
														}
													}
												]
											}
										}
									],
									"parameters": [
										{
											"id": 27942,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 27943,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 27898,
												"name": "TOutput",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 30589,
										"name": "BaseRepositoryService.serialize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 30588,
								"name": "BaseRepositoryService.serialize"
							}
						},
						{
							"id": 27903,
							"name": "find",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 27904,
									"name": "find",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 27905,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 27816,
												"typeArguments": [
													{
														"type": "reference",
														"target": 27944,
														"name": "T",
														"package": "@medusajs/types",
														"qualifiedName": "TreeRepositoryService.T",
														"refersToTypeParameter": true
													}
												],
												"name": "FindOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 27906,
											"name": "transformOptions",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 27658,
												"name": "RepositoryTransformOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 27907,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 27944,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "TreeRepositoryService.T",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 27908,
							"name": "findAndCount",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 27909,
									"name": "findAndCount",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 27910,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 27816,
												"typeArguments": [
													{
														"type": "reference",
														"target": 27944,
														"name": "T",
														"package": "@medusajs/types",
														"qualifiedName": "TreeRepositoryService.T",
														"refersToTypeParameter": true
													}
												],
												"name": "FindOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 27911,
											"name": "transformOptions",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 27658,
												"name": "RepositoryTransformOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 27912,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 27944,
															"name": "T",
															"package": "@medusajs/types",
															"qualifiedName": "TreeRepositoryService.T",
															"refersToTypeParameter": true
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 27913,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 27914,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 27915,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										},
										{
											"id": 27916,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 27944,
												"name": "T",
												"package": "@medusajs/types",
												"qualifiedName": "TreeRepositoryService.T",
												"refersToTypeParameter": true
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 27917,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 27918,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 27919,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 27920,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								27921,
								27933,
								27936,
								27939,
								27903,
								27908,
								27913,
								27917
							]
						}
					],
					"typeParameters": [
						{
							"id": 27944,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 30569,
							"typeArguments": [
								{
									"type": "reference",
									"target": 27944,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "TreeRepositoryService.T",
									"refersToTypeParameter": true
								}
							],
							"name": "BaseRepositoryService",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 27945,
					"name": "SoftDeleteReturn",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
							}
						]
					},
					"children": [
						{
							"id": 27946,
							"name": "returnLinkableKeys",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of strings, each being the ID attribute names of the entity's relations."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 27947,
									"name": "TReturnableLinkableKeys",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								27946
							]
						}
					],
					"typeParameters": [
						{
							"id": 27947,
							"name": "TReturnableLinkableKeys",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 27948,
					"name": "RestoreReturn",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object that is used to specify an entity's related entities that should be restored when the main entity is restored."
							}
						]
					},
					"children": [
						{
							"id": 27949,
							"name": "returnLinkableKeys",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of strings, each being the ID attribute names of the entity's relations."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 27950,
									"name": "TReturnableLinkableKeys",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								27949
							]
						}
					],
					"typeParameters": [
						{
							"id": 27950,
							"name": "TReturnableLinkableKeys",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 27780,
					"name": "OperatorMap",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 27801,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 27781,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 27782,
									"name": "$and",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 30558,
											"typeArguments": [
												{
													"type": "reference",
													"target": 27801,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "Query",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 27783,
									"name": "$or",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 30558,
											"typeArguments": [
												{
													"type": "reference",
													"target": 27801,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "Query",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 27784,
									"name": "$eq",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 30560,
												"typeArguments": [
													{
														"type": "reference",
														"target": 27801,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "ExpandScalar",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 30560,
													"typeArguments": [
														{
															"type": "reference",
															"target": 27801,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													],
													"name": "ExpandScalar",
													"package": "@medusajs/types"
												}
											}
										]
									}
								},
								{
									"id": 27785,
									"name": "$ne",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 30560,
										"typeArguments": [
											{
												"type": "reference",
												"target": 27801,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "ExpandScalar",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 27786,
									"name": "$in",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 30560,
											"typeArguments": [
												{
													"type": "reference",
													"target": 27801,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "ExpandScalar",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 27787,
									"name": "$nin",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 30560,
											"typeArguments": [
												{
													"type": "reference",
													"target": 27801,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "ExpandScalar",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 27788,
									"name": "$not",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 30558,
										"typeArguments": [
											{
												"type": "reference",
												"target": 27801,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "Query",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 27789,
									"name": "$gt",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 30560,
										"typeArguments": [
											{
												"type": "reference",
												"target": 27801,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "ExpandScalar",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 27790,
									"name": "$gte",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 30560,
										"typeArguments": [
											{
												"type": "reference",
												"target": 27801,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "ExpandScalar",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 27791,
									"name": "$lt",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 30560,
										"typeArguments": [
											{
												"type": "reference",
												"target": 27801,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "ExpandScalar",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 27792,
									"name": "$lte",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 30560,
										"typeArguments": [
											{
												"type": "reference",
												"target": 27801,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "ExpandScalar",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 27793,
									"name": "$like",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 27794,
									"name": "$re",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 27795,
									"name": "$ilike",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 27796,
									"name": "$fulltext",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 27797,
									"name": "$overlap",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 27798,
									"name": "$contains",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 27799,
									"name": "$contained",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 27800,
									"name": "$exists",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										27782,
										27783,
										27784,
										27785,
										27786,
										27787,
										27788,
										27789,
										27790,
										27791,
										27792,
										27793,
										27794,
										27795,
										27796,
										27797,
										27798,
										27799,
										27800
									]
								}
							]
						}
					}
				},
				{
					"id": 27774,
					"name": "FilterQuery",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 27778,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 27779,
							"name": "Prev",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"default": {
								"type": "literal",
								"value": 3
							}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 27779,
							"name": "Prev",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "intrinsic",
							"name": "never"
						},
						"trueType": {
							"type": "intrinsic",
							"name": "never"
						},
						"falseType": {
							"type": "mapped",
							"parameter": "Key",
							"parameterType": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "reference",
									"target": 27778,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							},
							"templateType": {
								"type": "conditional",
								"checkType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/types/src/dal/utils.ts",
											"qualifiedName": "Key"
										},
										"name": "Key",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"objectType": {
										"type": "reference",
										"target": 27778,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								"extendsType": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "boolean"
										},
										{
											"type": "intrinsic",
											"name": "number"
										},
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "bigint"
										},
										{
											"type": "intrinsic",
											"name": "symbol"
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Date"
											},
											"name": "Date",
											"package": "typescript"
										}
									]
								},
								"trueType": {
									"type": "union",
									"types": [
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/types/src/dal/utils.ts",
													"qualifiedName": "Key"
												},
												"name": "Key",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 27778,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										},
										{
											"type": "reference",
											"target": 27780,
											"typeArguments": [
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/types/src/dal/utils.ts",
															"qualifiedName": "Key"
														},
														"name": "Key",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													"objectType": {
														"type": "reference",
														"target": 27778,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												}
											],
											"name": "OperatorMap",
											"package": "@medusajs/types"
										}
									]
								},
								"falseType": {
									"type": "conditional",
									"checkType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/types/src/dal/utils.ts",
												"qualifiedName": "Key"
											},
											"name": "Key",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": 27778,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									},
									"extendsType": {
										"type": "inferred",
										"name": "U"
									},
									"trueType": {
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/types/src/dal/utils.ts",
												"qualifiedName": "U"
											},
											"name": "U",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"extendsType": {
											"type": "reflection",
											"declaration": {
												"id": 27775,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"indexSignature": {
													"id": 27776,
													"name": "__index",
													"variant": "signature",
													"kind": 8192,
													"flags": {},
													"parameters": [
														{
															"id": 27777,
															"name": "x",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "inferred",
														"name": "V"
													}
												}
											}
										},
										"trueType": {
											"type": "conditional",
											"checkType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/types/src/dal/utils.ts",
													"qualifiedName": "V"
												},
												"name": "V",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											"extendsType": {
												"type": "intrinsic",
												"name": "object"
											},
											"trueType": {
												"type": "reference",
												"target": 27774,
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Partial"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/types/src/dal/utils.ts",
																	"qualifiedName": "V"
																},
																"name": "V",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														],
														"name": "Partial",
														"package": "typescript"
													},
													{
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": 27779,
															"name": "Prev",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": 30557,
															"name": "PrevLimit",
															"package": "@medusajs/types"
														}
													}
												],
												"name": "FilterQuery",
												"package": "@medusajs/types"
											},
											"falseType": {
												"type": "intrinsic",
												"name": "never"
											}
										},
										"falseType": {
											"type": "intrinsic",
											"name": "never"
										}
									},
									"falseType": {
										"type": "intrinsic",
										"name": "never"
									}
								}
							},
							"optionalModifier": "+"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						27802,
						27806,
						27816,
						27826,
						27829,
						27902,
						27945,
						27948
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						27951,
						27952,
						27780,
						27774
					]
				}
			]
		},
		{
			"id": 30569,
			"name": "BaseRepositoryService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Data access layer (DAL) interface to implements for any repository service.\nThis layer helps to separate the business logic (service layer) from accessing the\nORM directly and allows to switch to another ORM without changing the business logic."
					}
				]
			},
			"children": [
				{
					"id": 30570,
					"name": "transaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 30571,
							"name": "transaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameter": [
								{
									"id": 30572,
									"name": "TManager",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"parameters": [
								{
									"id": 30573,
									"name": "task",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 30574,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 30575,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 30576,
															"name": "transactionManager",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 27880,
																"name": "TManager",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 30577,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 30578,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 30579,
													"name": "isolationLevel",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 30580,
													"name": "transaction",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 27880,
														"name": "TManager",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												},
												{
													"id": 30581,
													"name": "enableNestedTransactions",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														30579,
														30580,
														30581
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 30582,
					"name": "getFreshManager",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 30583,
							"name": "getFreshManager",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameter": [
								{
									"id": 30584,
									"name": "TManager",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 27892,
								"name": "TManager",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					]
				},
				{
					"id": 30585,
					"name": "getActiveManager",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 30586,
							"name": "getActiveManager",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameter": [
								{
									"id": 30587,
									"name": "TManager",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 27895,
								"name": "TManager",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					]
				},
				{
					"id": 30588,
					"name": "serialize",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 30589,
							"name": "serialize",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameter": [
								{
									"id": 30590,
									"name": "TOutput",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "object"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "object"
												}
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 30591,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 30592,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 27898,
										"name": "TOutput",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						30570,
						30582,
						30585,
						30588
					]
				}
			],
			"typeParameters": [
				{
					"id": 30593,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 27829,
					"name": "RepositoryService"
				},
				{
					"type": "reference",
					"target": 27902,
					"name": "TreeRepositoryService"
				}
			]
		},
		{
			"id": 30564,
			"name": "Dictionary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 30568,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 30565,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"indexSignature": {
						"id": 30566,
						"name": "__index",
						"variant": "signature",
						"kind": 8192,
						"flags": {},
						"parameters": [
							{
								"id": 30567,
								"name": "k",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"type": {
							"type": "reference",
							"target": 30568,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				}
			}
		},
		{
			"id": 30558,
			"name": "Query",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 30559,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 30559,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "intrinsic",
					"name": "object"
				},
				"trueType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 30559,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reference",
						"target": 30607,
						"name": "Scalar",
						"package": "@medusajs/types"
					},
					"trueType": {
						"type": "intrinsic",
						"name": "never"
					},
					"falseType": {
						"type": "reference",
						"target": 27774,
						"typeArguments": [
							{
								"type": "reference",
								"target": 30559,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterQuery",
						"package": "@medusajs/types"
					}
				},
				"falseType": {
					"type": "reference",
					"target": 30611,
					"typeArguments": [
						{
							"type": "reference",
							"target": 30559,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "FilterValue",
					"package": "@medusajs/types"
				}
			}
		},
		{
			"id": 30560,
			"name": "ExpandScalar",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 30561,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": null
					},
					{
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 30561,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "intrinsic",
							"name": "string"
						},
						"trueType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "RegExp"
									},
									"name": "RegExp",
									"package": "typescript"
								}
							]
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 30561,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							},
							"trueType": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"falseType": {
								"type": "reference",
								"target": 30561,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					}
				]
			}
		},
		{
			"id": 30607,
			"name": "Scalar",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "boolean"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "intrinsic",
						"name": "bigint"
					},
					{
						"type": "intrinsic",
						"name": "symbol"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "RegExp"
						},
						"name": "RegExp",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/node/buffer.d.ts",
							"qualifiedName": "__global.Buffer"
						},
						"name": "Buffer",
						"package": "@types/node",
						"qualifiedName": "__global.Buffer"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 30608,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 30609,
									"name": "toHexString",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"signatures": [
										{
											"id": 30610,
											"name": "toHexString",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"children": [
										30609
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 30625,
			"name": "ReadonlyPrimary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 30626,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 30626,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "array",
					"elementType": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				"trueType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Readonly"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": 30626,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "Readonly",
					"package": "typescript"
				},
				"falseType": {
					"type": "reference",
					"target": 30626,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				}
			}
		},
		{
			"id": 30615,
			"name": "Primary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 30624,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 30624,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reflection",
					"declaration": {
						"id": 30616,
						"name": "__type",
						"variant": "declaration",
						"kind": 65536,
						"flags": {},
						"children": [
							{
								"id": 30617,
								"name": "[PrimaryKeyType]",
								"variant": "declaration",
								"kind": 1024,
								"flags": {
									"isOptional": true
								},
								"type": {
									"type": "inferred",
									"name": "PK"
								}
							}
						],
						"groups": [
							{
								"title": "Properties",
								"children": [
									30617
								]
							}
						]
					}
				},
				"trueType": {
					"type": "reference",
					"target": 30625,
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../packages/types/src/dal/utils.ts",
								"qualifiedName": "PK"
							},
							"name": "PK",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "ReadonlyPrimary",
					"package": "@medusajs/types"
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 30624,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reflection",
						"declaration": {
							"id": 30618,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 30619,
									"name": "_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "inferred",
										"name": "PK"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										30619
									]
								}
							]
						}
					},
					"trueType": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 30625,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/types/src/dal/utils.ts",
											"qualifiedName": "PK"
										},
										"name": "PK",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ReadonlyPrimary",
								"package": "@medusajs/types"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"falseType": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 30624,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "reflection",
							"declaration": {
								"id": 30620,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 30621,
										"name": "uuid",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"type": {
											"type": "inferred",
											"name": "PK"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											30621
										]
									}
								]
							}
						},
						"trueType": {
							"type": "reference",
							"target": 30625,
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../../packages/types/src/dal/utils.ts",
										"qualifiedName": "PK"
									},
									"name": "PK",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "ReadonlyPrimary",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 30624,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reflection",
								"declaration": {
									"id": 30622,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 30623,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "inferred",
												"name": "PK"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												30623
											]
										}
									]
								}
							},
							"trueType": {
								"type": "reference",
								"target": 30625,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/types/src/dal/utils.ts",
											"qualifiedName": "PK"
										},
										"name": "PK",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ReadonlyPrimary",
								"package": "@medusajs/types"
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					}
				}
			}
		},
		{
			"id": 30613,
			"name": "FilterValue2",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 30614,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 30614,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					{
						"type": "reference",
						"target": 30560,
						"typeArguments": [
							{
								"type": "reference",
								"target": 30614,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "ExpandScalar",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 30615,
						"typeArguments": [
							{
								"type": "reference",
								"target": 30614,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "Primary",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 30611,
			"name": "FilterValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 30612,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 27780,
						"typeArguments": [
							{
								"type": "reference",
								"target": 30613,
								"typeArguments": [
									{
										"type": "reference",
										"target": 30612,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "FilterValue2",
								"package": "@medusajs/types"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 30613,
						"typeArguments": [
							{
								"type": "reference",
								"target": 30612,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterValue2",
						"package": "@medusajs/types"
					},
					{
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 30613,
							"typeArguments": [
								{
									"type": "reference",
									"target": 30612,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "FilterValue2",
							"package": "@medusajs/types"
						}
					},
					{
						"type": "literal",
						"value": null
					}
				]
			}
		},
		{
			"id": 30557,
			"name": "PrevLimit",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "tuple",
				"elements": [
					{
						"type": "intrinsic",
						"name": "never"
					},
					{
						"type": "literal",
						"value": 1
					},
					{
						"type": "literal",
						"value": 2
					},
					{
						"type": "literal",
						"value": 3
					}
				]
			}
		},
		{
			"id": 30562,
			"name": "Order",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 30563,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "mapped",
				"parameter": "key",
				"parameterType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": 30563,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				"templateType": {
					"type": "union",
					"types": [
						{
							"type": "literal",
							"value": "ASC"
						},
						{
							"type": "literal",
							"value": "DESC"
						},
						{
							"type": "reference",
							"target": 30562,
							"typeArguments": [
								{
									"type": "conditional",
									"checkType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/types/src/dal/utils.ts",
												"qualifiedName": "key"
											},
											"name": "key",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": 30563,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									},
									"extendsType": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									},
									"trueType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": 0
										},
										"objectType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/types/src/dal/utils.ts",
													"qualifiedName": "key"
												},
												"name": "key",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 30563,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									},
									"falseType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/types/src/dal/utils.ts",
												"qualifiedName": "key"
											},
											"name": "key",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": 30563,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								}
							],
							"name": "Order",
							"package": "@medusajs/types"
						}
					]
				},
				"optionalModifier": "+"
			}
		},
		{
			"id": 27953,
			"name": "EventBusTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 27954,
					"name": "Subscriber",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 27959,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 27955,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 27956,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 27957,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 27959,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										},
										{
											"id": 27958,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 27960,
					"name": "SubscriberContext",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 27961,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 27962,
									"name": "subscriberId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										27962
									]
								}
							]
						}
					}
				},
				{
					"id": 27963,
					"name": "SubscriberDescriptor",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 27964,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 27965,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 27966,
									"name": "subscriber",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 27954,
										"name": "Subscriber",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										27965,
										27966
									]
								}
							]
						}
					}
				},
				{
					"id": 27967,
					"name": "EventHandler",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 27972,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 27968,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 27969,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 27970,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 27972,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										},
										{
											"id": 27971,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 27973,
					"name": "EmitData",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 27978,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 27974,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 27975,
									"name": "eventName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 27976,
									"name": "data",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 27978,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 27977,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										27975,
										27976,
										27977
									]
								}
							]
						}
					}
				},
				{
					"id": 27979,
					"name": "MessageBody",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 27988,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 27980,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 27981,
									"name": "metadata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 27982,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 27983,
													"name": "service",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 27984,
													"name": "action",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 27985,
													"name": "object",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 27986,
													"name": "eventGroupId",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														27983,
														27984,
														27985,
														27986
													]
												}
											]
										}
									}
								},
								{
									"id": 27987,
									"name": "data",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 27988,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										27981,
										27987
									]
								}
							]
						}
					}
				},
				{
					"id": 27989,
					"name": "Message",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 27994,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 27990,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 27991,
									"name": "eventName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 27992,
									"name": "body",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 27979,
										"typeArguments": [
											{
												"type": "reference",
												"target": 27994,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "MessageBody",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 27993,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										27991,
										27992,
										27993
									]
								}
							]
						}
					}
				},
				{
					"id": 27995,
					"name": "MessageFormat",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 28005,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 27996,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 27997,
									"name": "eventName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 27998,
									"name": "metadata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 27999,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 28000,
													"name": "service",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 28001,
													"name": "action",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 28002,
													"name": "object",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 28003,
													"name": "eventGroupId",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														28000,
														28001,
														28002,
														28003
													]
												}
											]
										}
									}
								},
								{
									"id": 28004,
									"name": "data",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 28005,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 28005,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										27997,
										27998,
										28004
									]
								}
							]
						}
					}
				},
				{
					"id": 28032,
					"name": "IEventBusModuleService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 28033,
							"name": "emit",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28034,
									"name": "emit",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 28035,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 28036,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 28037,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 28035,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										},
										{
											"id": 28038,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 28039,
									"name": "emit",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 28040,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 28041,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 27973,
													"typeArguments": [
														{
															"type": "reference",
															"target": 28040,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													],
													"name": "EmitData",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 28042,
									"name": "emit",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 28043,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 28044,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 27989,
													"typeArguments": [
														{
															"type": "reference",
															"target": 28043,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													],
													"name": "Message",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 28045,
							"name": "subscribe",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28046,
									"name": "subscribe",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 28047,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 28048,
											"name": "subscriber",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 27954,
												"name": "Subscriber",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28049,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 27960,
												"name": "SubscriberContext",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							]
						},
						{
							"id": 28050,
							"name": "unsubscribe",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28051,
									"name": "unsubscribe",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 28052,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 28053,
											"name": "subscriber",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 27954,
												"name": "Subscriber",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28054,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 27960,
												"name": "SubscriberContext",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								28033,
								28045,
								28050
							]
						}
					]
				},
				{
					"id": 28006,
					"name": "IEventBusService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 28007,
							"name": "subscribe",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28008,
									"name": "subscribe",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 28009,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 28010,
											"name": "subscriber",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 27954,
												"name": "Subscriber",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28011,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 27960,
												"name": "SubscriberContext",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							]
						},
						{
							"id": 28012,
							"name": "unsubscribe",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28013,
									"name": "unsubscribe",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 28014,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 28015,
											"name": "subscriber",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 27954,
												"name": "Subscriber",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28016,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 27960,
												"name": "SubscriberContext",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							]
						},
						{
							"id": 28017,
							"name": "emit",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28018,
									"name": "emit",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 28019,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 28020,
											"name": "event",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 28021,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 28019,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										},
										{
											"id": 28022,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 28023,
									"name": "emit",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 28024,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 28025,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 27973,
													"typeArguments": [
														{
															"type": "reference",
															"target": 28024,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													],
													"name": "EmitData",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 28026,
									"name": "emit",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameter": [
										{
											"id": 28027,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 28028,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 27989,
													"typeArguments": [
														{
															"type": "reference",
															"target": 28027,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													],
													"name": "Message",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 28029,
							"name": "withTransaction",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28030,
									"name": "withTransaction",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 28031,
											"name": "transactionManager",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
													"qualifiedName": "EntityManager"
												},
												"name": "EntityManager",
												"package": "typeorm"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 30295,
										"name": "ITransactionBaseService.withTransaction"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 30294,
								"name": "ITransactionBaseService.withTransaction"
							}
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								28007,
								28012,
								28017,
								28029
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 30293,
							"name": "ITransactionBaseService",
							"package": "@medusajs/types"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						28032,
						28006
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						27954,
						27960,
						27963,
						27967,
						27973,
						27979,
						27989,
						27995
					]
				}
			]
		},
		{
			"id": 28055,
			"name": "FeatureFlagTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 28056,
					"name": "IFlagRouter",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 28057,
							"name": "isFeatureEnabled",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 28058,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 28059,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 28060,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								}
							}
						},
						{
							"id": 28061,
							"name": "listFlags",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 28062,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 28063,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 28064,
												"name": "FeatureFlagsResponse",
												"package": "@medusajs/types"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								28057,
								28061
							]
						}
					]
				},
				{
					"id": 28064,
					"name": "FeatureFlagsResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@interface"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 28065,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 28066,
										"name": "key",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 28067,
										"name": "value",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "boolean"
												},
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
														"qualifiedName": "Record"
													},
													"typeArguments": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "boolean"
														}
													],
													"name": "Record",
													"package": "typescript"
												}
											]
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											28066,
											28067
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 28068,
					"name": "FlagSettings",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 28069,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 28070,
									"name": "key",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 28071,
									"name": "description",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 28072,
									"name": "env_key",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 28073,
									"name": "default_val",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										28070,
										28071,
										28072,
										28073
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						28056
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						28064,
						28068
					]
				}
			]
		},
		{
			"id": 30376,
			"name": "FileServiceUploadResult",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Details of a file upload's result."
					}
				]
			},
			"children": [
				{
					"id": 30377,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The file's URL."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 30378,
					"name": "key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The file's key. This key is used in other operations,\nsuch as deleting a file."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						30377,
						30378
					]
				}
			]
		},
		{
			"id": 30379,
			"name": "FileServiceGetUploadStreamResult",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The relevant details to upload a file through a stream."
					}
				]
			},
			"children": [
				{
					"id": 30380,
					"name": "writeStream",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A [PassThrough](https://nodejs.org/api/stream.html#class-streampassthrough) write stream object to be used to write the file."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/node/stream.d.ts",
							"qualifiedName": "internal.PassThrough"
						},
						"name": "PassThrough",
						"package": "@types/node",
						"qualifiedName": "internal.PassThrough"
					}
				},
				{
					"id": 30381,
					"name": "promise",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A promise that should resolved when the writing process is done to finish the upload."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Promise"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Promise",
						"package": "typescript"
					}
				},
				{
					"id": 30382,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL of the file once it’s uploaded."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 30383,
					"name": "fileKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The identifier of the file in the storage. For example, for a local file service, this can be the file's name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						30380,
						30381,
						30382,
						30383
					]
				}
			]
		},
		{
			"id": 30384,
			"name": "GetUploadedFileType",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of a file to retrieve."
					}
				]
			},
			"children": [
				{
					"id": 30385,
					"name": "fileKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The file's key."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 30386,
					"name": "isPrivate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the file is private."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						30385,
						30386
					]
				}
			]
		},
		{
			"id": 30387,
			"name": "DeleteFileType",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the file to remove."
					}
				]
			},
			"children": [
				{
					"id": 30388,
					"name": "fileKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The file's key. When uploading a file, the\nreturned key is used here."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						30388
					]
				}
			]
		},
		{
			"id": 30389,
			"name": "UploadStreamDescriptorType",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the file being uploaded through a stream."
					}
				]
			},
			"children": [
				{
					"id": 30390,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the file."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 30391,
					"name": "ext",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The extension of the file."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 30392,
					"name": "isPrivate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the file should be uploaded to a private bucket or location. By convention, the default value of this property is "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						30390,
						30391,
						30392
					]
				}
			]
		},
		{
			"id": 28074,
			"name": "FulfillmentTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 28075,
					"name": "FulfillmentAddressDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 28076,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28077,
							"name": "fulfillment_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 28078,
							"name": "company",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 28079,
							"name": "first_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 28080,
							"name": "last_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 28081,
							"name": "address_1",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 28082,
							"name": "address_2",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 28083,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 28084,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 28085,
							"name": "province",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 28086,
							"name": "postal_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 28087,
							"name": "phone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 28088,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 28089,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 28090,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 28091,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								28076,
								28077,
								28078,
								28079,
								28080,
								28081,
								28082,
								28083,
								28084,
								28085,
								28086,
								28087,
								28088,
								28089,
								28090,
								28091
							]
						}
					]
				},
				{
					"id": 28287,
					"name": "FulfillmentItemDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 28288,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28289,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28290,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 28291,
							"name": "sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28292,
							"name": "barcode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28293,
							"name": "line_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 28294,
							"name": "inventory_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 28295,
							"name": "fulfillment_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28296,
							"name": "fulfillment",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 28255,
								"name": "FulfillmentDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 28297,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 28298,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 28299,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								28288,
								28289,
								28290,
								28291,
								28292,
								28293,
								28294,
								28295,
								28296,
								28297,
								28298,
								28299
							]
						}
					]
				},
				{
					"id": 28300,
					"name": "FulfillmentLabelDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 28301,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28302,
							"name": "tracking_number",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28303,
							"name": "tracking_url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28304,
							"name": "label_url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28305,
							"name": "fulfillment_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28306,
							"name": "fulfillment",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 28255,
								"name": "FulfillmentDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 28307,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 28308,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 28309,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								28301,
								28302,
								28303,
								28304,
								28305,
								28306,
								28307,
								28308,
								28309
							]
						}
					]
				},
				{
					"id": 28247,
					"name": "FulfillmentProviderDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 28248,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28249,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28250,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 28251,
							"name": "shipping_options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 28144,
									"name": "ShippingOptionDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 28252,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 28253,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 28254,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								28248,
								28249,
								28250,
								28251,
								28252,
								28253,
								28254
							]
						}
					]
				},
				{
					"id": 28092,
					"name": "FulfillmentSetDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 28093,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28094,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28095,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28096,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 28097,
							"name": "service_zones",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 28209,
									"name": "ServiceZoneDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 28098,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 28099,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 28100,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								28093,
								28094,
								28095,
								28096,
								28097,
								28098,
								28099,
								28100
							]
						}
					]
				},
				{
					"id": 28101,
					"name": "FilterableFulfillmentSetProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 28106,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 28101,
											"name": "FilterableFulfillmentSetProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 27802,
											"typeArguments": [
												{
													"type": "reference",
													"target": 28101,
													"name": "FilterableFulfillmentSetProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 27803,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 28107,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 28101,
											"name": "FilterableFulfillmentSetProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 27802,
											"typeArguments": [
												{
													"type": "reference",
													"target": 28101,
													"name": "FilterableFulfillmentSetProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 27804,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 28102,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 28103,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 28104,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 28105,
							"name": "service_zones",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 28219,
								"name": "FilterableServiceZoneProps",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								28106,
								28107,
								28102,
								28103,
								28104,
								28105
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 27802,
							"typeArguments": [
								{
									"type": "reference",
									"target": 28101,
									"name": "FilterableFulfillmentSetProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 28255,
					"name": "FulfillmentDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 28256,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28257,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28258,
							"name": "packed_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 28259,
							"name": "shipped_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 28260,
							"name": "delivered_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 28261,
							"name": "canceled_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 28262,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 28263,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28264,
							"name": "shipping_option_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 28265,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 28266,
							"name": "shipping_option",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": 28144,
										"name": "ShippingOptionDTO",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 28267,
							"name": "provider",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 28247,
								"name": "FulfillmentProviderDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 28268,
							"name": "delivery_address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 28075,
								"name": "FulfillmentAddressDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 28269,
							"name": "items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 28287,
									"name": "FulfillmentItemDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 28270,
							"name": "labels",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 28300,
									"name": "FulfillmentLabelDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 28271,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 28272,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 28273,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								28256,
								28257,
								28258,
								28259,
								28260,
								28261,
								28262,
								28263,
								28264,
								28265,
								28266,
								28267,
								28268,
								28269,
								28270,
								28271,
								28272,
								28273
							]
						}
					]
				},
				{
					"id": 28274,
					"name": "FilterableFulfillmentProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 28285,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 28274,
											"name": "FilterableFulfillmentProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 27802,
											"typeArguments": [
												{
													"type": "reference",
													"target": 28274,
													"name": "FilterableFulfillmentProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 27803,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 28286,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 28274,
											"name": "FilterableFulfillmentProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 27802,
											"typeArguments": [
												{
													"type": "reference",
													"target": 28274,
													"name": "FilterableFulfillmentProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 27804,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 28275,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 27780,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 28276,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 27780,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 28277,
							"name": "packed_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "reference",
										"target": 27780,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 28278,
							"name": "shipped_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "reference",
										"target": 27780,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 28279,
							"name": "delivered_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "reference",
										"target": 27780,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 28280,
							"name": "canceled_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "reference",
										"target": 27780,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 28281,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 27780,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 28282,
							"name": "shipping_option_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 28283,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "reference",
										"target": 27780,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 28284,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "reference",
										"target": 27780,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								28285,
								28286,
								28275,
								28276,
								28277,
								28278,
								28279,
								28280,
								28281,
								28282,
								28283,
								28284
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 27802,
							"typeArguments": [
								{
									"type": "reference",
									"target": 28274,
									"name": "FilterableFulfillmentProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 28227,
					"name": "GeoZoneType",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "country"
							},
							{
								"type": "literal",
								"value": "province"
							},
							{
								"type": "literal",
								"value": "city"
							},
							{
								"type": "literal",
								"value": "zip"
							}
						]
					}
				},
				{
					"id": 28228,
					"name": "GeoZoneDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 28229,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28230,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 28227,
								"name": "GeoZoneType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 28231,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28232,
							"name": "province_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 28233,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 28234,
							"name": "postal_expression",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 28235,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 28236,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 28237,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 28238,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								28229,
								28230,
								28231,
								28232,
								28233,
								28234,
								28235,
								28236,
								28237,
								28238
							]
						}
					]
				},
				{
					"id": 28239,
					"name": "FilterableGeoZoneProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 28245,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 28239,
											"name": "FilterableGeoZoneProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 27802,
											"typeArguments": [
												{
													"type": "reference",
													"target": 28239,
													"name": "FilterableGeoZoneProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 27803,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 28246,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 28239,
											"name": "FilterableGeoZoneProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 27802,
											"typeArguments": [
												{
													"type": "reference",
													"target": 28239,
													"name": "FilterableGeoZoneProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 27804,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 28240,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 28241,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 28227,
										"name": "GeoZoneType",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 28227,
											"name": "GeoZoneType",
											"package": "@medusajs/types"
										}
									}
								]
							}
						},
						{
							"id": 28242,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 28243,
							"name": "province_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 28244,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								28245,
								28246,
								28240,
								28241,
								28242,
								28243,
								28244
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 27802,
							"typeArguments": [
								{
									"type": "reference",
									"target": 28239,
									"name": "FilterableGeoZoneProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 28209,
					"name": "ServiceZoneDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 28210,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28211,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28212,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 28213,
							"name": "fulfillment_sets",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 28092,
									"name": "FulfillmentSetDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 28214,
							"name": "geo_zones",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 28228,
									"name": "GeoZoneDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 28215,
							"name": "shipping_options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 28144,
									"name": "ShippingOptionDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 28216,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 28217,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 28218,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								28210,
								28211,
								28212,
								28213,
								28214,
								28215,
								28216,
								28217,
								28218
							]
						}
					]
				},
				{
					"id": 28219,
					"name": "FilterableServiceZoneProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 28225,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 28219,
											"name": "FilterableServiceZoneProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 27802,
											"typeArguments": [
												{
													"type": "reference",
													"target": 28219,
													"name": "FilterableServiceZoneProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 27803,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 28226,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 28219,
											"name": "FilterableServiceZoneProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 27802,
											"typeArguments": [
												{
													"type": "reference",
													"target": 28219,
													"name": "FilterableServiceZoneProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 27804,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 28220,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 27780,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 28221,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 27780,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 28222,
							"name": "geo_zones",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 28239,
								"name": "FilterableGeoZoneProps",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 28223,
							"name": "fulfillment_set",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 28101,
								"name": "FilterableFulfillmentSetProps",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 28224,
							"name": "shipping_options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								28225,
								28226,
								28220,
								28221,
								28222,
								28223,
								28224
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 27802,
							"typeArguments": [
								{
									"type": "reference",
									"target": 28219,
									"name": "FilterableServiceZoneProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 28124,
					"name": "ShippingOptionRuleDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 28125,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28126,
							"name": "attribute",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28127,
							"name": "operator",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28128,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 28129,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 28130,
													"name": "value",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														28130
													]
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 28131,
							"name": "shipping_option_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28132,
							"name": "shipping_option",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 28144,
								"name": "ShippingOptionDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 28133,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 28134,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 28135,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								28125,
								28126,
								28127,
								28128,
								28131,
								28132,
								28133,
								28134,
								28135
							]
						}
					]
				},
				{
					"id": 28136,
					"name": "FilterableShippingOptionRuleProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 28141,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 28136,
											"name": "FilterableShippingOptionRuleProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 27802,
											"typeArguments": [
												{
													"type": "reference",
													"target": 28136,
													"name": "FilterableShippingOptionRuleProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 27803,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 28142,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 28136,
											"name": "FilterableShippingOptionRuleProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 27802,
											"typeArguments": [
												{
													"type": "reference",
													"target": 28136,
													"name": "FilterableShippingOptionRuleProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 27804,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 28137,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 27780,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 28138,
							"name": "attribute",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 27780,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 28139,
							"name": "operator",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 27780,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 28140,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 27780,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								28141,
								28142,
								28137,
								28138,
								28139,
								28140
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 27802,
							"typeArguments": [
								{
									"type": "reference",
									"target": 28136,
									"name": "FilterableShippingOptionRuleProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 28192,
					"name": "ShippingOptionTypeDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 28193,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28194,
							"name": "label",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28195,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28196,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28197,
							"name": "shipping_option_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28198,
							"name": "shipping_option",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 28144,
								"name": "ShippingOptionDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 28199,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 28200,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 28201,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								28193,
								28194,
								28195,
								28196,
								28197,
								28198,
								28199,
								28200,
								28201
							]
						}
					]
				},
				{
					"id": 28202,
					"name": "FilterableShippingOptionTypeProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 28207,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 28202,
											"name": "FilterableShippingOptionTypeProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 27802,
											"typeArguments": [
												{
													"type": "reference",
													"target": 28202,
													"name": "FilterableShippingOptionTypeProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 27803,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 28208,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 28202,
											"name": "FilterableShippingOptionTypeProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 27802,
											"typeArguments": [
												{
													"type": "reference",
													"target": 28202,
													"name": "FilterableShippingOptionTypeProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 27804,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 28203,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 27780,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 28204,
							"name": "label",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 27780,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 28205,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 27780,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 28206,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 27780,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								28207,
								28208,
								28203,
								28204,
								28205,
								28206
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 27802,
							"typeArguments": [
								{
									"type": "reference",
									"target": 28202,
									"name": "FilterableShippingOptionTypeProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 28143,
					"name": "ShippingOptionPriceType",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "calculated"
							},
							{
								"type": "literal",
								"value": "flat"
							}
						]
					}
				},
				{
					"id": 28144,
					"name": "ShippingOptionDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 28145,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28146,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28147,
							"name": "price_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 28143,
								"name": "ShippingOptionPriceType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 28148,
							"name": "service_zone_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28149,
							"name": "shipping_profile_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28150,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28151,
							"name": "shipping_option_type_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 28152,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 28153,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 28154,
							"name": "service_zone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 28209,
								"name": "ServiceZoneDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 28155,
							"name": "shipping_profile",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 28108,
								"name": "ShippingProfileDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 28156,
							"name": "fulfillment_provider",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 28247,
								"name": "FulfillmentProviderDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 28157,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 28192,
								"name": "ShippingOptionTypeDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 28158,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 28124,
									"name": "ShippingOptionRuleDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 28159,
							"name": "fulfillments",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 28255,
									"name": "FulfillmentDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 28160,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 28161,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 28162,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								28145,
								28146,
								28147,
								28148,
								28149,
								28150,
								28151,
								28152,
								28153,
								28154,
								28155,
								28156,
								28157,
								28158,
								28159,
								28160,
								28161,
								28162
							]
						}
					]
				},
				{
					"id": 28163,
					"name": "FilterableShippingOptionProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 28171,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 28163,
											"name": "FilterableShippingOptionProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 27802,
											"typeArguments": [
												{
													"type": "reference",
													"target": 28163,
													"name": "FilterableShippingOptionProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 27803,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 28172,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 28163,
											"name": "FilterableShippingOptionProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 27802,
											"typeArguments": [
												{
													"type": "reference",
													"target": 28163,
													"name": "FilterableShippingOptionProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 27804,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 28164,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 27780,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 28165,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 27780,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 28166,
							"name": "shipping_profile_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 27780,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 28167,
							"name": "price_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 28143,
										"name": "ShippingOptionPriceType",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 28143,
											"name": "ShippingOptionPriceType",
											"package": "@medusajs/types"
										}
									},
									{
										"type": "reference",
										"target": 27780,
										"typeArguments": [
											{
												"type": "unknown",
												"name": "ShippingOptionPriceType | ShippingOptionPriceType[]"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 28168,
							"name": "service_zone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 28219,
								"name": "FilterableServiceZoneProps",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 28169,
							"name": "shipping_option_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 28202,
								"name": "FilterableShippingOptionTypeProps",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 28170,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 28136,
								"name": "FilterableShippingOptionRuleProps",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								28171,
								28172,
								28164,
								28165,
								28166,
								28167,
								28168,
								28169,
								28170
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 27802,
							"typeArguments": [
								{
									"type": "reference",
									"target": 28163,
									"name": "FilterableShippingOptionProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 28173,
							"name": "FilterableShippingOptionForContextProps"
						}
					]
				},
				{
					"id": 28173,
					"name": "FilterableShippingOptionForContextProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 28190,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 28163,
											"name": "FilterableShippingOptionProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 27802,
											"typeArguments": [
												{
													"type": "reference",
													"target": 28163,
													"name": "FilterableShippingOptionProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 28171,
								"name": "FilterableShippingOptionProps.$and"
							}
						},
						{
							"id": 28191,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 28163,
											"name": "FilterableShippingOptionProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 27802,
											"typeArguments": [
												{
													"type": "reference",
													"target": 28163,
													"name": "FilterableShippingOptionProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 28172,
								"name": "FilterableShippingOptionProps.$or"
							}
						},
						{
							"id": 28183,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 27780,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 28164,
								"name": "FilterableShippingOptionProps.id"
							}
						},
						{
							"id": 28184,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 27780,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 28165,
								"name": "FilterableShippingOptionProps.name"
							}
						},
						{
							"id": 28185,
							"name": "shipping_profile_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 27780,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 28166,
								"name": "FilterableShippingOptionProps.shipping_profile_id"
							}
						},
						{
							"id": 28186,
							"name": "price_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 28143,
										"name": "ShippingOptionPriceType",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 28143,
											"name": "ShippingOptionPriceType",
											"package": "@medusajs/types"
										}
									},
									{
										"type": "reference",
										"target": 27780,
										"typeArguments": [
											{
												"type": "unknown",
												"name": "ShippingOptionPriceType | ShippingOptionPriceType[]"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 28167,
								"name": "FilterableShippingOptionProps.price_type"
							}
						},
						{
							"id": 28187,
							"name": "service_zone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 28219,
								"name": "FilterableServiceZoneProps",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 28168,
								"name": "FilterableShippingOptionProps.service_zone"
							}
						},
						{
							"id": 28188,
							"name": "shipping_option_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 28202,
								"name": "FilterableShippingOptionTypeProps",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 28169,
								"name": "FilterableShippingOptionProps.shipping_option_type"
							}
						},
						{
							"id": 28189,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 28136,
								"name": "FilterableShippingOptionRuleProps",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 28170,
								"name": "FilterableShippingOptionProps.rules"
							}
						},
						{
							"id": 28174,
							"name": "fulfillment_set_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 27780,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 28175,
							"name": "fulfillment_set_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 27780,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 28176,
							"name": "address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The address is a shortcut to filter through geo_zones\nand build opinionated validation and filtering around the geo_zones.\nFor custom filtering you can go through the service_zone.geo_zones directly."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 28177,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 28178,
											"name": "country_code",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 28179,
											"name": "province_code",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 28180,
											"name": "city",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 28181,
											"name": "postal_expression",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												28178,
												28179,
												28180,
												28181
											]
										}
									]
								}
							}
						},
						{
							"id": 28182,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								28190,
								28191,
								28183,
								28184,
								28185,
								28186,
								28187,
								28188,
								28189,
								28174,
								28175,
								28176,
								28182
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 28163,
							"name": "FilterableShippingOptionProps",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 28108,
					"name": "ShippingProfileDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 28109,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28110,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28111,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28112,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 28113,
							"name": "shipping_options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 28144,
									"name": "ShippingOptionDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 28114,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 28115,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 28116,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								28109,
								28110,
								28111,
								28112,
								28113,
								28114,
								28115,
								28116
							]
						}
					]
				},
				{
					"id": 28117,
					"name": "FilterableShippingProfileProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 28122,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 28117,
											"name": "FilterableShippingProfileProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 27802,
											"typeArguments": [
												{
													"type": "reference",
													"target": 28117,
													"name": "FilterableShippingProfileProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 27803,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 28123,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 28117,
											"name": "FilterableShippingProfileProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 27802,
											"typeArguments": [
												{
													"type": "reference",
													"target": 28117,
													"name": "FilterableShippingProfileProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 27804,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 28118,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 27780,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 28119,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 27780,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 28120,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 27780,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 28121,
							"name": "shipping_options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 28163,
								"name": "FilterableShippingOptionProps",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								28122,
								28123,
								28118,
								28119,
								28120,
								28121
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 27802,
							"typeArguments": [
								{
									"type": "reference",
									"target": 28117,
									"name": "FilterableShippingProfileProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 28471,
					"name": "CreateFulfillmentAddressDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 28472,
							"name": "fulfillment_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28473,
							"name": "company",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 28474,
							"name": "first_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 28475,
							"name": "last_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 28476,
							"name": "address_1",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 28477,
							"name": "address_2",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 28478,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 28479,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 28480,
							"name": "province",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 28481,
							"name": "postal_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 28482,
							"name": "phone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 28483,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								28472,
								28473,
								28474,
								28475,
								28476,
								28477,
								28478,
								28479,
								28480,
								28481,
								28482,
								28483
							]
						}
					]
				},
				{
					"id": 28489,
					"name": "CreateFulfillmentItemDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 28490,
							"name": "fulfillment_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28491,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28492,
							"name": "sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28493,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 28494,
							"name": "barcode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28495,
							"name": "line_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 28496,
							"name": "inventory_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								28490,
								28491,
								28492,
								28493,
								28494,
								28495,
								28496
							]
						}
					]
				},
				{
					"id": 28484,
					"name": "CreateFulfillmentLabelDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 28485,
							"name": "tracking_number",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28486,
							"name": "tracking_url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28487,
							"name": "label_url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28488,
							"name": "fulfillment_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								28485,
								28486,
								28487,
								28488
							]
						}
					]
				},
				{
					"id": 28438,
					"name": "CreateFulfillmentSetDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 28439,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28440,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28441,
							"name": "service_zones",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Omit"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": 28405,
											"name": "CreateServiceZoneDTO",
											"package": "@medusajs/types"
										},
										{
											"type": "literal",
											"value": "fulfillment_set_id"
										}
									],
									"name": "Omit",
									"package": "typescript"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								28439,
								28440,
								28441
							]
						}
					]
				},
				{
					"id": 28442,
					"name": "UpdateFulfillmentSetDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 28443,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28444,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28445,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28446,
							"name": "service_zones",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Omit"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": 28405,
													"name": "CreateServiceZoneDTO",
													"package": "@medusajs/types"
												},
												{
													"type": "literal",
													"value": "fulfillment_set_id"
												}
											],
											"name": "Omit",
											"package": "typescript"
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 28447,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 28448,
														"name": "id",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															28448
														]
													}
												]
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								28443,
								28444,
								28445,
								28446
							]
						}
					]
				},
				{
					"id": 28449,
					"name": "CreateFulfillmentOrderDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {}
				},
				{
					"id": 28450,
					"name": "CreateFulfillmentDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 28451,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28452,
							"name": "packed_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 28453,
							"name": "shipped_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 28454,
							"name": "delivered_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 28455,
							"name": "canceled_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 28456,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 28457,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28458,
							"name": "shipping_option_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 28459,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 28460,
							"name": "delivery_address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 28471,
										"name": "CreateFulfillmentAddressDTO",
										"package": "@medusajs/types"
									},
									{
										"type": "literal",
										"value": "fulfillment_id"
									}
								],
								"name": "Omit",
								"package": "typescript"
							}
						},
						{
							"id": 28461,
							"name": "items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Omit"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": 28489,
											"name": "CreateFulfillmentItemDTO",
											"package": "@medusajs/types"
										},
										{
											"type": "literal",
											"value": "fulfillment_id"
										}
									],
									"name": "Omit",
									"package": "typescript"
								}
							}
						},
						{
							"id": 28462,
							"name": "labels",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Omit"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": 28484,
											"name": "CreateFulfillmentLabelDTO",
											"package": "@medusajs/types"
										},
										{
											"type": "literal",
											"value": "fulfillment_id"
										}
									],
									"name": "Omit",
									"package": "typescript"
								}
							}
						},
						{
							"id": 28463,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 28449,
								"name": "CreateFulfillmentOrderDTO",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								28451,
								28452,
								28453,
								28454,
								28455,
								28456,
								28457,
								28458,
								28459,
								28460,
								28461,
								28462,
								28463
							]
						}
					]
				},
				{
					"id": 28464,
					"name": "UpdateFulfillmentDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 28465,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28466,
							"name": "packed_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 28467,
							"name": "shipped_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 28468,
							"name": "delivered_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 28469,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 28470,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								28465,
								28466,
								28467,
								28468,
								28469,
								28470
							]
						}
					]
				},
				{
					"id": 28341,
					"name": "CreateCountryGeoZoneDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 28343,
							"name": "service_zone_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30596,
								"name": "CreateGeoZoneBaseDTO.service_zone_id"
							}
						},
						{
							"id": 28344,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30597,
								"name": "CreateGeoZoneBaseDTO.country_code"
							}
						},
						{
							"id": 28345,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30598,
								"name": "CreateGeoZoneBaseDTO.metadata"
							}
						},
						{
							"id": 28342,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "country"
							},
							"overwrites": {
								"type": "reference",
								"target": 30595,
								"name": "CreateGeoZoneBaseDTO.type"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								28343,
								28344,
								28345,
								28342
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 30594,
							"name": "CreateGeoZoneBaseDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 28346,
					"name": "CreateProvinceGeoZoneDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 28349,
							"name": "service_zone_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30596,
								"name": "CreateGeoZoneBaseDTO.service_zone_id"
							}
						},
						{
							"id": 28350,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30597,
								"name": "CreateGeoZoneBaseDTO.country_code"
							}
						},
						{
							"id": 28351,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30598,
								"name": "CreateGeoZoneBaseDTO.metadata"
							}
						},
						{
							"id": 28347,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "province"
							},
							"overwrites": {
								"type": "reference",
								"target": 30595,
								"name": "CreateGeoZoneBaseDTO.type"
							}
						},
						{
							"id": 28348,
							"name": "province_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								28349,
								28350,
								28351,
								28347,
								28348
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 30594,
							"name": "CreateGeoZoneBaseDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 28352,
					"name": "CreateCityGeoZoneDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 28356,
							"name": "service_zone_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30596,
								"name": "CreateGeoZoneBaseDTO.service_zone_id"
							}
						},
						{
							"id": 28357,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30597,
								"name": "CreateGeoZoneBaseDTO.country_code"
							}
						},
						{
							"id": 28358,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30598,
								"name": "CreateGeoZoneBaseDTO.metadata"
							}
						},
						{
							"id": 28353,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "city"
							},
							"overwrites": {
								"type": "reference",
								"target": 30595,
								"name": "CreateGeoZoneBaseDTO.type"
							}
						},
						{
							"id": 28354,
							"name": "province_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28355,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								28356,
								28357,
								28358,
								28353,
								28354,
								28355
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 30594,
							"name": "CreateGeoZoneBaseDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 28359,
					"name": "CreateZipGeoZoneDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 28364,
							"name": "service_zone_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30596,
								"name": "CreateGeoZoneBaseDTO.service_zone_id"
							}
						},
						{
							"id": 28365,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30597,
								"name": "CreateGeoZoneBaseDTO.country_code"
							}
						},
						{
							"id": 28366,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30598,
								"name": "CreateGeoZoneBaseDTO.metadata"
							}
						},
						{
							"id": 28360,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "zip"
							},
							"overwrites": {
								"type": "reference",
								"target": 30595,
								"name": "CreateGeoZoneBaseDTO.type"
							}
						},
						{
							"id": 28361,
							"name": "province_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28362,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28363,
							"name": "postal_expression",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								28364,
								28365,
								28366,
								28360,
								28361,
								28362,
								28363
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 30594,
							"name": "CreateGeoZoneBaseDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 28367,
					"name": "CreateGeoZoneDTO",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 28341,
								"name": "CreateCountryGeoZoneDTO",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": 28346,
								"name": "CreateProvinceGeoZoneDTO",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": 28352,
								"name": "CreateCityGeoZoneDTO",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": 28359,
								"name": "CreateZipGeoZoneDTO",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 28368,
					"name": "UpdateGeoZoneBaseDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 28370,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 28227,
								"name": "GeoZoneType",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.type"
							}
						},
						{
							"id": 28371,
							"name": "service_zone_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.service_zone_id"
							}
						},
						{
							"id": 28372,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.country_code"
							}
						},
						{
							"id": 28373,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.metadata"
							}
						},
						{
							"id": 28369,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								28370,
								28371,
								28372,
								28373,
								28369
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Partial"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 30594,
									"name": "CreateGeoZoneBaseDTO",
									"package": "@medusajs/types"
								}
							],
							"name": "Partial",
							"package": "typescript"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 28374,
							"name": "UpdateCountryGeoZoneDTO"
						},
						{
							"type": "reference",
							"target": 28380,
							"name": "UpdateProvinceGeoZoneDTO"
						},
						{
							"type": "reference",
							"target": 28387,
							"name": "UpdateCityGeoZoneDTO"
						},
						{
							"type": "reference",
							"target": 28395,
							"name": "UpdateZipGeoZoneDTO"
						}
					]
				},
				{
					"id": 28374,
					"name": "UpdateCountryGeoZoneDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 28377,
							"name": "service_zone_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 28371,
								"name": "UpdateGeoZoneBaseDTO.service_zone_id"
							}
						},
						{
							"id": 28378,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 28372,
								"name": "UpdateGeoZoneBaseDTO.country_code"
							}
						},
						{
							"id": 28379,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 28373,
								"name": "UpdateGeoZoneBaseDTO.metadata"
							}
						},
						{
							"id": 28376,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 28369,
								"name": "UpdateGeoZoneBaseDTO.id"
							}
						},
						{
							"id": 28375,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "country"
							},
							"overwrites": {
								"type": "reference",
								"target": 28370,
								"name": "UpdateGeoZoneBaseDTO.type"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								28377,
								28378,
								28379,
								28376,
								28375
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 28368,
							"name": "UpdateGeoZoneBaseDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 28380,
					"name": "UpdateProvinceGeoZoneDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 28384,
							"name": "service_zone_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 28371,
								"name": "UpdateGeoZoneBaseDTO.service_zone_id"
							}
						},
						{
							"id": 28385,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 28372,
								"name": "UpdateGeoZoneBaseDTO.country_code"
							}
						},
						{
							"id": 28386,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 28373,
								"name": "UpdateGeoZoneBaseDTO.metadata"
							}
						},
						{
							"id": 28383,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 28369,
								"name": "UpdateGeoZoneBaseDTO.id"
							}
						},
						{
							"id": 28381,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "province"
							},
							"overwrites": {
								"type": "reference",
								"target": 28370,
								"name": "UpdateGeoZoneBaseDTO.type"
							}
						},
						{
							"id": 28382,
							"name": "province_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								28384,
								28385,
								28386,
								28383,
								28381,
								28382
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 28368,
							"name": "UpdateGeoZoneBaseDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 28387,
					"name": "UpdateCityGeoZoneDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 28392,
							"name": "service_zone_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 28371,
								"name": "UpdateGeoZoneBaseDTO.service_zone_id"
							}
						},
						{
							"id": 28393,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 28372,
								"name": "UpdateGeoZoneBaseDTO.country_code"
							}
						},
						{
							"id": 28394,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 28373,
								"name": "UpdateGeoZoneBaseDTO.metadata"
							}
						},
						{
							"id": 28391,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 28369,
								"name": "UpdateGeoZoneBaseDTO.id"
							}
						},
						{
							"id": 28388,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "city"
							},
							"overwrites": {
								"type": "reference",
								"target": 28370,
								"name": "UpdateGeoZoneBaseDTO.type"
							}
						},
						{
							"id": 28389,
							"name": "province_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28390,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								28392,
								28393,
								28394,
								28391,
								28388,
								28389,
								28390
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 28368,
							"name": "UpdateGeoZoneBaseDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 28395,
					"name": "UpdateZipGeoZoneDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 28401,
							"name": "service_zone_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 28371,
								"name": "UpdateGeoZoneBaseDTO.service_zone_id"
							}
						},
						{
							"id": 28402,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 28372,
								"name": "UpdateGeoZoneBaseDTO.country_code"
							}
						},
						{
							"id": 28403,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 28373,
								"name": "UpdateGeoZoneBaseDTO.metadata"
							}
						},
						{
							"id": 28400,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 28369,
								"name": "UpdateGeoZoneBaseDTO.id"
							}
						},
						{
							"id": 28396,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "zip"
							},
							"overwrites": {
								"type": "reference",
								"target": 28370,
								"name": "UpdateGeoZoneBaseDTO.type"
							}
						},
						{
							"id": 28397,
							"name": "province_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28398,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28399,
							"name": "postal_expression",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								28401,
								28402,
								28403,
								28400,
								28396,
								28397,
								28398,
								28399
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 28368,
							"name": "UpdateGeoZoneBaseDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 28404,
					"name": "UpdateGeoZoneDTO",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 28374,
								"name": "UpdateCountryGeoZoneDTO",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": 28380,
								"name": "UpdateProvinceGeoZoneDTO",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": 28387,
								"name": "UpdateCityGeoZoneDTO",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": 28395,
								"name": "UpdateZipGeoZoneDTO",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 28405,
					"name": "CreateServiceZoneDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 28406,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28407,
							"name": "fulfillment_set_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28408,
							"name": "geo_zones",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Omit"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": 28341,
													"name": "CreateCountryGeoZoneDTO",
													"package": "@medusajs/types"
												},
												{
													"type": "literal",
													"value": "service_zone_id"
												}
											],
											"name": "Omit",
											"package": "typescript"
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Omit"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": 28346,
													"name": "CreateProvinceGeoZoneDTO",
													"package": "@medusajs/types"
												},
												{
													"type": "literal",
													"value": "service_zone_id"
												}
											],
											"name": "Omit",
											"package": "typescript"
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Omit"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": 28352,
													"name": "CreateCityGeoZoneDTO",
													"package": "@medusajs/types"
												},
												{
													"type": "literal",
													"value": "service_zone_id"
												}
											],
											"name": "Omit",
											"package": "typescript"
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Omit"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": 28359,
													"name": "CreateZipGeoZoneDTO",
													"package": "@medusajs/types"
												},
												{
													"type": "literal",
													"value": "service_zone_id"
												}
											],
											"name": "Omit",
											"package": "typescript"
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								28406,
								28407,
								28408
							]
						}
					]
				},
				{
					"id": 28409,
					"name": "UpdateServiceZoneDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 28410,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28411,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28412,
							"name": "geo_zones",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Omit"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": 28341,
													"name": "CreateCountryGeoZoneDTO",
													"package": "@medusajs/types"
												},
												{
													"type": "literal",
													"value": "service_zone_id"
												}
											],
											"name": "Omit",
											"package": "typescript"
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Omit"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": 28346,
													"name": "CreateProvinceGeoZoneDTO",
													"package": "@medusajs/types"
												},
												{
													"type": "literal",
													"value": "service_zone_id"
												}
											],
											"name": "Omit",
											"package": "typescript"
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Omit"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": 28352,
													"name": "CreateCityGeoZoneDTO",
													"package": "@medusajs/types"
												},
												{
													"type": "literal",
													"value": "service_zone_id"
												}
											],
											"name": "Omit",
											"package": "typescript"
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Omit"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": 28359,
													"name": "CreateZipGeoZoneDTO",
													"package": "@medusajs/types"
												},
												{
													"type": "literal",
													"value": "service_zone_id"
												}
											],
											"name": "Omit",
											"package": "typescript"
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 28413,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 28414,
														"name": "id",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															28414
														]
													}
												]
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								28410,
								28411,
								28412
							]
						}
					]
				},
				{
					"id": 28329,
					"name": "ShippingOptionRuleOperatorType",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "in"
							},
							{
								"type": "literal",
								"value": "eq"
							},
							{
								"type": "literal",
								"value": "ne"
							},
							{
								"type": "literal",
								"value": "gt"
							},
							{
								"type": "literal",
								"value": "gte"
							},
							{
								"type": "literal",
								"value": "lt"
							},
							{
								"type": "literal",
								"value": "lte"
							},
							{
								"type": "literal",
								"value": "nin"
							}
						]
					}
				},
				{
					"id": 28330,
					"name": "CreateShippingOptionRuleDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 28331,
							"name": "attribute",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28332,
							"name": "operator",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 28329,
								"name": "ShippingOptionRuleOperatorType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 28333,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 28334,
							"name": "shipping_option_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								28331,
								28332,
								28333,
								28334
							]
						}
					]
				},
				{
					"id": 28335,
					"name": "UpdateShippingOptionRuleDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 28337,
							"name": "attribute",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.attribute"
							}
						},
						{
							"id": 28338,
							"name": "operator",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 28329,
								"name": "ShippingOptionRuleOperatorType",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.operator"
							}
						},
						{
							"id": 28339,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.value"
							}
						},
						{
							"id": 28340,
							"name": "shipping_option_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.shipping_option_id"
							}
						},
						{
							"id": 28336,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								28337,
								28338,
								28339,
								28340,
								28336
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Partial"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 28330,
									"name": "CreateShippingOptionRuleDTO",
									"package": "@medusajs/types"
								}
							],
							"name": "Partial",
							"package": "typescript"
						}
					]
				},
				{
					"id": 28318,
					"name": "CreateShippingOptionTypeDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 28319,
							"name": "label",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28320,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28321,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28322,
							"name": "shipping_option_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								28319,
								28320,
								28321,
								28322
							]
						}
					]
				},
				{
					"id": 28323,
					"name": "UpdateShippingOptionTypeDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 28325,
							"name": "label",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.label"
							}
						},
						{
							"id": 28326,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.description"
							}
						},
						{
							"id": 28327,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.code"
							}
						},
						{
							"id": 28328,
							"name": "shipping_option_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.shipping_option_id"
							}
						},
						{
							"id": 28324,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								28325,
								28326,
								28327,
								28328,
								28324
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Partial"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 28318,
									"name": "CreateShippingOptionTypeDTO",
									"package": "@medusajs/types"
								}
							],
							"name": "Partial",
							"package": "typescript"
						}
					]
				},
				{
					"id": 28415,
					"name": "CreateShippingOptionDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 28416,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28417,
							"name": "price_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 28143,
								"name": "ShippingOptionPriceType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 28418,
							"name": "service_zone_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28419,
							"name": "shipping_profile_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28420,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28421,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 28318,
										"name": "CreateShippingOptionTypeDTO",
										"package": "@medusajs/types"
									},
									{
										"type": "literal",
										"value": "shipping_option_id"
									}
								],
								"name": "Omit",
								"package": "typescript"
							}
						},
						{
							"id": 28422,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 28423,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Omit"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": 28330,
											"name": "CreateShippingOptionRuleDTO",
											"package": "@medusajs/types"
										},
										{
											"type": "literal",
											"value": "shipping_option_id"
										}
									],
									"name": "Omit",
									"package": "typescript"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								28416,
								28417,
								28418,
								28419,
								28420,
								28421,
								28422,
								28423
							]
						}
					]
				},
				{
					"id": 28424,
					"name": "UpdateShippingOptionDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 28425,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28426,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28427,
							"name": "price_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 28143,
								"name": "ShippingOptionPriceType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 28428,
							"name": "service_zone_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28429,
							"name": "shipping_profile_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28430,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28431,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Omit"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 28318,
												"name": "CreateShippingOptionTypeDTO",
												"package": "@medusajs/types"
											},
											{
												"type": "literal",
												"value": "shipping_option_id"
											}
										],
										"name": "Omit",
										"package": "typescript"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 28432,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 28433,
													"name": "id",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														28433
													]
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 28434,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 28435,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Omit"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": 28330,
													"name": "CreateShippingOptionRuleDTO",
													"package": "@medusajs/types"
												},
												{
													"type": "literal",
													"value": "shipping_option_id"
												}
											],
											"name": "Omit",
											"package": "typescript"
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 28436,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 28437,
														"name": "id",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															28437
														]
													}
												]
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								28425,
								28426,
								28427,
								28428,
								28429,
								28430,
								28431,
								28434,
								28435
							]
						}
					]
				},
				{
					"id": 28310,
					"name": "CreateShippingProfileDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 28311,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28312,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 28313,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								28311,
								28312,
								28313
							]
						}
					]
				},
				{
					"id": 28314,
					"name": "UpdateShippingProfileDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 28315,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.name"
							}
						},
						{
							"id": 28316,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.type"
							}
						},
						{
							"id": 28317,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.metadata"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								28315,
								28316,
								28317
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Partial"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 28310,
									"name": "CreateShippingProfileDTO",
									"package": "@medusajs/types"
								}
							],
							"name": "Partial",
							"package": "typescript"
						}
					]
				},
				{
					"id": 28497,
					"name": "IFulfillmentProvider",
					"variant": "declaration",
					"kind": 256,
					"flags": {}
				},
				{
					"id": 28543,
					"name": "IFulfillmentModuleService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 28544,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28545,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Retrieve a fulfillment set"
											}
										]
									},
									"parameters": [
										{
											"id": 28546,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 28547,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 27592,
												"typeArguments": [
													{
														"type": "reference",
														"target": 28092,
														"name": "FulfillmentSetDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28548,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 28092,
												"name": "FulfillmentSetDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 28549,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28550,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "List fulfillment sets"
											}
										]
									},
									"parameters": [
										{
											"id": 28551,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 28101,
												"name": "FilterableFulfillmentSetProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28552,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 27592,
												"typeArguments": [
													{
														"type": "reference",
														"target": 28092,
														"name": "FulfillmentSetDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28553,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 28092,
													"name": "FulfillmentSetDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 28554,
							"name": "listAndCount",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28555,
									"name": "listAndCount",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "List and count fulfillment sets"
											}
										]
									},
									"parameters": [
										{
											"id": 28556,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 28101,
												"name": "FilterableFulfillmentSetProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28557,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 27592,
												"typeArguments": [
													{
														"type": "reference",
														"target": 28092,
														"name": "FulfillmentSetDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28558,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 28092,
															"name": "FulfillmentSetDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 28559,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28560,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Create a new fulfillment set"
											}
										]
									},
									"parameters": [
										{
											"id": 28561,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 28438,
													"name": "CreateFulfillmentSetDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 28562,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 28092,
													"name": "FulfillmentSetDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 28563,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 28564,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 28438,
												"name": "CreateFulfillmentSetDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28565,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 28092,
												"name": "FulfillmentSetDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 28566,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28567,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Update a fulfillment set"
											}
										]
									},
									"parameters": [
										{
											"id": 28568,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 28442,
													"name": "UpdateFulfillmentSetDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 28569,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 28092,
													"name": "FulfillmentSetDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 28570,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 28571,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 28442,
												"name": "UpdateFulfillmentSetDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28572,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 28092,
												"name": "FulfillmentSetDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 28573,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28574,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Delete a fulfillment set"
											}
										]
									},
									"parameters": [
										{
											"id": 28575,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 28576,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 28577,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 28578,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 28579,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 28580,
							"name": "softDelete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28581,
									"name": "softDelete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Soft delete fulfillment sets"
											}
										]
									},
									"typeParameter": [
										{
											"id": 28582,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 28583,
											"name": "fulfillmentIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 28584,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 27945,
												"typeArguments": [
													{
														"type": "reference",
														"target": 28582,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "SoftDeleteReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28585,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 28586,
							"name": "restore",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28587,
									"name": "restore",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Restore fulfillment sets"
											}
										]
									},
									"typeParameter": [
										{
											"id": 28588,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 28589,
											"name": "fulfillmentIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 28590,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 27948,
												"typeArguments": [
													{
														"type": "reference",
														"target": 28588,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RestoreReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28591,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 28592,
							"name": "retrieveServiceZone",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28593,
									"name": "retrieveServiceZone",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Retrieve a service zone"
											}
										]
									},
									"parameters": [
										{
											"id": 28594,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 28595,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 27592,
												"typeArguments": [
													{
														"type": "reference",
														"target": 28209,
														"name": "ServiceZoneDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28596,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 28209,
												"name": "ServiceZoneDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 28597,
							"name": "listServiceZones",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28598,
									"name": "listServiceZones",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "List service zones"
											}
										]
									},
									"parameters": [
										{
											"id": 28599,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 28219,
												"name": "FilterableServiceZoneProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28600,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 27592,
												"typeArguments": [
													{
														"type": "reference",
														"target": 28209,
														"name": "ServiceZoneDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28601,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 28209,
													"name": "ServiceZoneDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 28602,
							"name": "listAndCountServiceZones",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28603,
									"name": "listAndCountServiceZones",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "List and count service zones"
											}
										]
									},
									"parameters": [
										{
											"id": 28604,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 28219,
												"name": "FilterableServiceZoneProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28605,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 27592,
												"typeArguments": [
													{
														"type": "reference",
														"target": 28209,
														"name": "ServiceZoneDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28606,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 28209,
															"name": "ServiceZoneDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 28607,
							"name": "createServiceZones",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28608,
									"name": "createServiceZones",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Create a new service zone"
											}
										]
									},
									"parameters": [
										{
											"id": 28609,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 28405,
													"name": "CreateServiceZoneDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 28610,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 28209,
													"name": "ServiceZoneDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 28611,
									"name": "createServiceZones",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 28612,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 28405,
												"name": "CreateServiceZoneDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28613,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 28209,
												"name": "ServiceZoneDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 28614,
							"name": "updateServiceZones",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28615,
									"name": "updateServiceZones",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Update a service zone"
											}
										]
									},
									"parameters": [
										{
											"id": 28616,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 28409,
													"name": "UpdateServiceZoneDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 28617,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 28209,
													"name": "ServiceZoneDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 28618,
									"name": "updateServiceZones",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 28619,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 28409,
												"name": "UpdateServiceZoneDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28620,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 28209,
												"name": "ServiceZoneDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 28621,
							"name": "deleteServiceZones",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28622,
									"name": "deleteServiceZones",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Delete a service zone"
											}
										]
									},
									"parameters": [
										{
											"id": 28623,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 28624,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 28625,
									"name": "deleteServiceZones",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 28626,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 28627,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 28628,
							"name": "softDeleteServiceZones",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28629,
									"name": "softDeleteServiceZones",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Soft delete service zones"
											}
										]
									},
									"typeParameter": [
										{
											"id": 28630,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 28631,
											"name": "serviceZoneIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 28632,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 27945,
												"typeArguments": [
													{
														"type": "reference",
														"target": 28630,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "SoftDeleteReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28633,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 28634,
							"name": "restoreServiceZones",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28635,
									"name": "restoreServiceZones",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Restore service zones"
											}
										]
									},
									"typeParameter": [
										{
											"id": 28636,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 28637,
											"name": "serviceZoneIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 28638,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 27948,
												"typeArguments": [
													{
														"type": "reference",
														"target": 28636,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RestoreReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28639,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 28640,
							"name": "retrieveGeoZone",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28641,
									"name": "retrieveGeoZone",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Retrieve a geo zone"
											}
										]
									},
									"parameters": [
										{
											"id": 28642,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 28643,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 27592,
												"typeArguments": [
													{
														"type": "reference",
														"target": 28228,
														"name": "GeoZoneDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28644,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 28228,
												"name": "GeoZoneDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 28645,
							"name": "listGeoZones",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28646,
									"name": "listGeoZones",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "List geo zones"
											}
										]
									},
									"parameters": [
										{
											"id": 28647,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 28239,
												"name": "FilterableGeoZoneProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28648,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 27592,
												"typeArguments": [
													{
														"type": "reference",
														"target": 28228,
														"name": "GeoZoneDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28649,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 28228,
													"name": "GeoZoneDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 28650,
							"name": "listAndCountGeoZones",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28651,
									"name": "listAndCountGeoZones",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "List and count geo zones"
											}
										]
									},
									"parameters": [
										{
											"id": 28652,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 28239,
												"name": "FilterableGeoZoneProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28653,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 27592,
												"typeArguments": [
													{
														"type": "reference",
														"target": 28228,
														"name": "GeoZoneDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28654,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 28228,
															"name": "GeoZoneDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 28655,
							"name": "createGeoZones",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28656,
									"name": "createGeoZones",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Create a new geo zone"
											}
										]
									},
									"parameters": [
										{
											"id": 28657,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 28367,
													"name": "CreateGeoZoneDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 28658,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 28228,
													"name": "GeoZoneDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 28659,
									"name": "createGeoZones",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 28660,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 28367,
												"name": "CreateGeoZoneDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28661,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 28228,
												"name": "GeoZoneDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 28662,
							"name": "updateGeoZones",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28663,
									"name": "updateGeoZones",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Update a geo zone"
											}
										]
									},
									"parameters": [
										{
											"id": 28664,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 28404,
													"name": "UpdateGeoZoneDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 28665,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 28228,
													"name": "GeoZoneDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 28666,
									"name": "updateGeoZones",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 28667,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 28404,
												"name": "UpdateGeoZoneDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28668,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 28228,
												"name": "GeoZoneDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 28669,
							"name": "deleteGeoZones",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28670,
									"name": "deleteGeoZones",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Delete a geo zone"
											}
										]
									},
									"parameters": [
										{
											"id": 28671,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 28672,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 28673,
									"name": "deleteGeoZones",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 28674,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 28675,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 28676,
							"name": "softDeleteGeoZones",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28677,
									"name": "softDeleteGeoZones",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Soft delete geo zones"
											}
										]
									},
									"typeParameter": [
										{
											"id": 28678,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 28679,
											"name": "geoZoneIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 28680,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 27945,
												"typeArguments": [
													{
														"type": "reference",
														"target": 28678,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "SoftDeleteReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28681,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 28682,
							"name": "restoreGeoZones",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28683,
									"name": "restoreGeoZones",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Restore geo zones"
											}
										]
									},
									"typeParameter": [
										{
											"id": 28684,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 28685,
											"name": "geoZoneIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 28686,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 27948,
												"typeArguments": [
													{
														"type": "reference",
														"target": 28684,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RestoreReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28687,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 28688,
							"name": "retrieveShippingOption",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28689,
									"name": "retrieveShippingOption",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Retrieve a shipping option"
											}
										]
									},
									"parameters": [
										{
											"id": 28690,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 28691,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 27592,
												"typeArguments": [
													{
														"type": "reference",
														"target": 28144,
														"name": "ShippingOptionDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28692,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 28144,
												"name": "ShippingOptionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 28693,
							"name": "listShippingOptions",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28694,
									"name": "listShippingOptions",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "List shipping options"
											}
										]
									},
									"parameters": [
										{
											"id": 28695,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 28163,
												"name": "FilterableShippingOptionProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28696,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 27592,
												"typeArguments": [
													{
														"type": "reference",
														"target": 28144,
														"name": "ShippingOptionDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28697,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 28144,
													"name": "ShippingOptionDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 28698,
							"name": "listShippingOptionsForContext",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28699,
									"name": "listShippingOptionsForContext",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "List shipping options and eventually filter the result based on the context and their rules"
											}
										]
									},
									"parameters": [
										{
											"id": 28700,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 28173,
												"name": "FilterableShippingOptionForContextProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28701,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 27592,
												"typeArguments": [
													{
														"type": "reference",
														"target": 28144,
														"name": "ShippingOptionDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28702,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 28144,
													"name": "ShippingOptionDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 28703,
							"name": "listAndCountShippingOptions",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28704,
									"name": "listAndCountShippingOptions",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "List and count shipping options without taking into account the context"
											}
										]
									},
									"parameters": [
										{
											"id": 28705,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Omit"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 28163,
														"name": "FilterableShippingOptionProps",
														"package": "@medusajs/types"
													},
													{
														"type": "literal",
														"value": "context"
													}
												],
												"name": "Omit",
												"package": "typescript"
											}
										},
										{
											"id": 28706,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 27592,
												"typeArguments": [
													{
														"type": "reference",
														"target": 28144,
														"name": "ShippingOptionDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28707,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 28144,
															"name": "ShippingOptionDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 28708,
							"name": "createShippingOptions",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28709,
									"name": "createShippingOptions",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Create a new shipping option"
											}
										]
									},
									"parameters": [
										{
											"id": 28710,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 28415,
													"name": "CreateShippingOptionDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 28711,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 28144,
													"name": "ShippingOptionDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 28712,
									"name": "createShippingOptions",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 28713,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 28415,
												"name": "CreateShippingOptionDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28714,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 28144,
												"name": "ShippingOptionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 28715,
							"name": "updateShippingOptions",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28716,
									"name": "updateShippingOptions",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Update a shipping option"
											}
										]
									},
									"parameters": [
										{
											"id": 28717,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 28424,
													"name": "UpdateShippingOptionDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 28718,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 28144,
													"name": "ShippingOptionDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 28719,
									"name": "updateShippingOptions",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 28720,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 28424,
												"name": "UpdateShippingOptionDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28721,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 28144,
												"name": "ShippingOptionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 28722,
							"name": "deleteShippingOptions",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28723,
									"name": "deleteShippingOptions",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Delete a shippingOption"
											}
										]
									},
									"parameters": [
										{
											"id": 28724,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 28725,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 28726,
									"name": "deleteShippingOptions",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 28727,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 28728,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 28729,
							"name": "softDeleteShippingOptions",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28730,
									"name": "softDeleteShippingOptions",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Soft delete shipping options"
											}
										]
									},
									"typeParameter": [
										{
											"id": 28731,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 28732,
											"name": "shippingOptionIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 28733,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 27945,
												"typeArguments": [
													{
														"type": "reference",
														"target": 28731,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "SoftDeleteReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28734,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 28735,
							"name": "restoreShippingOptions",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28736,
									"name": "restoreShippingOptions",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Restore shipping options"
											}
										]
									},
									"typeParameter": [
										{
											"id": 28737,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 28738,
											"name": "shippingOptionIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 28739,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 27948,
												"typeArguments": [
													{
														"type": "reference",
														"target": 28737,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RestoreReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28740,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 28741,
							"name": "retrieveShippingProfile",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28742,
									"name": "retrieveShippingProfile",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Retrieve a shipping profile"
											}
										]
									},
									"parameters": [
										{
											"id": 28743,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 28744,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 27592,
												"typeArguments": [
													{
														"type": "reference",
														"target": 28108,
														"name": "ShippingProfileDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28745,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 28108,
												"name": "ShippingProfileDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 28746,
							"name": "listShippingProfiles",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28747,
									"name": "listShippingProfiles",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "List shipping profiles"
											}
										]
									},
									"parameters": [
										{
											"id": 28748,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 28117,
												"name": "FilterableShippingProfileProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28749,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 27592,
												"typeArguments": [
													{
														"type": "reference",
														"target": 28108,
														"name": "ShippingProfileDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28750,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 28108,
													"name": "ShippingProfileDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 28751,
							"name": "listAndCountShippingProfiles",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28752,
									"name": "listAndCountShippingProfiles",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "List and count shipping profiles"
											}
										]
									},
									"parameters": [
										{
											"id": 28753,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 28117,
												"name": "FilterableShippingProfileProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28754,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 27592,
												"typeArguments": [
													{
														"type": "reference",
														"target": 28108,
														"name": "ShippingProfileDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28755,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 28108,
															"name": "ShippingProfileDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 28756,
							"name": "createShippingProfiles",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28757,
									"name": "createShippingProfiles",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Create a new shipping profile"
											}
										]
									},
									"parameters": [
										{
											"id": 28758,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 28310,
													"name": "CreateShippingProfileDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 28759,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 28108,
													"name": "ShippingProfileDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 28760,
									"name": "createShippingProfiles",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 28761,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 28310,
												"name": "CreateShippingProfileDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28762,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 28108,
												"name": "ShippingProfileDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 28763,
							"name": "updateShippingProfiles",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28764,
									"name": "updateShippingProfiles",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Update a shipping profile"
											}
										]
									},
									"parameters": [
										{
											"id": 28765,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 28314,
													"name": "UpdateShippingProfileDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 28766,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 28108,
													"name": "ShippingProfileDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 28767,
									"name": "updateShippingProfiles",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 28768,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 28314,
												"name": "UpdateShippingProfileDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28769,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 28108,
												"name": "ShippingProfileDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 28770,
							"name": "deleteShippingProfiles",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28771,
									"name": "deleteShippingProfiles",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Delete a shipping profile"
											}
										]
									},
									"parameters": [
										{
											"id": 28772,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 28773,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 28774,
									"name": "deleteShippingProfiles",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 28775,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 28776,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 28777,
							"name": "softDeleteShippingProfiles",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28778,
									"name": "softDeleteShippingProfiles",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Soft delete shipping profiles"
											}
										]
									},
									"typeParameter": [
										{
											"id": 28779,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 28780,
											"name": "shippingProfileIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 28781,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 27945,
												"typeArguments": [
													{
														"type": "reference",
														"target": 28779,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "SoftDeleteReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28782,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 28783,
							"name": "restoreShippingProfiles",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28784,
									"name": "restoreShippingProfiles",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Restore shipping profiles"
											}
										]
									},
									"typeParameter": [
										{
											"id": 28785,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 28786,
											"name": "shippingProfileIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 28787,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 27948,
												"typeArguments": [
													{
														"type": "reference",
														"target": 28785,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RestoreReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28788,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 28789,
							"name": "retrieveShippingOptionRule",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28790,
									"name": "retrieveShippingOptionRule",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Retrieve a shipping option rule"
											}
										]
									},
									"parameters": [
										{
											"id": 28791,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 28792,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 27592,
												"typeArguments": [
													{
														"type": "reference",
														"target": 28124,
														"name": "ShippingOptionRuleDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28793,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 28124,
												"name": "ShippingOptionRuleDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 28794,
							"name": "listShippingOptionRules",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28795,
									"name": "listShippingOptionRules",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "List shipping option rules"
											}
										]
									},
									"parameters": [
										{
											"id": 28796,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 28136,
												"name": "FilterableShippingOptionRuleProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28797,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 27592,
												"typeArguments": [
													{
														"type": "reference",
														"target": 28124,
														"name": "ShippingOptionRuleDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28798,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 28124,
													"name": "ShippingOptionRuleDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 28799,
							"name": "listAndCountShippingOptionRules",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28800,
									"name": "listAndCountShippingOptionRules",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "List and count shipping option rules"
											}
										]
									},
									"parameters": [
										{
											"id": 28801,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 28136,
												"name": "FilterableShippingOptionRuleProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28802,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 27592,
												"typeArguments": [
													{
														"type": "reference",
														"target": 28124,
														"name": "ShippingOptionRuleDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28803,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 28124,
															"name": "ShippingOptionRuleDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 28804,
							"name": "createShippingOptionRules",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28805,
									"name": "createShippingOptionRules",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Create a new shipping option rules"
											}
										]
									},
									"parameters": [
										{
											"id": 28806,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 28330,
													"name": "CreateShippingOptionRuleDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 28807,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 28124,
													"name": "ShippingOptionRuleDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 28808,
									"name": "createShippingOptionRules",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 28809,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 28330,
												"name": "CreateShippingOptionRuleDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28810,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 28124,
												"name": "ShippingOptionRuleDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 28811,
							"name": "updateShippingOptionRules",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28812,
									"name": "updateShippingOptionRules",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Update a shipping option rule"
											}
										]
									},
									"parameters": [
										{
											"id": 28813,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 28335,
													"name": "UpdateShippingOptionRuleDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 28814,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 28124,
													"name": "ShippingOptionRuleDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 28815,
									"name": "updateShippingOptionRules",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 28816,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 28335,
												"name": "UpdateShippingOptionRuleDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28817,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 28124,
												"name": "ShippingOptionRuleDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 28818,
							"name": "deleteShippingOptionRules",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28819,
									"name": "deleteShippingOptionRules",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Delete a shipping option rule"
											}
										]
									},
									"parameters": [
										{
											"id": 28820,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 28821,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 28822,
									"name": "deleteShippingOptionRules",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 28823,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 28824,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 28825,
							"name": "retrieveShippingOptionType",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28826,
									"name": "retrieveShippingOptionType",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Retrieve a shipping option type"
											}
										]
									},
									"parameters": [
										{
											"id": 28827,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 28828,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 27592,
												"typeArguments": [
													{
														"type": "reference",
														"target": 28192,
														"name": "ShippingOptionTypeDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28829,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 28192,
												"name": "ShippingOptionTypeDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 28830,
							"name": "listShippingOptionTypes",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28831,
									"name": "listShippingOptionTypes",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "List shipping option types"
											}
										]
									},
									"parameters": [
										{
											"id": 28832,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 28202,
												"name": "FilterableShippingOptionTypeProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28833,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 27592,
												"typeArguments": [
													{
														"type": "reference",
														"target": 28192,
														"name": "ShippingOptionTypeDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28834,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 28192,
													"name": "ShippingOptionTypeDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 28835,
							"name": "listAndCountShippingOptionTypes",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28836,
									"name": "listAndCountShippingOptionTypes",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "List and count shipping options types"
											}
										]
									},
									"parameters": [
										{
											"id": 28837,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 28202,
												"name": "FilterableShippingOptionTypeProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28838,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 27592,
												"typeArguments": [
													{
														"type": "reference",
														"target": 28192,
														"name": "ShippingOptionTypeDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28839,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 28192,
															"name": "ShippingOptionTypeDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 28840,
							"name": "deleteShippingOptionTypes",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28841,
									"name": "deleteShippingOptionTypes",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "delete a shipping option type"
											}
										]
									},
									"parameters": [
										{
											"id": 28842,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 28843,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 28844,
									"name": "deleteShippingOptionTypes",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 28845,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 28846,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 28847,
							"name": "retrieveFulfillment",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28848,
									"name": "retrieveFulfillment",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Retrieve a fulfillment"
											}
										]
									},
									"parameters": [
										{
											"id": 28849,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 28850,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 27592,
												"typeArguments": [
													{
														"type": "reference",
														"target": 28255,
														"name": "FulfillmentDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28851,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 28255,
												"name": "FulfillmentDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 28852,
							"name": "listFulfillments",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28853,
									"name": "listFulfillments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "List fulfillments"
											}
										]
									},
									"parameters": [
										{
											"id": 28854,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 28274,
												"name": "FilterableFulfillmentProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28855,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 27592,
												"typeArguments": [
													{
														"type": "reference",
														"target": 28255,
														"name": "FulfillmentDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28856,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 28255,
													"name": "FulfillmentDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 28857,
							"name": "listAndCountFulfillments",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28858,
									"name": "listAndCountFulfillments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "List and count fulfillments"
											}
										]
									},
									"parameters": [
										{
											"id": 28859,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 28274,
												"name": "FilterableFulfillmentProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28860,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 27592,
												"typeArguments": [
													{
														"type": "reference",
														"target": 28255,
														"name": "FulfillmentDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28861,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 28255,
															"name": "FulfillmentDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 28862,
							"name": "createFulfillment",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28863,
									"name": "createFulfillment",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Create a new fulfillment including into the third party provider"
											}
										]
									},
									"parameters": [
										{
											"id": 28864,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 28450,
												"name": "CreateFulfillmentDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28865,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 28255,
												"name": "FulfillmentDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 28866,
							"name": "updateFulfillment",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28867,
									"name": "updateFulfillment",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Update a fulfillment"
											}
										]
									},
									"parameters": [
										{
											"id": 28868,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 28869,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 28464,
												"name": "UpdateFulfillmentDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 28870,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 28255,
												"name": "FulfillmentDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 28871,
							"name": "cancelFulfillment",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28872,
									"name": "cancelFulfillment",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Cancel the given fulfillment including into the third party provider"
											}
										]
									},
									"parameters": [
										{
											"id": 28873,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 28874,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 28255,
												"name": "FulfillmentDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 28875,
							"name": "retrieveFulfillmentOptions",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28876,
									"name": "retrieveFulfillmentOptions",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Retrieve the available fulfillment options for the given data."
											}
										]
									},
									"parameters": [
										{
											"id": 28877,
											"name": "providerId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
														"qualifiedName": "Record"
													},
													"typeArguments": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "unknown"
														}
													],
													"name": "Record",
													"package": "typescript"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 28878,
							"name": "validateFulfillmentOption",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28879,
									"name": "validateFulfillmentOption",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Validate the given shipping option fulfillment option from the provided data"
											}
										]
									},
									"parameters": [
										{
											"id": 28880,
											"name": "providerId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 28881,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 28882,
							"name": "validateShippingOption",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 28883,
									"name": "validateShippingOption",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Validate if the given shipping option is valid for a given context"
											}
										]
									},
									"parameters": [
										{
											"id": 28884,
											"name": "shippingOptionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 28885,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								28544,
								28549,
								28554,
								28559,
								28566,
								28573,
								28580,
								28586,
								28592,
								28597,
								28602,
								28607,
								28614,
								28621,
								28628,
								28634,
								28640,
								28645,
								28650,
								28655,
								28662,
								28669,
								28676,
								28682,
								28688,
								28693,
								28698,
								28703,
								28708,
								28715,
								28722,
								28729,
								28735,
								28741,
								28746,
								28751,
								28756,
								28763,
								28770,
								28777,
								28783,
								28789,
								28794,
								28799,
								28804,
								28811,
								28818,
								28825,
								28830,
								28835,
								28840,
								28847,
								28852,
								28857,
								28862,
								28866,
								28871,
								28875,
								28878,
								28882
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 29123,
							"name": "IModuleService",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 28896,
					"name": "AddFulfillmentShippingOptionRulesWorkflowDTO",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 28897,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 28898,
									"name": "data",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 28330,
											"name": "CreateShippingOptionRuleDTO",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										28898
									]
								}
							]
						}
					}
				},
				{
					"id": 28899,
					"name": "RemoveFulfillmentShippingOptionRulesWorkflowDTO",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 28900,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 28901,
									"name": "ids",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										28901
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						28075,
						28287,
						28300,
						28247,
						28092,
						28101,
						28255,
						28274,
						28228,
						28239,
						28209,
						28219,
						28124,
						28136,
						28192,
						28202,
						28144,
						28163,
						28173,
						28108,
						28117,
						28471,
						28489,
						28484,
						28438,
						28442,
						28449,
						28450,
						28464,
						28341,
						28346,
						28352,
						28359,
						28368,
						28374,
						28380,
						28387,
						28395,
						28405,
						28409,
						28330,
						28335,
						28318,
						28323,
						28415,
						28424,
						28310,
						28314,
						28497,
						28543
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						28227,
						28143,
						28367,
						28404,
						28329,
						28896,
						28899
					]
				}
			]
		},
		{
			"id": 30594,
			"name": "CreateGeoZoneBaseDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 30595,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 28227,
						"name": "GeoZoneType",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 30596,
					"name": "service_zone_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 30597,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 30598,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						30595,
						30596,
						30597,
						30598
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 28341,
					"name": "CreateCountryGeoZoneDTO"
				},
				{
					"type": "reference",
					"target": 28346,
					"name": "CreateProvinceGeoZoneDTO"
				},
				{
					"type": "reference",
					"target": 28352,
					"name": "CreateCityGeoZoneDTO"
				},
				{
					"type": "reference",
					"target": 28359,
					"name": "CreateZipGeoZoneDTO"
				}
			]
		},
		{
			"id": 30393,
			"name": "JoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 30394,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 30395,
							"name": "alias",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30396,
							"name": "foreignKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30397,
							"name": "primaryKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30398,
							"name": "serviceName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30399,
							"name": "isInternalService",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the relationship is an internal service from the medusa core\nTODO: Remove when there are no more \"internal\" services"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 30400,
							"name": "inverse",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "In an inverted relationship the foreign key is on the other service and the primary key is on the current service"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 30401,
							"name": "isList",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Force the relationship to return a list"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 30402,
							"name": "args",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Extra arguments to pass to the remoteFetchData callback"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30395,
								30396,
								30397,
								30398,
								30399,
								30400,
								30401,
								30402
							]
						}
					]
				}
			}
		},
		{
			"id": 30403,
			"name": "JoinerServiceConfigAlias",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 30404,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 30405,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						30404,
						30405
					]
				}
			]
		},
		{
			"id": 30406,
			"name": "JoinerServiceConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 30407,
					"name": "serviceName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 30408,
					"name": "alias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Property name to use as entrypoint to the service"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 30403,
								"name": "JoinerServiceConfigAlias",
								"package": "@medusajs/types"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 30403,
									"name": "JoinerServiceConfigAlias",
									"package": "@medusajs/types"
								}
							}
						]
					}
				},
				{
					"id": 30409,
					"name": "fieldAlias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "alias for deeper nested relationships (e.g. { 'price': 'prices.calculated_price_set.amount' })"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 30410,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 30411,
													"name": "path",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 30412,
													"name": "forwardArgumentsOnPath",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														30411,
														30412
													]
												}
											]
										}
									}
								]
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 30413,
					"name": "primaryKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 30414,
					"name": "relationships",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 30393,
							"name": "JoinerRelationship",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 30415,
					"name": "extends",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 30416,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 30417,
										"name": "serviceName",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 30418,
										"name": "relationship",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "reference",
											"target": 30393,
											"name": "JoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											30417,
											30418
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 30419,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						30407,
						30408,
						30409,
						30413,
						30414,
						30415,
						30419
					]
				}
			]
		},
		{
			"id": 30420,
			"name": "JoinerArgument",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 30421,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 30422,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						30421,
						30422
					]
				}
			]
		},
		{
			"id": 30423,
			"name": "JoinerDirective",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 30424,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 30425,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						30424,
						30425
					]
				}
			]
		},
		{
			"id": 30426,
			"name": "RemoteJoinerQuery",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 30427,
					"name": "service",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 30428,
					"name": "alias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 30429,
					"name": "expands",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 30430,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 30431,
										"name": "property",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 30432,
										"name": "fields",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									},
									{
										"id": 30433,
										"name": "args",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"type": {
											"type": "array",
											"elementType": {
												"type": "reference",
												"target": 30420,
												"name": "JoinerArgument",
												"package": "@medusajs/types"
											}
										}
									},
									{
										"id": 30434,
										"name": "directives",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"type": {
											"type": "reflection",
											"declaration": {
												"id": 30435,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"indexSignature": {
													"id": 30436,
													"name": "__index",
													"variant": "signature",
													"kind": 8192,
													"flags": {},
													"parameters": [
														{
															"id": 30437,
															"name": "field",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 30423,
															"name": "JoinerDirective",
															"package": "@medusajs/types"
														}
													}
												}
											}
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											30431,
											30432,
											30433,
											30434
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 30438,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 30439,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 30420,
							"name": "JoinerArgument",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 30440,
					"name": "directives",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 30441,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"indexSignature": {
								"id": 30442,
								"name": "__index",
								"variant": "signature",
								"kind": 8192,
								"flags": {},
								"parameters": [
									{
										"id": 30443,
										"name": "field",
										"variant": "param",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": 30423,
										"name": "JoinerDirective",
										"package": "@medusajs/types"
									}
								}
							}
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						30427,
						30428,
						30429,
						30438,
						30439,
						30440
					]
				}
			]
		},
		{
			"id": 30444,
			"name": "RemoteJoinerOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 30445,
					"name": "throwIfKeyNotFound",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 30446,
					"name": "throwIfRelationNotFound",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						30445,
						30446
					]
				}
			]
		},
		{
			"id": 30447,
			"name": "RemoteNestedExpands",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"indexSignature": {
				"id": 30448,
				"name": "__index",
				"variant": "signature",
				"kind": 8192,
				"flags": {},
				"parameters": [
					{
						"id": 30449,
						"name": "key",
						"variant": "param",
						"kind": 32768,
						"flags": {},
						"type": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				],
				"type": {
					"type": "reflection",
					"declaration": {
						"id": 30450,
						"name": "__type",
						"variant": "declaration",
						"kind": 65536,
						"flags": {},
						"children": [
							{
								"id": 30451,
								"name": "fields",
								"variant": "declaration",
								"kind": 1024,
								"flags": {},
								"type": {
									"type": "array",
									"elementType": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							},
							{
								"id": 30452,
								"name": "args",
								"variant": "declaration",
								"kind": 1024,
								"flags": {
									"isOptional": true
								},
								"type": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": 30420,
										"name": "JoinerArgument",
										"package": "@medusajs/types"
									}
								}
							},
							{
								"id": 30453,
								"name": "expands",
								"variant": "declaration",
								"kind": 1024,
								"flags": {
									"isOptional": true
								},
								"type": {
									"type": "reference",
									"target": 30447,
									"name": "RemoteNestedExpands",
									"package": "@medusajs/types"
								}
							}
						],
						"groups": [
							{
								"title": "Properties",
								"children": [
									30451,
									30452,
									30453
								]
							}
						]
					}
				}
			}
		},
		{
			"id": 30454,
			"name": "RemoteExpandProperty",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 30455,
					"name": "property",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 30456,
					"name": "parent",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 30457,
					"name": "parentConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 30406,
						"name": "JoinerServiceConfig",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 30458,
					"name": "serviceConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 30406,
						"name": "JoinerServiceConfig",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 30459,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 30460,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 30420,
							"name": "JoinerArgument",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 30461,
					"name": "expands",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 30447,
						"name": "RemoteNestedExpands",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						30455,
						30456,
						30457,
						30458,
						30459,
						30460,
						30461
					]
				}
			]
		},
		{
			"id": 30462,
			"name": "ILinkModule",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 30463,
					"name": "list",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 30464,
							"name": "list",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 30465,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 30466,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 27592,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 30467,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 30532,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 30468,
					"name": "listAndCount",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 30469,
							"name": "listAndCount",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 30470,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 30471,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 27592,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 30472,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 30532,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "unknown"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 30473,
					"name": "create",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 30474,
							"name": "create",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 30475,
									"name": "primaryKeyOrBulkData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"type": "array",
												"elementType": {
													"type": "tuple",
													"elements": [
														{
															"type": "union",
															"types": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "array",
																	"elementType": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														},
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "optional",
															"elementType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 30476,
									"name": "foreignKeyData",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 30477,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 30532,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 30478,
					"name": "dismiss",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 30479,
							"name": "dismiss",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 30480,
									"name": "primaryKeyOrBulkData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"type": "array",
												"elementType": {
													"type": "tuple",
													"elements": [
														{
															"type": "union",
															"types": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "array",
																	"elementType": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														},
														{
															"type": "intrinsic",
															"name": "string"
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 30481,
									"name": "foreignKeyData",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 30482,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 30532,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 30483,
					"name": "delete",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 30484,
							"name": "delete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 30485,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 30486,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 30532,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 30487,
					"name": "softDelete",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 30488,
							"name": "softDelete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 30489,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 30490,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 27945,
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 30491,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 30532,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "unknown"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 30492,
					"name": "restore",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 30493,
							"name": "restore",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 30494,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 30495,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 27948,
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 30496,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 30532,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "unknown"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						30463,
						30468,
						30473,
						30478,
						30483,
						30487,
						30492
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 29123,
					"name": "IModuleService",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 28902,
			"name": "LoggerTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 28903,
					"name": "Logger",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 28904,
							"name": "panic",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 28905,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 28906,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 28907,
													"name": "data",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 28908,
							"name": "shouldLog",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 28909,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 28910,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 28911,
													"name": "level",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 28912,
							"name": "setLogLevel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 28913,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 28914,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 28915,
													"name": "level",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 28916,
							"name": "unsetLogLevel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 28917,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 28918,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 28919,
							"name": "activity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 28920,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 28921,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 28922,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 28923,
													"name": "config",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 28924,
							"name": "progress",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 28925,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 28926,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 28927,
													"name": "activityId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 28928,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 28929,
							"name": "error",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 28930,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 28931,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 28932,
													"name": "messageOrError",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 28933,
													"name": "error",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 28934,
							"name": "failure",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 28935,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 28936,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 28937,
													"name": "activityId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 28938,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 28939,
							"name": "success",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 28940,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 28941,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 28942,
													"name": "activityId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 28943,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 28944,
							"name": "debug",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 28945,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 28946,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 28947,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 28948,
							"name": "info",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 28949,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 28950,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 28951,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 28952,
							"name": "warn",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 28953,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 28954,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 28955,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 28956,
							"name": "log",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 28957,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 28958,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 28959,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isRest": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								28904,
								28908,
								28912,
								28916,
								28919,
								28924,
								28929,
								28934,
								28939,
								28944,
								28948,
								28952,
								28956
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						28903
					]
				}
			]
		},
		{
			"id": 28960,
			"name": "ModulesSdkTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 28961,
					"name": "Constructor",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 28965,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 28962,
							"name": "__type",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"signatures": [
								{
									"id": 28963,
									"name": "__type",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"parameters": [
										{
											"id": 28964,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 28965,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								}
							]
						}
					}
				},
				{
					"id": 28966,
					"name": "LogLevel",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "query"
							},
							{
								"type": "literal",
								"value": "schema"
							},
							{
								"type": "literal",
								"value": "error"
							},
							{
								"type": "literal",
								"value": "warn"
							},
							{
								"type": "literal",
								"value": "info"
							},
							{
								"type": "literal",
								"value": "log"
							},
							{
								"type": "literal",
								"value": "migration"
							}
						]
					}
				},
				{
					"id": 28967,
					"name": "LoggerOptions",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "all"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 28966,
									"name": "LogLevel",
									"package": "@medusajs/types"
								}
							}
						]
					}
				},
				{
					"id": 28968,
					"name": "MODULE_SCOPE",
					"variant": "declaration",
					"kind": 8,
					"flags": {},
					"children": [
						{
							"id": 28969,
							"name": "INTERNAL",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "internal"
							}
						},
						{
							"id": 28970,
							"name": "EXTERNAL",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "external"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								28969,
								28970
							]
						}
					]
				},
				{
					"id": 28971,
					"name": "MODULE_RESOURCE_TYPE",
					"variant": "declaration",
					"kind": 8,
					"flags": {},
					"children": [
						{
							"id": 28972,
							"name": "SHARED",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "shared"
							}
						},
						{
							"id": 28973,
							"name": "ISOLATED",
							"variant": "declaration",
							"kind": 16,
							"flags": {},
							"type": {
								"type": "literal",
								"value": "isolated"
							}
						}
					],
					"groups": [
						{
							"title": "Enumeration Members",
							"children": [
								28972,
								28973
							]
						}
					]
				},
				{
					"id": 28974,
					"name": "InternalModuleDeclaration",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 28975,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 28976,
									"name": "scope",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 28969,
										"name": "MODULE_SCOPE.INTERNAL",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 28977,
									"name": "resources",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 28971,
										"name": "MODULE_RESOURCE_TYPE",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 28978,
									"name": "dependencies",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 28979,
									"name": "definition",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 29005,
												"name": "ModuleDefinition",
												"package": "@medusajs/types"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								},
								{
									"id": 28980,
									"name": "resolve",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": 29079,
												"name": "ModuleExports",
												"package": "@medusajs/types"
											}
										]
									}
								},
								{
									"id": 28981,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 28982,
									"name": "alias",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If multiple modules are registered with the same key, the alias can be used to differentiate them"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 28983,
									"name": "main",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If the module is the main module for the key when multiple ones are registered"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 28984,
									"name": "worker_mode",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "shared"
											},
											{
												"type": "literal",
												"value": "worker"
											},
											{
												"type": "literal",
												"value": "server"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										28976,
										28977,
										28978,
										28979,
										28980,
										28981,
										28982,
										28983,
										28984
									]
								}
							]
						}
					}
				},
				{
					"id": 28985,
					"name": "ExternalModuleDeclaration",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 28986,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 28987,
									"name": "scope",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 28970,
										"name": "MODULE_SCOPE.EXTERNAL",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 28988,
									"name": "definition",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 29005,
												"name": "ModuleDefinition",
												"package": "@medusajs/types"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								},
								{
									"id": 28989,
									"name": "server",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 28990,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 28991,
													"name": "type",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "literal",
														"value": "http"
													}
												},
												{
													"id": 28992,
													"name": "url",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 28993,
													"name": "keepAlive",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														28991,
														28992,
														28993
													]
												}
											]
										}
									}
								},
								{
									"id": 28994,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 28995,
									"name": "alias",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If multiple modules are registered with the same key, the alias can be used to differentiate them"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 28996,
									"name": "main",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If the module is the main module for the key when multiple ones are registered"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										28987,
										28988,
										28989,
										28994,
										28995,
										28996
									]
								}
							]
						}
					}
				},
				{
					"id": 28997,
					"name": "ModuleResolution",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 28998,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 28999,
									"name": "resolutionPath",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": false
											}
										]
									}
								},
								{
									"id": 29000,
									"name": "definition",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 29005,
										"name": "ModuleDefinition",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 29001,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 29002,
									"name": "dependencies",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 29003,
									"name": "moduleDeclaration",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 28974,
												"name": "InternalModuleDeclaration",
												"package": "@medusajs/types"
											},
											{
												"type": "reference",
												"target": 28985,
												"name": "ExternalModuleDeclaration",
												"package": "@medusajs/types"
											}
										]
									}
								},
								{
									"id": 29004,
									"name": "moduleExports",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 29079,
										"name": "ModuleExports",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										28999,
										29000,
										29001,
										29002,
										29003,
										29004
									]
								}
							]
						}
					}
				},
				{
					"id": 29005,
					"name": "ModuleDefinition",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 29006,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 29007,
									"name": "key",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 29008,
									"name": "registrationName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 29009,
									"name": "defaultPackage",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": false
											}
										]
									}
								},
								{
									"id": 29010,
									"name": "label",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 29011,
									"name": "isRequired",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 29012,
									"name": "isQueryable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 29013,
									"name": "isLegacy",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 29014,
									"name": "dependencies",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 29015,
									"name": "defaultModuleDeclaration",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 28974,
												"name": "InternalModuleDeclaration",
												"package": "@medusajs/types"
											},
											{
												"type": "reference",
												"target": 28985,
												"name": "ExternalModuleDeclaration",
												"package": "@medusajs/types"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										29007,
										29008,
										29009,
										29010,
										29011,
										29012,
										29013,
										29014,
										29015
									]
								}
							]
						}
					}
				},
				{
					"id": 29016,
					"name": "LinkModuleDefinition",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 29017,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 29018,
									"name": "key",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 29019,
									"name": "registrationName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 29020,
									"name": "label",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 29021,
									"name": "dependencies",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 29022,
									"name": "defaultModuleDeclaration",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 28974,
										"name": "InternalModuleDeclaration",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										29018,
										29019,
										29020,
										29021,
										29022
									]
								}
							]
						}
					}
				},
				{
					"id": 29023,
					"name": "ModuleConfig",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 30599,
								"name": "ModuleDeclaration",
								"package": "@medusajs/types"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 29024,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 29025,
											"name": "module",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 29026,
											"name": "path",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 29027,
											"name": "definition",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 29005,
												"name": "ModuleDefinition",
												"package": "@medusajs/types"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												29025,
												29026,
												29027
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 29028,
					"name": "LoadedModule",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 29029,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 29030,
											"name": "__joinerConfig",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 29048,
												"name": "ModuleJoinerConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 29031,
											"name": "__definition",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 29005,
												"name": "ModuleDefinition",
												"package": "@medusajs/types"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												29030,
												29031
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 29032,
					"name": "LoaderOptions",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 29038,
							"name": "TOptions",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 29033,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 29034,
									"name": "container",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 27756,
										"name": "MedusaContainer",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 29035,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 29038,
										"name": "TOptions",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 29036,
									"name": "logger",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 28903,
										"name": "Logger",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 29037,
									"name": "dataLoaderOnly",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										29034,
										29035,
										29036,
										29037
									]
								}
							]
						}
					}
				},
				{
					"id": 29039,
					"name": "ModuleLoaderFunction",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 29040,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 29041,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 29042,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 29032,
												"name": "LoaderOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 29043,
											"name": "moduleDeclaration",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 28974,
												"name": "InternalModuleDeclaration",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 29044,
					"name": "ModulesResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 29045,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 29046,
										"name": "module",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 29047,
										"name": "resolution",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "literal",
													"value": false
												}
											]
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											29046,
											29047
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 29048,
					"name": "ModuleJoinerConfig",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 30406,
										"name": "JoinerServiceConfig",
										"package": "@medusajs/types"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "serviceName"
											},
											{
												"type": "literal",
												"value": "primaryKeys"
											},
											{
												"type": "literal",
												"value": "relationships"
											},
											{
												"type": "literal",
												"value": "extends"
											}
										]
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 29049,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 29050,
											"name": "schema",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "GraphQL schema for the all module's available entities and fields"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 29051,
											"name": "relationships",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29075,
													"name": "ModuleJoinerRelationship",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 29052,
											"name": "extends",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 29053,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 29054,
																"name": "serviceName",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															{
																"id": 29055,
																"name": "fieldAlias",
																"variant": "declaration",
																"kind": 1024,
																"flags": {
																	"isOptional": true
																},
																"type": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																		"qualifiedName": "Record"
																	},
																	"typeArguments": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "string"
																				},
																				{
																					"type": "reflection",
																					"declaration": {
																						"id": 29056,
																						"name": "__type",
																						"variant": "declaration",
																						"kind": 65536,
																						"flags": {},
																						"children": [
																							{
																								"id": 29057,
																								"name": "path",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"type": {
																									"type": "intrinsic",
																									"name": "string"
																								}
																							},
																							{
																								"id": 29058,
																								"name": "forwardArgumentsOnPath",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"type": {
																									"type": "array",
																									"elementType": {
																										"type": "intrinsic",
																										"name": "string"
																									}
																								}
																							}
																						],
																						"groups": [
																							{
																								"title": "Properties",
																								"children": [
																									29057,
																									29058
																								]
																							}
																						]
																					}
																				}
																			]
																		}
																	],
																	"name": "Record",
																	"package": "typescript"
																}
															},
															{
																"id": 29059,
																"name": "relationship",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "reference",
																	"target": 29075,
																	"name": "ModuleJoinerRelationship",
																	"package": "@medusajs/types"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	29054,
																	29055,
																	29059
																]
															}
														]
													}
												}
											}
										},
										{
											"id": 29060,
											"name": "serviceName",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 29061,
											"name": "primaryKeys",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 29062,
											"name": "isLink",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "If the module is a link module"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 29063,
											"name": "linkableKeys",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Keys that can be used to link to other modules. e.g { product_id: \"Product\" } \"Product\" being the entity it refers to"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										},
										{
											"id": 29064,
											"name": "isReadOnlyLink",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "If true it expands a RemoteQuery property but doesn't create a pivot table"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 29065,
											"name": "databaseConfig",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 29066,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 29067,
															"name": "tableName",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Name of the pivot table. If not provided it is auto generated"
																	}
																]
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 29068,
															"name": "idPrefix",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Prefix for the id column. If not provided it is \"link\""
																	}
																]
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 29069,
															"name": "extraFields",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 29070,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 29071,
																					"name": "type",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "union",
																						"types": [
																							{
																								"type": "literal",
																								"value": "date"
																							},
																							{
																								"type": "literal",
																								"value": "time"
																							},
																							{
																								"type": "literal",
																								"value": "datetime"
																							},
																							{
																								"type": "literal",
																								"value": "bigint"
																							},
																							{
																								"type": "literal",
																								"value": "blob"
																							},
																							{
																								"type": "literal",
																								"value": "uint8array"
																							},
																							{
																								"type": "literal",
																								"value": "array"
																							},
																							{
																								"type": "literal",
																								"value": "enumArray"
																							},
																							{
																								"type": "literal",
																								"value": "enum"
																							},
																							{
																								"type": "literal",
																								"value": "json"
																							},
																							{
																								"type": "literal",
																								"value": "integer"
																							},
																							{
																								"type": "literal",
																								"value": "smallint"
																							},
																							{
																								"type": "literal",
																								"value": "tinyint"
																							},
																							{
																								"type": "literal",
																								"value": "mediumint"
																							},
																							{
																								"type": "literal",
																								"value": "float"
																							},
																							{
																								"type": "literal",
																								"value": "double"
																							},
																							{
																								"type": "literal",
																								"value": "boolean"
																							},
																							{
																								"type": "literal",
																								"value": "decimal"
																							},
																							{
																								"type": "literal",
																								"value": "string"
																							},
																							{
																								"type": "literal",
																								"value": "uuid"
																							},
																							{
																								"type": "literal",
																								"value": "text"
																							}
																						]
																					}
																				},
																				{
																					"id": 29072,
																					"name": "defaultValue",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 29073,
																					"name": "nullable",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"type": {
																						"type": "intrinsic",
																						"name": "boolean"
																					}
																				},
																				{
																					"id": 29074,
																					"name": "options",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"comment": {
																						"summary": [
																							{
																								"kind": "text",
																								"text": "Mikro-orm options for the column"
																							}
																						]
																					},
																					"type": {
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																							"qualifiedName": "Record"
																						},
																						"typeArguments": [
																							{
																								"type": "intrinsic",
																								"name": "string"
																							},
																							{
																								"type": "intrinsic",
																								"name": "unknown"
																							}
																						],
																						"name": "Record",
																						"package": "typescript"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						29071,
																						29072,
																						29073,
																						29074
																					]
																				}
																			]
																		}
																	}
																],
																"name": "Record",
																"package": "typescript"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																29067,
																29068,
																29069
															]
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												29050,
												29051,
												29052,
												29060,
												29061,
												29062,
												29063,
												29064,
												29065
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 29075,
					"name": "ModuleJoinerRelationship",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 30393,
								"name": "JoinerRelationship",
								"package": "@medusajs/types"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 29076,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 29077,
											"name": "isInternalService",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "If true, the relationship is an internal service from the medusa core TODO: Remove when there are no more \"internal\" services"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 29078,
											"name": "deleteCascade",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "If true, the link joiner will cascade deleting the relationship"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												29077,
												29078
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 29079,
					"name": "ModuleExports",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 29080,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 29081,
									"name": "service",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 28961,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Constructor",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 29082,
									"name": "loaders",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 29039,
											"name": "ModuleLoaderFunction",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 29083,
									"name": "migrations",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@deprecated",
												"content": [
													{
														"kind": "text",
														"text": "property will be removed in future versions"
													}
												]
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								},
								{
									"id": 29084,
									"name": "models",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@deprecated",
												"content": [
													{
														"kind": "text",
														"text": "property will be removed in future versions"
													}
												]
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 28961,
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "any"
												}
											],
											"name": "Constructor",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 29085,
									"name": "runMigrations",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isOptional": true
									},
									"signatures": [
										{
											"id": 29086,
											"name": "runMigrations",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 29087,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 29032,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "LoaderOptions",
														"package": "@medusajs/types"
													}
												},
												{
													"id": 29088,
													"name": "moduleDeclaration",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 28974,
														"name": "InternalModuleDeclaration",
														"package": "@medusajs/types"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								},
								{
									"id": 29089,
									"name": "revertMigration",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isOptional": true
									},
									"signatures": [
										{
											"id": 29090,
											"name": "revertMigration",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 29091,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 29032,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "LoaderOptions",
														"package": "@medusajs/types"
													}
												},
												{
													"id": 29092,
													"name": "moduleDeclaration",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 28974,
														"name": "InternalModuleDeclaration",
														"package": "@medusajs/types"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										29081,
										29082,
										29083,
										29084
									]
								},
								{
									"title": "Methods",
									"children": [
										29085,
										29089
									]
								}
							]
						}
					}
				},
				{
					"id": 29093,
					"name": "ModuleServiceInitializeOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 29094,
							"name": "database",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 29095,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 29096,
											"name": "connection",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Forces to use a shared knex connection"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 29097,
											"name": "clientUrl",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 29098,
											"name": "schema",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 29099,
											"name": "host",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 29100,
											"name": "port",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 29101,
											"name": "user",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 29102,
											"name": "password",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 29103,
											"name": "database",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 29104,
											"name": "driverOptions",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "Record",
														"package": "typescript"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 29105,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 29106,
																	"name": "connection",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Record"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		],
																		"name": "Record",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		29106
																	]
																}
															]
														}
													}
												]
											}
										},
										{
											"id": 29107,
											"name": "debug",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 29108,
											"name": "pool",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												29096,
												29097,
												29098,
												29099,
												29100,
												29101,
												29102,
												29103,
												29104,
												29107,
												29108
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29094
							]
						}
					]
				},
				{
					"id": 29109,
					"name": "ModuleServiceInitializeCustomDataLayerOptions",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 29110,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 29111,
									"name": "manager",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 29112,
									"name": "repositories",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 29113,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"indexSignature": {
												"id": 29114,
												"name": "__index",
												"variant": "signature",
												"kind": 8192,
												"flags": {},
												"parameters": [
													{
														"id": 29115,
														"name": "key",
														"variant": "param",
														"kind": 32768,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"type": {
													"type": "reference",
													"target": 28961,
													"typeArguments": [
														{
															"type": "reference",
															"target": 27829,
															"name": "RepositoryService",
															"package": "@medusajs/types"
														}
													],
													"name": "Constructor",
													"package": "@medusajs/types"
												}
											}
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										29111,
										29112
									]
								}
							]
						}
					}
				},
				{
					"id": 29116,
					"name": "ModuleBootstrapDeclaration",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 28974,
								"name": "InternalModuleDeclaration",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": 28985,
								"name": "ExternalModuleDeclaration",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 29117,
					"name": "RemoteQueryFunction",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 29118,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 29119,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 29120,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"target": 30426,
														"name": "RemoteJoinerQuery",
														"package": "@medusajs/types"
													},
													{
														"type": "intrinsic",
														"name": "object"
													}
												]
											}
										},
										{
											"id": 29121,
											"name": "variables",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										},
										{
											"id": 29122,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30444,
												"name": "RemoteJoinerOptions",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Promise",
												"package": "typescript"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 29123,
					"name": "IModuleService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"extendedBy": [
						{
							"type": "reference",
							"target": 28543,
							"name": "IFulfillmentModuleService"
						},
						{
							"type": "reference",
							"target": 29911,
							"name": "IOrderModuleService"
						},
						{
							"type": "reference",
							"target": 30462,
							"name": "ILinkModule"
						}
					]
				},
				{
					"id": 29134,
					"name": "InternalModuleService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 29135,
							"name": "__container__",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"getSignature": {
								"id": 29136,
								"name": "__container__",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"type": {
									"type": "reference",
									"target": 29234,
									"name": "TContainer",
									"package": "@medusajs/types",
									"qualifiedName": "InternalModuleService.TContainer",
									"refersToTypeParameter": true
								}
							}
						},
						{
							"id": 29137,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 29138,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 29139,
											"name": "idOrObject",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 29140,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 27592,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 29141,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 29232,
												"name": "TEntity",
												"package": "@medusajs/types",
												"qualifiedName": "InternalModuleService.TEntity",
												"refersToTypeParameter": true
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 29142,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 29143,
											"name": "idOrObject",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 29144,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 27592,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 29145,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 29232,
												"name": "TEntity",
												"package": "@medusajs/types",
												"qualifiedName": "InternalModuleService.TEntity",
												"refersToTypeParameter": true
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 29146,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 29147,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 29148,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 29149,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {}
														}
													},
													{
														"type": "reference",
														"target": 27802,
														"typeArguments": [
															{
																"type": "reflection",
																"declaration": {
																	"id": 29150,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {}
																}
															}
														],
														"name": "BaseFilterable",
														"package": "@medusajs/types"
													}
												]
											}
										},
										{
											"id": 29151,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 27592,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 29152,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29232,
													"name": "TEntity",
													"package": "@medusajs/types",
													"qualifiedName": "InternalModuleService.TEntity",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 29153,
							"name": "listAndCount",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 29154,
									"name": "listAndCount",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 29155,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 29156,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {}
														}
													},
													{
														"type": "reference",
														"target": 27802,
														"typeArguments": [
															{
																"type": "reflection",
																"declaration": {
																	"id": 29157,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {}
																}
															}
														],
														"name": "BaseFilterable",
														"package": "@medusajs/types"
													}
												]
											}
										},
										{
											"id": 29158,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 27592,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 29159,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 29232,
															"name": "TEntity",
															"package": "@medusajs/types",
															"qualifiedName": "InternalModuleService.TEntity",
															"refersToTypeParameter": true
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 29160,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 29161,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 29162,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 29163,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29232,
													"name": "TEntity",
													"package": "@medusajs/types",
													"qualifiedName": "InternalModuleService.TEntity",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 29164,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 29165,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 29166,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 29232,
												"name": "TEntity",
												"package": "@medusajs/types",
												"qualifiedName": "InternalModuleService.TEntity",
												"refersToTypeParameter": true
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 29167,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 29168,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 29169,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 29170,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29232,
													"name": "TEntity",
													"package": "@medusajs/types",
													"qualifiedName": "InternalModuleService.TEntity",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 29171,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 29172,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 29173,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 29232,
												"name": "TEntity",
												"package": "@medusajs/types",
												"qualifiedName": "InternalModuleService.TEntity",
												"refersToTypeParameter": true
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 29174,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 29175,
											"name": "selectorAndData",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 29176,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 29177,
															"name": "selector",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 29178,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {}
																		}
																	},
																	{
																		"type": "reference",
																		"target": 27802,
																		"typeArguments": [
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 29179,
																					"name": "__type",
																					"variant": "declaration",
																					"kind": 65536,
																					"flags": {}
																				}
																			}
																		],
																		"name": "BaseFilterable",
																		"package": "@medusajs/types"
																	}
																]
															}
														},
														{
															"id": 29180,
															"name": "data",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																29177,
																29180
															]
														}
													]
												}
											}
										},
										{
											"id": 29181,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29232,
													"name": "TEntity",
													"package": "@medusajs/types",
													"qualifiedName": "InternalModuleService.TEntity",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 29182,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 29183,
											"name": "selectorAndData",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 29184,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 29185,
																"name": "selector",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "union",
																	"types": [
																		{
																			"type": "reflection",
																			"declaration": {
																				"id": 29186,
																				"name": "__type",
																				"variant": "declaration",
																				"kind": 65536,
																				"flags": {}
																			}
																		},
																		{
																			"type": "reference",
																			"target": 27802,
																			"typeArguments": [
																				{
																					"type": "reflection",
																					"declaration": {
																						"id": 29187,
																						"name": "__type",
																						"variant": "declaration",
																						"kind": 65536,
																						"flags": {}
																					}
																				}
																			],
																			"name": "BaseFilterable",
																			"package": "@medusajs/types"
																		}
																	]
																}
															},
															{
																"id": 29188,
																"name": "data",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	29185,
																	29188
																]
															}
														]
													}
												}
											}
										},
										{
											"id": 29189,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29232,
													"name": "TEntity",
													"package": "@medusajs/types",
													"qualifiedName": "InternalModuleService.TEntity",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 29190,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 29191,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 29192,
											"name": "idOrSelector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 29193,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 29194,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 29195,
											"name": "idOrSelector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 29196,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 29197,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 29198,
											"name": "idOrSelector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 29199,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 29200,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 29201,
											"name": "idOrSelector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "object"
												}
											}
										},
										{
											"id": 29202,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 29203,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 29204,
											"name": "idOrSelector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 29205,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 29206,
															"name": "selector",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 29207,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {}
																		}
																	},
																	{
																		"type": "reference",
																		"target": 27802,
																		"typeArguments": [
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 29208,
																					"name": "__type",
																					"variant": "declaration",
																					"kind": 65536,
																					"flags": {}
																				}
																			}
																		],
																		"name": "BaseFilterable",
																		"package": "@medusajs/types"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																29206
															]
														}
													]
												}
											}
										},
										{
											"id": 29209,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 29210,
							"name": "softDelete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 29211,
									"name": "softDelete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 29212,
											"name": "idsOrFilter",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 29213,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {}
														}
													}
												]
											}
										},
										{
											"id": 29214,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 29232,
															"name": "TEntity",
															"package": "@medusajs/types",
															"qualifiedName": "InternalModuleService.TEntity",
															"refersToTypeParameter": true
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "unknown"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 29215,
							"name": "restore",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 29216,
									"name": "restore",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 29217,
											"name": "idsOrFilter",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 29218,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {}
														}
													}
												]
											}
										},
										{
											"id": 29219,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 29232,
															"name": "TEntity",
															"package": "@medusajs/types",
															"qualifiedName": "InternalModuleService.TEntity",
															"refersToTypeParameter": true
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "unknown"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 29220,
							"name": "upsert",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 29221,
									"name": "upsert",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 29222,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 29223,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29232,
													"name": "TEntity",
													"package": "@medusajs/types",
													"qualifiedName": "InternalModuleService.TEntity",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 29224,
									"name": "upsert",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 29225,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 29226,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 29232,
												"name": "TEntity",
												"package": "@medusajs/types",
												"qualifiedName": "InternalModuleService.TEntity",
												"refersToTypeParameter": true
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 29227,
							"name": "upsertWithReplace",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 29228,
									"name": "upsertWithReplace",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 29229,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 29230,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 27826,
												"typeArguments": [
													{
														"type": "reference",
														"target": 29232,
														"name": "TEntity",
														"package": "@medusajs/types",
														"qualifiedName": "InternalModuleService.TEntity",
														"refersToTypeParameter": true
													}
												],
												"name": "UpsertWithReplaceConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 29231,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29232,
													"name": "TEntity",
													"package": "@medusajs/types",
													"qualifiedName": "InternalModuleService.TEntity",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Accessors",
							"children": [
								29135
							]
						},
						{
							"title": "Methods",
							"children": [
								29137,
								29146,
								29153,
								29160,
								29167,
								29190,
								29210,
								29215,
								29220,
								29227
							]
						}
					],
					"typeParameters": [
						{
							"id": 29232,
							"name": "TEntity",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 29233,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						},
						{
							"id": 29234,
							"name": "TContainer",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "object"
							},
							"default": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					]
				},
				{
					"id": 29235,
					"name": "ModuleProviderExports",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 29236,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 29237,
									"name": "services",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 28961,
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "any"
												}
											],
											"name": "Constructor",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										29237
									]
								}
							]
						}
					}
				},
				{
					"id": 29238,
					"name": "ModuleProvider",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 29239,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 29240,
									"name": "resolve",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": 29235,
												"name": "ModuleProviderExports",
												"package": "@medusajs/types"
											}
										]
									}
								},
								{
									"id": 29241,
									"name": "provider_name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 29242,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										29240,
										29241,
										29242
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"children": [
						28968,
						28971
					]
				},
				{
					"title": "Interfaces",
					"children": [
						29093,
						29123,
						29134
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						28961,
						28966,
						28967,
						28974,
						28985,
						28997,
						29005,
						29016,
						29023,
						29028,
						29032,
						29039,
						29044,
						29048,
						29075,
						29079,
						29109,
						29116,
						29117,
						29235,
						29238
					]
				}
			]
		},
		{
			"id": 30599,
			"name": "ModuleDeclaration",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 28985,
						"name": "ExternalModuleDeclaration",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 28974,
						"name": "InternalModuleDeclaration",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 29243,
			"name": "OrderTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 29244,
					"name": "OrderSummaryDTO",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 29245,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 29246,
									"name": "total",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 29247,
									"name": "subtotal",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 29248,
									"name": "total_tax",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 29249,
									"name": "ordered_total",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 29250,
									"name": "fulfilled_total",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 29251,
									"name": "returned_total",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 29252,
									"name": "return_request_total",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 29253,
									"name": "write_off_total",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 29254,
									"name": "projected_total",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 29255,
									"name": "net_total",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 29256,
									"name": "net_subtotal",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 29257,
									"name": "net_total_tax",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 29258,
									"name": "future_total",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 29259,
									"name": "future_subtotal",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 29260,
									"name": "future_total_tax",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 29261,
									"name": "future_projected_total",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 29262,
									"name": "balance",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 29263,
									"name": "future_balance",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										29246,
										29247,
										29248,
										29249,
										29250,
										29251,
										29252,
										29253,
										29254,
										29255,
										29256,
										29257,
										29258,
										29259,
										29260,
										29261,
										29262,
										29263
									]
								}
							]
						}
					}
				},
				{
					"id": 29264,
					"name": "OrderAdjustmentLineDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 29265,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the adjustment line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29266,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The code of the adjustment line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29267,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The amount of the adjustment line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 29268,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated order"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29269,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The description of the adjustment line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29270,
							"name": "promotion_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated promotion"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29271,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated provider"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29272,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the adjustment line was created"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 29273,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the adjustment line was updated"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29265,
								29266,
								29267,
								29268,
								29269,
								29270,
								29271,
								29272,
								29273
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 29274,
							"name": "OrderShippingMethodAdjustmentDTO"
						},
						{
							"type": "reference",
							"target": 29286,
							"name": "OrderLineItemAdjustmentDTO"
						}
					]
				},
				{
					"id": 29274,
					"name": "OrderShippingMethodAdjustmentDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 29277,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the adjustment line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29265,
								"name": "OrderAdjustmentLineDTO.id"
							}
						},
						{
							"id": 29278,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The code of the adjustment line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29266,
								"name": "OrderAdjustmentLineDTO.code"
							}
						},
						{
							"id": 29279,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The amount of the adjustment line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29267,
								"name": "OrderAdjustmentLineDTO.amount"
							}
						},
						{
							"id": 29280,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated order"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29268,
								"name": "OrderAdjustmentLineDTO.order_id"
							}
						},
						{
							"id": 29281,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The description of the adjustment line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29269,
								"name": "OrderAdjustmentLineDTO.description"
							}
						},
						{
							"id": 29282,
							"name": "promotion_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated promotion"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29270,
								"name": "OrderAdjustmentLineDTO.promotion_id"
							}
						},
						{
							"id": 29283,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated provider"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29271,
								"name": "OrderAdjustmentLineDTO.provider_id"
							}
						},
						{
							"id": 29284,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the adjustment line was created"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29272,
								"name": "OrderAdjustmentLineDTO.created_at"
							}
						},
						{
							"id": 29285,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the adjustment line was updated"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29273,
								"name": "OrderAdjustmentLineDTO.updated_at"
							}
						},
						{
							"id": 29275,
							"name": "shipping_method",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated shipping method"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 29345,
								"name": "OrderShippingMethodDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 29276,
							"name": "shipping_method_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated shipping method"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29277,
								29278,
								29279,
								29280,
								29281,
								29282,
								29283,
								29284,
								29285,
								29275,
								29276
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 29264,
							"name": "OrderAdjustmentLineDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 29286,
					"name": "OrderLineItemAdjustmentDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 29289,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the adjustment line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29265,
								"name": "OrderAdjustmentLineDTO.id"
							}
						},
						{
							"id": 29290,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The code of the adjustment line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29266,
								"name": "OrderAdjustmentLineDTO.code"
							}
						},
						{
							"id": 29291,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The amount of the adjustment line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29267,
								"name": "OrderAdjustmentLineDTO.amount"
							}
						},
						{
							"id": 29292,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated order"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29268,
								"name": "OrderAdjustmentLineDTO.order_id"
							}
						},
						{
							"id": 29293,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The description of the adjustment line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29269,
								"name": "OrderAdjustmentLineDTO.description"
							}
						},
						{
							"id": 29294,
							"name": "promotion_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated promotion"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29270,
								"name": "OrderAdjustmentLineDTO.promotion_id"
							}
						},
						{
							"id": 29295,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated provider"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29271,
								"name": "OrderAdjustmentLineDTO.provider_id"
							}
						},
						{
							"id": 29296,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the adjustment line was created"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29272,
								"name": "OrderAdjustmentLineDTO.created_at"
							}
						},
						{
							"id": 29297,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the adjustment line was updated"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29273,
								"name": "OrderAdjustmentLineDTO.updated_at"
							}
						},
						{
							"id": 29287,
							"name": "item",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated line item"
									}
								],
								"modifierTags": [
									"@expandable"
								]
							},
							"type": {
								"type": "reference",
								"target": 29376,
								"name": "OrderLineItemDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 29288,
							"name": "item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated line item"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29289,
								29290,
								29291,
								29292,
								29293,
								29294,
								29295,
								29296,
								29297,
								29287,
								29288
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 29264,
							"name": "OrderAdjustmentLineDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 29298,
					"name": "OrderTaxLineDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 29299,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the tax line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29300,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The description of the tax line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29301,
							"name": "tax_rate_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated tax rate"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29302,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The code of the tax line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29303,
							"name": "rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The rate of the tax line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 29304,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated provider"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29305,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the tax line was created"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 29306,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the tax line was updated"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29299,
								29300,
								29301,
								29302,
								29303,
								29304,
								29305,
								29306
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 29307,
							"name": "OrderShippingMethodTaxLineDTO"
						},
						{
							"type": "reference",
							"target": 29318,
							"name": "OrderLineItemTaxLineDTO"
						}
					]
				},
				{
					"id": 29307,
					"name": "OrderShippingMethodTaxLineDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 29310,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the tax line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29299,
								"name": "OrderTaxLineDTO.id"
							}
						},
						{
							"id": 29311,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The description of the tax line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29300,
								"name": "OrderTaxLineDTO.description"
							}
						},
						{
							"id": 29312,
							"name": "tax_rate_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated tax rate"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29301,
								"name": "OrderTaxLineDTO.tax_rate_id"
							}
						},
						{
							"id": 29313,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The code of the tax line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29302,
								"name": "OrderTaxLineDTO.code"
							}
						},
						{
							"id": 29314,
							"name": "rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The rate of the tax line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29303,
								"name": "OrderTaxLineDTO.rate"
							}
						},
						{
							"id": 29315,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated provider"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29304,
								"name": "OrderTaxLineDTO.provider_id"
							}
						},
						{
							"id": 29316,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the tax line was created"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29305,
								"name": "OrderTaxLineDTO.created_at"
							}
						},
						{
							"id": 29317,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the tax line was updated"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29306,
								"name": "OrderTaxLineDTO.updated_at"
							}
						},
						{
							"id": 29308,
							"name": "shipping_method",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated shipping method"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 29345,
								"name": "OrderShippingMethodDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 29309,
							"name": "shipping_method_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated shipping method"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29310,
								29311,
								29312,
								29313,
								29314,
								29315,
								29316,
								29317,
								29308,
								29309
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 29298,
							"name": "OrderTaxLineDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 29318,
					"name": "OrderLineItemTaxLineDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 29321,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the tax line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29299,
								"name": "OrderTaxLineDTO.id"
							}
						},
						{
							"id": 29322,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The description of the tax line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29300,
								"name": "OrderTaxLineDTO.description"
							}
						},
						{
							"id": 29323,
							"name": "tax_rate_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated tax rate"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29301,
								"name": "OrderTaxLineDTO.tax_rate_id"
							}
						},
						{
							"id": 29324,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The code of the tax line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29302,
								"name": "OrderTaxLineDTO.code"
							}
						},
						{
							"id": 29325,
							"name": "rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The rate of the tax line"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29303,
								"name": "OrderTaxLineDTO.rate"
							}
						},
						{
							"id": 29326,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated provider"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29304,
								"name": "OrderTaxLineDTO.provider_id"
							}
						},
						{
							"id": 29327,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the tax line was created"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29305,
								"name": "OrderTaxLineDTO.created_at"
							}
						},
						{
							"id": 29328,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the tax line was updated"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29306,
								"name": "OrderTaxLineDTO.updated_at"
							}
						},
						{
							"id": 29319,
							"name": "item",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated line item"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 29376,
								"name": "OrderLineItemDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 29320,
							"name": "item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated line item"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29321,
								29322,
								29323,
								29324,
								29325,
								29326,
								29327,
								29328,
								29319,
								29320
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 29298,
							"name": "OrderTaxLineDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 29329,
					"name": "OrderAddressDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 29330,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the address"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29331,
							"name": "customer_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The customer ID of the address"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29332,
							"name": "first_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The first name of the address"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29333,
							"name": "last_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The last name of the address"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29334,
							"name": "phone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The phone number of the address"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29335,
							"name": "company",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The company of the address"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29336,
							"name": "address_1",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The first address line of the address"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29337,
							"name": "address_2",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The second address line of the address"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29338,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The city of the address"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29339,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The country code of the address"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29340,
							"name": "province",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The province/state of the address"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29341,
							"name": "postal_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The postal code of the address"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29342,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 29343,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the address was created."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 29344,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the address was updated."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29330,
								29331,
								29332,
								29333,
								29334,
								29335,
								29336,
								29337,
								29338,
								29339,
								29340,
								29341,
								29342,
								29343,
								29344
							]
						}
					]
				},
				{
					"id": 29345,
					"name": "OrderShippingMethodDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 29346,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the shipping method"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29347,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated order"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29348,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the shipping method"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29349,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The description of the shipping method"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29350,
							"name": "unit_price",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The price of the shipping method"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 29351,
							"name": "is_tax_inclusive",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the shipping method price is tax inclusive or not"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 29352,
							"name": "shipping_option_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the shipping option the method was created from"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29353,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Additional data needed for fulfillment."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 29354,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 29355,
							"name": "tax_lines",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated tax lines."
									}
								],
								"modifierTags": [
									"@expandable"
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 29307,
									"name": "OrderShippingMethodTaxLineDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 29356,
							"name": "adjustments",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated adjustments."
									}
								],
								"modifierTags": [
									"@expandable"
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 29274,
									"name": "OrderShippingMethodAdjustmentDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 29357,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the shipping method was created."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 29358,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the shipping method was updated."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 29359,
							"name": "total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 29360,
							"name": "subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 29361,
							"name": "tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 29362,
							"name": "discount_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 29363,
							"name": "discount_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29346,
								29347,
								29348,
								29349,
								29350,
								29351,
								29352,
								29353,
								29354,
								29355,
								29356,
								29357,
								29358,
								29359,
								29360,
								29361,
								29362,
								29363
							]
						}
					]
				},
				{
					"id": 29364,
					"name": "OrderLineItemTotalsDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 29365,
							"name": "original_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 29366,
							"name": "original_subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 29367,
							"name": "original_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 29368,
							"name": "item_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 29369,
							"name": "item_subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 29370,
							"name": "item_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 29371,
							"name": "total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 29372,
							"name": "subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 29373,
							"name": "tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 29374,
							"name": "discount_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 29375,
							"name": "discount_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29365,
								29366,
								29367,
								29368,
								29369,
								29370,
								29371,
								29372,
								29373,
								29374,
								29375
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 29376,
							"name": "OrderLineItemDTO"
						}
					]
				},
				{
					"id": 29376,
					"name": "OrderLineItemDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 29405,
							"name": "original_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29365,
								"name": "OrderLineItemTotalsDTO.original_total"
							}
						},
						{
							"id": 29406,
							"name": "original_subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29366,
								"name": "OrderLineItemTotalsDTO.original_subtotal"
							}
						},
						{
							"id": 29407,
							"name": "original_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29367,
								"name": "OrderLineItemTotalsDTO.original_tax_total"
							}
						},
						{
							"id": 29408,
							"name": "item_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29368,
								"name": "OrderLineItemTotalsDTO.item_total"
							}
						},
						{
							"id": 29409,
							"name": "item_subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29369,
								"name": "OrderLineItemTotalsDTO.item_subtotal"
							}
						},
						{
							"id": 29410,
							"name": "item_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29370,
								"name": "OrderLineItemTotalsDTO.item_tax_total"
							}
						},
						{
							"id": 29411,
							"name": "total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29371,
								"name": "OrderLineItemTotalsDTO.total"
							}
						},
						{
							"id": 29412,
							"name": "subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29372,
								"name": "OrderLineItemTotalsDTO.subtotal"
							}
						},
						{
							"id": 29413,
							"name": "tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29373,
								"name": "OrderLineItemTotalsDTO.tax_total"
							}
						},
						{
							"id": 29414,
							"name": "discount_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29374,
								"name": "OrderLineItemTotalsDTO.discount_total"
							}
						},
						{
							"id": 29415,
							"name": "discount_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29375,
								"name": "OrderLineItemTotalsDTO.discount_tax_total"
							}
						},
						{
							"id": 29377,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the order line item."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29378,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The title of the order line item."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29379,
							"name": "subtitle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The subtitle of the order line item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 29380,
							"name": "thumbnail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The thumbnail of the order line item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 29381,
							"name": "variant_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the variant associated with the order line item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 29382,
							"name": "product_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the product associated with the order line item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 29383,
							"name": "product_title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The title of the product associated with the order line item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 29384,
							"name": "product_description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The description of the product associated with the order line item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 29385,
							"name": "product_subtitle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The subtitle of the product associated with the order line item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 29386,
							"name": "product_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the product associated with the order line item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 29387,
							"name": "product_collection",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The collection of the product associated with the order line item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 29388,
							"name": "product_handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The handle of the product associated with the order line item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 29389,
							"name": "variant_sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The SKU (stock keeping unit) of the variant associated with the order line item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 29390,
							"name": "variant_barcode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The barcode of the variant associated with the order line item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 29391,
							"name": "variant_title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The title of the variant associated with the order line item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 29392,
							"name": "variant_option_values",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The option values of the variant associated with the order line item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 29393,
							"name": "requires_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether the order line item requires shipping."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 29394,
							"name": "is_discountable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether the order line item is discountable."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 29395,
							"name": "is_tax_inclusive",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether the order line item price is tax inclusive."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 29396,
							"name": "compare_at_unit_price",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The compare at unit price of the order line item."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 29397,
							"name": "raw_compare_at_unit_price",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The raw compare at unit price of the order line item."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 30544,
								"name": "BigNumberRawValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 29398,
							"name": "unit_price",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The unit price of the order line item."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 29399,
							"name": "raw_unit_price",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The raw unit price of the order line item."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 30544,
								"name": "BigNumberRawValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 29400,
							"name": "tax_lines",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated tax lines."
									}
								],
								"modifierTags": [
									"@expandable"
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 29318,
									"name": "OrderLineItemTaxLineDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 29401,
							"name": "adjustments",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated adjustments."
									}
								],
								"modifierTags": [
									"@expandable"
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 29286,
									"name": "OrderLineItemAdjustmentDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 29402,
							"name": "detail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the item"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 29416,
								"name": "OrderItemDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 29403,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date when the order line item was created."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 29404,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date when the order line item was last updated."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29405,
								29406,
								29407,
								29408,
								29409,
								29410,
								29411,
								29412,
								29413,
								29414,
								29415,
								29377,
								29378,
								29379,
								29380,
								29381,
								29382,
								29383,
								29384,
								29385,
								29386,
								29387,
								29388,
								29389,
								29390,
								29391,
								29392,
								29393,
								29394,
								29395,
								29396,
								29397,
								29398,
								29399,
								29400,
								29401,
								29402,
								29403,
								29404
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 29364,
							"name": "OrderLineItemTotalsDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 29416,
					"name": "OrderItemDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 29417,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the order detail."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29418,
							"name": "item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated item."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29419,
							"name": "item",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The Line Item of the order detail."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 29376,
								"name": "OrderLineItemDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 29420,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The quantity of the order line item."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 29421,
							"name": "raw_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The raw quantity of the order line item."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 30544,
								"name": "BigNumberRawValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 29422,
							"name": "fulfilled_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The fulfilled quantity of the order line item."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 29423,
							"name": "raw_fulfilled_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The raw fulfilled quantity of the order line item."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 30544,
								"name": "BigNumberRawValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 29424,
							"name": "shipped_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The shipped quantity of the order line item."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 29425,
							"name": "raw_shipped_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The raw shipped quantity of the order line item."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 30544,
								"name": "BigNumberRawValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 29426,
							"name": "return_requested_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The quantity of return requested for the order line item."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 29427,
							"name": "raw_return_requested_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The raw quantity of return requested for the order line item."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 30544,
								"name": "BigNumberRawValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 29428,
							"name": "return_received_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The quantity of return received for the order line item."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 29429,
							"name": "raw_return_received_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The raw quantity of return received for the order line item."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 30544,
								"name": "BigNumberRawValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 29430,
							"name": "return_dismissed_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The quantity of return dismissed for the order line item."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 29431,
							"name": "raw_return_dismissed_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The raw quantity of return dismissed for the order line item."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 30544,
								"name": "BigNumberRawValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 29432,
							"name": "written_off_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The quantity of written off for the order line item."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 29433,
							"name": "raw_written_off_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The raw quantity of written off for the order line item."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 30544,
								"name": "BigNumberRawValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 29434,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The metadata of the order detail"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 29435,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date when the order line item was created."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 29436,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date when the order line item was last updated."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29417,
								29418,
								29419,
								29420,
								29421,
								29422,
								29423,
								29424,
								29425,
								29426,
								29427,
								29428,
								29429,
								29430,
								29431,
								29432,
								29433,
								29434,
								29435,
								29436
							]
						}
					]
				},
				{
					"id": 29437,
					"name": "OrderDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 29438,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the order."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29439,
							"name": "version",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The version of the order."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 29440,
							"name": "region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the region the order belongs to."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29441,
							"name": "customer_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the customer on the order."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29442,
							"name": "sales_channel_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the sales channel the order belongs to."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29443,
							"name": "email",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The email of the order."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29444,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The currency of the order"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29445,
							"name": "shipping_address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated shipping address."
									}
								],
								"modifierTags": [
									"@expandable"
								]
							},
							"type": {
								"type": "reference",
								"target": 29329,
								"name": "OrderAddressDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 29446,
							"name": "billing_address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated billing address."
									}
								],
								"modifierTags": [
									"@expandable"
								]
							},
							"type": {
								"type": "reference",
								"target": 29329,
								"name": "OrderAddressDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 29447,
							"name": "items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated order details / line items."
									}
								],
								"modifierTags": [
									"@expandable"
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 29376,
									"name": "OrderLineItemDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 29448,
							"name": "shipping_methods",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated shipping methods"
									}
								],
								"modifierTags": [
									"@expandable"
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 29345,
									"name": "OrderShippingMethodDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 29449,
							"name": "transactions",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The tramsactions associated with the order"
									}
								],
								"modifierTags": [
									"@expandable"
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 29485,
									"name": "OrderTransactionDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 29450,
							"name": "summary",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The summary of the order totals."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 29244,
								"name": "OrderSummaryDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 29451,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 29452,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the order was created."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 29453,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the order was updated."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29438,
								29439,
								29440,
								29441,
								29442,
								29443,
								29444,
								29445,
								29446,
								29447,
								29448,
								29449,
								29450,
								29451,
								29452,
								29453
							]
						}
					]
				},
				{
					"id": 29454,
					"name": "OrderChangeDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 29455,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the order change"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29456,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated order"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29457,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated order"
									}
								],
								"modifierTags": [
									"@expandable"
								]
							},
							"type": {
								"type": "reference",
								"target": 29437,
								"name": "OrderDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 29458,
							"name": "actions",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The actions of the order change"
									}
								],
								"modifierTags": [
									"@expandable"
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 29472,
									"name": "OrderChangeActionDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 29459,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The status of the order change"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29460,
							"name": "requested_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The requested by of the order change"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 29461,
							"name": "requested_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the order change was requested"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 29462,
							"name": "confirmed_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The confirmed by of the order change"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 29463,
							"name": "confirmed_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the order change was confirmed"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 29464,
							"name": "declined_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The declined by of the order change"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 29465,
							"name": "declined_reason",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The declined reason of the order change"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 29466,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The metadata of the order change"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 29467,
							"name": "declined_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the order change was declined"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 29468,
							"name": "canceled_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The canceled by of the order change"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 29469,
							"name": "canceled_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the order change was canceled"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 29470,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the order change was created"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 29471,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the order change was updated"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29455,
								29456,
								29457,
								29458,
								29459,
								29460,
								29461,
								29462,
								29463,
								29464,
								29465,
								29466,
								29467,
								29468,
								29469,
								29470,
								29471
							]
						}
					]
				},
				{
					"id": 29472,
					"name": "OrderChangeActionDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 29473,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the order change action"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29474,
							"name": "order_change_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated order change"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 29475,
							"name": "order_change",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated order change"
									}
								],
								"modifierTags": [
									"@expandable"
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": 29454,
										"name": "OrderChangeDTO",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 29476,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated order"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 29477,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated order"
									}
								],
								"modifierTags": [
									"@expandable"
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": 29437,
										"name": "OrderDTO",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 29478,
							"name": "reference",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The reference of the order change action"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29479,
							"name": "reference_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the reference"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29480,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The action of the order change action"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 29481,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The metadata of the order change action"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 29482,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The internal note of the order change action"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 29483,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the order change action was created"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 29484,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the order change action was updated"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29473,
								29474,
								29475,
								29476,
								29477,
								29478,
								29479,
								29480,
								29481,
								29482,
								29483,
								29484
							]
						}
					]
				},
				{
					"id": 29485,
					"name": "OrderTransactionDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 29486,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the transaction"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29487,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated order"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29488,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated order"
									}
								],
								"modifierTags": [
									"@expandable"
								]
							},
							"type": {
								"type": "reference",
								"target": 29437,
								"name": "OrderDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 29489,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The amount of the transaction"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 29490,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The currency code of the transaction"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29491,
							"name": "reference",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The reference of the transaction"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29492,
							"name": "reference_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the reference"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29493,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The metadata of the transaction"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 29494,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the transaction was created"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 29495,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When the transaction was updated"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29486,
								29487,
								29488,
								29489,
								29490,
								29491,
								29492,
								29493,
								29494,
								29495
							]
						}
					]
				},
				{
					"id": 29496,
					"name": "FilterableOrderProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 29503,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 29496,
											"name": "FilterableOrderProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 27802,
											"typeArguments": [
												{
													"type": "reference",
													"target": 29496,
													"name": "FilterableOrderProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 27803,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 29504,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 29496,
											"name": "FilterableOrderProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 27802,
											"typeArguments": [
												{
													"type": "reference",
													"target": 29496,
													"name": "FilterableOrderProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 27804,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 29497,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 29498,
							"name": "sales_channel_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 27780,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 29499,
							"name": "customer_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 27780,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 29500,
							"name": "region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 27780,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 29501,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 27780,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 29502,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 27780,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29503,
								29504,
								29497,
								29498,
								29499,
								29500,
								29501,
								29502
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 27802,
							"typeArguments": [
								{
									"type": "reference",
									"target": 29496,
									"name": "FilterableOrderProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 29505,
					"name": "FilterableOrderAddressProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 29507,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 29505,
											"name": "FilterableOrderAddressProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 27802,
											"typeArguments": [
												{
													"type": "reference",
													"target": 29505,
													"name": "FilterableOrderAddressProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 27803,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 29508,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 29505,
											"name": "FilterableOrderAddressProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 27802,
											"typeArguments": [
												{
													"type": "reference",
													"target": 29505,
													"name": "FilterableOrderAddressProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 27804,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 29506,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29507,
								29508,
								29506
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 27802,
							"typeArguments": [
								{
									"type": "reference",
									"target": 29505,
									"name": "FilterableOrderAddressProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 29509,
					"name": "FilterableOrderLineItemProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 29515,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 29509,
											"name": "FilterableOrderLineItemProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 27802,
											"typeArguments": [
												{
													"type": "reference",
													"target": 29509,
													"name": "FilterableOrderLineItemProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 27803,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 29516,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 29509,
											"name": "FilterableOrderLineItemProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 27802,
											"typeArguments": [
												{
													"type": "reference",
													"target": 29509,
													"name": "FilterableOrderLineItemProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 27804,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 29510,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 29511,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 29512,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29513,
							"name": "variant_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 29514,
							"name": "product_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29515,
								29516,
								29510,
								29511,
								29512,
								29513,
								29514
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 27802,
							"typeArguments": [
								{
									"type": "reference",
									"target": 29509,
									"name": "FilterableOrderLineItemProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 29517,
					"name": "FilterableOrderLineItemAdjustmentProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 29523,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 29517,
											"name": "FilterableOrderLineItemAdjustmentProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 27802,
											"typeArguments": [
												{
													"type": "reference",
													"target": 29517,
													"name": "FilterableOrderLineItemAdjustmentProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 27803,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 29524,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 29517,
											"name": "FilterableOrderLineItemAdjustmentProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 27802,
											"typeArguments": [
												{
													"type": "reference",
													"target": 29517,
													"name": "FilterableOrderLineItemAdjustmentProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 27804,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 29518,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 29519,
							"name": "item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 29520,
							"name": "promotion_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 29521,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 29522,
							"name": "item",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 29509,
								"name": "FilterableOrderLineItemProps",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29523,
								29524,
								29518,
								29519,
								29520,
								29521,
								29522
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 27802,
							"typeArguments": [
								{
									"type": "reference",
									"target": 29517,
									"name": "FilterableOrderLineItemAdjustmentProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 29525,
					"name": "FilterableOrderShippingMethodProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 29530,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 29525,
											"name": "FilterableOrderShippingMethodProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 27802,
											"typeArguments": [
												{
													"type": "reference",
													"target": 29525,
													"name": "FilterableOrderShippingMethodProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 27803,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 29531,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 29525,
											"name": "FilterableOrderShippingMethodProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 27802,
											"typeArguments": [
												{
													"type": "reference",
													"target": 29525,
													"name": "FilterableOrderShippingMethodProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 27804,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 29526,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 29527,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 29528,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29529,
							"name": "shipping_option_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29530,
								29531,
								29526,
								29527,
								29528,
								29529
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 27802,
							"typeArguments": [
								{
									"type": "reference",
									"target": 29525,
									"name": "FilterableOrderShippingMethodProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 29532,
					"name": "FilterableOrderShippingMethodAdjustmentProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 29538,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 29532,
											"name": "FilterableOrderShippingMethodAdjustmentProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 27802,
											"typeArguments": [
												{
													"type": "reference",
													"target": 29532,
													"name": "FilterableOrderShippingMethodAdjustmentProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 27803,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 29539,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 29532,
											"name": "FilterableOrderShippingMethodAdjustmentProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 27802,
											"typeArguments": [
												{
													"type": "reference",
													"target": 29532,
													"name": "FilterableOrderShippingMethodAdjustmentProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 27804,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 29533,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 29534,
							"name": "shipping_method_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 29535,
							"name": "promotion_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 29536,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 29537,
							"name": "shipping_method",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 29525,
								"name": "FilterableOrderShippingMethodProps",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29538,
								29539,
								29533,
								29534,
								29535,
								29536,
								29537
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 27802,
							"typeArguments": [
								{
									"type": "reference",
									"target": 29532,
									"name": "FilterableOrderShippingMethodAdjustmentProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 29540,
					"name": "FilterableOrderLineItemTaxLineProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 29548,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 29540,
											"name": "FilterableOrderLineItemTaxLineProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 27802,
											"typeArguments": [
												{
													"type": "reference",
													"target": 29540,
													"name": "FilterableOrderLineItemTaxLineProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 27803,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 29549,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 29540,
											"name": "FilterableOrderLineItemTaxLineProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 27802,
											"typeArguments": [
												{
													"type": "reference",
													"target": 29540,
													"name": "FilterableOrderLineItemTaxLineProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 27804,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 29541,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 29542,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29543,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 29544,
							"name": "tax_rate_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 29545,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 29546,
							"name": "item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 29547,
							"name": "item",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 29509,
								"name": "FilterableOrderLineItemProps",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29548,
								29549,
								29541,
								29542,
								29543,
								29544,
								29545,
								29546,
								29547
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 27802,
							"typeArguments": [
								{
									"type": "reference",
									"target": 29540,
									"name": "FilterableOrderLineItemTaxLineProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 29550,
					"name": "FilterableOrderShippingMethodTaxLineProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 29558,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 29550,
											"name": "FilterableOrderShippingMethodTaxLineProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 27802,
											"typeArguments": [
												{
													"type": "reference",
													"target": 29550,
													"name": "FilterableOrderShippingMethodTaxLineProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 27803,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 29559,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 29550,
											"name": "FilterableOrderShippingMethodTaxLineProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 27802,
											"typeArguments": [
												{
													"type": "reference",
													"target": 29550,
													"name": "FilterableOrderShippingMethodTaxLineProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 27804,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 29551,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 29552,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29553,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 29554,
							"name": "tax_rate_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 29555,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 29556,
							"name": "shipping_method_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 29557,
							"name": "shipping_method",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 29525,
								"name": "FilterableOrderShippingMethodProps",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29558,
								29559,
								29551,
								29552,
								29553,
								29554,
								29555,
								29556,
								29557
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 27802,
							"typeArguments": [
								{
									"type": "reference",
									"target": 29550,
									"name": "FilterableOrderShippingMethodTaxLineProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 29560,
					"name": "FilterableOrderChangeProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 29568,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 29560,
											"name": "FilterableOrderChangeProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 27802,
											"typeArguments": [
												{
													"type": "reference",
													"target": 29560,
													"name": "FilterableOrderChangeProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 27803,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 29569,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 29560,
											"name": "FilterableOrderChangeProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 27802,
											"typeArguments": [
												{
													"type": "reference",
													"target": 29560,
													"name": "FilterableOrderChangeProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 27804,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 29561,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 29562,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 29563,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 29564,
							"name": "requested_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 29565,
							"name": "confirmed_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 29566,
							"name": "declined_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 29567,
							"name": "canceled_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29568,
								29569,
								29561,
								29562,
								29563,
								29564,
								29565,
								29566,
								29567
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 27802,
							"typeArguments": [
								{
									"type": "reference",
									"target": 29560,
									"name": "FilterableOrderChangeProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 29570,
					"name": "FilterableOrderChangeActionProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 29575,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 29570,
											"name": "FilterableOrderChangeActionProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 27802,
											"typeArguments": [
												{
													"type": "reference",
													"target": 29570,
													"name": "FilterableOrderChangeActionProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 27803,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 29576,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 29570,
											"name": "FilterableOrderChangeActionProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 27802,
											"typeArguments": [
												{
													"type": "reference",
													"target": 29570,
													"name": "FilterableOrderChangeActionProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 27804,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 29571,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 29572,
							"name": "order_change_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 29573,
							"name": "reference",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 29574,
							"name": "reference_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29575,
								29576,
								29571,
								29572,
								29573,
								29574
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 27802,
							"typeArguments": [
								{
									"type": "reference",
									"target": 29570,
									"name": "FilterableOrderChangeActionProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 29577,
					"name": "FilterableOrderTransactionProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 29583,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 29577,
											"name": "FilterableOrderTransactionProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 27802,
											"typeArguments": [
												{
													"type": "reference",
													"target": 29577,
													"name": "FilterableOrderTransactionProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 27803,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 29584,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 29577,
											"name": "FilterableOrderTransactionProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 27802,
											"typeArguments": [
												{
													"type": "reference",
													"target": 29577,
													"name": "FilterableOrderTransactionProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 27804,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 29578,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 29579,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 29580,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 29581,
							"name": "reference",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 29582,
							"name": "reference_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29583,
								29584,
								29578,
								29579,
								29580,
								29581,
								29582
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 27802,
							"typeArguments": [
								{
									"type": "reference",
									"target": 29577,
									"name": "FilterableOrderTransactionProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 29585,
					"name": "UpsertOrderAddressDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ADDRESS START"
							}
						]
					},
					"children": [
						{
							"id": 29586,
							"name": "customer_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29587,
							"name": "company",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29588,
							"name": "first_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29589,
							"name": "last_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29590,
							"name": "address_1",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29591,
							"name": "address_2",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29592,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29593,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29594,
							"name": "province",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29595,
							"name": "postal_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29596,
							"name": "phone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29597,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29586,
								29587,
								29588,
								29589,
								29590,
								29591,
								29592,
								29593,
								29594,
								29595,
								29596,
								29597
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 29598,
							"name": "UpdateOrderAddressDTO"
						},
						{
							"type": "reference",
							"target": 29612,
							"name": "CreateOrderAddressDTO"
						}
					]
				},
				{
					"id": 29598,
					"name": "UpdateOrderAddressDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ADDRESS START"
							}
						]
					},
					"children": [
						{
							"id": 29600,
							"name": "customer_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29586,
								"name": "UpsertOrderAddressDTO.customer_id"
							}
						},
						{
							"id": 29601,
							"name": "company",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29587,
								"name": "UpsertOrderAddressDTO.company"
							}
						},
						{
							"id": 29602,
							"name": "first_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29588,
								"name": "UpsertOrderAddressDTO.first_name"
							}
						},
						{
							"id": 29603,
							"name": "last_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29589,
								"name": "UpsertOrderAddressDTO.last_name"
							}
						},
						{
							"id": 29604,
							"name": "address_1",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29590,
								"name": "UpsertOrderAddressDTO.address_1"
							}
						},
						{
							"id": 29605,
							"name": "address_2",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29591,
								"name": "UpsertOrderAddressDTO.address_2"
							}
						},
						{
							"id": 29606,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29592,
								"name": "UpsertOrderAddressDTO.city"
							}
						},
						{
							"id": 29607,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29593,
								"name": "UpsertOrderAddressDTO.country_code"
							}
						},
						{
							"id": 29608,
							"name": "province",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29594,
								"name": "UpsertOrderAddressDTO.province"
							}
						},
						{
							"id": 29609,
							"name": "postal_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29595,
								"name": "UpsertOrderAddressDTO.postal_code"
							}
						},
						{
							"id": 29610,
							"name": "phone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29596,
								"name": "UpsertOrderAddressDTO.phone"
							}
						},
						{
							"id": 29611,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29597,
								"name": "UpsertOrderAddressDTO.metadata"
							}
						},
						{
							"id": 29599,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29600,
								29601,
								29602,
								29603,
								29604,
								29605,
								29606,
								29607,
								29608,
								29609,
								29610,
								29611,
								29599
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 29585,
							"name": "UpsertOrderAddressDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 29612,
					"name": "CreateOrderAddressDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ADDRESS START"
							}
						]
					},
					"children": [
						{
							"id": 29613,
							"name": "customer_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29586,
								"name": "UpsertOrderAddressDTO.customer_id"
							}
						},
						{
							"id": 29614,
							"name": "company",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29587,
								"name": "UpsertOrderAddressDTO.company"
							}
						},
						{
							"id": 29615,
							"name": "first_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29588,
								"name": "UpsertOrderAddressDTO.first_name"
							}
						},
						{
							"id": 29616,
							"name": "last_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29589,
								"name": "UpsertOrderAddressDTO.last_name"
							}
						},
						{
							"id": 29617,
							"name": "address_1",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29590,
								"name": "UpsertOrderAddressDTO.address_1"
							}
						},
						{
							"id": 29618,
							"name": "address_2",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29591,
								"name": "UpsertOrderAddressDTO.address_2"
							}
						},
						{
							"id": 29619,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29592,
								"name": "UpsertOrderAddressDTO.city"
							}
						},
						{
							"id": 29620,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29593,
								"name": "UpsertOrderAddressDTO.country_code"
							}
						},
						{
							"id": 29621,
							"name": "province",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29594,
								"name": "UpsertOrderAddressDTO.province"
							}
						},
						{
							"id": 29622,
							"name": "postal_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29595,
								"name": "UpsertOrderAddressDTO.postal_code"
							}
						},
						{
							"id": 29623,
							"name": "phone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29596,
								"name": "UpsertOrderAddressDTO.phone"
							}
						},
						{
							"id": 29624,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29597,
								"name": "UpsertOrderAddressDTO.metadata"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29613,
								29614,
								29615,
								29616,
								29617,
								29618,
								29619,
								29620,
								29621,
								29622,
								29623,
								29624
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 29585,
							"name": "UpsertOrderAddressDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 29625,
					"name": "CreateOrderDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ORDER START"
							}
						]
					},
					"children": [
						{
							"id": 29626,
							"name": "region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29627,
							"name": "customer_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29628,
							"name": "sales_channel_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29629,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29630,
							"name": "email",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29631,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29632,
							"name": "shipping_address_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29633,
							"name": "billing_address_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29634,
							"name": "shipping_address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 29598,
										"name": "UpdateOrderAddressDTO",
										"package": "@medusajs/types"
									},
									{
										"type": "reference",
										"target": 29612,
										"name": "CreateOrderAddressDTO",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 29635,
							"name": "billing_address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 29598,
										"name": "UpdateOrderAddressDTO",
										"package": "@medusajs/types"
									},
									{
										"type": "reference",
										"target": 29612,
										"name": "CreateOrderAddressDTO",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 29636,
							"name": "no_notification",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 29637,
							"name": "items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 29726,
									"name": "CreateOrderLineItemDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 29638,
							"name": "shipping_methods",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 29805,
									"name": "CreateOrderShippingMethodDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 29639,
							"name": "transactions",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 29882,
									"name": "CreateOrderTransactionDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 29640,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29626,
								29627,
								29628,
								29629,
								29630,
								29631,
								29632,
								29633,
								29634,
								29635,
								29636,
								29637,
								29638,
								29639,
								29640
							]
						}
					]
				},
				{
					"id": 29641,
					"name": "UpdateOrderDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 29642,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29643,
							"name": "version",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 29644,
							"name": "region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29645,
							"name": "customer_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29646,
							"name": "sales_channel_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29647,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29648,
							"name": "email",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29649,
							"name": "no_notification",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 29650,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29642,
								29643,
								29644,
								29645,
								29646,
								29647,
								29648,
								29649,
								29650
							]
						}
					]
				},
				{
					"id": 29651,
					"name": "CreateOrderAdjustmentDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ADJUSTMENT START"
							}
						]
					},
					"children": [
						{
							"id": 29652,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29653,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 30549,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 29654,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29655,
							"name": "promotion_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29656,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29652,
								29653,
								29654,
								29655,
								29656
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 29664,
							"name": "CreateOrderLineItemAdjustmentDTO"
						}
					]
				},
				{
					"id": 29657,
					"name": "UpdateOrderAdjustmentDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 29658,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29659,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29660,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 30549,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 29661,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29662,
							"name": "promotion_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29663,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29658,
								29659,
								29660,
								29661,
								29662,
								29663
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 29671,
							"name": "UpdateOrderLineItemAdjustmentDTO"
						}
					]
				},
				{
					"id": 29664,
					"name": "CreateOrderLineItemAdjustmentDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ADJUSTMENT START"
							}
						]
					},
					"children": [
						{
							"id": 29666,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29652,
								"name": "CreateOrderAdjustmentDTO.code"
							}
						},
						{
							"id": 29667,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 30549,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29653,
								"name": "CreateOrderAdjustmentDTO.amount"
							}
						},
						{
							"id": 29668,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29654,
								"name": "CreateOrderAdjustmentDTO.description"
							}
						},
						{
							"id": 29669,
							"name": "promotion_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29655,
								"name": "CreateOrderAdjustmentDTO.promotion_id"
							}
						},
						{
							"id": 29670,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29656,
								"name": "CreateOrderAdjustmentDTO.provider_id"
							}
						},
						{
							"id": 29665,
							"name": "item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29666,
								29667,
								29668,
								29669,
								29670,
								29665
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 29651,
							"name": "CreateOrderAdjustmentDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 29671,
					"name": "UpdateOrderLineItemAdjustmentDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 29673,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29658,
								"name": "UpdateOrderAdjustmentDTO.id"
							}
						},
						{
							"id": 29674,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29659,
								"name": "UpdateOrderAdjustmentDTO.code"
							}
						},
						{
							"id": 29675,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 30549,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29660,
								"name": "UpdateOrderAdjustmentDTO.amount"
							}
						},
						{
							"id": 29676,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29661,
								"name": "UpdateOrderAdjustmentDTO.description"
							}
						},
						{
							"id": 29677,
							"name": "promotion_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29662,
								"name": "UpdateOrderAdjustmentDTO.promotion_id"
							}
						},
						{
							"id": 29678,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29663,
								"name": "UpdateOrderAdjustmentDTO.provider_id"
							}
						},
						{
							"id": 29672,
							"name": "item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29673,
								29674,
								29675,
								29676,
								29677,
								29678,
								29672
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 29657,
							"name": "UpdateOrderAdjustmentDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 29679,
					"name": "UpsertOrderLineItemAdjustmentDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 29680,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29681,
							"name": "item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29682,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29683,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 30549,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 29684,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29685,
							"name": "promotion_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29686,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29680,
								29681,
								29682,
								29683,
								29684,
								29685,
								29686
							]
						}
					]
				},
				{
					"id": 29687,
					"name": "CreateOrderTaxLineDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "TAX LINES START"
							}
						]
					},
					"children": [
						{
							"id": 29688,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29689,
							"name": "tax_rate_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29690,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29691,
							"name": "rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 30549,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 29692,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29688,
								29689,
								29690,
								29691,
								29692
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 29700,
							"name": "CreateOrderShippingMethodTaxLineDTO"
						},
						{
							"type": "reference",
							"target": 29713,
							"name": "CreateOrderLineItemTaxLineDTO"
						}
					]
				},
				{
					"id": 29693,
					"name": "UpdateOrderTaxLineDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 29694,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29695,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29696,
							"name": "tax_rate_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29697,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29698,
							"name": "rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 30549,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 29699,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29694,
								29695,
								29696,
								29697,
								29698,
								29699
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 29706,
							"name": "UpdateOrderShippingMethodTaxLineDTO"
						},
						{
							"type": "reference",
							"target": 29719,
							"name": "UpdateOrderLineItemTaxLineDTO"
						}
					]
				},
				{
					"id": 29700,
					"name": "CreateOrderShippingMethodTaxLineDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "TAX LINES START"
							}
						]
					},
					"children": [
						{
							"id": 29701,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29688,
								"name": "CreateOrderTaxLineDTO.description"
							}
						},
						{
							"id": 29702,
							"name": "tax_rate_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29689,
								"name": "CreateOrderTaxLineDTO.tax_rate_id"
							}
						},
						{
							"id": 29703,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29690,
								"name": "CreateOrderTaxLineDTO.code"
							}
						},
						{
							"id": 29704,
							"name": "rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 30549,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29691,
								"name": "CreateOrderTaxLineDTO.rate"
							}
						},
						{
							"id": 29705,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29692,
								"name": "CreateOrderTaxLineDTO.provider_id"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29701,
								29702,
								29703,
								29704,
								29705
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 29687,
							"name": "CreateOrderTaxLineDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 29706,
					"name": "UpdateOrderShippingMethodTaxLineDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 29707,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29694,
								"name": "UpdateOrderTaxLineDTO.id"
							}
						},
						{
							"id": 29708,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29695,
								"name": "UpdateOrderTaxLineDTO.description"
							}
						},
						{
							"id": 29709,
							"name": "tax_rate_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29696,
								"name": "UpdateOrderTaxLineDTO.tax_rate_id"
							}
						},
						{
							"id": 29710,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29697,
								"name": "UpdateOrderTaxLineDTO.code"
							}
						},
						{
							"id": 29711,
							"name": "rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 30549,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29698,
								"name": "UpdateOrderTaxLineDTO.rate"
							}
						},
						{
							"id": 29712,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29699,
								"name": "UpdateOrderTaxLineDTO.provider_id"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29707,
								29708,
								29709,
								29710,
								29711,
								29712
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 29693,
							"name": "UpdateOrderTaxLineDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 29713,
					"name": "CreateOrderLineItemTaxLineDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "TAX LINES START"
							}
						]
					},
					"children": [
						{
							"id": 29714,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29688,
								"name": "CreateOrderTaxLineDTO.description"
							}
						},
						{
							"id": 29715,
							"name": "tax_rate_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29689,
								"name": "CreateOrderTaxLineDTO.tax_rate_id"
							}
						},
						{
							"id": 29716,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29690,
								"name": "CreateOrderTaxLineDTO.code"
							}
						},
						{
							"id": 29717,
							"name": "rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 30549,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29691,
								"name": "CreateOrderTaxLineDTO.rate"
							}
						},
						{
							"id": 29718,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29692,
								"name": "CreateOrderTaxLineDTO.provider_id"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29714,
								29715,
								29716,
								29717,
								29718
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 29687,
							"name": "CreateOrderTaxLineDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 29719,
					"name": "UpdateOrderLineItemTaxLineDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 29720,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29694,
								"name": "UpdateOrderTaxLineDTO.id"
							}
						},
						{
							"id": 29721,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29695,
								"name": "UpdateOrderTaxLineDTO.description"
							}
						},
						{
							"id": 29722,
							"name": "tax_rate_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29696,
								"name": "UpdateOrderTaxLineDTO.tax_rate_id"
							}
						},
						{
							"id": 29723,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29697,
								"name": "UpdateOrderTaxLineDTO.code"
							}
						},
						{
							"id": 29724,
							"name": "rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 30549,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29698,
								"name": "UpdateOrderTaxLineDTO.rate"
							}
						},
						{
							"id": 29725,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29699,
								"name": "UpdateOrderTaxLineDTO.provider_id"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29720,
								29721,
								29722,
								29723,
								29724,
								29725
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 29693,
							"name": "UpdateOrderTaxLineDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 29726,
					"name": "CreateOrderLineItemDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "LINE ITEMS START"
							}
						]
					},
					"children": [
						{
							"id": 29727,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29728,
							"name": "subtitle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29729,
							"name": "thumbnail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29730,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29731,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 30549,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 29732,
							"name": "product_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29733,
							"name": "product_title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29734,
							"name": "product_description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29735,
							"name": "product_subtitle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29736,
							"name": "product_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29737,
							"name": "product_collection",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29738,
							"name": "product_handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29739,
							"name": "variant_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29740,
							"name": "variant_sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29741,
							"name": "variant_barcode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29742,
							"name": "variant_title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29743,
							"name": "variant_option_values",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 29744,
							"name": "requires_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 29745,
							"name": "is_discountable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 29746,
							"name": "is_tax_inclusive",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 29747,
							"name": "compare_at_unit_price",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 30549,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 29748,
							"name": "unit_price",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 30549,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 29749,
							"name": "tax_lines",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 29687,
									"name": "CreateOrderTaxLineDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 29750,
							"name": "adjustments",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 29651,
									"name": "CreateOrderAdjustmentDTO",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29727,
								29728,
								29729,
								29730,
								29731,
								29732,
								29733,
								29734,
								29735,
								29736,
								29737,
								29738,
								29739,
								29740,
								29741,
								29742,
								29743,
								29744,
								29745,
								29746,
								29747,
								29748,
								29749,
								29750
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 29751,
							"name": "CreateOrderLineItemForOrderDTO"
						}
					]
				},
				{
					"id": 29751,
					"name": "CreateOrderLineItemForOrderDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "LINE ITEMS START"
							}
						]
					},
					"children": [
						{
							"id": 29753,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29727,
								"name": "CreateOrderLineItemDTO.title"
							}
						},
						{
							"id": 29754,
							"name": "subtitle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29728,
								"name": "CreateOrderLineItemDTO.subtitle"
							}
						},
						{
							"id": 29755,
							"name": "thumbnail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29729,
								"name": "CreateOrderLineItemDTO.thumbnail"
							}
						},
						{
							"id": 29756,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 30549,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29731,
								"name": "CreateOrderLineItemDTO.quantity"
							}
						},
						{
							"id": 29757,
							"name": "product_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29732,
								"name": "CreateOrderLineItemDTO.product_id"
							}
						},
						{
							"id": 29758,
							"name": "product_title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29733,
								"name": "CreateOrderLineItemDTO.product_title"
							}
						},
						{
							"id": 29759,
							"name": "product_description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29734,
								"name": "CreateOrderLineItemDTO.product_description"
							}
						},
						{
							"id": 29760,
							"name": "product_subtitle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29735,
								"name": "CreateOrderLineItemDTO.product_subtitle"
							}
						},
						{
							"id": 29761,
							"name": "product_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29736,
								"name": "CreateOrderLineItemDTO.product_type"
							}
						},
						{
							"id": 29762,
							"name": "product_collection",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29737,
								"name": "CreateOrderLineItemDTO.product_collection"
							}
						},
						{
							"id": 29763,
							"name": "product_handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29738,
								"name": "CreateOrderLineItemDTO.product_handle"
							}
						},
						{
							"id": 29764,
							"name": "variant_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29739,
								"name": "CreateOrderLineItemDTO.variant_id"
							}
						},
						{
							"id": 29765,
							"name": "variant_sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29740,
								"name": "CreateOrderLineItemDTO.variant_sku"
							}
						},
						{
							"id": 29766,
							"name": "variant_barcode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29741,
								"name": "CreateOrderLineItemDTO.variant_barcode"
							}
						},
						{
							"id": 29767,
							"name": "variant_title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29742,
								"name": "CreateOrderLineItemDTO.variant_title"
							}
						},
						{
							"id": 29768,
							"name": "variant_option_values",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29743,
								"name": "CreateOrderLineItemDTO.variant_option_values"
							}
						},
						{
							"id": 29769,
							"name": "requires_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29744,
								"name": "CreateOrderLineItemDTO.requires_shipping"
							}
						},
						{
							"id": 29770,
							"name": "is_discountable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29745,
								"name": "CreateOrderLineItemDTO.is_discountable"
							}
						},
						{
							"id": 29771,
							"name": "is_tax_inclusive",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29746,
								"name": "CreateOrderLineItemDTO.is_tax_inclusive"
							}
						},
						{
							"id": 29772,
							"name": "compare_at_unit_price",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 30549,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29747,
								"name": "CreateOrderLineItemDTO.compare_at_unit_price"
							}
						},
						{
							"id": 29773,
							"name": "unit_price",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 30549,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29748,
								"name": "CreateOrderLineItemDTO.unit_price"
							}
						},
						{
							"id": 29774,
							"name": "tax_lines",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 29687,
									"name": "CreateOrderTaxLineDTO",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29749,
								"name": "CreateOrderLineItemDTO.tax_lines"
							}
						},
						{
							"id": 29775,
							"name": "adjustments",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 29651,
									"name": "CreateOrderAdjustmentDTO",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29750,
								"name": "CreateOrderLineItemDTO.adjustments"
							}
						},
						{
							"id": 29752,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"overwrites": {
								"type": "reference",
								"target": 29730,
								"name": "CreateOrderLineItemDTO.order_id"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29753,
								29754,
								29755,
								29756,
								29757,
								29758,
								29759,
								29760,
								29761,
								29762,
								29763,
								29764,
								29765,
								29766,
								29767,
								29768,
								29769,
								29770,
								29771,
								29772,
								29773,
								29774,
								29775,
								29752
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 29726,
							"name": "CreateOrderLineItemDTO",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 29776,
					"name": "UpdateOrderLineItemWithSelectorDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 29777,
							"name": "selector",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Partial"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 29376,
										"name": "OrderLineItemDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Partial",
								"package": "typescript"
							}
						},
						{
							"id": 29778,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Partial"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 29779,
										"name": "UpdateOrderLineItemDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Partial",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29777,
								29778
							]
						}
					]
				},
				{
					"id": 29779,
					"name": "UpdateOrderLineItemDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 29788,
							"name": "subtitle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.subtitle"
							}
						},
						{
							"id": 29789,
							"name": "thumbnail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.thumbnail"
							}
						},
						{
							"id": 29804,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.order_id"
							}
						},
						{
							"id": 29787,
							"name": "product_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.product_id"
							}
						},
						{
							"id": 29790,
							"name": "product_title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.product_title"
							}
						},
						{
							"id": 29791,
							"name": "product_description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.product_description"
							}
						},
						{
							"id": 29792,
							"name": "product_subtitle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.product_subtitle"
							}
						},
						{
							"id": 29793,
							"name": "product_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.product_type"
							}
						},
						{
							"id": 29794,
							"name": "product_collection",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.product_collection"
							}
						},
						{
							"id": 29795,
							"name": "product_handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.product_handle"
							}
						},
						{
							"id": 29786,
							"name": "variant_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.variant_id"
							}
						},
						{
							"id": 29796,
							"name": "variant_sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.variant_sku"
							}
						},
						{
							"id": 29797,
							"name": "variant_barcode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.variant_barcode"
							}
						},
						{
							"id": 29798,
							"name": "variant_title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.variant_title"
							}
						},
						{
							"id": 29799,
							"name": "variant_option_values",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.variant_option_values"
							}
						},
						{
							"id": 29800,
							"name": "requires_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.requires_shipping"
							}
						},
						{
							"id": 29801,
							"name": "is_discountable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.is_discountable"
							}
						},
						{
							"id": 29802,
							"name": "is_tax_inclusive",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.is_tax_inclusive"
							}
						},
						{
							"id": 29803,
							"name": "compare_at_unit_price",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 30549,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.compare_at_unit_price"
							}
						},
						{
							"id": 29780,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29781,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29782,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 30549,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 29783,
							"name": "unit_price",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 30549,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 29784,
							"name": "tax_lines",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 29687,
											"name": "CreateOrderTaxLineDTO",
											"package": "@medusajs/types"
										}
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 29693,
											"name": "UpdateOrderTaxLineDTO",
											"package": "@medusajs/types"
										}
									}
								]
							}
						},
						{
							"id": 29785,
							"name": "adjustments",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 29651,
											"name": "CreateOrderAdjustmentDTO",
											"package": "@medusajs/types"
										}
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 29657,
											"name": "UpdateOrderAdjustmentDTO",
											"package": "@medusajs/types"
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29788,
								29789,
								29804,
								29787,
								29790,
								29791,
								29792,
								29793,
								29794,
								29795,
								29786,
								29796,
								29797,
								29798,
								29799,
								29800,
								29801,
								29802,
								29803,
								29780,
								29781,
								29782,
								29783,
								29784,
								29785
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Omit"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 29726,
									"name": "CreateOrderLineItemDTO",
									"package": "@medusajs/types"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "tax_lines"
										},
										{
											"type": "literal",
											"value": "adjustments"
										},
										{
											"type": "literal",
											"value": "title"
										},
										{
											"type": "literal",
											"value": "quantity"
										},
										{
											"type": "literal",
											"value": "unit_price"
										}
									]
								}
							],
							"name": "Omit",
							"package": "typescript"
						}
					]
				},
				{
					"id": 29805,
					"name": "CreateOrderShippingMethodDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "SHIPPING METHODS START"
							}
						]
					},
					"children": [
						{
							"id": 29806,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29807,
							"name": "shipping_method_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29808,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29809,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 30549,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 29810,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 29811,
							"name": "tax_lines",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 29687,
									"name": "CreateOrderTaxLineDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 29812,
							"name": "adjustments",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 29651,
									"name": "CreateOrderAdjustmentDTO",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29806,
								29807,
								29808,
								29809,
								29810,
								29811,
								29812
							]
						}
					]
				},
				{
					"id": 29813,
					"name": "UpdateOrderShippingMethodDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 29814,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29815,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29816,
							"name": "shipping_method_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29817,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 30549,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 29818,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 29819,
							"name": "tax_lines",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 29687,
											"name": "CreateOrderTaxLineDTO",
											"package": "@medusajs/types"
										}
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 29693,
											"name": "UpdateOrderTaxLineDTO",
											"package": "@medusajs/types"
										}
									}
								]
							}
						},
						{
							"id": 29820,
							"name": "adjustments",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 29651,
											"name": "CreateOrderAdjustmentDTO",
											"package": "@medusajs/types"
										}
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 29657,
											"name": "UpdateOrderAdjustmentDTO",
											"package": "@medusajs/types"
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29814,
								29815,
								29816,
								29817,
								29818,
								29819,
								29820
							]
						}
					]
				},
				{
					"id": 29821,
					"name": "CreateOrderShippingMethodAdjustmentDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 29822,
							"name": "shipping_method_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29823,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29824,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 30549,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 29825,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29826,
							"name": "promotion_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29827,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29822,
								29823,
								29824,
								29825,
								29826,
								29827
							]
						}
					]
				},
				{
					"id": 29828,
					"name": "UpdateOrderShippingMethodAdjustmentDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 29829,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29830,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29831,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 30549,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 29832,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29833,
							"name": "promotion_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29834,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29829,
								29830,
								29831,
								29832,
								29833,
								29834
							]
						}
					]
				},
				{
					"id": 29835,
					"name": "CreateOrderChangeDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ORDER CHANGE START"
							}
						]
					},
					"children": [
						{
							"id": 29836,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29837,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29838,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29839,
							"name": "requested_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29840,
							"name": "requested_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 29841,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29836,
								29837,
								29838,
								29839,
								29840,
								29841
							]
						}
					]
				},
				{
					"id": 29842,
					"name": "UpdateOrderChangeDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 29843,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29844,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29845,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29846,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29847,
							"name": "requested_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29848,
							"name": "requested_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 29849,
							"name": "confirmed_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29850,
							"name": "confirmed_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 29851,
							"name": "declined_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29852,
							"name": "declined_reason",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29853,
							"name": "declined_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 29854,
							"name": "canceled_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29855,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29843,
								29844,
								29845,
								29846,
								29847,
								29848,
								29849,
								29850,
								29851,
								29852,
								29853,
								29854,
								29855
							]
						}
					]
				},
				{
					"id": 29856,
					"name": "CancelOrderChangeDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 29857,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29858,
							"name": "canceled_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29859,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29857,
								29858,
								29859
							]
						}
					]
				},
				{
					"id": 29860,
					"name": "DeclineOrderChangeDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 29861,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29862,
							"name": "declined_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29863,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29861,
								29862,
								29863
							]
						}
					]
				},
				{
					"id": 29864,
					"name": "ConfirmOrderChangeDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 29865,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29866,
							"name": "confirmed_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29867,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29865,
								29866,
								29867
							]
						}
					]
				},
				{
					"id": 29868,
					"name": "CreateOrderChangeActionDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ORDER CHANGE ACTION START"
							}
						]
					},
					"children": [
						{
							"id": 29869,
							"name": "order_change_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29870,
							"name": "reference",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29871,
							"name": "reference_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29872,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 29873,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29874,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29869,
								29870,
								29871,
								29872,
								29873,
								29874
							]
						}
					]
				},
				{
					"id": 29875,
					"name": "UpdateOrderChangeActionDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 29876,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29877,
							"name": "reference",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29878,
							"name": "reference_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29879,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 29880,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29881,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29876,
								29877,
								29878,
								29879,
								29880,
								29881
							]
						}
					]
				},
				{
					"id": 29882,
					"name": "CreateOrderTransactionDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ORDER TRANSACTION START"
							}
						]
					},
					"children": [
						{
							"id": 29883,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29884,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 30549,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 29885,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29886,
							"name": "reference",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29887,
							"name": "reference_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29888,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29883,
								29884,
								29885,
								29886,
								29887,
								29888
							]
						}
					]
				},
				{
					"id": 29889,
					"name": "UpdateOrderTransactionDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 29890,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29891,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 30549,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 29892,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29893,
							"name": "reference",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29894,
							"name": "reference_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29895,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29890,
								29891,
								29892,
								29893,
								29894,
								29895
							]
						}
					]
				},
				{
					"id": 29896,
					"name": "UpdateOrderItemDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ORDER DETAIL START"
							}
						]
					},
					"children": [
						{
							"id": 29897,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29898,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29899,
							"name": "version",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 29900,
							"name": "item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29901,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 30549,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 29902,
							"name": "fulfilled_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 30549,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 29903,
							"name": "return_requested_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 30549,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 29904,
							"name": "return_received_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 30549,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 29905,
							"name": "return_dismissed_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 30549,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 29906,
							"name": "written_off_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 30549,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 29907,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29897,
								29898,
								29899,
								29900,
								29901,
								29902,
								29903,
								29904,
								29905,
								29906,
								29907
							]
						}
					]
				},
				{
					"id": 29908,
					"name": "UpdateOrderItemWithSelectorDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 29909,
							"name": "selector",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Partial"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 29416,
										"name": "OrderItemDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Partial",
								"package": "typescript"
							}
						},
						{
							"id": 29910,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Partial"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 29896,
										"name": "UpdateOrderItemDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Partial",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29909,
								29910
							]
						}
					]
				},
				{
					"id": 29911,
					"name": "IOrderModuleService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "{summary}"
							}
						]
					},
					"children": [
						{
							"id": 29912,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 29913,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a {return type} by its ID."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The retrieved {return type}(s)."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nconst result = await orderModuleService.retrieve(\"orderId123\");\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 29914,
											"name": "orderId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 29915,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the order is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a order."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 27592,
												"typeArguments": [
													{
														"type": "reference",
														"target": 29437,
														"name": "OrderDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 29916,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 29437,
												"name": "OrderDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 29917,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 29918,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of {return type}(s) based on optional filters and configuration."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of {return type}(s)."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nconst orderDTOs = await orderModuleService.list();\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 29919,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved order."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 29496,
												"name": "FilterableOrderProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 29920,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the order is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a order."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 27592,
												"typeArguments": [
													{
														"type": "reference",
														"target": 29437,
														"name": "OrderDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 29921,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29437,
													"name": "OrderDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 29922,
							"name": "listAndCount",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 29923,
									"name": "listAndCount",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of {return type} along with the total count of available {return type}(s) satisfying the provided filters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of {return type}(s) along with their total count."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nawait orderModuleService.listAndCount();\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 29924,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved order."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 29496,
												"name": "FilterableOrderProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 29925,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the order is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a order."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 27592,
												"typeArguments": [
													{
														"type": "reference",
														"target": 29437,
														"name": "OrderDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 29926,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 29437,
															"name": "OrderDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 29927,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 29928,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates {return type}(s)"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created {return type}(s)."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nconst orderData: CreateOrderDTO[] = [\n    {\n        currency_code: \"USD\",\n        items: [\n            {\n                title: \"Product Name\",\n                quantity: 1,\n                unit_price: 1999, // Assuming type is an integer for price in cents\n            }\n        ]\n    }\n];\n\nconst result = await orderModuleService.create(orderData);\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 29929,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order to be created."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29625,
													"name": "CreateOrderDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 29930,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29437,
													"name": "OrderDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 29931,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates {return type}(s)"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created {return type}(s)."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\n// Example execution of the create method of IOrderModuleService\nconst orderData: CreateOrderDTO = {\n    currency_code: \"USD\"\n};\n\nconst createdOrder = await orderModuleService.create(orderData);\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 29932,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order to be created."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 29625,
												"name": "CreateOrderDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 29933,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 29437,
												"name": "OrderDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 29934,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 29935,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates existing {return type}(s)."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated {return type}(s)."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nconst updatedOrders = await orderModuleService.update([\n    {\n        id: \"order_id_1\",\n        status: \"shipped\"\n    },\n    {\n        id: \"order_id_2\",\n        status: \"delivered\"\n    }\n]);\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 29936,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The attributes to update in the order."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29641,
													"name": "UpdateOrderDTO",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29437,
													"name": "OrderDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 29937,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates existing {return type}(s)."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated {return type}(s)."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nawait orderModuleService.update(\"orderId123\", {\n  status: \"shipped\"\n});\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 29938,
											"name": "orderId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 29939,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The attributes to update in the order."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 29641,
												"name": "UpdateOrderDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 29940,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 29437,
												"name": "OrderDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 29941,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates existing {return type}(s)."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated {return type}(s)."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nawait orderModuleService.update(\n  { id: \"order-123\" },\n  { status: \"completed\" }\n);\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 29942,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Make all properties in T optional"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Partial"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 29437,
														"name": "OrderDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "Partial",
												"package": "typescript"
											}
										},
										{
											"id": 29943,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The attributes to update in the order."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 29641,
												"name": "UpdateOrderDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 29944,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29437,
													"name": "OrderDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 29945,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 29946,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes {return type} by its ID."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when {summary}"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nawait orderModuleService.delete([\"12345abc\", \"67890def\"]);\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 29947,
											"name": "orderIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The list of {summary}"
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 29948,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 29949,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes {return type} by its ID."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when {summary}"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nawait orderModuleService.delete(\"orderId\");\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 29950,
											"name": "orderId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 29951,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 29952,
							"name": "listAddresses",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 29953,
									"name": "listAddresses",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of {return type}(s) based on optional filters and configuration."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of {return type}(s)."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nawait orderModuleService.listAddresses();\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 29954,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved order address."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 29505,
												"name": "FilterableOrderAddressProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 29955,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the order address is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a order address."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 27592,
												"typeArguments": [
													{
														"type": "reference",
														"target": 29329,
														"name": "OrderAddressDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 29956,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29329,
													"name": "OrderAddressDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 29957,
							"name": "createAddresses",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 29958,
									"name": "createAddresses",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates {return type}(s)"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created {return type}(s)."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nawait orderModuleService.createAddresses([\n  {\n    first_name: \"John\",\n    last_name: \"Doe\",\n    address_1: \"123 Main St\",\n    city: \"Anytown\",\n    country_code: \"US\",\n    province: \"AnyState\",\n    postal_code: \"12345\"\n  }\n]);\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 29959,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order address to be created."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29612,
													"name": "CreateOrderAddressDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 29960,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29329,
													"name": "OrderAddressDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 29961,
									"name": "createAddresses",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates {return type}(s)"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created {return type}(s)."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nconst orderAddressData: CreateOrderAddressDTO = {\n  orderId: '123',\n  line1: '123 Main St',\n  city: 'Metropolis',\n  state: 'NY',\n  postalCode: '12345',\n  country: 'USA'\n};\n\nconst result = await orderModuleService.createAddresses(orderAddressData);\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 29962,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order address to be created."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 29612,
												"name": "CreateOrderAddressDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 29963,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 29329,
												"name": "OrderAddressDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 29964,
							"name": "updateAddresses",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 29965,
									"name": "updateAddresses",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates existing {return type}(s)."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated {return type}(s)."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nconst updatedAddress: UpdateOrderAddressDTO[] = [\n  {\n    id: \"address1\",\n    first_name: \"John\",\n    last_name: \"Doe\",\n    address_1: \"123 Main St\",\n    city: \"Anytown\",\n    country_code: \"US\",\n    province: \"AnyState\",\n    postal_code: \"12345\"\n  }\n];\n\nconst result = await orderModuleService.updateAddresses(updatedAddress);\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 29966,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The attributes to update in the order address."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29598,
													"name": "UpdateOrderAddressDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 29967,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29329,
													"name": "OrderAddressDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 29968,
									"name": "updateAddresses",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates existing {return type}(s)."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated {return type}(s)."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nconst updateOrderAddressData: UpdateOrderAddressDTO = {\n  id: '123',\n  address_1: '123 Main St',\n  city: 'Metropolis',\n  province: 'NY',\n  postal_code: '12345',\n};\n\nconst updatedAddress = await orderModuleService.updateAddresses(updateOrderAddressData);\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 29969,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The attributes to update in the order address."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 29598,
												"name": "UpdateOrderAddressDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 29970,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 29329,
												"name": "OrderAddressDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 29971,
							"name": "deleteAddresses",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 29972,
									"name": "deleteAddresses",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes {return type} by its ID."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when {summary}"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nawait orderModuleService.deleteAddresses([\"your_address_id_1\", \"your_address_id_2\"]);\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 29973,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The list of {summary}"
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 29974,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 29975,
									"name": "deleteAddresses",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes {return type} by its ID."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when {summary}"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nawait orderModuleService.deleteAddresses(\"123456\");\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 29976,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "{summary}"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 29977,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 29978,
							"name": "retrieveLineItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 29979,
									"name": "retrieveLineItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a {return type} by its ID."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The retrieved {return type}(s)."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nawait orderModuleService.retrieveLineItem(\"12345\");\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 29980,
											"name": "itemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The item's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 29981,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the order line item is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a order line item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 27592,
												"typeArguments": [
													{
														"type": "reference",
														"target": 29376,
														"name": "OrderLineItemDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 29982,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 29376,
												"name": "OrderLineItemDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 29983,
							"name": "listLineItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 29984,
									"name": "listLineItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of {return type}(s) based on optional filters and configuration."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of {return type}(s)."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nconst result = await orderModuleService.listLineItems({\n  title: \"Sample Product Title\",\n});\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 29985,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved order line item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 29509,
												"name": "FilterableOrderLineItemProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 29986,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the order line item is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a order line item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 27592,
												"typeArguments": [
													{
														"type": "reference",
														"target": 29376,
														"name": "OrderLineItemDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 29987,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29376,
													"name": "OrderLineItemDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 29988,
							"name": "addLineItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 29989,
									"name": "addLineItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method Represents the completion of an asynchronous operation"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Represents the completion of an asynchronous operation"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nawait orderModuleService.addLineItems({\n    order_id: \"123456\",\n    {\n      product_id: \"abc123\",\n      quantity: 2,\n      unit_price: 1999, // Assuming type is an integer for price in cents\n    }\n});\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 29990,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order line item for order to be created."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 29751,
												"name": "CreateOrderLineItemForOrderDTO",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29376,
													"name": "OrderLineItemDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 29991,
									"name": "addLineItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method Represents the completion of an asynchronous operation"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Represents the completion of an asynchronous operation"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nconst lineItems: CreateOrderLineItemForOrderDTO[] = [{\n  order_id: \"order_123\",\n  product_id: \"prod_456\",\n  quantity: 2,\n  unit_price: 1999\n}];\n\nconst result = await orderModuleService.addLineItems(lineItems);\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 29992,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order line item for order to be created."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29751,
													"name": "CreateOrderLineItemForOrderDTO",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29376,
													"name": "OrderLineItemDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 29993,
									"name": "addLineItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method Represents the completion of an asynchronous operation"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Represents the completion of an asynchronous operation"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nconst result = await orderModuleService.addLineItems(\"orderIdValue\", [\n    {\n        title: \"Item Title\",\n        requires_shipping: true,\n        is_discountable: true,\n        is_tax_inclusive: true,\n        unit_price: 100,\n    }\n]);\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 29994,
											"name": "orderId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 29995,
											"name": "items",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order line item to be created."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29726,
													"name": "CreateOrderLineItemDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 29996,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29376,
													"name": "OrderLineItemDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 29997,
							"name": "updateLineItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 29998,
									"name": "updateLineItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates existing {return type}(s)."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated {return type}(s)."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nconst updateOrderLineItems: UpdateOrderLineItemWithSelectorDTO[] = [\n  {\n    selector: {\n      id: \"line-item-id-1\"\n    },\n    data: {\n      id: \"line-item-id-1\",\n      quantity: 2,\n      unit_price: 1999\n    }\n  }\n];\n\nconst updatedLineItems = await orderModuleService.updateLineItems(updateOrderLineItems);\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 29999,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The attributes to update in the order line item with selector."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29776,
													"name": "UpdateOrderLineItemWithSelectorDTO",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29376,
													"name": "OrderLineItemDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 30000,
									"name": "updateLineItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates existing {return type}(s)."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated {return type}(s)."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nconst result = await orderModuleService.updateLineItems(\n  { id: \"line-item-id-1\" },\n  { quantity: 10 }\n);\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30001,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Make all properties in T optional"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Partial"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 29376,
														"name": "OrderLineItemDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "Partial",
												"package": "typescript"
											}
										},
										{
											"id": 30002,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Make all properties in T optional"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Partial"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 29779,
														"name": "UpdateOrderLineItemDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "Partial",
												"package": "typescript"
											}
										},
										{
											"id": 30003,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29376,
													"name": "OrderLineItemDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 30004,
									"name": "updateLineItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates existing {return type}(s)."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated {return type}(s)."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nconst result = await orderModuleService.updateLineItems(\n  \"lineIdExample\",\n  {\n    quantity: 10,\n  }\n);\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30005,
											"name": "lineId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The line's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 30006,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Make all properties in T optional"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Partial"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 29779,
														"name": "UpdateOrderLineItemDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "Partial",
												"package": "typescript"
											}
										},
										{
											"id": 30007,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 29376,
												"name": "OrderLineItemDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 30008,
							"name": "removeLineItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30009,
									"name": "removeLineItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method Represents the completion of an asynchronous operation"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when {summary}"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nawait orderModuleService.removeLineItems([\"itemId1\", \"itemId2\"]);\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30010,
											"name": "itemIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The list of {summary}"
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 30011,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 30012,
									"name": "removeLineItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method Represents the completion of an asynchronous operation"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when {summary}"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nawait orderModuleService.removeLineItems(itemId1);\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30013,
											"name": "itemIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "{summary}"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 30014,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 30015,
									"name": "removeLineItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method Represents the completion of an asynchronous operation"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when {summary}"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nawait orderModuleService.removeLineItems({ id: 'item-123' });\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30016,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Make all properties in T optional"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Partial"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 29376,
														"name": "OrderLineItemDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "Partial",
												"package": "typescript"
											}
										},
										{
											"id": 30017,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 30018,
							"name": "updateOrderItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30019,
									"name": "updateOrderItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates existing {return type}(s)."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated {return type}(s)."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nawait orderModuleService.updateOrderItem(\n  { id: \"item123\" },\n  { quantity: \"2\" }\n);\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30020,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Make all properties in T optional"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Partial"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 29416,
														"name": "OrderItemDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "Partial",
												"package": "typescript"
											}
										},
										{
											"id": 30021,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The attributes to update in the order item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 29896,
												"name": "UpdateOrderItemDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 30022,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29416,
													"name": "OrderItemDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 30023,
									"name": "updateOrderItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates existing {return type}(s)."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated {return type}(s)."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nawait orderModuleService.updateOrderItem(\n  'orderDetailId123',\n  {\n    item_id: 'item123',\n    quantity: 2\n  }\n);\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30024,
											"name": "orderDetailId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order detail's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 30025,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Make all properties in T optional"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Partial"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 29896,
														"name": "UpdateOrderItemDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "Partial",
												"package": "typescript"
											}
										},
										{
											"id": 30026,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 29416,
												"name": "OrderItemDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 30027,
									"name": "updateOrderItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates existing {return type}(s)."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated {return type}(s)."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nawait orderModuleService.updateOrderItem(\n  \"order-detail-id\",\n  {\n    quantity: 2,\n    item_id: 'item123',\n  }\n);\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30028,
											"name": "orderDetailIdOrDataOrSelector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The string |  partial< order item d t o> |  update order item with selector details."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Partial"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 29416,
																"name": "OrderItemDTO",
																"package": "@medusajs/types"
															}
														],
														"name": "Partial",
														"package": "typescript"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 29908,
															"name": "UpdateOrderItemWithSelectorDTO",
															"package": "@medusajs/types"
														}
													}
												]
											}
										},
										{
											"id": 30029,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "{summary}"
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 29896,
														"name": "UpdateOrderItemDTO",
														"package": "@medusajs/types"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Partial"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 29896,
																"name": "UpdateOrderItemDTO",
																"package": "@medusajs/types"
															}
														],
														"name": "Partial",
														"package": "typescript"
													}
												]
											}
										},
										{
											"id": 30030,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 29416,
														"name": "OrderItemDTO",
														"package": "@medusajs/types"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 29416,
															"name": "OrderItemDTO",
															"package": "@medusajs/types"
														}
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 30031,
							"name": "listShippingMethods",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30032,
									"name": "listShippingMethods",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of {return type}(s) based on optional filters and configuration."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of {return type}(s)."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nawait orderModuleService.listShippingMethods(\n  { order_id: \"order_123\" },\n  { limit: 10, offset: 0 }\n);\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30033,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved order shipping method."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 29525,
												"name": "FilterableOrderShippingMethodProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 30034,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the order shipping method is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a order shipping method."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 27592,
												"typeArguments": [
													{
														"type": "reference",
														"target": 29345,
														"name": "OrderShippingMethodDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 30035,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29345,
													"name": "OrderShippingMethodDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 30036,
							"name": "addShippingMethods",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30037,
									"name": "addShippingMethods",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method Represents the completion of an asynchronous operation"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Represents the completion of an asynchronous operation"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nconst result = await orderModuleService.addShippingMethods({\n  name: \"Standard Shipping\",\n  shipping_method_id: \"1\",\n  order_id: \"123\",\n  amount: 1000\n});\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30038,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order shipping method to be created."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 29805,
												"name": "CreateOrderShippingMethodDTO",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 29345,
												"name": "OrderShippingMethodDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 30039,
									"name": "addShippingMethods",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method Represents the completion of an asynchronous operation"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Represents the completion of an asynchronous operation"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nconst shippingMethods: CreateOrderShippingMethodDTO[] = [\n  {\n    name: 'Standard Shipping',\n    shipping_method_id: 'std_ship_001',\n    order_id: 'order_12345',\n    amount: 1000\n  },\n  {\n    name: 'Express Shipping',\n    shipping_method_id: 'exp_ship_002',\n    order_id: 'order_12345',\n    amount: 1000\n  }\n];\n\nconst addedShippingMethods = await orderModuleService.addShippingMethods(shippingMethods);\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30040,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order shipping method to be created."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29805,
													"name": "CreateOrderShippingMethodDTO",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29345,
													"name": "OrderShippingMethodDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 30041,
									"name": "addShippingMethods",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method Represents the completion of an asynchronous operation"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Represents the completion of an asynchronous operation"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nconst createOrderShippingMethodDTOs: CreateOrderShippingMethodDTO[] = [{\n  name: \"Standard Shipping\",\n  shipping_method_id: \"123\",\n  order_id: \"abc\",\n  amount: 1000\n}];\n\nawait orderModuleService.addShippingMethods(\"orderId123\", createOrderShippingMethodDTOs);\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30042,
											"name": "orderId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 30043,
											"name": "methods",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order shipping method to be created."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29805,
													"name": "CreateOrderShippingMethodDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 30044,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29345,
													"name": "OrderShippingMethodDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 30045,
							"name": "removeShippingMethods",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30046,
									"name": "removeShippingMethods",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method Represents the completion of an asynchronous operation"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when {summary}"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nawait orderModuleService.removeShippingMethods(['method1', 'method2']);\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30047,
											"name": "methodIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The list of {summary}"
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 30048,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 30049,
									"name": "removeShippingMethods",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method Represents the completion of an asynchronous operation"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when {summary}"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nawait orderModuleService.removeShippingMethods(\"methodId12345\");\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30050,
											"name": "methodIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "{summary}"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 30051,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 30052,
									"name": "removeShippingMethods",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method Represents the completion of an asynchronous operation"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when {summary}"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nawait orderModuleService.removeShippingMethods({\n    id: \"shipping-method-123\",\n});\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30053,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Make all properties in T optional"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Partial"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 29345,
														"name": "OrderShippingMethodDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "Partial",
												"package": "typescript"
											}
										},
										{
											"id": 30054,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 30055,
							"name": "listLineItemAdjustments",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30056,
									"name": "listLineItemAdjustments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of {return type}(s) based on optional filters and configuration."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of {return type}(s)."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nconst orderLineItemAdjustments = await orderModuleService.listLineItemAdjustments({ item_id: \"order-line-item-123\" });\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30057,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved order line item adjustment."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 29517,
												"name": "FilterableOrderLineItemAdjustmentProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 30058,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the order line item adjustment is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a order line item adjustment."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 27592,
												"typeArguments": [
													{
														"type": "reference",
														"target": 29286,
														"name": "OrderLineItemAdjustmentDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 30059,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29286,
													"name": "OrderLineItemAdjustmentDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 30060,
							"name": "addLineItemAdjustments",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30061,
									"name": "addLineItemAdjustments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method Represents the completion of an asynchronous operation"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Represents the completion of an asynchronous operation"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nawait orderModuleService.addLineItemAdjustments([\n  {\n    amount: 1000,\n  }\n]);\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30062,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order adjustment to be created."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29651,
													"name": "CreateOrderAdjustmentDTO",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29286,
													"name": "OrderLineItemAdjustmentDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 30063,
									"name": "addLineItemAdjustments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method Represents the completion of an asynchronous operation"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Represents the completion of an asynchronous operation"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nawait orderModuleService.addLineItemAdjustments({\n  amount: 1000,\n});\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30064,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order adjustment to be created."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 29651,
												"name": "CreateOrderAdjustmentDTO",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29286,
													"name": "OrderLineItemAdjustmentDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 30065,
									"name": "addLineItemAdjustments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method Represents the completion of an asynchronous operation"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Represents the completion of an asynchronous operation"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nawait orderModuleService.addLineItemAdjustments(\"12345\", [\n  {\n    amount: 1000,\n  }\n]);\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30066,
											"name": "orderId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 30067,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order adjustment to be created."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29651,
													"name": "CreateOrderAdjustmentDTO",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29286,
													"name": "OrderLineItemAdjustmentDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 30068,
							"name": "setLineItemAdjustments",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30069,
									"name": "setLineItemAdjustments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method Represents the completion of an asynchronous operation"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Represents the completion of an asynchronous operation"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nconst adjustmentsData: UpsertOrderLineItemAdjustmentDTO[] = [{\n  item_id: \"item123\",\n  amount: 1000\n}];\n\nconst result = await orderModuleService.setLineItemAdjustments(\"order456\", adjustmentsData);\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30070,
											"name": "orderId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 30071,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The upsert order line item adjustment details."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29679,
													"name": "UpsertOrderLineItemAdjustmentDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 30072,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29286,
													"name": "OrderLineItemAdjustmentDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 30073,
							"name": "removeLineItemAdjustments",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30074,
									"name": "removeLineItemAdjustments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method Represents the completion of an asynchronous operation"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when {summary}"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nawait orderModuleService.removeLineItemAdjustments([\"adjustmentId1\", \"adjustmentId2\"]);"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30075,
											"name": "adjustmentIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The list of {summary}"
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 30076,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 30077,
									"name": "removeLineItemAdjustments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method Represents the completion of an asynchronous operation"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when {summary}"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nawait orderModuleService.removeLineItemAdjustments(\"adjustmentId123\");\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30078,
											"name": "adjustmentIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "{summary}"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 30079,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 30080,
									"name": "removeLineItemAdjustments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method Represents the completion of an asynchronous operation"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when {summary}"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nawait orderModuleService.removeLineItemAdjustments({\n  item_id: \"123\"\n});\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30081,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Make all properties in T optional"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Partial"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 29286,
														"name": "OrderLineItemAdjustmentDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "Partial",
												"package": "typescript"
											}
										},
										{
											"id": 30082,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 30083,
							"name": "listShippingMethodAdjustments",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30084,
									"name": "listShippingMethodAdjustments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of {return type}(s) based on optional filters and configuration."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of {return type}(s)."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nconst result = await orderModuleService.listShippingMethodAdjustments({\n  id: \"12345\",\n});\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30085,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved order shipping method adjustment."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 29532,
												"name": "FilterableOrderShippingMethodAdjustmentProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 30086,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the order shipping method adjustment is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a order shipping method adjustment."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 27592,
												"typeArguments": [
													{
														"type": "reference",
														"target": 29274,
														"name": "OrderShippingMethodAdjustmentDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 30087,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29274,
													"name": "OrderShippingMethodAdjustmentDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 30088,
							"name": "addShippingMethodAdjustments",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30089,
									"name": "addShippingMethodAdjustments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method Represents the completion of an asynchronous operation"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Represents the completion of an asynchronous operation"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nconst adjustmentsData: CreateOrderShippingMethodAdjustmentDTO[] = [{\n  shipping_method_id: '123',\n  code: \"ADJUSTMENT_CODE\",\n  amount: 1000,\n  description: 'Discount',\n  promotion_id: 'promo-456'\n}];\n\nconst result = await orderModuleService.addShippingMethodAdjustments(adjustmentsData);\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30090,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order shipping method adjustment to be created."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29821,
													"name": "CreateOrderShippingMethodAdjustmentDTO",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29274,
													"name": "OrderShippingMethodAdjustmentDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 30091,
									"name": "addShippingMethodAdjustments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method Represents the completion of an asynchronous operation"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Represents the completion of an asynchronous operation"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\n// Example usage of addShippingMethodAdjustments method\nconst adjustmentData: CreateOrderShippingMethodAdjustmentDTO = {\n  shipping_method_id: \"shipping_method_123\",\n  code: \"ADJUSTMENT_CODE\",\n  amount: 1000\n};\n\nconst result = await orderModuleService.addShippingMethodAdjustments(adjustmentData);\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30092,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order shipping method adjustment to be created."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 29821,
												"name": "CreateOrderShippingMethodAdjustmentDTO",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 29274,
												"name": "OrderShippingMethodAdjustmentDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 30093,
									"name": "addShippingMethodAdjustments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method Represents the completion of an asynchronous operation"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Represents the completion of an asynchronous operation"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nawait orderModuleService.addShippingMethodAdjustments(\"orderId123\", [\n  {\n    shipping_method_id: \"shippingMethodId456\",\n    code: \"CODE123\",\n    amount: 1000\n  }\n]);\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30094,
											"name": "orderId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 30095,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order shipping method adjustment to be created."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29821,
													"name": "CreateOrderShippingMethodAdjustmentDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 30096,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29274,
													"name": "OrderShippingMethodAdjustmentDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 30097,
							"name": "setShippingMethodAdjustments",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30098,
									"name": "setShippingMethodAdjustments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method Represents the completion of an asynchronous operation"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Represents the completion of an asynchronous operation"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nawait orderModuleService.setShippingMethodAdjustments(\"orderId123\", [\n  {\n    shipping_method_id: \"shipMethodId123\",\n    code: \"CODE123\",\n    amount: 1000,\n  }\n]);\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30099,
											"name": "orderId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 30100,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The list of The order shipping method adjustment d t o |  update order shipping method adjustment to be created."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": 29821,
															"name": "CreateOrderShippingMethodAdjustmentDTO",
															"package": "@medusajs/types"
														},
														{
															"type": "reference",
															"target": 29828,
															"name": "UpdateOrderShippingMethodAdjustmentDTO",
															"package": "@medusajs/types"
														}
													]
												}
											}
										},
										{
											"id": 30101,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29274,
													"name": "OrderShippingMethodAdjustmentDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 30102,
							"name": "removeShippingMethodAdjustments",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30103,
									"name": "removeShippingMethodAdjustments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method Represents the completion of an asynchronous operation"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when {summary}"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nawait orderModuleService.removeShippingMethodAdjustments([\"adjustmentId1\", \"adjustmentId2\"]);\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30104,
											"name": "adjustmentIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The list of {summary}"
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 30105,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 30106,
									"name": "removeShippingMethodAdjustments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method Represents the completion of an asynchronous operation"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when {summary}"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nawait orderModuleService.removeShippingMethodAdjustments(\"adjustmentId123\");\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30107,
											"name": "adjustmentId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The adjustment's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 30108,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 30109,
									"name": "removeShippingMethodAdjustments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method Represents the completion of an asynchronous operation"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when {summary}"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nawait orderModuleService.removeShippingMethodAdjustments({ id: \"adjustment123\" });\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30110,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Make all properties in T optional"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Partial"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 29274,
														"name": "OrderShippingMethodAdjustmentDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "Partial",
												"package": "typescript"
											}
										},
										{
											"id": 30111,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 30112,
							"name": "listLineItemTaxLines",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30113,
									"name": "listLineItemTaxLines",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of {return type}(s) based on optional filters and configuration."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of {return type}(s)."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nawait orderModuleService.listLineItemTaxLines({ id: \"123\" });\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30114,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved order line item tax line."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 29540,
												"name": "FilterableOrderLineItemTaxLineProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 30115,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the order line item tax line is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a order line item tax line."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 27592,
												"typeArguments": [
													{
														"type": "reference",
														"target": 29318,
														"name": "OrderLineItemTaxLineDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 30116,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29318,
													"name": "OrderLineItemTaxLineDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 30117,
							"name": "addLineItemTaxLines",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30118,
									"name": "addLineItemTaxLines",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method Represents the completion of an asynchronous operation"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Represents the completion of an asynchronous operation"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nconst taxLines: CreateOrderLineItemTaxLineDTO[] = [{\n  code: 'VAT',\n  rate: 20,\n  tax_rate_id: 'tax_rate_id_value'\n}];\n\nconst result = await orderModuleService.addLineItemTaxLines(taxLines);\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30119,
											"name": "taxLines",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order line item tax line to be created."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29713,
													"name": "CreateOrderLineItemTaxLineDTO",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29318,
													"name": "OrderLineItemTaxLineDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 30120,
									"name": "addLineItemTaxLines",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method Represents the completion of an asynchronous operation"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Represents the completion of an asynchronous operation"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nconst taxLine: CreateOrderLineItemTaxLineDTO = {\n  code: 'TAX100',\n  rate: 10\n};\n\nconst response = await orderModuleService.addLineItemTaxLines(taxLine);\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30121,
											"name": "taxLine",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order line item tax line to be created."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 29713,
												"name": "CreateOrderLineItemTaxLineDTO",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 29318,
												"name": "OrderLineItemTaxLineDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 30122,
									"name": "addLineItemTaxLines",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method Represents the completion of an asynchronous operation"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Represents the completion of an asynchronous operation"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nawait orderModuleService.addLineItemTaxLines(\"orderId123\", [\n  {\n    code: \"TAX1001\",\n    rate: 70,\n  }\n]);\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30123,
											"name": "orderId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 30124,
											"name": "taxLines",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order line item tax line d t o |  create order line item tax line to be created."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 29713,
														"name": "CreateOrderLineItemTaxLineDTO",
														"package": "@medusajs/types"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 29713,
															"name": "CreateOrderLineItemTaxLineDTO",
															"package": "@medusajs/types"
														}
													}
												]
											}
										},
										{
											"id": 30125,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29318,
													"name": "OrderLineItemTaxLineDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 30126,
							"name": "setLineItemTaxLines",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30127,
									"name": "setLineItemTaxLines",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method Represents the completion of an asynchronous operation"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Represents the completion of an asynchronous operation"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nconst orderId = '12345';\nconst taxLines: (CreateOrderLineItemTaxLineDTO | UpdateOrderLineItemTaxLineDTO)[] = [\n  {\n    code: \"TAX1001\",\n    rate: 70,\n  }\n];\n\nconst result = await orderModuleService.setLineItemTaxLines(orderId, taxLines);\n\nconsole.log(result);\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30128,
											"name": "orderId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 30129,
											"name": "taxLines",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The list of The order line item tax line d t o |  update order line item tax line to be created."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": 29713,
															"name": "CreateOrderLineItemTaxLineDTO",
															"package": "@medusajs/types"
														},
														{
															"type": "reference",
															"target": 29719,
															"name": "UpdateOrderLineItemTaxLineDTO",
															"package": "@medusajs/types"
														}
													]
												}
											}
										},
										{
											"id": 30130,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29318,
													"name": "OrderLineItemTaxLineDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 30131,
							"name": "removeLineItemTaxLines",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30132,
									"name": "removeLineItemTaxLines",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method Represents the completion of an asynchronous operation"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when {summary}"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\n// Example usage of removeLineItemTaxLines method from IOrderModuleService\nawait orderModuleService.removeLineItemTaxLines([\"taxLineId1\", \"taxLineId2\"]);\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30133,
											"name": "taxLineIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The list of {summary}"
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 30134,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 30135,
									"name": "removeLineItemTaxLines",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method Represents the completion of an asynchronous operation"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when {summary}"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nawait orderModuleService.removeLineItemTaxLines(\"yourTaxLineId\");\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30136,
											"name": "taxLineIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "{summary}"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 30137,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 30138,
									"name": "removeLineItemTaxLines",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method Represents the completion of an asynchronous operation"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when {summary}"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nawait orderModuleService.removeLineItemTaxLines({\n  id: \"yourTaxLineId\"\n});\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30139,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved order line item tax line."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 29540,
												"name": "FilterableOrderLineItemTaxLineProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 30140,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 30141,
							"name": "listShippingMethodTaxLines",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30142,
									"name": "listShippingMethodTaxLines",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of {return type}(s) based on optional filters and configuration."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of {return type}(s)."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nasync function executeMethod() {\n  const result = await orderModuleService.listShippingMethodTaxLines({\n    id: \"123\",\n  });\n}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30143,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved order shipping method tax line."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 29550,
												"name": "FilterableOrderShippingMethodTaxLineProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 30144,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the order shipping method tax line is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a order shipping method tax line."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 27592,
												"typeArguments": [
													{
														"type": "reference",
														"target": 29307,
														"name": "OrderShippingMethodTaxLineDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 30145,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29307,
													"name": "OrderShippingMethodTaxLineDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 30146,
							"name": "addShippingMethodTaxLines",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30147,
									"name": "addShippingMethodTaxLines",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method Represents the completion of an asynchronous operation"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Represents the completion of an asynchronous operation"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nconst result = await orderModuleService.addShippingMethodTaxLines([\n  {\n    code: \"VAT20\",\n    rate: 20,\n  }\n]);\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30148,
											"name": "taxLines",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order shipping method tax line to be created."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29700,
													"name": "CreateOrderShippingMethodTaxLineDTO",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29307,
													"name": "OrderShippingMethodTaxLineDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 30149,
									"name": "addShippingMethodTaxLines",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method Represents the completion of an asynchronous operation"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Represents the completion of an asynchronous operation"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nconst taxLine: CreateOrderShippingMethodTaxLineDTO = {\n  code: \"VAT20\",\n  rate: 20,\n};\n\norderModuleService.addShippingMethodTaxLines(taxLine).then((result) => {\n  console.log(result);\n});\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30150,
											"name": "taxLine",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order shipping method tax line to be created."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 29700,
												"name": "CreateOrderShippingMethodTaxLineDTO",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 29307,
												"name": "OrderShippingMethodTaxLineDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 30151,
									"name": "addShippingMethodTaxLines",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method Represents the completion of an asynchronous operation"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Represents the completion of an asynchronous operation"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nconst orderId = '123';\nconst taxLines = [\n  {\n    code: \"VAT20\",\n    rate: 20,\n  }\n];\n\nconst addedTaxLines = await orderModuleService.addShippingMethodTaxLines(orderId, taxLines);\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30152,
											"name": "orderId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 30153,
											"name": "taxLines",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order shipping method tax line d t o |  create order shipping method tax line to be created."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 29700,
														"name": "CreateOrderShippingMethodTaxLineDTO",
														"package": "@medusajs/types"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 29700,
															"name": "CreateOrderShippingMethodTaxLineDTO",
															"package": "@medusajs/types"
														}
													}
												]
											}
										},
										{
											"id": 30154,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29307,
													"name": "OrderShippingMethodTaxLineDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 30155,
							"name": "setShippingMethodTaxLines",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30156,
									"name": "setShippingMethodTaxLines",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method Represents the completion of an asynchronous operation"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Represents the completion of an asynchronous operation"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nconst orderId = \"someOrderId\";\nconst taxLines = [\n  {\n    code: \"VAT20\",\n    rate: 20,\n  }\n];\n\nconst result = await orderModuleService.setShippingMethodTaxLines(orderId, taxLines);\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30157,
											"name": "orderId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 30158,
											"name": "taxLines",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The list of The order shipping method tax line d t o |  update order shipping method tax line to be created."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": 29700,
															"name": "CreateOrderShippingMethodTaxLineDTO",
															"package": "@medusajs/types"
														},
														{
															"type": "reference",
															"target": 29706,
															"name": "UpdateOrderShippingMethodTaxLineDTO",
															"package": "@medusajs/types"
														}
													]
												}
											}
										},
										{
											"id": 30159,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29307,
													"name": "OrderShippingMethodTaxLineDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 30160,
							"name": "removeShippingMethodTaxLines",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30161,
									"name": "removeShippingMethodTaxLines",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method Represents the completion of an asynchronous operation"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when {summary}"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nawait orderModuleService.removeShippingMethodTaxLines([\"taxLine1\", \"taxLine2\"]);\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30162,
											"name": "taxLineIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The list of {summary}"
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 30163,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 30164,
									"name": "removeShippingMethodTaxLines",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method Represents the completion of an asynchronous operation"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when {summary}"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nawait orderModuleService.removeShippingMethodTaxLines(\"12345\");\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30165,
											"name": "taxLineIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "{summary}"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 30166,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 30167,
									"name": "removeShippingMethodTaxLines",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method Represents the completion of an asynchronous operation"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when {summary}"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nawait orderModuleService.removeShippingMethodTaxLines({\n  id: \"shippingMethodTaxLineId\"\n});\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30168,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved order shipping method tax line."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 29550,
												"name": "FilterableOrderShippingMethodTaxLineProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 30169,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 30170,
							"name": "createOrderChange",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30171,
									"name": "createOrderChange",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 30172,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 29835,
												"name": "CreateOrderChangeDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 30173,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 29454,
												"name": "OrderChangeDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 30174,
									"name": "createOrderChange",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates {return type}(s)"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created {return type}(s)."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\n// Example call to createOrderChange\n\nconst createOrderChangeData: CreateOrderChangeDTO[] = [{\n    order_id: \"order123\",\n    description: \"Change due to customer request\"\n}];\n\nconst result = await orderModuleService.createOrderChange(createOrderChangeData);\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30175,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order change to be created."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29835,
													"name": "CreateOrderChangeDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 30176,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29454,
													"name": "OrderChangeDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 30177,
									"name": "createOrderChange",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates {return type}(s)"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created {return type}(s)."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nconst result = await orderModuleService.createOrderChange({\n  order_id: \"order123\",\n  description: \"Adding new item to the order\"\n});\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30178,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order change d t o |  create order change to be created."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 29835,
														"name": "CreateOrderChangeDTO",
														"package": "@medusajs/types"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 29835,
															"name": "CreateOrderChangeDTO",
															"package": "@medusajs/types"
														}
													}
												]
											}
										},
										{
											"id": 30179,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 29454,
														"name": "OrderChangeDTO",
														"package": "@medusajs/types"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 29454,
															"name": "OrderChangeDTO",
															"package": "@medusajs/types"
														}
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 30180,
							"name": "cancelOrderChange",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30181,
									"name": "cancelOrderChange",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method Represents the completion of an asynchronous operation"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when {summary}"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nawait orderModuleService.cancelOrderChange(\"orderId123\");\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30182,
											"name": "orderId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 30183,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 30184,
									"name": "cancelOrderChange",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method Represents the completion of an asynchronous operation"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when {summary}"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nawait orderModuleService.cancelOrderChange([\"1234ABCD\"]);\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30185,
											"name": "orderId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order's ID."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 30186,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 30187,
									"name": "cancelOrderChange",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method Represents the completion of an asynchronous operation"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when {summary}"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nconst cancelOrderChangeData: CancelOrderChangeDTO = {\n  id: \"orderChangeId\",\n};\n\nawait orderModuleService.cancelOrderChange(cancelOrderChangeData);\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30188,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The cancel order change details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 29856,
												"name": "CancelOrderChangeDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 30189,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 30190,
									"name": "cancelOrderChange",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method Represents the completion of an asynchronous operation"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when {summary}"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nawait orderModuleService.cancelOrderChange([{ id: \"orderChangeId\" }]);\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30191,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The cancel order change details."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29856,
													"name": "CancelOrderChangeDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 30192,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 30193,
							"name": "confirmOrderChange",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30194,
									"name": "confirmOrderChange",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method Represents the completion of an asynchronous operation"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when {summary}"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nawait orderModuleService.confirmOrderChange(\"123456789\");\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30195,
											"name": "orderId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 30196,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 30197,
									"name": "confirmOrderChange",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method Represents the completion of an asynchronous operation"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when {summary}"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nawait orderModuleService.confirmOrderChange([\"12345\"]);\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30198,
											"name": "orderId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order's ID."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 30199,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 30200,
									"name": "confirmOrderChange",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method Represents the completion of an asynchronous operation"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when {summary}"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nawait orderModuleService.confirmOrderChange({\n  id: \"123456\"\n});\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30201,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The confirm order change details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 29864,
												"name": "ConfirmOrderChangeDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 30202,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 30203,
									"name": "confirmOrderChange",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method Represents the completion of an asynchronous operation"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when {summary}"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nconst confirmOrderChangesData: ConfirmOrderChangeDTO[] = [{\n  id: \"orderChangeId\",\n}];\n\nawait orderModuleService.confirmOrderChange(confirmOrderChangesData);\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30204,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The confirm order change details."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29864,
													"name": "ConfirmOrderChangeDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 30205,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 30206,
							"name": "declineOrderChange",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30207,
									"name": "declineOrderChange",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method Represents the completion of an asynchronous operation"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when {summary}"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nawait orderModuleService.declineOrderChange(\"orderChangeId\");\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30208,
											"name": "orderId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 30209,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 30210,
									"name": "declineOrderChange",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method Represents the completion of an asynchronous operation"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when {summary}"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nawait orderModuleService.declineOrderChange([\"orderChangeId\"]);\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30211,
											"name": "orderId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order's ID."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 30212,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 30213,
									"name": "declineOrderChange",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method Represents the completion of an asynchronous operation"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when {summary}"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nawait orderModuleService.declineOrderChange({\n  id: \"123456\",\n});\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30214,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The decline order change details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 29860,
												"name": "DeclineOrderChangeDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 30215,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 30216,
									"name": "declineOrderChange",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method Represents the completion of an asynchronous operation"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when {summary}"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nawait orderModuleService.declineOrderChange([\n  {\n    id: \"12345\",\n  }\n]);\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30217,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The decline order change details."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 29860,
													"name": "DeclineOrderChangeDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 30218,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 30219,
							"name": "applyPendingOrderActions",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30220,
									"name": "applyPendingOrderActions",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method {summary}"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "{summary}"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nawait orderModuleService.applyPendingOrderActions(\"12345\");\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30221,
											"name": "orderId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order's ID."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										},
										{
											"id": 30222,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 30223,
							"name": "addOrderAction",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30224,
									"name": "addOrderAction",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method {summary}"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "{summary}"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```typescript\nawait orderModuleService.addOrderAction({\n    action: 'create',\n    orderId: '12345',\n    details: {\n        productId: 'abc123',\n        quantity: 2\n    }\n});\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30225,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "{summary}"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 30226,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30532,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								29912,
								29917,
								29922,
								29927,
								29934,
								29945,
								29952,
								29957,
								29964,
								29971,
								29978,
								29983,
								29988,
								29997,
								30008,
								30018,
								30031,
								30036,
								30045,
								30055,
								30060,
								30068,
								30073,
								30083,
								30088,
								30097,
								30102,
								30112,
								30117,
								30126,
								30131,
								30141,
								30146,
								30155,
								30160,
								30170,
								30180,
								30193,
								30206,
								30219,
								30223
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 29123,
							"name": "IModuleService",
							"package": "@medusajs/types"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						29264,
						29274,
						29286,
						29298,
						29307,
						29318,
						29329,
						29345,
						29364,
						29376,
						29416,
						29437,
						29454,
						29472,
						29485,
						29496,
						29505,
						29509,
						29517,
						29525,
						29532,
						29540,
						29550,
						29560,
						29570,
						29577,
						29585,
						29598,
						29612,
						29625,
						29641,
						29651,
						29657,
						29664,
						29671,
						29679,
						29687,
						29693,
						29700,
						29706,
						29713,
						29719,
						29726,
						29751,
						29776,
						29779,
						29805,
						29813,
						29821,
						29828,
						29835,
						29842,
						29856,
						29860,
						29864,
						29868,
						29875,
						29882,
						29889,
						29896,
						29908,
						29911
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						29244
					]
				}
			]
		},
		{
			"id": 30507,
			"name": "ProductCategoryTransformOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 30508,
					"name": "includeDescendantsTree",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						30508
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 27658,
					"name": "RepositoryTransformOptions",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 30237,
			"name": "RegionTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 30238,
					"name": "RegionDTO__legacy",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of a legacy region."
							}
						]
					},
					"children": [
						{
							"id": 30239,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the region."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30240,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The currency code of the region."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30241,
							"name": "tax_rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The tax rate of the region."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 30242,
							"name": "tax_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The tax code of the region."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 30243,
							"name": "gift_cards_taxable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether gift cards in the region are taxable."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 30244,
							"name": "automatic_taxes",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether taxes should be calculated automatically in the region."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 30245,
							"name": "tax_provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated tax provider's ID."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 30246,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 30247,
							"name": "includes_tax",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether prices include taxes in the region."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30239,
								30240,
								30241,
								30242,
								30243,
								30244,
								30245,
								30246,
								30247
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						30238
					]
				}
			]
		},
		{
			"id": 30248,
			"name": "SearchTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 30249,
					"name": "IndexSettings",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 30250,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 30251,
									"name": "indexSettings",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Settings specific to the provider. E.g. "
											},
											{
												"kind": "code",
												"text": "`searchableAttributes`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 30252,
									"name": "primaryKey",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Primary key for the index. Used to enforce unique documents in an index. See more in Meilisearch' https://docs.meilisearch.com/learn/core_concepts/primary_key.html."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 30253,
									"name": "transformer",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Document transformer. Used to transform documents before they are added to the index."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 30254,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 30255,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 30256,
															"name": "document",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										30251,
										30252,
										30253
									]
								}
							]
						}
					}
				},
				{
					"id": 30257,
					"name": "ISearchService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30258,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 30259,
							"name": "createIndex",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30260,
									"name": "createIndex",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to create an index"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30261,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 30262,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the options"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 30263,
							"name": "getIndex",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30264,
									"name": "getIndex",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to get an index"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30265,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 30266,
							"name": "addDocuments",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30267,
									"name": "addDocuments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to index documents by the search engine provider"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30268,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 30269,
											"name": "documents",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "documents array to be indexed"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										},
										{
											"id": 30270,
											"name": "type",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "of documents to be added (e.g: products, regions, orders, etc)"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 30271,
							"name": "replaceDocuments",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30272,
									"name": "replaceDocuments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to replace documents"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30273,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 30274,
											"name": "documents",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "array of document objects that will replace existing documents"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										},
										{
											"id": 30275,
											"name": "type",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "type of documents to be replaced (e.g: products, regions, orders, etc)"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 30276,
							"name": "deleteDocument",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30277,
									"name": "deleteDocument",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to delete document"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30278,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 30279,
											"name": "document_id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the id of the document"
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 30280,
							"name": "deleteAllDocuments",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30281,
									"name": "deleteAllDocuments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to delete all documents"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30282,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 30283,
							"name": "search",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30284,
									"name": "search",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to search for a document in an index"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30285,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 30286,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the search query"
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 30287,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "any options passed to the request object other than the query and indexName\n- additionalOptions contain any provider specific options"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 30288,
							"name": "updateSettings",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30289,
									"name": "updateSettings",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to update the settings of an index"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30290,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 30291,
											"name": "settings",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "settings object"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30258
							]
						},
						{
							"title": "Methods",
							"children": [
								30259,
								30263,
								30266,
								30271,
								30276,
								30280,
								30283,
								30288
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						30257
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						30249
					]
				}
			]
		},
		{
			"id": 30509,
			"name": "SharedContext",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@deprecated",
						"content": [
							{
								"kind": "text",
								"text": "use "
							},
							{
								"kind": "code",
								"text": "`Context`"
							},
							{
								"kind": "text",
								"text": " instead\n\n\nA context used to share resources, such as transaction manager, between the application and the module."
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 30510,
					"name": "transactionManager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a transaction manager."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
							"qualifiedName": "EntityManager"
						},
						"name": "EntityManager",
						"package": "typeorm"
					}
				},
				{
					"id": 30511,
					"name": "manager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of an entity manager."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
							"qualifiedName": "EntityManager"
						},
						"name": "EntityManager",
						"package": "typeorm"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						30510,
						30511
					]
				}
			]
		},
		{
			"id": 30512,
			"name": "MessageAggregatorFormat",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 30513,
					"name": "groupBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 30514,
					"name": "sortBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 30515,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"indexSignature": {
								"id": 30516,
								"name": "__index",
								"variant": "signature",
								"kind": 8192,
								"flags": {},
								"parameters": [
									{
										"id": 30517,
										"name": "key",
										"variant": "param",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "union",
									"types": [
										{
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "number"
										}
									]
								}
							}
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						30513,
						30514
					]
				}
			]
		},
		{
			"id": 30518,
			"name": "IMessageAggregator",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 30519,
					"name": "save",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 30520,
							"name": "save",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 30521,
									"name": "msg",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 27989,
												"name": "Message",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 27989,
													"name": "Message",
													"package": "@medusajs/types"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 30522,
					"name": "getMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 30523,
							"name": "getMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 30524,
									"name": "format",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 30512,
										"name": "MessageAggregatorFormat",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 27989,
											"name": "Message",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 30525,
					"name": "clearMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 30526,
							"name": "clearMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 30527,
					"name": "saveRawMessageData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 30528,
							"name": "saveRawMessageData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameter": [
								{
									"id": 30529,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 30530,
									"name": "messageData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 27995,
												"typeArguments": [
													{
														"type": "reference",
														"target": 30529,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "MessageFormat",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 27995,
													"typeArguments": [
														{
															"type": "reference",
															"target": 30529,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													],
													"name": "MessageFormat",
													"package": "@medusajs/types"
												}
											}
										]
									}
								},
								{
									"id": 30531,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						30519,
						30522,
						30525,
						30527
					]
				}
			]
		},
		{
			"id": 30532,
			"name": "Context",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A context used to share resources, such as transaction manager, between the application and the module."
					}
				]
			},
			"children": [
				{
					"id": 30533,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "literal",
						"value": "MedusaContext"
					}
				},
				{
					"id": 30534,
					"name": "transactionManager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a transaction manager of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`transactionManager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 30543,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 30535,
					"name": "manager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a manager, typically an entity manager, of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`manager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 30543,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 30536,
					"name": "isolationLevel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the isolation level of the context. Possible values are "
							},
							{
								"kind": "code",
								"text": "`READ UNCOMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`READ COMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`REPEATABLE READ`"
							},
							{
								"kind": "text",
								"text": ", or "
							},
							{
								"kind": "code",
								"text": "`SERIALIZABLE`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 30537,
					"name": "enableNestedTransactions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean value indicating whether nested transactions are enabled."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 30538,
					"name": "eventGroupId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the group to aggregate the events to be emitted at a later point."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 30539,
					"name": "transactionId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current transaction."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 30540,
					"name": "messageAggregator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a message aggregator, which is used to aggregate messages to be emitted at a later point."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 30518,
						"name": "IMessageAggregator",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 30541,
					"name": "requestId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current request."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 30542,
					"name": "idempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the idempotencyKey of the current workflow execution."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						30533,
						30534,
						30535,
						30536,
						30537,
						30538,
						30539,
						30540,
						30541,
						30542
					]
				}
			],
			"typeParameters": [
				{
					"id": 30543,
					"name": "TManager",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			]
		},
		{
			"id": 30544,
			"name": "BigNumberRawValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 30545,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 30546,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30546
							]
						}
					],
					"indexSignature": {
						"id": 30547,
						"name": "__index",
						"variant": "signature",
						"kind": 8192,
						"flags": {},
						"parameters": [
							{
								"id": 30548,
								"name": "key",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "unknown"
						}
					}
				}
			}
		},
		{
			"id": 30549,
			"name": "BigNumberInput",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 30544,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/bignumber.js/bignumber.d.ts",
							"qualifiedName": "BigNumber"
						},
						"name": "BigNumberJS",
						"package": "bignumber.js",
						"qualifiedName": "BigNumber"
					}
				]
			}
		},
		{
			"id": 30292,
			"name": "TransactionBaseTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 30293,
					"name": "ITransactionBaseService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30294,
							"name": "withTransaction",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30295,
									"name": "withTransaction",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 30296,
											"name": "transactionManager",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
													"qualifiedName": "EntityManager"
												},
												"name": "EntityManager",
												"package": "typeorm"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								30294
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 28006,
							"name": "IEventBusService"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						30293
					]
				}
			]
		},
		{
			"id": 30297,
			"name": "WorkflowTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 30298,
					"name": "CommonWorkflow",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 30299,
							"name": "WorkflowInputConfig",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 30300,
									"name": "listConfig",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 30301,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 30302,
													"name": "select",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												},
												{
													"id": 30303,
													"name": "relations",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														30302,
														30303
													]
												}
											]
										}
									}
								},
								{
									"id": 30304,
									"name": "retrieveConfig",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 30305,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 30306,
													"name": "select",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												},
												{
													"id": 30307,
													"name": "relations",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														30306,
														30307
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										30300,
										30304
									]
								}
							]
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"children": [
								30299
							]
						}
					]
				},
				{
					"id": 30359,
					"name": "InviteWorkflow",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 30364,
							"name": "AcceptInviteWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 30365,
									"name": "invite_token",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 30366,
									"name": "auth_user_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 30367,
									"name": "user",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 30368,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 30369,
													"name": "email",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 30370,
													"name": "first_name",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												},
												{
													"id": 30371,
													"name": "last_name",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												},
												{
													"id": 30372,
													"name": "avatar_url",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												},
												{
													"id": 30373,
													"name": "metadata",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														30369,
														30370,
														30371,
														30372,
														30373
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										30365,
										30366,
										30367
									]
								}
							]
						},
						{
							"id": 30360,
							"name": "CreateInvitesWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 30361,
									"name": "invites",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/types/src/user/mutations.ts",
												"qualifiedName": "CreateInviteDTO"
											},
											"name": "CreateInviteDTO",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										30361
									]
								}
							]
						},
						{
							"id": 30362,
							"name": "DeleteInvitesWorkflowInput",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 30363,
									"name": "ids",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										30363
									]
								}
							]
						},
						{
							"id": 30374,
							"name": "ResendInvitesWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 30375,
									"name": "invite_ids",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										30375
									]
								}
							]
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"children": [
								30364,
								30360,
								30362,
								30374
							]
						}
					]
				},
				{
					"id": 30308,
					"name": "PriceListWorkflow",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 30309,
							"name": "CreatePriceListDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 30310,
									"name": "starts_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 30311,
									"name": "ends_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 30312,
									"name": "status",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
											"qualifiedName": "PriceListStatus"
										},
										"name": "PriceListStatus",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 30313,
									"name": "rules_count",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 30314,
									"name": "rules",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
												"qualifiedName": "PriceListRuleDTO"
											},
											"name": "PriceListRuleDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 30315,
									"name": "prices",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 30316,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 30317,
														"name": "amount",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "number"
														}
													},
													{
														"id": 30318,
														"name": "currency_code",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 30319,
														"name": "region_id",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 30320,
														"name": "max_quantity",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"type": {
															"type": "intrinsic",
															"name": "number"
														}
													},
													{
														"id": 30321,
														"name": "min_quantity",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"type": {
															"type": "intrinsic",
															"name": "number"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															30317,
															30318,
															30319,
															30320,
															30321
														]
													}
												]
											}
										}
									}
								},
								{
									"id": 30322,
									"name": "customer_groups",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 30323,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 30324,
														"name": "id",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															30324
														]
													}
												]
											}
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										30310,
										30311,
										30312,
										30313,
										30314,
										30315,
										30322
									]
								}
							]
						},
						{
							"id": 30325,
							"name": "CreatePriceListRuleDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 30326,
									"name": "rule_attribute",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 30327,
									"name": "value",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										30326,
										30327
									]
								}
							]
						},
						{
							"id": 30328,
							"name": "CreatePriceListPriceDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 30329,
									"name": "amount",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 30330,
									"name": "currency_code",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 30331,
									"name": "price_set_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 30332,
									"name": "region_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 30333,
									"name": "max_quantity",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 30334,
									"name": "min_quantity",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										30329,
										30330,
										30331,
										30332,
										30333,
										30334
									]
								}
							]
						},
						{
							"id": 30335,
							"name": "CreatePriceListWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 30336,
									"name": "price_lists",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 30346,
											"name": "CreatePriceListWorkflowDTO",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										30336
									]
								}
							]
						},
						{
							"id": 30337,
							"name": "RemovePriceListProductsWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 30338,
									"name": "product_ids",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 30339,
									"name": "price_list_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										30338,
										30339
									]
								}
							]
						},
						{
							"id": 30340,
							"name": "RemovePriceListVariantsWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 30341,
									"name": "variant_ids",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 30342,
									"name": "price_list_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										30341,
										30342
									]
								}
							]
						},
						{
							"id": 30343,
							"name": "RemovePriceListPricesWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 30344,
									"name": "money_amount_ids",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 30345,
									"name": "price_list_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										30344,
										30345
									]
								}
							]
						},
						{
							"id": 30346,
							"name": "CreatePriceListWorkflowDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 30347,
									"name": "title",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 30348,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 30349,
									"name": "description",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 30350,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 30351,
									"name": "starts_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								},
								{
									"id": 30352,
									"name": "ends_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								},
								{
									"id": 30353,
									"name": "status",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
											"qualifiedName": "PriceListStatus"
										},
										"name": "PriceListStatus",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 30354,
									"name": "rules_count",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 30355,
									"name": "prices",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 30600,
											"name": "InputPrice",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 30356,
									"name": "rules",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/types/src/pricing/common/price-list.ts",
											"qualifiedName": "CreatePriceListRules"
										},
										"name": "CreatePriceListRules",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										30347,
										30348,
										30349,
										30350,
										30351,
										30352,
										30353,
										30354,
										30355,
										30356
									]
								}
							]
						},
						{
							"id": 30357,
							"name": "RemovePriceListWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 30358,
									"name": "price_lists",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										30358
									]
								}
							]
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"children": [
								30309,
								30325,
								30328,
								30335,
								30337,
								30340,
								30343,
								30346,
								30357
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"children": [
						30298,
						30359,
						30308
					]
				}
			]
		},
		{
			"id": 30600,
			"name": "InputPrice",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 30601,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 30602,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 30603,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 30604,
					"name": "variant_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 30605,
					"name": "min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 30606,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						30601,
						30602,
						30603,
						30604,
						30605,
						30606
					]
				}
			]
		}
	],
	"groups": [
		{
			"title": "Namespaces",
			"children": [
				27560,
				27574,
				27773,
				27953,
				28055,
				28074,
				28902,
				28960,
				29243,
				30237,
				30248,
				30292,
				30297
			]
		},
		{
			"title": "Interfaces",
			"children": [
				30550,
				30569,
				30376,
				30379,
				30384,
				30387,
				30389,
				30594,
				30403,
				30406,
				30420,
				30423,
				30426,
				30444,
				30447,
				30454,
				30462,
				30507,
				30509,
				30512,
				30518,
				30532,
				30600
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				27545,
				30564,
				30558,
				30560,
				30607,
				30625,
				30615,
				30613,
				30611,
				30557,
				30562,
				30393,
				30599,
				30544,
				30549
			]
		}
	],
	"packageName": "@medusajs/types",
	"symbolIdMap": {
		"27544": {
			"sourceFileName": "../../../packages/types/src/index.ts",
			"qualifiedName": ""
		},
		"27545": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "AddressDTO"
		},
		"27546": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type"
		},
		"27547": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.id"
		},
		"27548": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.address_1"
		},
		"27549": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.address_2"
		},
		"27550": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.company"
		},
		"27551": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.country_code"
		},
		"27552": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.city"
		},
		"27553": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.phone"
		},
		"27554": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.postal_code"
		},
		"27555": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.province"
		},
		"27556": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"27557": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.created_at"
		},
		"27558": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.updated_at"
		},
		"27559": {
			"sourceFileName": "../../../packages/types/src/address/common.ts",
			"qualifiedName": "__type.deleted_at"
		},
		"27560": {
			"sourceFileName": "../../../packages/types/src/cache/index.ts",
			"qualifiedName": ""
		},
		"27561": {
			"sourceFileName": "../../../packages/types/src/cache/service.ts",
			"qualifiedName": "ICacheService"
		},
		"27562": {
			"sourceFileName": "../../../packages/types/src/cache/service.ts",
			"qualifiedName": "ICacheService.get"
		},
		"27563": {
			"sourceFileName": "../../../packages/types/src/cache/service.ts",
			"qualifiedName": "ICacheService.get"
		},
		"27564": {
			"sourceFileName": "../../../packages/types/src/cache/service.ts",
			"qualifiedName": "T"
		},
		"27565": {
			"sourceFileName": "../../../packages/types/src/cache/service.ts",
			"qualifiedName": "key"
		},
		"27566": {
			"sourceFileName": "../../../packages/types/src/cache/service.ts",
			"qualifiedName": "ICacheService.set"
		},
		"27567": {
			"sourceFileName": "../../../packages/types/src/cache/service.ts",
			"qualifiedName": "ICacheService.set"
		},
		"27568": {
			"sourceFileName": "../../../packages/types/src/cache/service.ts",
			"qualifiedName": "key"
		},
		"27569": {
			"sourceFileName": "../../../packages/types/src/cache/service.ts",
			"qualifiedName": "data"
		},
		"27570": {
			"sourceFileName": "../../../packages/types/src/cache/service.ts",
			"qualifiedName": "ttl"
		},
		"27571": {
			"sourceFileName": "../../../packages/types/src/cache/service.ts",
			"qualifiedName": "ICacheService.invalidate"
		},
		"27572": {
			"sourceFileName": "../../../packages/types/src/cache/service.ts",
			"qualifiedName": "ICacheService.invalidate"
		},
		"27573": {
			"sourceFileName": "../../../packages/types/src/cache/service.ts",
			"qualifiedName": "key"
		},
		"27574": {
			"sourceFileName": "../../../packages/types/src/common/index.ts",
			"qualifiedName": ""
		},
		"27575": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "WithRequiredProperty"
		},
		"27576": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "T"
		},
		"27577": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "K"
		},
		"27581": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "BaseEntity"
		},
		"27582": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"27583": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"27584": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"27585": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "SoftDeletableEntity"
		},
		"27586": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "SoftDeletableEntity.deleted_at"
		},
		"27587": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"27588": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"27589": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"27592": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig"
		},
		"27593": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.select"
		},
		"27594": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.skip"
		},
		"27595": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.take"
		},
		"27596": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.relations"
		},
		"27597": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.order"
		},
		"27598": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"27599": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.__index"
		},
		"27601": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.withDeleted"
		},
		"27602": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.filters"
		},
		"27603": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.Entity"
		},
		"27641": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "RequestQueryFields"
		},
		"27642": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.expand"
		},
		"27643": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.fields"
		},
		"27644": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.offset"
		},
		"27645": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.limit"
		},
		"27646": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.order"
		},
		"27647": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "PaginatedResponse"
		},
		"27648": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.limit"
		},
		"27649": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.offset"
		},
		"27650": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.count"
		},
		"27651": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "T"
		},
		"27652": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "DeleteResponse"
		},
		"27653": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"27654": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.id"
		},
		"27655": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.object"
		},
		"27656": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.deleted"
		},
		"27657": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "EmptyQueryParams"
		},
		"27658": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "RepositoryTransformOptions"
		},
		"27659": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "DateComparisonOperator"
		},
		"27660": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "DateComparisonOperator.lt"
		},
		"27661": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "DateComparisonOperator.gt"
		},
		"27662": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "DateComparisonOperator.gte"
		},
		"27663": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "DateComparisonOperator.lte"
		},
		"27664": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator"
		},
		"27665": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.lt"
		},
		"27666": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.gt"
		},
		"27667": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.gte"
		},
		"27668": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.lte"
		},
		"27669": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.contains"
		},
		"27670": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.starts_with"
		},
		"27671": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.ends_with"
		},
		"27672": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "NumericalComparisonOperator"
		},
		"27673": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "NumericalComparisonOperator.lt"
		},
		"27674": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "NumericalComparisonOperator.gt"
		},
		"27675": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "NumericalComparisonOperator.gte"
		},
		"27676": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "NumericalComparisonOperator.lte"
		},
		"27677": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressPayload"
		},
		"27678": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressPayload.first_name"
		},
		"27679": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressPayload.last_name"
		},
		"27680": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressPayload.phone"
		},
		"27681": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressPayload.metadata"
		},
		"27682": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressPayload.company"
		},
		"27683": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressPayload.address_1"
		},
		"27684": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressPayload.address_2"
		},
		"27685": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressPayload.city"
		},
		"27686": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressPayload.country_code"
		},
		"27687": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressPayload.province"
		},
		"27688": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressPayload.postal_code"
		},
		"27689": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressCreatePayload"
		},
		"27690": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressCreatePayload.first_name"
		},
		"27691": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressCreatePayload.last_name"
		},
		"27692": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressCreatePayload.phone"
		},
		"27693": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressCreatePayload.metadata"
		},
		"27694": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressCreatePayload.company"
		},
		"27695": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressCreatePayload.address_1"
		},
		"27696": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressCreatePayload.address_2"
		},
		"27697": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressCreatePayload.city"
		},
		"27698": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressCreatePayload.country_code"
		},
		"27699": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressCreatePayload.province"
		},
		"27700": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "AddressCreatePayload.postal_code"
		},
		"27701": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindParams"
		},
		"27702": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"27703": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"27704": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindPaginationParams"
		},
		"27705": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"27706": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"27709": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "SnakeCase"
		},
		"27710": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "S"
		},
		"27711": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "KebabCase"
		},
		"27712": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "S"
		},
		"27713": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "HttpCompressionOptions"
		},
		"27714": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.enabled"
		},
		"27715": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.level"
		},
		"27716": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.memLevel"
		},
		"27717": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.threshold"
		},
		"27718": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "ProjectConfigOptions"
		},
		"27719": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.store_cors"
		},
		"27720": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.admin_cors"
		},
		"27721": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.auth_cors"
		},
		"27722": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.cookie_secret"
		},
		"27723": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.jwt_secret"
		},
		"27724": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.database_database"
		},
		"27725": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.database_url"
		},
		"27726": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.database_schema"
		},
		"27727": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.database_logging"
		},
		"27729": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.database_extra"
		},
		"27730": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"27731": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.ssl"
		},
		"27732": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"27733": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.rejectUnauthorized"
		},
		"27734": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.database_driver_options"
		},
		"27735": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"27736": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.connection"
		},
		"27737": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"27738": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.ssl"
		},
		"27739": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"27740": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.rejectUnauthorized"
		},
		"27741": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.redis_url"
		},
		"27742": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.redis_prefix"
		},
		"27743": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.redis_options"
		},
		"27744": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.session_options"
		},
		"27745": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.http_compression"
		},
		"27746": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.jobs_batch_size"
		},
		"27747": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.worker_mode"
		},
		"27748": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "ConfigModule"
		},
		"27749": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.projectConfig"
		},
		"27750": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.plugins"
		},
		"27751": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"27752": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.resolve"
		},
		"27753": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.options"
		},
		"27754": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.modules"
		},
		"27755": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.featureFlags"
		},
		"27756": {
			"sourceFileName": "../../../packages/types/src/common/medusa-container.ts",
			"qualifiedName": "MedusaContainer"
		},
		"27757": {
			"sourceFileName": "../../../packages/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"27767": {
			"sourceFileName": "../../../packages/types/src/common/medusa-container.ts",
			"qualifiedName": "ContainerLike"
		},
		"27768": {
			"sourceFileName": "../../../packages/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"27769": {
			"sourceFileName": "../../../packages/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"27770": {
			"sourceFileName": "../../../packages/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"27771": {
			"sourceFileName": "../../../packages/types/src/common/medusa-container.ts",
			"qualifiedName": "T"
		},
		"27772": {
			"sourceFileName": "../../../packages/types/src/common/medusa-container.ts",
			"qualifiedName": "key"
		},
		"27773": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": ""
		},
		"27774": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "FilterQuery"
		},
		"27775": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"27776": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"27778": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"27779": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "Prev"
		},
		"27780": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "OperatorMap"
		},
		"27781": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"27782": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$and"
		},
		"27783": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$or"
		},
		"27784": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$eq"
		},
		"27785": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$ne"
		},
		"27786": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$in"
		},
		"27787": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$nin"
		},
		"27788": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$not"
		},
		"27789": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$gt"
		},
		"27790": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$gte"
		},
		"27791": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$lt"
		},
		"27792": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$lte"
		},
		"27793": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$like"
		},
		"27794": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$re"
		},
		"27795": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$ilike"
		},
		"27796": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$fulltext"
		},
		"27797": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$overlap"
		},
		"27798": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$contains"
		},
		"27799": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$contained"
		},
		"27800": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$exists"
		},
		"27801": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"27802": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable"
		},
		"27803": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"27804": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"27805": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.T"
		},
		"27806": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery"
		},
		"27807": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.populate"
		},
		"27808": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.orderBy"
		},
		"27809": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.limit"
		},
		"27810": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.offset"
		},
		"27811": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.fields"
		},
		"27812": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.groupBy"
		},
		"27813": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.filters"
		},
		"27814": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.T"
		},
		"27815": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.P"
		},
		"27816": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "FindOptions"
		},
		"27817": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "__type.where"
		},
		"27818": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"27819": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"27821": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"27822": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"27824": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "__type.options"
		},
		"27825": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "T"
		},
		"27826": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "UpsertWithReplaceConfig"
		},
		"27827": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "__type.relations"
		},
		"27828": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "T"
		},
		"27829": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService"
		},
		"27830": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.find"
		},
		"27831": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.find"
		},
		"27832": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"27833": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"27834": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.findAndCount"
		},
		"27835": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.findAndCount"
		},
		"27836": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"27837": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"27838": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.create"
		},
		"27839": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.create"
		},
		"27840": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"27841": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"27842": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.update"
		},
		"27843": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.update"
		},
		"27844": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"27845": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"27846": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.entity"
		},
		"27847": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.update"
		},
		"27848": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"27849": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.delete"
		},
		"27850": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.delete"
		},
		"27851": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "idsOrPKs"
		},
		"27852": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"27853": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"27855": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"27856": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"27858": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"27859": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.softDelete"
		},
		"27860": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.softDelete"
		},
		"27861": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "idsOrFilter"
		},
		"27862": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"27863": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"27864": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.restore"
		},
		"27865": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.restore"
		},
		"27866": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "idsOrFilter"
		},
		"27867": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"27868": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"27869": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.upsert"
		},
		"27870": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.upsert"
		},
		"27871": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"27872": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"27873": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.upsertWithReplace"
		},
		"27874": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.upsertWithReplace"
		},
		"27875": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"27876": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "config"
		},
		"27877": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"27878": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.transaction"
		},
		"27879": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.transaction"
		},
		"27880": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"27881": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "task"
		},
		"27882": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"27883": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"27884": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "transactionManager"
		},
		"27885": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"27886": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"27887": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"27888": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.transaction"
		},
		"27889": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"27890": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getFreshManager"
		},
		"27891": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getFreshManager"
		},
		"27892": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"27893": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getActiveManager"
		},
		"27894": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getActiveManager"
		},
		"27895": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"27896": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.serialize"
		},
		"27897": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.serialize"
		},
		"27898": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TOutput"
		},
		"27899": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"27900": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"27901": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.T"
		},
		"27902": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService"
		},
		"27903": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.find"
		},
		"27904": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.find"
		},
		"27905": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"27906": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "transformOptions"
		},
		"27907": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"27908": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.findAndCount"
		},
		"27909": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.findAndCount"
		},
		"27910": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"27911": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "transformOptions"
		},
		"27912": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"27913": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.create"
		},
		"27914": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.create"
		},
		"27915": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"27916": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"27917": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.delete"
		},
		"27918": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.delete"
		},
		"27919": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "id"
		},
		"27920": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"27921": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.transaction"
		},
		"27922": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.transaction"
		},
		"27923": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"27924": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "task"
		},
		"27925": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"27926": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"27927": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "transactionManager"
		},
		"27928": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"27929": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"27930": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"27931": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.transaction"
		},
		"27932": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"27933": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getFreshManager"
		},
		"27934": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getFreshManager"
		},
		"27935": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"27936": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getActiveManager"
		},
		"27937": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getActiveManager"
		},
		"27938": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"27939": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.serialize"
		},
		"27940": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.serialize"
		},
		"27941": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TOutput"
		},
		"27942": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"27943": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"27944": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.T"
		},
		"27945": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "SoftDeleteReturn"
		},
		"27946": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.returnLinkableKeys"
		},
		"27947": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"27948": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RestoreReturn"
		},
		"27949": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.returnLinkableKeys"
		},
		"27950": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"27951": {
			"sourceFileName": "../../../packages/types/src/dal/entity.ts",
			"qualifiedName": "EntityDateColumns"
		},
		"27952": {
			"sourceFileName": "../../../packages/types/src/dal/entity.ts",
			"qualifiedName": "SoftDeletableEntityDateColumns"
		},
		"27953": {
			"sourceFileName": "../../../packages/types/src/event-bus/index.ts",
			"qualifiedName": ""
		},
		"27954": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "Subscriber"
		},
		"27955": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"27956": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"27957": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "data"
		},
		"27958": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "eventName"
		},
		"27959": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "T"
		},
		"27960": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "SubscriberContext"
		},
		"27961": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"27962": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.subscriberId"
		},
		"27963": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "SubscriberDescriptor"
		},
		"27964": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"27965": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.id"
		},
		"27966": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.subscriber"
		},
		"27967": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "EventHandler"
		},
		"27968": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"27969": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"27970": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "data"
		},
		"27971": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "eventName"
		},
		"27972": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "T"
		},
		"27973": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "EmitData"
		},
		"27974": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"27975": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventName"
		},
		"27976": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"27977": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"27978": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "T"
		},
		"27979": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "MessageBody"
		},
		"27980": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"27981": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"27982": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"27983": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.service"
		},
		"27984": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.action"
		},
		"27985": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.object"
		},
		"27986": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"27987": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"27988": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "T"
		},
		"27989": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "Message"
		},
		"27990": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"27991": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventName"
		},
		"27992": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.body"
		},
		"27993": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"27994": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "T"
		},
		"27995": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "MessageFormat"
		},
		"27996": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"27997": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventName"
		},
		"27998": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"27999": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"28000": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.service"
		},
		"28001": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.action"
		},
		"28002": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.object"
		},
		"28003": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"28004": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"28005": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "T"
		},
		"28006": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService"
		},
		"28007": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService.subscribe"
		},
		"28008": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService.subscribe"
		},
		"28009": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "eventName"
		},
		"28010": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "subscriber"
		},
		"28011": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "context"
		},
		"28012": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService.unsubscribe"
		},
		"28013": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService.unsubscribe"
		},
		"28014": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "eventName"
		},
		"28015": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "subscriber"
		},
		"28016": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "context"
		},
		"28017": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService.emit"
		},
		"28018": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService.emit"
		},
		"28019": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "T"
		},
		"28020": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "event"
		},
		"28021": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "data"
		},
		"28022": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "options"
		},
		"28023": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService.emit"
		},
		"28024": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "T"
		},
		"28025": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "data"
		},
		"28026": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService.emit"
		},
		"28027": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "T"
		},
		"28028": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus.ts",
			"qualifiedName": "data"
		},
		"28029": {
			"sourceFileName": "../../../packages/types/src/transaction-base/transaction-base.ts",
			"qualifiedName": "ITransactionBaseService.withTransaction"
		},
		"28030": {
			"sourceFileName": "../../../packages/types/src/transaction-base/transaction-base.ts",
			"qualifiedName": "ITransactionBaseService.withTransaction"
		},
		"28031": {
			"sourceFileName": "../../../packages/types/src/transaction-base/transaction-base.ts",
			"qualifiedName": "transactionManager"
		},
		"28032": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService"
		},
		"28033": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.emit"
		},
		"28034": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.emit"
		},
		"28035": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "T"
		},
		"28036": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "eventName"
		},
		"28037": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "data"
		},
		"28038": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "options"
		},
		"28039": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.emit"
		},
		"28040": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "T"
		},
		"28041": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "data"
		},
		"28042": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.emit"
		},
		"28043": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "T"
		},
		"28044": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "data"
		},
		"28045": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.subscribe"
		},
		"28046": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.subscribe"
		},
		"28047": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "eventName"
		},
		"28048": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "subscriber"
		},
		"28049": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "context"
		},
		"28050": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.unsubscribe"
		},
		"28051": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.unsubscribe"
		},
		"28052": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "eventName"
		},
		"28053": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "subscriber"
		},
		"28054": {
			"sourceFileName": "../../../packages/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "context"
		},
		"28055": {
			"sourceFileName": "../../../packages/types/src/feature-flag/index.ts",
			"qualifiedName": ""
		},
		"28056": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "IFlagRouter"
		},
		"28057": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "IFlagRouter.isFeatureEnabled"
		},
		"28058": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "__type"
		},
		"28059": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "__type"
		},
		"28060": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "key"
		},
		"28061": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "IFlagRouter.listFlags"
		},
		"28062": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "__type"
		},
		"28063": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "__type"
		},
		"28064": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "FeatureFlagsResponse"
		},
		"28065": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "__type"
		},
		"28066": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "__type.key"
		},
		"28067": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "__type.value"
		},
		"28068": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "FlagSettings"
		},
		"28069": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "__type"
		},
		"28070": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "__type.key"
		},
		"28071": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "__type.description"
		},
		"28072": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "__type.env_key"
		},
		"28073": {
			"sourceFileName": "../../../packages/types/src/feature-flag/common.ts",
			"qualifiedName": "__type.default_val"
		},
		"28074": {
			"sourceFileName": "../../../packages/types/src/fulfillment/index.ts",
			"qualifiedName": ""
		},
		"28075": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO"
		},
		"28076": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.id"
		},
		"28077": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.fulfillment_id"
		},
		"28078": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.company"
		},
		"28079": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.first_name"
		},
		"28080": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.last_name"
		},
		"28081": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.address_1"
		},
		"28082": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.address_2"
		},
		"28083": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.city"
		},
		"28084": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.country_code"
		},
		"28085": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.province"
		},
		"28086": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.postal_code"
		},
		"28087": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.phone"
		},
		"28088": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.metadata"
		},
		"28089": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.created_at"
		},
		"28090": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.updated_at"
		},
		"28091": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/address.ts",
			"qualifiedName": "FulfillmentAddressDTO.deleted_at"
		},
		"28092": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSetDTO"
		},
		"28093": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSetDTO.id"
		},
		"28094": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSetDTO.name"
		},
		"28095": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSetDTO.type"
		},
		"28096": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSetDTO.metadata"
		},
		"28097": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSetDTO.service_zones"
		},
		"28098": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSetDTO.created_at"
		},
		"28099": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSetDTO.updated_at"
		},
		"28100": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSetDTO.deleted_at"
		},
		"28101": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-set.ts",
			"qualifiedName": "FilterableFulfillmentSetProps"
		},
		"28102": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-set.ts",
			"qualifiedName": "FilterableFulfillmentSetProps.id"
		},
		"28103": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-set.ts",
			"qualifiedName": "FilterableFulfillmentSetProps.name"
		},
		"28104": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-set.ts",
			"qualifiedName": "FilterableFulfillmentSetProps.type"
		},
		"28105": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-set.ts",
			"qualifiedName": "FilterableFulfillmentSetProps.service_zones"
		},
		"28106": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"28107": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"28108": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-profile.ts",
			"qualifiedName": "ShippingProfileDTO"
		},
		"28109": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-profile.ts",
			"qualifiedName": "ShippingProfileDTO.id"
		},
		"28110": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-profile.ts",
			"qualifiedName": "ShippingProfileDTO.name"
		},
		"28111": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-profile.ts",
			"qualifiedName": "ShippingProfileDTO.type"
		},
		"28112": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-profile.ts",
			"qualifiedName": "ShippingProfileDTO.metadata"
		},
		"28113": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-profile.ts",
			"qualifiedName": "ShippingProfileDTO.shipping_options"
		},
		"28114": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-profile.ts",
			"qualifiedName": "ShippingProfileDTO.created_at"
		},
		"28115": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-profile.ts",
			"qualifiedName": "ShippingProfileDTO.updated_at"
		},
		"28116": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-profile.ts",
			"qualifiedName": "ShippingProfileDTO.deleted_at"
		},
		"28117": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-profile.ts",
			"qualifiedName": "FilterableShippingProfileProps"
		},
		"28118": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-profile.ts",
			"qualifiedName": "FilterableShippingProfileProps.id"
		},
		"28119": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-profile.ts",
			"qualifiedName": "FilterableShippingProfileProps.name"
		},
		"28120": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-profile.ts",
			"qualifiedName": "FilterableShippingProfileProps.type"
		},
		"28121": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-profile.ts",
			"qualifiedName": "FilterableShippingProfileProps.shipping_options"
		},
		"28122": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"28123": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"28124": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "ShippingOptionRuleDTO"
		},
		"28125": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "ShippingOptionRuleDTO.id"
		},
		"28126": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "ShippingOptionRuleDTO.attribute"
		},
		"28127": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "ShippingOptionRuleDTO.operator"
		},
		"28128": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "ShippingOptionRuleDTO.value"
		},
		"28129": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "__type"
		},
		"28130": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "__type.value"
		},
		"28131": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "ShippingOptionRuleDTO.shipping_option_id"
		},
		"28132": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "ShippingOptionRuleDTO.shipping_option"
		},
		"28133": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "ShippingOptionRuleDTO.created_at"
		},
		"28134": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "ShippingOptionRuleDTO.updated_at"
		},
		"28135": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "ShippingOptionRuleDTO.deleted_at"
		},
		"28136": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "FilterableShippingOptionRuleProps"
		},
		"28137": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "FilterableShippingOptionRuleProps.id"
		},
		"28138": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "FilterableShippingOptionRuleProps.attribute"
		},
		"28139": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "FilterableShippingOptionRuleProps.operator"
		},
		"28140": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-rule.ts",
			"qualifiedName": "FilterableShippingOptionRuleProps.value"
		},
		"28141": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"28142": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"28143": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionPriceType"
		},
		"28144": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO"
		},
		"28145": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.id"
		},
		"28146": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.name"
		},
		"28147": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.price_type"
		},
		"28148": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.service_zone_id"
		},
		"28149": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.shipping_profile_id"
		},
		"28150": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.provider_id"
		},
		"28151": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.shipping_option_type_id"
		},
		"28152": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.data"
		},
		"28153": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.metadata"
		},
		"28154": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.service_zone"
		},
		"28155": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.shipping_profile"
		},
		"28156": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.fulfillment_provider"
		},
		"28157": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.type"
		},
		"28158": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.rules"
		},
		"28159": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.fulfillments"
		},
		"28160": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.created_at"
		},
		"28161": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.updated_at"
		},
		"28162": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "ShippingOptionDTO.deleted_at"
		},
		"28163": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "FilterableShippingOptionProps"
		},
		"28164": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "FilterableShippingOptionProps.id"
		},
		"28165": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "FilterableShippingOptionProps.name"
		},
		"28166": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "FilterableShippingOptionProps.shipping_profile_id"
		},
		"28167": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "FilterableShippingOptionProps.price_type"
		},
		"28168": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "FilterableShippingOptionProps.service_zone"
		},
		"28169": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "FilterableShippingOptionProps.shipping_option_type"
		},
		"28170": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "FilterableShippingOptionProps.rules"
		},
		"28171": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"28172": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"28173": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "FilterableShippingOptionForContextProps"
		},
		"28174": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "FilterableShippingOptionForContextProps.fulfillment_set_id"
		},
		"28175": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "FilterableShippingOptionForContextProps.fulfillment_set_type"
		},
		"28176": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "FilterableShippingOptionForContextProps.address"
		},
		"28177": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "__type"
		},
		"28178": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "__type.country_code"
		},
		"28179": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "__type.province_code"
		},
		"28180": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "__type.city"
		},
		"28181": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "__type.postal_expression"
		},
		"28182": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "FilterableShippingOptionForContextProps.context"
		},
		"28183": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "FilterableShippingOptionProps.id"
		},
		"28184": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "FilterableShippingOptionProps.name"
		},
		"28185": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "FilterableShippingOptionProps.shipping_profile_id"
		},
		"28186": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "FilterableShippingOptionProps.price_type"
		},
		"28187": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "FilterableShippingOptionProps.service_zone"
		},
		"28188": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "FilterableShippingOptionProps.shipping_option_type"
		},
		"28189": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option.ts",
			"qualifiedName": "FilterableShippingOptionProps.rules"
		},
		"28190": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"28191": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"28192": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-type.ts",
			"qualifiedName": "ShippingOptionTypeDTO"
		},
		"28193": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-type.ts",
			"qualifiedName": "ShippingOptionTypeDTO.id"
		},
		"28194": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-type.ts",
			"qualifiedName": "ShippingOptionTypeDTO.label"
		},
		"28195": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-type.ts",
			"qualifiedName": "ShippingOptionTypeDTO.description"
		},
		"28196": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-type.ts",
			"qualifiedName": "ShippingOptionTypeDTO.code"
		},
		"28197": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-type.ts",
			"qualifiedName": "ShippingOptionTypeDTO.shipping_option_id"
		},
		"28198": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-type.ts",
			"qualifiedName": "ShippingOptionTypeDTO.shipping_option"
		},
		"28199": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-type.ts",
			"qualifiedName": "ShippingOptionTypeDTO.created_at"
		},
		"28200": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-type.ts",
			"qualifiedName": "ShippingOptionTypeDTO.updated_at"
		},
		"28201": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-type.ts",
			"qualifiedName": "ShippingOptionTypeDTO.deleted_at"
		},
		"28202": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-type.ts",
			"qualifiedName": "FilterableShippingOptionTypeProps"
		},
		"28203": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-type.ts",
			"qualifiedName": "FilterableShippingOptionTypeProps.id"
		},
		"28204": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-type.ts",
			"qualifiedName": "FilterableShippingOptionTypeProps.label"
		},
		"28205": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-type.ts",
			"qualifiedName": "FilterableShippingOptionTypeProps.description"
		},
		"28206": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/shipping-option-type.ts",
			"qualifiedName": "FilterableShippingOptionTypeProps.code"
		},
		"28207": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"28208": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"28209": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/service-zone.ts",
			"qualifiedName": "ServiceZoneDTO"
		},
		"28210": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/service-zone.ts",
			"qualifiedName": "ServiceZoneDTO.id"
		},
		"28211": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/service-zone.ts",
			"qualifiedName": "ServiceZoneDTO.name"
		},
		"28212": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/service-zone.ts",
			"qualifiedName": "ServiceZoneDTO.metadata"
		},
		"28213": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/service-zone.ts",
			"qualifiedName": "ServiceZoneDTO.fulfillment_sets"
		},
		"28214": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/service-zone.ts",
			"qualifiedName": "ServiceZoneDTO.geo_zones"
		},
		"28215": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/service-zone.ts",
			"qualifiedName": "ServiceZoneDTO.shipping_options"
		},
		"28216": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/service-zone.ts",
			"qualifiedName": "ServiceZoneDTO.created_at"
		},
		"28217": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/service-zone.ts",
			"qualifiedName": "ServiceZoneDTO.updated_at"
		},
		"28218": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/service-zone.ts",
			"qualifiedName": "ServiceZoneDTO.deleted_at"
		},
		"28219": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/service-zone.ts",
			"qualifiedName": "FilterableServiceZoneProps"
		},
		"28220": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/service-zone.ts",
			"qualifiedName": "FilterableServiceZoneProps.id"
		},
		"28221": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/service-zone.ts",
			"qualifiedName": "FilterableServiceZoneProps.name"
		},
		"28222": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/service-zone.ts",
			"qualifiedName": "FilterableServiceZoneProps.geo_zones"
		},
		"28223": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/service-zone.ts",
			"qualifiedName": "FilterableServiceZoneProps.fulfillment_set"
		},
		"28224": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/service-zone.ts",
			"qualifiedName": "FilterableServiceZoneProps.shipping_options"
		},
		"28225": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"28226": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"28227": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "GeoZoneType"
		},
		"28228": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "GeoZoneDTO"
		},
		"28229": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "GeoZoneDTO.id"
		},
		"28230": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "GeoZoneDTO.type"
		},
		"28231": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "GeoZoneDTO.country_code"
		},
		"28232": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "GeoZoneDTO.province_code"
		},
		"28233": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "GeoZoneDTO.city"
		},
		"28234": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "GeoZoneDTO.postal_expression"
		},
		"28235": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "GeoZoneDTO.metadata"
		},
		"28236": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "GeoZoneDTO.created_at"
		},
		"28237": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "GeoZoneDTO.updated_at"
		},
		"28238": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "GeoZoneDTO.deleted_at"
		},
		"28239": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "FilterableGeoZoneProps"
		},
		"28240": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "FilterableGeoZoneProps.id"
		},
		"28241": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "FilterableGeoZoneProps.type"
		},
		"28242": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "FilterableGeoZoneProps.country_code"
		},
		"28243": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "FilterableGeoZoneProps.province_code"
		},
		"28244": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/geo-zone.ts",
			"qualifiedName": "FilterableGeoZoneProps.city"
		},
		"28245": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"28246": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"28247": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-provider.ts",
			"qualifiedName": "FulfillmentProviderDTO"
		},
		"28248": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-provider.ts",
			"qualifiedName": "FulfillmentProviderDTO.id"
		},
		"28249": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-provider.ts",
			"qualifiedName": "FulfillmentProviderDTO.name"
		},
		"28250": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-provider.ts",
			"qualifiedName": "FulfillmentProviderDTO.metadata"
		},
		"28251": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-provider.ts",
			"qualifiedName": "FulfillmentProviderDTO.shipping_options"
		},
		"28252": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-provider.ts",
			"qualifiedName": "FulfillmentProviderDTO.created_at"
		},
		"28253": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-provider.ts",
			"qualifiedName": "FulfillmentProviderDTO.updated_at"
		},
		"28254": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-provider.ts",
			"qualifiedName": "FulfillmentProviderDTO.deleted_at"
		},
		"28255": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO"
		},
		"28256": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.id"
		},
		"28257": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.location_id"
		},
		"28258": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.packed_at"
		},
		"28259": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.shipped_at"
		},
		"28260": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.delivered_at"
		},
		"28261": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.canceled_at"
		},
		"28262": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.data"
		},
		"28263": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.provider_id"
		},
		"28264": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.shipping_option_id"
		},
		"28265": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.metadata"
		},
		"28266": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.shipping_option"
		},
		"28267": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.provider"
		},
		"28268": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.delivery_address"
		},
		"28269": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.items"
		},
		"28270": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.labels"
		},
		"28271": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.created_at"
		},
		"28272": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.updated_at"
		},
		"28273": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FulfillmentDTO.deleted_at"
		},
		"28274": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FilterableFulfillmentProps"
		},
		"28275": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FilterableFulfillmentProps.id"
		},
		"28276": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FilterableFulfillmentProps.location_id"
		},
		"28277": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FilterableFulfillmentProps.packed_at"
		},
		"28278": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FilterableFulfillmentProps.shipped_at"
		},
		"28279": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FilterableFulfillmentProps.delivered_at"
		},
		"28280": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FilterableFulfillmentProps.canceled_at"
		},
		"28281": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FilterableFulfillmentProps.provider_id"
		},
		"28282": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FilterableFulfillmentProps.shipping_option_id"
		},
		"28283": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FilterableFulfillmentProps.created_at"
		},
		"28284": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment.ts",
			"qualifiedName": "FilterableFulfillmentProps.updated_at"
		},
		"28285": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"28286": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"28287": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-item.ts",
			"qualifiedName": "FulfillmentItemDTO"
		},
		"28288": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-item.ts",
			"qualifiedName": "FulfillmentItemDTO.id"
		},
		"28289": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-item.ts",
			"qualifiedName": "FulfillmentItemDTO.title"
		},
		"28290": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-item.ts",
			"qualifiedName": "FulfillmentItemDTO.quantity"
		},
		"28291": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-item.ts",
			"qualifiedName": "FulfillmentItemDTO.sku"
		},
		"28292": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-item.ts",
			"qualifiedName": "FulfillmentItemDTO.barcode"
		},
		"28293": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-item.ts",
			"qualifiedName": "FulfillmentItemDTO.line_item_id"
		},
		"28294": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-item.ts",
			"qualifiedName": "FulfillmentItemDTO.inventory_item_id"
		},
		"28295": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-item.ts",
			"qualifiedName": "FulfillmentItemDTO.fulfillment_id"
		},
		"28296": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-item.ts",
			"qualifiedName": "FulfillmentItemDTO.fulfillment"
		},
		"28297": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-item.ts",
			"qualifiedName": "FulfillmentItemDTO.created_at"
		},
		"28298": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-item.ts",
			"qualifiedName": "FulfillmentItemDTO.updated_at"
		},
		"28299": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-item.ts",
			"qualifiedName": "FulfillmentItemDTO.deleted_at"
		},
		"28300": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-label.ts",
			"qualifiedName": "FulfillmentLabelDTO"
		},
		"28301": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-label.ts",
			"qualifiedName": "FulfillmentLabelDTO.id"
		},
		"28302": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-label.ts",
			"qualifiedName": "FulfillmentLabelDTO.tracking_number"
		},
		"28303": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-label.ts",
			"qualifiedName": "FulfillmentLabelDTO.tracking_url"
		},
		"28304": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-label.ts",
			"qualifiedName": "FulfillmentLabelDTO.label_url"
		},
		"28305": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-label.ts",
			"qualifiedName": "FulfillmentLabelDTO.fulfillment_id"
		},
		"28306": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-label.ts",
			"qualifiedName": "FulfillmentLabelDTO.fulfillment"
		},
		"28307": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-label.ts",
			"qualifiedName": "FulfillmentLabelDTO.created_at"
		},
		"28308": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-label.ts",
			"qualifiedName": "FulfillmentLabelDTO.updated_at"
		},
		"28309": {
			"sourceFileName": "../../../packages/types/src/fulfillment/common/fulfillment-label.ts",
			"qualifiedName": "FulfillmentLabelDTO.deleted_at"
		},
		"28310": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-profile.ts",
			"qualifiedName": "CreateShippingProfileDTO"
		},
		"28311": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-profile.ts",
			"qualifiedName": "CreateShippingProfileDTO.name"
		},
		"28312": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-profile.ts",
			"qualifiedName": "CreateShippingProfileDTO.type"
		},
		"28313": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-profile.ts",
			"qualifiedName": "CreateShippingProfileDTO.metadata"
		},
		"28314": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-profile.ts",
			"qualifiedName": "UpdateShippingProfileDTO"
		},
		"28315": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-profile.ts",
			"qualifiedName": "name"
		},
		"28316": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-profile.ts",
			"qualifiedName": "type"
		},
		"28317": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-profile.ts",
			"qualifiedName": "metadata"
		},
		"28318": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-type.ts",
			"qualifiedName": "CreateShippingOptionTypeDTO"
		},
		"28319": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-type.ts",
			"qualifiedName": "CreateShippingOptionTypeDTO.label"
		},
		"28320": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-type.ts",
			"qualifiedName": "CreateShippingOptionTypeDTO.description"
		},
		"28321": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-type.ts",
			"qualifiedName": "CreateShippingOptionTypeDTO.code"
		},
		"28322": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-type.ts",
			"qualifiedName": "CreateShippingOptionTypeDTO.shipping_option_id"
		},
		"28323": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-type.ts",
			"qualifiedName": "UpdateShippingOptionTypeDTO"
		},
		"28324": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-type.ts",
			"qualifiedName": "UpdateShippingOptionTypeDTO.id"
		},
		"28325": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-type.ts",
			"qualifiedName": "label"
		},
		"28326": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-type.ts",
			"qualifiedName": "description"
		},
		"28327": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-type.ts",
			"qualifiedName": "code"
		},
		"28328": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-type.ts",
			"qualifiedName": "shipping_option_id"
		},
		"28329": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-rule.ts",
			"qualifiedName": "ShippingOptionRuleOperatorType"
		},
		"28330": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-rule.ts",
			"qualifiedName": "CreateShippingOptionRuleDTO"
		},
		"28331": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-rule.ts",
			"qualifiedName": "CreateShippingOptionRuleDTO.attribute"
		},
		"28332": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-rule.ts",
			"qualifiedName": "CreateShippingOptionRuleDTO.operator"
		},
		"28333": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-rule.ts",
			"qualifiedName": "CreateShippingOptionRuleDTO.value"
		},
		"28334": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-rule.ts",
			"qualifiedName": "CreateShippingOptionRuleDTO.shipping_option_id"
		},
		"28335": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-rule.ts",
			"qualifiedName": "UpdateShippingOptionRuleDTO"
		},
		"28336": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-rule.ts",
			"qualifiedName": "UpdateShippingOptionRuleDTO.id"
		},
		"28337": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-rule.ts",
			"qualifiedName": "attribute"
		},
		"28338": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-rule.ts",
			"qualifiedName": "operator"
		},
		"28339": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-rule.ts",
			"qualifiedName": "value"
		},
		"28340": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option-rule.ts",
			"qualifiedName": "shipping_option_id"
		},
		"28341": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateCountryGeoZoneDTO"
		},
		"28342": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateCountryGeoZoneDTO.type"
		},
		"28343": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateGeoZoneBaseDTO.service_zone_id"
		},
		"28344": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateGeoZoneBaseDTO.country_code"
		},
		"28345": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateGeoZoneBaseDTO.metadata"
		},
		"28346": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateProvinceGeoZoneDTO"
		},
		"28347": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateProvinceGeoZoneDTO.type"
		},
		"28348": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateProvinceGeoZoneDTO.province_code"
		},
		"28349": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateGeoZoneBaseDTO.service_zone_id"
		},
		"28350": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateGeoZoneBaseDTO.country_code"
		},
		"28351": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateGeoZoneBaseDTO.metadata"
		},
		"28352": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateCityGeoZoneDTO"
		},
		"28353": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateCityGeoZoneDTO.type"
		},
		"28354": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateCityGeoZoneDTO.province_code"
		},
		"28355": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateCityGeoZoneDTO.city"
		},
		"28356": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateGeoZoneBaseDTO.service_zone_id"
		},
		"28357": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateGeoZoneBaseDTO.country_code"
		},
		"28358": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateGeoZoneBaseDTO.metadata"
		},
		"28359": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateZipGeoZoneDTO"
		},
		"28360": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateZipGeoZoneDTO.type"
		},
		"28361": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateZipGeoZoneDTO.province_code"
		},
		"28362": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateZipGeoZoneDTO.city"
		},
		"28363": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateZipGeoZoneDTO.postal_expression"
		},
		"28364": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateGeoZoneBaseDTO.service_zone_id"
		},
		"28365": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateGeoZoneBaseDTO.country_code"
		},
		"28366": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateGeoZoneBaseDTO.metadata"
		},
		"28367": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateGeoZoneDTO"
		},
		"28368": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateGeoZoneBaseDTO"
		},
		"28369": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateGeoZoneBaseDTO.id"
		},
		"28370": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "type"
		},
		"28371": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "service_zone_id"
		},
		"28372": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "country_code"
		},
		"28373": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "metadata"
		},
		"28374": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateCountryGeoZoneDTO"
		},
		"28375": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateCountryGeoZoneDTO.type"
		},
		"28376": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateGeoZoneBaseDTO.id"
		},
		"28377": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "service_zone_id"
		},
		"28378": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "country_code"
		},
		"28379": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "metadata"
		},
		"28380": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateProvinceGeoZoneDTO"
		},
		"28381": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateProvinceGeoZoneDTO.type"
		},
		"28382": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateProvinceGeoZoneDTO.province_code"
		},
		"28383": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateGeoZoneBaseDTO.id"
		},
		"28384": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "service_zone_id"
		},
		"28385": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "country_code"
		},
		"28386": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "metadata"
		},
		"28387": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateCityGeoZoneDTO"
		},
		"28388": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateCityGeoZoneDTO.type"
		},
		"28389": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateCityGeoZoneDTO.province_code"
		},
		"28390": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateCityGeoZoneDTO.city"
		},
		"28391": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateGeoZoneBaseDTO.id"
		},
		"28392": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "service_zone_id"
		},
		"28393": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "country_code"
		},
		"28394": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "metadata"
		},
		"28395": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateZipGeoZoneDTO"
		},
		"28396": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateZipGeoZoneDTO.type"
		},
		"28397": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateZipGeoZoneDTO.province_code"
		},
		"28398": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateZipGeoZoneDTO.city"
		},
		"28399": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateZipGeoZoneDTO.postal_expression"
		},
		"28400": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateGeoZoneBaseDTO.id"
		},
		"28401": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "service_zone_id"
		},
		"28402": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "country_code"
		},
		"28403": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "metadata"
		},
		"28404": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "UpdateGeoZoneDTO"
		},
		"28405": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/service-zone.ts",
			"qualifiedName": "CreateServiceZoneDTO"
		},
		"28406": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/service-zone.ts",
			"qualifiedName": "CreateServiceZoneDTO.name"
		},
		"28407": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/service-zone.ts",
			"qualifiedName": "CreateServiceZoneDTO.fulfillment_set_id"
		},
		"28408": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/service-zone.ts",
			"qualifiedName": "CreateServiceZoneDTO.geo_zones"
		},
		"28409": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/service-zone.ts",
			"qualifiedName": "UpdateServiceZoneDTO"
		},
		"28410": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/service-zone.ts",
			"qualifiedName": "UpdateServiceZoneDTO.id"
		},
		"28411": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/service-zone.ts",
			"qualifiedName": "UpdateServiceZoneDTO.name"
		},
		"28412": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/service-zone.ts",
			"qualifiedName": "UpdateServiceZoneDTO.geo_zones"
		},
		"28413": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/service-zone.ts",
			"qualifiedName": "__type"
		},
		"28414": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/service-zone.ts",
			"qualifiedName": "__type.id"
		},
		"28415": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "CreateShippingOptionDTO"
		},
		"28416": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "CreateShippingOptionDTO.name"
		},
		"28417": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "CreateShippingOptionDTO.price_type"
		},
		"28418": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "CreateShippingOptionDTO.service_zone_id"
		},
		"28419": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "CreateShippingOptionDTO.shipping_profile_id"
		},
		"28420": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "CreateShippingOptionDTO.provider_id"
		},
		"28421": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "CreateShippingOptionDTO.type"
		},
		"28422": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "CreateShippingOptionDTO.data"
		},
		"28423": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "CreateShippingOptionDTO.rules"
		},
		"28424": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "UpdateShippingOptionDTO"
		},
		"28425": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "UpdateShippingOptionDTO.id"
		},
		"28426": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "UpdateShippingOptionDTO.name"
		},
		"28427": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "UpdateShippingOptionDTO.price_type"
		},
		"28428": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "UpdateShippingOptionDTO.service_zone_id"
		},
		"28429": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "UpdateShippingOptionDTO.shipping_profile_id"
		},
		"28430": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "UpdateShippingOptionDTO.provider_id"
		},
		"28431": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "UpdateShippingOptionDTO.type"
		},
		"28432": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "__type"
		},
		"28433": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "__type.id"
		},
		"28434": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "UpdateShippingOptionDTO.data"
		},
		"28435": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "UpdateShippingOptionDTO.rules"
		},
		"28436": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "__type"
		},
		"28437": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/shipping-option.ts",
			"qualifiedName": "__type.id"
		},
		"28438": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-set.ts",
			"qualifiedName": "CreateFulfillmentSetDTO"
		},
		"28439": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-set.ts",
			"qualifiedName": "CreateFulfillmentSetDTO.name"
		},
		"28440": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-set.ts",
			"qualifiedName": "CreateFulfillmentSetDTO.type"
		},
		"28441": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-set.ts",
			"qualifiedName": "CreateFulfillmentSetDTO.service_zones"
		},
		"28442": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-set.ts",
			"qualifiedName": "UpdateFulfillmentSetDTO"
		},
		"28443": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-set.ts",
			"qualifiedName": "UpdateFulfillmentSetDTO.id"
		},
		"28444": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-set.ts",
			"qualifiedName": "UpdateFulfillmentSetDTO.name"
		},
		"28445": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-set.ts",
			"qualifiedName": "UpdateFulfillmentSetDTO.type"
		},
		"28446": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-set.ts",
			"qualifiedName": "UpdateFulfillmentSetDTO.service_zones"
		},
		"28447": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-set.ts",
			"qualifiedName": "__type"
		},
		"28448": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-set.ts",
			"qualifiedName": "__type.id"
		},
		"28449": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "CreateFulfillmentOrderDTO"
		},
		"28450": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "CreateFulfillmentDTO"
		},
		"28451": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "CreateFulfillmentDTO.location_id"
		},
		"28452": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "CreateFulfillmentDTO.packed_at"
		},
		"28453": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "CreateFulfillmentDTO.shipped_at"
		},
		"28454": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "CreateFulfillmentDTO.delivered_at"
		},
		"28455": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "CreateFulfillmentDTO.canceled_at"
		},
		"28456": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "CreateFulfillmentDTO.data"
		},
		"28457": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "CreateFulfillmentDTO.provider_id"
		},
		"28458": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "CreateFulfillmentDTO.shipping_option_id"
		},
		"28459": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "CreateFulfillmentDTO.metadata"
		},
		"28460": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "CreateFulfillmentDTO.delivery_address"
		},
		"28461": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "CreateFulfillmentDTO.items"
		},
		"28462": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "CreateFulfillmentDTO.labels"
		},
		"28463": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "CreateFulfillmentDTO.order"
		},
		"28464": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "UpdateFulfillmentDTO"
		},
		"28465": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "UpdateFulfillmentDTO.location_id"
		},
		"28466": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "UpdateFulfillmentDTO.packed_at"
		},
		"28467": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "UpdateFulfillmentDTO.shipped_at"
		},
		"28468": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "UpdateFulfillmentDTO.delivered_at"
		},
		"28469": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "UpdateFulfillmentDTO.data"
		},
		"28470": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment.ts",
			"qualifiedName": "UpdateFulfillmentDTO.metadata"
		},
		"28471": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-address.ts",
			"qualifiedName": "CreateFulfillmentAddressDTO"
		},
		"28472": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-address.ts",
			"qualifiedName": "CreateFulfillmentAddressDTO.fulfillment_id"
		},
		"28473": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-address.ts",
			"qualifiedName": "CreateFulfillmentAddressDTO.company"
		},
		"28474": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-address.ts",
			"qualifiedName": "CreateFulfillmentAddressDTO.first_name"
		},
		"28475": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-address.ts",
			"qualifiedName": "CreateFulfillmentAddressDTO.last_name"
		},
		"28476": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-address.ts",
			"qualifiedName": "CreateFulfillmentAddressDTO.address_1"
		},
		"28477": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-address.ts",
			"qualifiedName": "CreateFulfillmentAddressDTO.address_2"
		},
		"28478": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-address.ts",
			"qualifiedName": "CreateFulfillmentAddressDTO.city"
		},
		"28479": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-address.ts",
			"qualifiedName": "CreateFulfillmentAddressDTO.country_code"
		},
		"28480": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-address.ts",
			"qualifiedName": "CreateFulfillmentAddressDTO.province"
		},
		"28481": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-address.ts",
			"qualifiedName": "CreateFulfillmentAddressDTO.postal_code"
		},
		"28482": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-address.ts",
			"qualifiedName": "CreateFulfillmentAddressDTO.phone"
		},
		"28483": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-address.ts",
			"qualifiedName": "CreateFulfillmentAddressDTO.metadata"
		},
		"28484": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-label.ts",
			"qualifiedName": "CreateFulfillmentLabelDTO"
		},
		"28485": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-label.ts",
			"qualifiedName": "CreateFulfillmentLabelDTO.tracking_number"
		},
		"28486": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-label.ts",
			"qualifiedName": "CreateFulfillmentLabelDTO.tracking_url"
		},
		"28487": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-label.ts",
			"qualifiedName": "CreateFulfillmentLabelDTO.label_url"
		},
		"28488": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-label.ts",
			"qualifiedName": "CreateFulfillmentLabelDTO.fulfillment_id"
		},
		"28489": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-item.ts",
			"qualifiedName": "CreateFulfillmentItemDTO"
		},
		"28490": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-item.ts",
			"qualifiedName": "CreateFulfillmentItemDTO.fulfillment_id"
		},
		"28491": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-item.ts",
			"qualifiedName": "CreateFulfillmentItemDTO.title"
		},
		"28492": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-item.ts",
			"qualifiedName": "CreateFulfillmentItemDTO.sku"
		},
		"28493": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-item.ts",
			"qualifiedName": "CreateFulfillmentItemDTO.quantity"
		},
		"28494": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-item.ts",
			"qualifiedName": "CreateFulfillmentItemDTO.barcode"
		},
		"28495": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-item.ts",
			"qualifiedName": "CreateFulfillmentItemDTO.line_item_id"
		},
		"28496": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/fulfillment-item.ts",
			"qualifiedName": "CreateFulfillmentItemDTO.inventory_item_id"
		},
		"28497": {
			"sourceFileName": "../../../packages/types/src/fulfillment/provider.ts",
			"qualifiedName": "IFulfillmentProvider"
		},
		"28543": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService"
		},
		"28544": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.retrieve"
		},
		"28545": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.retrieve"
		},
		"28546": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "id"
		},
		"28547": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"28548": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28549": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.list"
		},
		"28550": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.list"
		},
		"28551": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "filters"
		},
		"28552": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"28553": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28554": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listAndCount"
		},
		"28555": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listAndCount"
		},
		"28556": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "filters"
		},
		"28557": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"28558": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28559": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.create"
		},
		"28560": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.create"
		},
		"28561": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"28562": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28563": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.create"
		},
		"28564": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"28565": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28566": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.update"
		},
		"28567": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.update"
		},
		"28568": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"28569": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28570": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.update"
		},
		"28571": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"28572": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28573": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.delete"
		},
		"28574": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.delete"
		},
		"28575": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "ids"
		},
		"28576": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28577": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.delete"
		},
		"28578": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "id"
		},
		"28579": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28580": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.softDelete"
		},
		"28581": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.softDelete"
		},
		"28582": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"28583": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "fulfillmentIds"
		},
		"28584": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"28585": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28586": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.restore"
		},
		"28587": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.restore"
		},
		"28588": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"28589": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "fulfillmentIds"
		},
		"28590": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"28591": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28592": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.retrieveServiceZone"
		},
		"28593": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.retrieveServiceZone"
		},
		"28594": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "id"
		},
		"28595": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"28596": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28597": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listServiceZones"
		},
		"28598": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listServiceZones"
		},
		"28599": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "filters"
		},
		"28600": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"28601": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28602": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listAndCountServiceZones"
		},
		"28603": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listAndCountServiceZones"
		},
		"28604": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "filters"
		},
		"28605": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"28606": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28607": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.createServiceZones"
		},
		"28608": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.createServiceZones"
		},
		"28609": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"28610": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28611": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.createServiceZones"
		},
		"28612": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"28613": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28614": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.updateServiceZones"
		},
		"28615": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.updateServiceZones"
		},
		"28616": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"28617": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28618": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.updateServiceZones"
		},
		"28619": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"28620": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28621": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.deleteServiceZones"
		},
		"28622": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.deleteServiceZones"
		},
		"28623": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "ids"
		},
		"28624": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28625": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.deleteServiceZones"
		},
		"28626": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "id"
		},
		"28627": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28628": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.softDeleteServiceZones"
		},
		"28629": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.softDeleteServiceZones"
		},
		"28630": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"28631": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "serviceZoneIds"
		},
		"28632": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"28633": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28634": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.restoreServiceZones"
		},
		"28635": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.restoreServiceZones"
		},
		"28636": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"28637": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "serviceZoneIds"
		},
		"28638": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"28639": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28640": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.retrieveGeoZone"
		},
		"28641": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.retrieveGeoZone"
		},
		"28642": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "id"
		},
		"28643": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"28644": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28645": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listGeoZones"
		},
		"28646": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listGeoZones"
		},
		"28647": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "filters"
		},
		"28648": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"28649": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28650": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listAndCountGeoZones"
		},
		"28651": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listAndCountGeoZones"
		},
		"28652": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "filters"
		},
		"28653": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"28654": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28655": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.createGeoZones"
		},
		"28656": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.createGeoZones"
		},
		"28657": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"28658": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28659": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.createGeoZones"
		},
		"28660": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"28661": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28662": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.updateGeoZones"
		},
		"28663": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.updateGeoZones"
		},
		"28664": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"28665": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28666": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.updateGeoZones"
		},
		"28667": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"28668": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28669": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.deleteGeoZones"
		},
		"28670": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.deleteGeoZones"
		},
		"28671": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "ids"
		},
		"28672": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28673": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.deleteGeoZones"
		},
		"28674": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "id"
		},
		"28675": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28676": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.softDeleteGeoZones"
		},
		"28677": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.softDeleteGeoZones"
		},
		"28678": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"28679": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "geoZoneIds"
		},
		"28680": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"28681": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28682": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.restoreGeoZones"
		},
		"28683": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.restoreGeoZones"
		},
		"28684": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"28685": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "geoZoneIds"
		},
		"28686": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"28687": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28688": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.retrieveShippingOption"
		},
		"28689": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.retrieveShippingOption"
		},
		"28690": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "id"
		},
		"28691": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"28692": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28693": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listShippingOptions"
		},
		"28694": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listShippingOptions"
		},
		"28695": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "filters"
		},
		"28696": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"28697": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28698": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listShippingOptionsForContext"
		},
		"28699": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listShippingOptionsForContext"
		},
		"28700": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "filters"
		},
		"28701": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"28702": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28703": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listAndCountShippingOptions"
		},
		"28704": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listAndCountShippingOptions"
		},
		"28705": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "filters"
		},
		"28706": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"28707": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28708": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.createShippingOptions"
		},
		"28709": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.createShippingOptions"
		},
		"28710": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"28711": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28712": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.createShippingOptions"
		},
		"28713": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"28714": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28715": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.updateShippingOptions"
		},
		"28716": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.updateShippingOptions"
		},
		"28717": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"28718": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28719": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.updateShippingOptions"
		},
		"28720": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"28721": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28722": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.deleteShippingOptions"
		},
		"28723": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.deleteShippingOptions"
		},
		"28724": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "ids"
		},
		"28725": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28726": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.deleteShippingOptions"
		},
		"28727": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "id"
		},
		"28728": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28729": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.softDeleteShippingOptions"
		},
		"28730": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.softDeleteShippingOptions"
		},
		"28731": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"28732": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "shippingOptionIds"
		},
		"28733": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"28734": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28735": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.restoreShippingOptions"
		},
		"28736": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.restoreShippingOptions"
		},
		"28737": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"28738": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "shippingOptionIds"
		},
		"28739": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"28740": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28741": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.retrieveShippingProfile"
		},
		"28742": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.retrieveShippingProfile"
		},
		"28743": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "id"
		},
		"28744": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"28745": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28746": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listShippingProfiles"
		},
		"28747": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listShippingProfiles"
		},
		"28748": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "filters"
		},
		"28749": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"28750": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28751": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listAndCountShippingProfiles"
		},
		"28752": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listAndCountShippingProfiles"
		},
		"28753": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "filters"
		},
		"28754": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"28755": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28756": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.createShippingProfiles"
		},
		"28757": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.createShippingProfiles"
		},
		"28758": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"28759": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28760": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.createShippingProfiles"
		},
		"28761": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"28762": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28763": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.updateShippingProfiles"
		},
		"28764": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.updateShippingProfiles"
		},
		"28765": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"28766": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28767": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.updateShippingProfiles"
		},
		"28768": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"28769": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28770": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.deleteShippingProfiles"
		},
		"28771": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.deleteShippingProfiles"
		},
		"28772": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "ids"
		},
		"28773": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28774": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.deleteShippingProfiles"
		},
		"28775": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "id"
		},
		"28776": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28777": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.softDeleteShippingProfiles"
		},
		"28778": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.softDeleteShippingProfiles"
		},
		"28779": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"28780": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "shippingProfileIds"
		},
		"28781": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"28782": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28783": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.restoreShippingProfiles"
		},
		"28784": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.restoreShippingProfiles"
		},
		"28785": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"28786": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "shippingProfileIds"
		},
		"28787": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"28788": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28789": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.retrieveShippingOptionRule"
		},
		"28790": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.retrieveShippingOptionRule"
		},
		"28791": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "id"
		},
		"28792": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"28793": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28794": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listShippingOptionRules"
		},
		"28795": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listShippingOptionRules"
		},
		"28796": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "filters"
		},
		"28797": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"28798": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28799": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listAndCountShippingOptionRules"
		},
		"28800": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listAndCountShippingOptionRules"
		},
		"28801": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "filters"
		},
		"28802": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"28803": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28804": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.createShippingOptionRules"
		},
		"28805": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.createShippingOptionRules"
		},
		"28806": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"28807": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28808": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.createShippingOptionRules"
		},
		"28809": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"28810": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28811": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.updateShippingOptionRules"
		},
		"28812": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.updateShippingOptionRules"
		},
		"28813": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"28814": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28815": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.updateShippingOptionRules"
		},
		"28816": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"28817": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28818": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.deleteShippingOptionRules"
		},
		"28819": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.deleteShippingOptionRules"
		},
		"28820": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "ids"
		},
		"28821": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28822": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.deleteShippingOptionRules"
		},
		"28823": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "id"
		},
		"28824": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28825": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.retrieveShippingOptionType"
		},
		"28826": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.retrieveShippingOptionType"
		},
		"28827": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "id"
		},
		"28828": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"28829": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28830": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listShippingOptionTypes"
		},
		"28831": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listShippingOptionTypes"
		},
		"28832": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "filters"
		},
		"28833": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"28834": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28835": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listAndCountShippingOptionTypes"
		},
		"28836": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listAndCountShippingOptionTypes"
		},
		"28837": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "filters"
		},
		"28838": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"28839": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28840": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.deleteShippingOptionTypes"
		},
		"28841": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.deleteShippingOptionTypes"
		},
		"28842": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "ids"
		},
		"28843": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28844": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.deleteShippingOptionTypes"
		},
		"28845": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "id"
		},
		"28846": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28847": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.retrieveFulfillment"
		},
		"28848": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.retrieveFulfillment"
		},
		"28849": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "id"
		},
		"28850": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"28851": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28852": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listFulfillments"
		},
		"28853": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listFulfillments"
		},
		"28854": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "filters"
		},
		"28855": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"28856": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28857": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listAndCountFulfillments"
		},
		"28858": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.listAndCountFulfillments"
		},
		"28859": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "filters"
		},
		"28860": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "config"
		},
		"28861": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28862": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.createFulfillment"
		},
		"28863": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.createFulfillment"
		},
		"28864": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"28865": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28866": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.updateFulfillment"
		},
		"28867": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.updateFulfillment"
		},
		"28868": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "id"
		},
		"28869": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"28870": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28871": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.cancelFulfillment"
		},
		"28872": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.cancelFulfillment"
		},
		"28873": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "id"
		},
		"28874": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"28875": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.retrieveFulfillmentOptions"
		},
		"28876": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.retrieveFulfillmentOptions"
		},
		"28877": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "providerId"
		},
		"28878": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.validateFulfillmentOption"
		},
		"28879": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.validateFulfillmentOption"
		},
		"28880": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "providerId"
		},
		"28881": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "data"
		},
		"28882": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.validateShippingOption"
		},
		"28883": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "IFulfillmentModuleService.validateShippingOption"
		},
		"28884": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "shippingOptionId"
		},
		"28885": {
			"sourceFileName": "../../../packages/types/src/fulfillment/service.ts",
			"qualifiedName": "context"
		},
		"28896": {
			"sourceFileName": "../../../packages/types/src/fulfillment/workflows.ts",
			"qualifiedName": "AddFulfillmentShippingOptionRulesWorkflowDTO"
		},
		"28897": {
			"sourceFileName": "../../../packages/types/src/fulfillment/workflows.ts",
			"qualifiedName": "__type"
		},
		"28898": {
			"sourceFileName": "../../../packages/types/src/fulfillment/workflows.ts",
			"qualifiedName": "__type.data"
		},
		"28899": {
			"sourceFileName": "../../../packages/types/src/fulfillment/workflows.ts",
			"qualifiedName": "RemoveFulfillmentShippingOptionRulesWorkflowDTO"
		},
		"28900": {
			"sourceFileName": "../../../packages/types/src/fulfillment/workflows.ts",
			"qualifiedName": "__type"
		},
		"28901": {
			"sourceFileName": "../../../packages/types/src/fulfillment/workflows.ts",
			"qualifiedName": "__type.ids"
		},
		"28902": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": ""
		},
		"28903": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger"
		},
		"28904": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.panic"
		},
		"28905": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"28906": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"28907": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "data"
		},
		"28908": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.shouldLog"
		},
		"28909": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"28910": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"28911": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "level"
		},
		"28912": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.setLogLevel"
		},
		"28913": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"28914": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"28915": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "level"
		},
		"28916": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.unsetLogLevel"
		},
		"28917": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"28918": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"28919": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.activity"
		},
		"28920": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"28921": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"28922": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"28923": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "config"
		},
		"28924": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.progress"
		},
		"28925": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"28926": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"28927": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "activityId"
		},
		"28928": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"28929": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.error"
		},
		"28930": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"28931": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"28932": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "messageOrError"
		},
		"28933": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "error"
		},
		"28934": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.failure"
		},
		"28935": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"28936": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"28937": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "activityId"
		},
		"28938": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"28939": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.success"
		},
		"28940": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"28941": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"28942": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "activityId"
		},
		"28943": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"28944": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.debug"
		},
		"28945": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"28946": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"28947": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"28948": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.info"
		},
		"28949": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"28950": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"28951": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"28952": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.warn"
		},
		"28953": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"28954": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"28955": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"28956": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.log"
		},
		"28957": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"28958": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"28959": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "args"
		},
		"28960": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": ""
		},
		"28961": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "Constructor"
		},
		"28962": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"28963": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"28964": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "args"
		},
		"28965": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "T"
		},
		"28966": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "LogLevel"
		},
		"28967": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "LoggerOptions"
		},
		"28968": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "MODULE_SCOPE"
		},
		"28969": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "MODULE_SCOPE.INTERNAL"
		},
		"28970": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "MODULE_SCOPE.EXTERNAL"
		},
		"28971": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "MODULE_RESOURCE_TYPE"
		},
		"28972": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "MODULE_RESOURCE_TYPE.SHARED"
		},
		"28973": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "MODULE_RESOURCE_TYPE.ISOLATED"
		},
		"28974": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "InternalModuleDeclaration"
		},
		"28975": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"28976": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.scope"
		},
		"28977": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.resources"
		},
		"28978": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"28979": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.definition"
		},
		"28980": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.resolve"
		},
		"28981": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"28982": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.alias"
		},
		"28983": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.main"
		},
		"28984": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.worker_mode"
		},
		"28985": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ExternalModuleDeclaration"
		},
		"28986": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"28987": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.scope"
		},
		"28988": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.definition"
		},
		"28989": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.server"
		},
		"28990": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"28991": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.type"
		},
		"28992": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.url"
		},
		"28993": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.keepAlive"
		},
		"28994": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"28995": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.alias"
		},
		"28996": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.main"
		},
		"28997": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleResolution"
		},
		"28998": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"28999": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.resolutionPath"
		},
		"29000": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.definition"
		},
		"29001": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"29002": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"29003": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.moduleDeclaration"
		},
		"29004": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.moduleExports"
		},
		"29005": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleDefinition"
		},
		"29006": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"29007": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.key"
		},
		"29008": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.registrationName"
		},
		"29009": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultPackage"
		},
		"29010": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.label"
		},
		"29011": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isRequired"
		},
		"29012": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isQueryable"
		},
		"29013": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isLegacy"
		},
		"29014": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"29015": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultModuleDeclaration"
		},
		"29016": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "LinkModuleDefinition"
		},
		"29017": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"29018": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.key"
		},
		"29019": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.registrationName"
		},
		"29020": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.label"
		},
		"29021": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"29022": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultModuleDeclaration"
		},
		"29023": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleConfig"
		},
		"29024": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"29025": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.module"
		},
		"29026": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.path"
		},
		"29027": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.definition"
		},
		"29028": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "LoadedModule"
		},
		"29029": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"29030": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__joinerConfig"
		},
		"29031": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__definition"
		},
		"29032": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "LoaderOptions"
		},
		"29033": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"29034": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.container"
		},
		"29035": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"29036": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.logger"
		},
		"29037": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dataLoaderOnly"
		},
		"29038": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "TOptions"
		},
		"29039": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleLoaderFunction"
		},
		"29040": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"29041": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"29042": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"29043": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"29044": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModulesResponse"
		},
		"29045": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"29046": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.module"
		},
		"29047": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.resolution"
		},
		"29048": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerConfig"
		},
		"29049": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"29050": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.schema"
		},
		"29051": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationships"
		},
		"29052": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extends"
		},
		"29053": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"29054": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"29055": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.fieldAlias"
		},
		"29056": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"29057": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.path"
		},
		"29058": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"29059": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"29060": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"29061": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.primaryKeys"
		},
		"29062": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isLink"
		},
		"29063": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.linkableKeys"
		},
		"29064": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isReadOnlyLink"
		},
		"29065": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.databaseConfig"
		},
		"29066": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"29067": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.tableName"
		},
		"29068": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.idPrefix"
		},
		"29069": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraFields"
		},
		"29070": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"29071": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.type"
		},
		"29072": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultValue"
		},
		"29073": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.nullable"
		},
		"29074": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"29075": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerRelationship"
		},
		"29076": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"29077": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isInternalService"
		},
		"29078": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.deleteCascade"
		},
		"29079": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleExports"
		},
		"29080": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"29081": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.service"
		},
		"29082": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.loaders"
		},
		"29083": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.migrations"
		},
		"29084": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.models"
		},
		"29085": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.runMigrations"
		},
		"29086": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.runMigrations"
		},
		"29087": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"29088": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"29089": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.revertMigration"
		},
		"29090": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.revertMigration"
		},
		"29091": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"29092": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"29093": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleServiceInitializeOptions"
		},
		"29094": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleServiceInitializeOptions.database"
		},
		"29095": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"29096": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.connection"
		},
		"29097": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.clientUrl"
		},
		"29098": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.schema"
		},
		"29099": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.host"
		},
		"29100": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.port"
		},
		"29101": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.user"
		},
		"29102": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.password"
		},
		"29103": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.database"
		},
		"29104": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.driverOptions"
		},
		"29105": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"29106": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.connection"
		},
		"29107": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.debug"
		},
		"29108": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.pool"
		},
		"29109": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleServiceInitializeCustomDataLayerOptions"
		},
		"29110": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"29111": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.manager"
		},
		"29112": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.repositories"
		},
		"29113": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"29114": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__index"
		},
		"29116": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleBootstrapDeclaration"
		},
		"29117": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "RemoteQueryFunction"
		},
		"29118": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"29119": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"29120": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "query"
		},
		"29121": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "variables"
		},
		"29122": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"29123": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "IModuleService"
		},
		"29134": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService"
		},
		"29135": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.__container__"
		},
		"29136": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.__container__"
		},
		"29137": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.retrieve"
		},
		"29138": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.retrieve"
		},
		"29139": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "idOrObject"
		},
		"29140": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "config"
		},
		"29141": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "sharedContext"
		},
		"29142": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.retrieve"
		},
		"29143": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "idOrObject"
		},
		"29144": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "config"
		},
		"29145": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "sharedContext"
		},
		"29146": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.list"
		},
		"29147": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.list"
		},
		"29148": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "filters"
		},
		"29149": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"29150": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"29151": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "config"
		},
		"29152": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "sharedContext"
		},
		"29153": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.listAndCount"
		},
		"29154": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.listAndCount"
		},
		"29155": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "filters"
		},
		"29156": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"29157": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"29158": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "config"
		},
		"29159": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "sharedContext"
		},
		"29160": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.create"
		},
		"29161": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.create"
		},
		"29162": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "data"
		},
		"29163": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "sharedContext"
		},
		"29164": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.create"
		},
		"29165": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "data"
		},
		"29166": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "sharedContext"
		},
		"29167": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.update"
		},
		"29168": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.update"
		},
		"29169": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "data"
		},
		"29170": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "sharedContext"
		},
		"29171": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.update"
		},
		"29172": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "data"
		},
		"29173": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "sharedContext"
		},
		"29174": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.update"
		},
		"29175": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "selectorAndData"
		},
		"29176": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "__type"
		},
		"29177": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "__type.selector"
		},
		"29178": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"29179": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"29180": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "__type.data"
		},
		"29181": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "sharedContext"
		},
		"29182": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.update"
		},
		"29183": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "selectorAndData"
		},
		"29184": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "__type"
		},
		"29185": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "__type.selector"
		},
		"29186": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"29187": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"29188": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "__type.data"
		},
		"29189": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "sharedContext"
		},
		"29190": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.delete"
		},
		"29191": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.delete"
		},
		"29192": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "idOrSelector"
		},
		"29193": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "sharedContext"
		},
		"29194": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.delete"
		},
		"29195": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "idOrSelector"
		},
		"29196": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "sharedContext"
		},
		"29197": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.delete"
		},
		"29198": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "idOrSelector"
		},
		"29199": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "sharedContext"
		},
		"29200": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.delete"
		},
		"29201": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "idOrSelector"
		},
		"29202": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "sharedContext"
		},
		"29203": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.delete"
		},
		"29204": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "idOrSelector"
		},
		"29205": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "__type"
		},
		"29206": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "__type.selector"
		},
		"29207": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"29208": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"29209": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "sharedContext"
		},
		"29210": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.softDelete"
		},
		"29211": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.softDelete"
		},
		"29212": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "idsOrFilter"
		},
		"29213": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"29214": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "sharedContext"
		},
		"29215": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.restore"
		},
		"29216": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.restore"
		},
		"29217": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "idsOrFilter"
		},
		"29218": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"29219": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "sharedContext"
		},
		"29220": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.upsert"
		},
		"29221": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.upsert"
		},
		"29222": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "data"
		},
		"29223": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "sharedContext"
		},
		"29224": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.upsert"
		},
		"29225": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "data"
		},
		"29226": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "sharedContext"
		},
		"29227": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.upsertWithReplace"
		},
		"29228": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.upsertWithReplace"
		},
		"29229": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "data"
		},
		"29230": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "config"
		},
		"29231": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "sharedContext"
		},
		"29232": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.TEntity"
		},
		"29233": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "__type"
		},
		"29234": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/internal-module-service.ts",
			"qualifiedName": "InternalModuleService.TContainer"
		},
		"29235": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "ModuleProviderExports"
		},
		"29236": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type"
		},
		"29237": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type.services"
		},
		"29238": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "ModuleProvider"
		},
		"29239": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type"
		},
		"29240": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type.resolve"
		},
		"29241": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type.provider_name"
		},
		"29242": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type.options"
		},
		"29243": {
			"sourceFileName": "../../../packages/types/src/order/index.ts",
			"qualifiedName": ""
		},
		"29244": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderSummaryDTO"
		},
		"29245": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "__type"
		},
		"29246": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "__type.total"
		},
		"29247": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "__type.subtotal"
		},
		"29248": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "__type.total_tax"
		},
		"29249": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "__type.ordered_total"
		},
		"29250": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "__type.fulfilled_total"
		},
		"29251": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "__type.returned_total"
		},
		"29252": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "__type.return_request_total"
		},
		"29253": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "__type.write_off_total"
		},
		"29254": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "__type.projected_total"
		},
		"29255": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "__type.net_total"
		},
		"29256": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "__type.net_subtotal"
		},
		"29257": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "__type.net_total_tax"
		},
		"29258": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "__type.future_total"
		},
		"29259": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "__type.future_subtotal"
		},
		"29260": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "__type.future_total_tax"
		},
		"29261": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "__type.future_projected_total"
		},
		"29262": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "__type.balance"
		},
		"29263": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "__type.future_balance"
		},
		"29264": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAdjustmentLineDTO"
		},
		"29265": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAdjustmentLineDTO.id"
		},
		"29266": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAdjustmentLineDTO.code"
		},
		"29267": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAdjustmentLineDTO.amount"
		},
		"29268": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAdjustmentLineDTO.order_id"
		},
		"29269": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAdjustmentLineDTO.description"
		},
		"29270": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAdjustmentLineDTO.promotion_id"
		},
		"29271": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAdjustmentLineDTO.provider_id"
		},
		"29272": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAdjustmentLineDTO.created_at"
		},
		"29273": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAdjustmentLineDTO.updated_at"
		},
		"29274": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderShippingMethodAdjustmentDTO"
		},
		"29275": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderShippingMethodAdjustmentDTO.shipping_method"
		},
		"29276": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderShippingMethodAdjustmentDTO.shipping_method_id"
		},
		"29277": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAdjustmentLineDTO.id"
		},
		"29278": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAdjustmentLineDTO.code"
		},
		"29279": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAdjustmentLineDTO.amount"
		},
		"29280": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAdjustmentLineDTO.order_id"
		},
		"29281": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAdjustmentLineDTO.description"
		},
		"29282": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAdjustmentLineDTO.promotion_id"
		},
		"29283": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAdjustmentLineDTO.provider_id"
		},
		"29284": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAdjustmentLineDTO.created_at"
		},
		"29285": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAdjustmentLineDTO.updated_at"
		},
		"29286": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemAdjustmentDTO"
		},
		"29287": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemAdjustmentDTO.item"
		},
		"29288": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemAdjustmentDTO.item_id"
		},
		"29289": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAdjustmentLineDTO.id"
		},
		"29290": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAdjustmentLineDTO.code"
		},
		"29291": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAdjustmentLineDTO.amount"
		},
		"29292": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAdjustmentLineDTO.order_id"
		},
		"29293": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAdjustmentLineDTO.description"
		},
		"29294": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAdjustmentLineDTO.promotion_id"
		},
		"29295": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAdjustmentLineDTO.provider_id"
		},
		"29296": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAdjustmentLineDTO.created_at"
		},
		"29297": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAdjustmentLineDTO.updated_at"
		},
		"29298": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTaxLineDTO"
		},
		"29299": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTaxLineDTO.id"
		},
		"29300": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTaxLineDTO.description"
		},
		"29301": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTaxLineDTO.tax_rate_id"
		},
		"29302": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTaxLineDTO.code"
		},
		"29303": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTaxLineDTO.rate"
		},
		"29304": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTaxLineDTO.provider_id"
		},
		"29305": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTaxLineDTO.created_at"
		},
		"29306": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTaxLineDTO.updated_at"
		},
		"29307": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderShippingMethodTaxLineDTO"
		},
		"29308": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderShippingMethodTaxLineDTO.shipping_method"
		},
		"29309": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderShippingMethodTaxLineDTO.shipping_method_id"
		},
		"29310": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTaxLineDTO.id"
		},
		"29311": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTaxLineDTO.description"
		},
		"29312": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTaxLineDTO.tax_rate_id"
		},
		"29313": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTaxLineDTO.code"
		},
		"29314": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTaxLineDTO.rate"
		},
		"29315": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTaxLineDTO.provider_id"
		},
		"29316": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTaxLineDTO.created_at"
		},
		"29317": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTaxLineDTO.updated_at"
		},
		"29318": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemTaxLineDTO"
		},
		"29319": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemTaxLineDTO.item"
		},
		"29320": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemTaxLineDTO.item_id"
		},
		"29321": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTaxLineDTO.id"
		},
		"29322": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTaxLineDTO.description"
		},
		"29323": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTaxLineDTO.tax_rate_id"
		},
		"29324": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTaxLineDTO.code"
		},
		"29325": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTaxLineDTO.rate"
		},
		"29326": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTaxLineDTO.provider_id"
		},
		"29327": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTaxLineDTO.created_at"
		},
		"29328": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTaxLineDTO.updated_at"
		},
		"29329": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAddressDTO"
		},
		"29330": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAddressDTO.id"
		},
		"29331": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAddressDTO.customer_id"
		},
		"29332": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAddressDTO.first_name"
		},
		"29333": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAddressDTO.last_name"
		},
		"29334": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAddressDTO.phone"
		},
		"29335": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAddressDTO.company"
		},
		"29336": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAddressDTO.address_1"
		},
		"29337": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAddressDTO.address_2"
		},
		"29338": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAddressDTO.city"
		},
		"29339": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAddressDTO.country_code"
		},
		"29340": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAddressDTO.province"
		},
		"29341": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAddressDTO.postal_code"
		},
		"29342": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAddressDTO.metadata"
		},
		"29343": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAddressDTO.created_at"
		},
		"29344": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderAddressDTO.updated_at"
		},
		"29345": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderShippingMethodDTO"
		},
		"29346": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderShippingMethodDTO.id"
		},
		"29347": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderShippingMethodDTO.order_id"
		},
		"29348": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderShippingMethodDTO.name"
		},
		"29349": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderShippingMethodDTO.description"
		},
		"29350": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderShippingMethodDTO.unit_price"
		},
		"29351": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderShippingMethodDTO.is_tax_inclusive"
		},
		"29352": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderShippingMethodDTO.shipping_option_id"
		},
		"29353": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderShippingMethodDTO.data"
		},
		"29354": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderShippingMethodDTO.metadata"
		},
		"29355": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderShippingMethodDTO.tax_lines"
		},
		"29356": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderShippingMethodDTO.adjustments"
		},
		"29357": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderShippingMethodDTO.created_at"
		},
		"29358": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderShippingMethodDTO.updated_at"
		},
		"29359": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderShippingMethodDTO.total"
		},
		"29360": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderShippingMethodDTO.subtotal"
		},
		"29361": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderShippingMethodDTO.tax_total"
		},
		"29362": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderShippingMethodDTO.discount_total"
		},
		"29363": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderShippingMethodDTO.discount_tax_total"
		},
		"29364": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemTotalsDTO"
		},
		"29365": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemTotalsDTO.original_total"
		},
		"29366": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemTotalsDTO.original_subtotal"
		},
		"29367": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemTotalsDTO.original_tax_total"
		},
		"29368": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemTotalsDTO.item_total"
		},
		"29369": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemTotalsDTO.item_subtotal"
		},
		"29370": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemTotalsDTO.item_tax_total"
		},
		"29371": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemTotalsDTO.total"
		},
		"29372": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemTotalsDTO.subtotal"
		},
		"29373": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemTotalsDTO.tax_total"
		},
		"29374": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemTotalsDTO.discount_total"
		},
		"29375": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemTotalsDTO.discount_tax_total"
		},
		"29376": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemDTO"
		},
		"29377": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemDTO.id"
		},
		"29378": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemDTO.title"
		},
		"29379": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemDTO.subtitle"
		},
		"29380": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemDTO.thumbnail"
		},
		"29381": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemDTO.variant_id"
		},
		"29382": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemDTO.product_id"
		},
		"29383": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemDTO.product_title"
		},
		"29384": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemDTO.product_description"
		},
		"29385": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemDTO.product_subtitle"
		},
		"29386": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemDTO.product_type"
		},
		"29387": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemDTO.product_collection"
		},
		"29388": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemDTO.product_handle"
		},
		"29389": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemDTO.variant_sku"
		},
		"29390": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemDTO.variant_barcode"
		},
		"29391": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemDTO.variant_title"
		},
		"29392": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemDTO.variant_option_values"
		},
		"29393": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemDTO.requires_shipping"
		},
		"29394": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemDTO.is_discountable"
		},
		"29395": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemDTO.is_tax_inclusive"
		},
		"29396": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemDTO.compare_at_unit_price"
		},
		"29397": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemDTO.raw_compare_at_unit_price"
		},
		"29398": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemDTO.unit_price"
		},
		"29399": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemDTO.raw_unit_price"
		},
		"29400": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemDTO.tax_lines"
		},
		"29401": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemDTO.adjustments"
		},
		"29402": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemDTO.detail"
		},
		"29403": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemDTO.created_at"
		},
		"29404": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemDTO.updated_at"
		},
		"29405": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemTotalsDTO.original_total"
		},
		"29406": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemTotalsDTO.original_subtotal"
		},
		"29407": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemTotalsDTO.original_tax_total"
		},
		"29408": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemTotalsDTO.item_total"
		},
		"29409": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemTotalsDTO.item_subtotal"
		},
		"29410": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemTotalsDTO.item_tax_total"
		},
		"29411": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemTotalsDTO.total"
		},
		"29412": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemTotalsDTO.subtotal"
		},
		"29413": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemTotalsDTO.tax_total"
		},
		"29414": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemTotalsDTO.discount_total"
		},
		"29415": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderLineItemTotalsDTO.discount_tax_total"
		},
		"29416": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderItemDTO"
		},
		"29417": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderItemDTO.id"
		},
		"29418": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderItemDTO.item_id"
		},
		"29419": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderItemDTO.item"
		},
		"29420": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderItemDTO.quantity"
		},
		"29421": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderItemDTO.raw_quantity"
		},
		"29422": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderItemDTO.fulfilled_quantity"
		},
		"29423": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderItemDTO.raw_fulfilled_quantity"
		},
		"29424": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderItemDTO.shipped_quantity"
		},
		"29425": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderItemDTO.raw_shipped_quantity"
		},
		"29426": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderItemDTO.return_requested_quantity"
		},
		"29427": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderItemDTO.raw_return_requested_quantity"
		},
		"29428": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderItemDTO.return_received_quantity"
		},
		"29429": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderItemDTO.raw_return_received_quantity"
		},
		"29430": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderItemDTO.return_dismissed_quantity"
		},
		"29431": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderItemDTO.raw_return_dismissed_quantity"
		},
		"29432": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderItemDTO.written_off_quantity"
		},
		"29433": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderItemDTO.raw_written_off_quantity"
		},
		"29434": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderItemDTO.metadata"
		},
		"29435": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderItemDTO.created_at"
		},
		"29436": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderItemDTO.updated_at"
		},
		"29437": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderDTO"
		},
		"29438": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderDTO.id"
		},
		"29439": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderDTO.version"
		},
		"29440": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderDTO.region_id"
		},
		"29441": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderDTO.customer_id"
		},
		"29442": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderDTO.sales_channel_id"
		},
		"29443": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderDTO.email"
		},
		"29444": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderDTO.currency_code"
		},
		"29445": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderDTO.shipping_address"
		},
		"29446": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderDTO.billing_address"
		},
		"29447": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderDTO.items"
		},
		"29448": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderDTO.shipping_methods"
		},
		"29449": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderDTO.transactions"
		},
		"29450": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderDTO.summary"
		},
		"29451": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderDTO.metadata"
		},
		"29452": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderDTO.created_at"
		},
		"29453": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderDTO.updated_at"
		},
		"29454": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeDTO"
		},
		"29455": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeDTO.id"
		},
		"29456": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeDTO.order_id"
		},
		"29457": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeDTO.order"
		},
		"29458": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeDTO.actions"
		},
		"29459": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeDTO.status"
		},
		"29460": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeDTO.requested_by"
		},
		"29461": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeDTO.requested_at"
		},
		"29462": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeDTO.confirmed_by"
		},
		"29463": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeDTO.confirmed_at"
		},
		"29464": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeDTO.declined_by"
		},
		"29465": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeDTO.declined_reason"
		},
		"29466": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeDTO.metadata"
		},
		"29467": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeDTO.declined_at"
		},
		"29468": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeDTO.canceled_by"
		},
		"29469": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeDTO.canceled_at"
		},
		"29470": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeDTO.created_at"
		},
		"29471": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeDTO.updated_at"
		},
		"29472": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeActionDTO"
		},
		"29473": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeActionDTO.id"
		},
		"29474": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeActionDTO.order_change_id"
		},
		"29475": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeActionDTO.order_change"
		},
		"29476": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeActionDTO.order_id"
		},
		"29477": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeActionDTO.order"
		},
		"29478": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeActionDTO.reference"
		},
		"29479": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeActionDTO.reference_id"
		},
		"29480": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeActionDTO.action"
		},
		"29481": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeActionDTO.metadata"
		},
		"29482": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeActionDTO.internal_note"
		},
		"29483": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeActionDTO.created_at"
		},
		"29484": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderChangeActionDTO.updated_at"
		},
		"29485": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTransactionDTO"
		},
		"29486": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTransactionDTO.id"
		},
		"29487": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTransactionDTO.order_id"
		},
		"29488": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTransactionDTO.order"
		},
		"29489": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTransactionDTO.amount"
		},
		"29490": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTransactionDTO.currency_code"
		},
		"29491": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTransactionDTO.reference"
		},
		"29492": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTransactionDTO.reference_id"
		},
		"29493": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTransactionDTO.metadata"
		},
		"29494": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTransactionDTO.created_at"
		},
		"29495": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "OrderTransactionDTO.updated_at"
		},
		"29496": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderProps"
		},
		"29497": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderProps.id"
		},
		"29498": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderProps.sales_channel_id"
		},
		"29499": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderProps.customer_id"
		},
		"29500": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderProps.region_id"
		},
		"29501": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderProps.created_at"
		},
		"29502": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderProps.updated_at"
		},
		"29503": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"29504": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"29505": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderAddressProps"
		},
		"29506": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderAddressProps.id"
		},
		"29507": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"29508": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"29509": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderLineItemProps"
		},
		"29510": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderLineItemProps.id"
		},
		"29511": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderLineItemProps.order_id"
		},
		"29512": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderLineItemProps.title"
		},
		"29513": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderLineItemProps.variant_id"
		},
		"29514": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderLineItemProps.product_id"
		},
		"29515": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"29516": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"29517": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderLineItemAdjustmentProps"
		},
		"29518": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderLineItemAdjustmentProps.id"
		},
		"29519": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderLineItemAdjustmentProps.item_id"
		},
		"29520": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderLineItemAdjustmentProps.promotion_id"
		},
		"29521": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderLineItemAdjustmentProps.provider_id"
		},
		"29522": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderLineItemAdjustmentProps.item"
		},
		"29523": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"29524": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"29525": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderShippingMethodProps"
		},
		"29526": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderShippingMethodProps.id"
		},
		"29527": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderShippingMethodProps.order_id"
		},
		"29528": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderShippingMethodProps.name"
		},
		"29529": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderShippingMethodProps.shipping_option_id"
		},
		"29530": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"29531": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"29532": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderShippingMethodAdjustmentProps"
		},
		"29533": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderShippingMethodAdjustmentProps.id"
		},
		"29534": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderShippingMethodAdjustmentProps.shipping_method_id"
		},
		"29535": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderShippingMethodAdjustmentProps.promotion_id"
		},
		"29536": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderShippingMethodAdjustmentProps.provider_id"
		},
		"29537": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderShippingMethodAdjustmentProps.shipping_method"
		},
		"29538": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"29539": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"29540": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderLineItemTaxLineProps"
		},
		"29541": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderLineItemTaxLineProps.id"
		},
		"29542": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderLineItemTaxLineProps.description"
		},
		"29543": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderLineItemTaxLineProps.code"
		},
		"29544": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderLineItemTaxLineProps.tax_rate_id"
		},
		"29545": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderLineItemTaxLineProps.provider_id"
		},
		"29546": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderLineItemTaxLineProps.item_id"
		},
		"29547": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderLineItemTaxLineProps.item"
		},
		"29548": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"29549": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"29550": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderShippingMethodTaxLineProps"
		},
		"29551": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderShippingMethodTaxLineProps.id"
		},
		"29552": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderShippingMethodTaxLineProps.description"
		},
		"29553": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderShippingMethodTaxLineProps.code"
		},
		"29554": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderShippingMethodTaxLineProps.tax_rate_id"
		},
		"29555": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderShippingMethodTaxLineProps.provider_id"
		},
		"29556": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderShippingMethodTaxLineProps.shipping_method_id"
		},
		"29557": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderShippingMethodTaxLineProps.shipping_method"
		},
		"29558": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"29559": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"29560": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderChangeProps"
		},
		"29561": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderChangeProps.id"
		},
		"29562": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderChangeProps.order_id"
		},
		"29563": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderChangeProps.status"
		},
		"29564": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderChangeProps.requested_by"
		},
		"29565": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderChangeProps.confirmed_by"
		},
		"29566": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderChangeProps.declined_by"
		},
		"29567": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderChangeProps.canceled_by"
		},
		"29568": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"29569": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"29570": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderChangeActionProps"
		},
		"29571": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderChangeActionProps.id"
		},
		"29572": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderChangeActionProps.order_change_id"
		},
		"29573": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderChangeActionProps.reference"
		},
		"29574": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderChangeActionProps.reference_id"
		},
		"29575": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"29576": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"29577": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderTransactionProps"
		},
		"29578": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderTransactionProps.id"
		},
		"29579": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderTransactionProps.order_id"
		},
		"29580": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderTransactionProps.currency_code"
		},
		"29581": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderTransactionProps.reference"
		},
		"29582": {
			"sourceFileName": "../../../packages/types/src/order/common.ts",
			"qualifiedName": "FilterableOrderTransactionProps.reference_id"
		},
		"29583": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"29584": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"29585": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO"
		},
		"29586": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.customer_id"
		},
		"29587": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.company"
		},
		"29588": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.first_name"
		},
		"29589": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.last_name"
		},
		"29590": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.address_1"
		},
		"29591": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.address_2"
		},
		"29592": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.city"
		},
		"29593": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.country_code"
		},
		"29594": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.province"
		},
		"29595": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.postal_code"
		},
		"29596": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.phone"
		},
		"29597": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.metadata"
		},
		"29598": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderAddressDTO"
		},
		"29599": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderAddressDTO.id"
		},
		"29600": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.customer_id"
		},
		"29601": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.company"
		},
		"29602": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.first_name"
		},
		"29603": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.last_name"
		},
		"29604": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.address_1"
		},
		"29605": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.address_2"
		},
		"29606": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.city"
		},
		"29607": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.country_code"
		},
		"29608": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.province"
		},
		"29609": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.postal_code"
		},
		"29610": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.phone"
		},
		"29611": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.metadata"
		},
		"29612": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderAddressDTO"
		},
		"29613": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.customer_id"
		},
		"29614": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.company"
		},
		"29615": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.first_name"
		},
		"29616": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.last_name"
		},
		"29617": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.address_1"
		},
		"29618": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.address_2"
		},
		"29619": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.city"
		},
		"29620": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.country_code"
		},
		"29621": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.province"
		},
		"29622": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.postal_code"
		},
		"29623": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.phone"
		},
		"29624": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderAddressDTO.metadata"
		},
		"29625": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderDTO"
		},
		"29626": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderDTO.region_id"
		},
		"29627": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderDTO.customer_id"
		},
		"29628": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderDTO.sales_channel_id"
		},
		"29629": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderDTO.status"
		},
		"29630": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderDTO.email"
		},
		"29631": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderDTO.currency_code"
		},
		"29632": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderDTO.shipping_address_id"
		},
		"29633": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderDTO.billing_address_id"
		},
		"29634": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderDTO.shipping_address"
		},
		"29635": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderDTO.billing_address"
		},
		"29636": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderDTO.no_notification"
		},
		"29637": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderDTO.items"
		},
		"29638": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderDTO.shipping_methods"
		},
		"29639": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderDTO.transactions"
		},
		"29640": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderDTO.metadata"
		},
		"29641": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderDTO"
		},
		"29642": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderDTO.id"
		},
		"29643": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderDTO.version"
		},
		"29644": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderDTO.region_id"
		},
		"29645": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderDTO.customer_id"
		},
		"29646": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderDTO.sales_channel_id"
		},
		"29647": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderDTO.status"
		},
		"29648": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderDTO.email"
		},
		"29649": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderDTO.no_notification"
		},
		"29650": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderDTO.metadata"
		},
		"29651": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderAdjustmentDTO"
		},
		"29652": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderAdjustmentDTO.code"
		},
		"29653": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderAdjustmentDTO.amount"
		},
		"29654": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderAdjustmentDTO.description"
		},
		"29655": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderAdjustmentDTO.promotion_id"
		},
		"29656": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderAdjustmentDTO.provider_id"
		},
		"29657": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderAdjustmentDTO"
		},
		"29658": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderAdjustmentDTO.id"
		},
		"29659": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderAdjustmentDTO.code"
		},
		"29660": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderAdjustmentDTO.amount"
		},
		"29661": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderAdjustmentDTO.description"
		},
		"29662": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderAdjustmentDTO.promotion_id"
		},
		"29663": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderAdjustmentDTO.provider_id"
		},
		"29664": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemAdjustmentDTO"
		},
		"29665": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemAdjustmentDTO.item_id"
		},
		"29666": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderAdjustmentDTO.code"
		},
		"29667": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderAdjustmentDTO.amount"
		},
		"29668": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderAdjustmentDTO.description"
		},
		"29669": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderAdjustmentDTO.promotion_id"
		},
		"29670": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderAdjustmentDTO.provider_id"
		},
		"29671": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderLineItemAdjustmentDTO"
		},
		"29672": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderLineItemAdjustmentDTO.item_id"
		},
		"29673": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderAdjustmentDTO.id"
		},
		"29674": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderAdjustmentDTO.code"
		},
		"29675": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderAdjustmentDTO.amount"
		},
		"29676": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderAdjustmentDTO.description"
		},
		"29677": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderAdjustmentDTO.promotion_id"
		},
		"29678": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderAdjustmentDTO.provider_id"
		},
		"29679": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderLineItemAdjustmentDTO"
		},
		"29680": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderLineItemAdjustmentDTO.id"
		},
		"29681": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderLineItemAdjustmentDTO.item_id"
		},
		"29682": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderLineItemAdjustmentDTO.code"
		},
		"29683": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderLineItemAdjustmentDTO.amount"
		},
		"29684": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderLineItemAdjustmentDTO.description"
		},
		"29685": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderLineItemAdjustmentDTO.promotion_id"
		},
		"29686": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpsertOrderLineItemAdjustmentDTO.provider_id"
		},
		"29687": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderTaxLineDTO"
		},
		"29688": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderTaxLineDTO.description"
		},
		"29689": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderTaxLineDTO.tax_rate_id"
		},
		"29690": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderTaxLineDTO.code"
		},
		"29691": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderTaxLineDTO.rate"
		},
		"29692": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderTaxLineDTO.provider_id"
		},
		"29693": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderTaxLineDTO"
		},
		"29694": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderTaxLineDTO.id"
		},
		"29695": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderTaxLineDTO.description"
		},
		"29696": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderTaxLineDTO.tax_rate_id"
		},
		"29697": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderTaxLineDTO.code"
		},
		"29698": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderTaxLineDTO.rate"
		},
		"29699": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderTaxLineDTO.provider_id"
		},
		"29700": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderShippingMethodTaxLineDTO"
		},
		"29701": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderTaxLineDTO.description"
		},
		"29702": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderTaxLineDTO.tax_rate_id"
		},
		"29703": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderTaxLineDTO.code"
		},
		"29704": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderTaxLineDTO.rate"
		},
		"29705": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderTaxLineDTO.provider_id"
		},
		"29706": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderShippingMethodTaxLineDTO"
		},
		"29707": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderTaxLineDTO.id"
		},
		"29708": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderTaxLineDTO.description"
		},
		"29709": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderTaxLineDTO.tax_rate_id"
		},
		"29710": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderTaxLineDTO.code"
		},
		"29711": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderTaxLineDTO.rate"
		},
		"29712": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderTaxLineDTO.provider_id"
		},
		"29713": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemTaxLineDTO"
		},
		"29714": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderTaxLineDTO.description"
		},
		"29715": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderTaxLineDTO.tax_rate_id"
		},
		"29716": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderTaxLineDTO.code"
		},
		"29717": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderTaxLineDTO.rate"
		},
		"29718": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderTaxLineDTO.provider_id"
		},
		"29719": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderLineItemTaxLineDTO"
		},
		"29720": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderTaxLineDTO.id"
		},
		"29721": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderTaxLineDTO.description"
		},
		"29722": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderTaxLineDTO.tax_rate_id"
		},
		"29723": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderTaxLineDTO.code"
		},
		"29724": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderTaxLineDTO.rate"
		},
		"29725": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderTaxLineDTO.provider_id"
		},
		"29726": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO"
		},
		"29727": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.title"
		},
		"29728": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.subtitle"
		},
		"29729": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.thumbnail"
		},
		"29730": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.order_id"
		},
		"29731": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.quantity"
		},
		"29732": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.product_id"
		},
		"29733": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.product_title"
		},
		"29734": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.product_description"
		},
		"29735": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.product_subtitle"
		},
		"29736": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.product_type"
		},
		"29737": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.product_collection"
		},
		"29738": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.product_handle"
		},
		"29739": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.variant_id"
		},
		"29740": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.variant_sku"
		},
		"29741": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.variant_barcode"
		},
		"29742": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.variant_title"
		},
		"29743": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.variant_option_values"
		},
		"29744": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.requires_shipping"
		},
		"29745": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.is_discountable"
		},
		"29746": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.is_tax_inclusive"
		},
		"29747": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.compare_at_unit_price"
		},
		"29748": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.unit_price"
		},
		"29749": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.tax_lines"
		},
		"29750": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.adjustments"
		},
		"29751": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemForOrderDTO"
		},
		"29752": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemForOrderDTO.order_id"
		},
		"29753": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.title"
		},
		"29754": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.subtitle"
		},
		"29755": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.thumbnail"
		},
		"29756": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.quantity"
		},
		"29757": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.product_id"
		},
		"29758": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.product_title"
		},
		"29759": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.product_description"
		},
		"29760": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.product_subtitle"
		},
		"29761": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.product_type"
		},
		"29762": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.product_collection"
		},
		"29763": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.product_handle"
		},
		"29764": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.variant_id"
		},
		"29765": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.variant_sku"
		},
		"29766": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.variant_barcode"
		},
		"29767": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.variant_title"
		},
		"29768": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.variant_option_values"
		},
		"29769": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.requires_shipping"
		},
		"29770": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.is_discountable"
		},
		"29771": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.is_tax_inclusive"
		},
		"29772": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.compare_at_unit_price"
		},
		"29773": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.unit_price"
		},
		"29774": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.tax_lines"
		},
		"29775": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderLineItemDTO.adjustments"
		},
		"29776": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderLineItemWithSelectorDTO"
		},
		"29777": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderLineItemWithSelectorDTO.selector"
		},
		"29778": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderLineItemWithSelectorDTO.data"
		},
		"29779": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderLineItemDTO"
		},
		"29780": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderLineItemDTO.id"
		},
		"29781": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderLineItemDTO.title"
		},
		"29782": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderLineItemDTO.quantity"
		},
		"29783": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderLineItemDTO.unit_price"
		},
		"29784": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderLineItemDTO.tax_lines"
		},
		"29785": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderLineItemDTO.adjustments"
		},
		"29786": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "variant_id"
		},
		"29787": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "product_id"
		},
		"29788": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "subtitle"
		},
		"29789": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "thumbnail"
		},
		"29790": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "product_title"
		},
		"29791": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "product_description"
		},
		"29792": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "product_subtitle"
		},
		"29793": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "product_type"
		},
		"29794": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "product_collection"
		},
		"29795": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "product_handle"
		},
		"29796": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "variant_sku"
		},
		"29797": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "variant_barcode"
		},
		"29798": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "variant_title"
		},
		"29799": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "variant_option_values"
		},
		"29800": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "requires_shipping"
		},
		"29801": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "is_discountable"
		},
		"29802": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "is_tax_inclusive"
		},
		"29803": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "compare_at_unit_price"
		},
		"29804": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "order_id"
		},
		"29805": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderShippingMethodDTO"
		},
		"29806": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderShippingMethodDTO.name"
		},
		"29807": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderShippingMethodDTO.shipping_method_id"
		},
		"29808": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderShippingMethodDTO.order_id"
		},
		"29809": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderShippingMethodDTO.amount"
		},
		"29810": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderShippingMethodDTO.data"
		},
		"29811": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderShippingMethodDTO.tax_lines"
		},
		"29812": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderShippingMethodDTO.adjustments"
		},
		"29813": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderShippingMethodDTO"
		},
		"29814": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderShippingMethodDTO.id"
		},
		"29815": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderShippingMethodDTO.name"
		},
		"29816": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderShippingMethodDTO.shipping_method_id"
		},
		"29817": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderShippingMethodDTO.amount"
		},
		"29818": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderShippingMethodDTO.data"
		},
		"29819": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderShippingMethodDTO.tax_lines"
		},
		"29820": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderShippingMethodDTO.adjustments"
		},
		"29821": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderShippingMethodAdjustmentDTO"
		},
		"29822": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderShippingMethodAdjustmentDTO.shipping_method_id"
		},
		"29823": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderShippingMethodAdjustmentDTO.code"
		},
		"29824": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderShippingMethodAdjustmentDTO.amount"
		},
		"29825": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderShippingMethodAdjustmentDTO.description"
		},
		"29826": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderShippingMethodAdjustmentDTO.promotion_id"
		},
		"29827": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderShippingMethodAdjustmentDTO.provider_id"
		},
		"29828": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderShippingMethodAdjustmentDTO"
		},
		"29829": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderShippingMethodAdjustmentDTO.id"
		},
		"29830": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderShippingMethodAdjustmentDTO.code"
		},
		"29831": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderShippingMethodAdjustmentDTO.amount"
		},
		"29832": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderShippingMethodAdjustmentDTO.description"
		},
		"29833": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderShippingMethodAdjustmentDTO.promotion_id"
		},
		"29834": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderShippingMethodAdjustmentDTO.provider_id"
		},
		"29835": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderChangeDTO"
		},
		"29836": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderChangeDTO.order_id"
		},
		"29837": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderChangeDTO.description"
		},
		"29838": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderChangeDTO.internal_note"
		},
		"29839": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderChangeDTO.requested_by"
		},
		"29840": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderChangeDTO.requested_at"
		},
		"29841": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderChangeDTO.metadata"
		},
		"29842": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderChangeDTO"
		},
		"29843": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderChangeDTO.id"
		},
		"29844": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderChangeDTO.status"
		},
		"29845": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderChangeDTO.description"
		},
		"29846": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderChangeDTO.internal_note"
		},
		"29847": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderChangeDTO.requested_by"
		},
		"29848": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderChangeDTO.requested_at"
		},
		"29849": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderChangeDTO.confirmed_by"
		},
		"29850": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderChangeDTO.confirmed_at"
		},
		"29851": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderChangeDTO.declined_by"
		},
		"29852": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderChangeDTO.declined_reason"
		},
		"29853": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderChangeDTO.declined_at"
		},
		"29854": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderChangeDTO.canceled_by"
		},
		"29855": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderChangeDTO.metadata"
		},
		"29856": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CancelOrderChangeDTO"
		},
		"29857": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CancelOrderChangeDTO.id"
		},
		"29858": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CancelOrderChangeDTO.canceled_by"
		},
		"29859": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CancelOrderChangeDTO.metadata"
		},
		"29860": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "DeclineOrderChangeDTO"
		},
		"29861": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "DeclineOrderChangeDTO.id"
		},
		"29862": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "DeclineOrderChangeDTO.declined_by"
		},
		"29863": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "DeclineOrderChangeDTO.metadata"
		},
		"29864": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "ConfirmOrderChangeDTO"
		},
		"29865": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "ConfirmOrderChangeDTO.id"
		},
		"29866": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "ConfirmOrderChangeDTO.confirmed_by"
		},
		"29867": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "ConfirmOrderChangeDTO.metadata"
		},
		"29868": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderChangeActionDTO"
		},
		"29869": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderChangeActionDTO.order_change_id"
		},
		"29870": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderChangeActionDTO.reference"
		},
		"29871": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderChangeActionDTO.reference_id"
		},
		"29872": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderChangeActionDTO.action"
		},
		"29873": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderChangeActionDTO.internal_note"
		},
		"29874": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderChangeActionDTO.metadata"
		},
		"29875": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderChangeActionDTO"
		},
		"29876": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderChangeActionDTO.id"
		},
		"29877": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderChangeActionDTO.reference"
		},
		"29878": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderChangeActionDTO.reference_id"
		},
		"29879": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderChangeActionDTO.action"
		},
		"29880": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderChangeActionDTO.internal_note"
		},
		"29881": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderChangeActionDTO.metadata"
		},
		"29882": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderTransactionDTO"
		},
		"29883": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderTransactionDTO.order_id"
		},
		"29884": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderTransactionDTO.amount"
		},
		"29885": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderTransactionDTO.currency_code"
		},
		"29886": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderTransactionDTO.reference"
		},
		"29887": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderTransactionDTO.reference_id"
		},
		"29888": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "CreateOrderTransactionDTO.metadata"
		},
		"29889": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderTransactionDTO"
		},
		"29890": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderTransactionDTO.id"
		},
		"29891": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderTransactionDTO.amount"
		},
		"29892": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderTransactionDTO.currency_code"
		},
		"29893": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderTransactionDTO.reference"
		},
		"29894": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderTransactionDTO.reference_id"
		},
		"29895": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderTransactionDTO.metadata"
		},
		"29896": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderItemDTO"
		},
		"29897": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderItemDTO.id"
		},
		"29898": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderItemDTO.order_id"
		},
		"29899": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderItemDTO.version"
		},
		"29900": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderItemDTO.item_id"
		},
		"29901": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderItemDTO.quantity"
		},
		"29902": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderItemDTO.fulfilled_quantity"
		},
		"29903": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderItemDTO.return_requested_quantity"
		},
		"29904": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderItemDTO.return_received_quantity"
		},
		"29905": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderItemDTO.return_dismissed_quantity"
		},
		"29906": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderItemDTO.written_off_quantity"
		},
		"29907": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderItemDTO.metadata"
		},
		"29908": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderItemWithSelectorDTO"
		},
		"29909": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderItemWithSelectorDTO.selector"
		},
		"29910": {
			"sourceFileName": "../../../packages/types/src/order/mutations.ts",
			"qualifiedName": "UpdateOrderItemWithSelectorDTO.data"
		},
		"29911": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService"
		},
		"29912": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.retrieve"
		},
		"29913": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.retrieve"
		},
		"29914": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "orderId"
		},
		"29915": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "config"
		},
		"29916": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"29917": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.list"
		},
		"29918": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.list"
		},
		"29919": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "filters"
		},
		"29920": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "config"
		},
		"29921": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"29922": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.listAndCount"
		},
		"29923": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.listAndCount"
		},
		"29924": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "filters"
		},
		"29925": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "config"
		},
		"29926": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"29927": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.create"
		},
		"29928": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.create"
		},
		"29929": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"29930": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"29931": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.create"
		},
		"29932": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"29933": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"29934": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.update"
		},
		"29935": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.update"
		},
		"29936": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"29937": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.update"
		},
		"29938": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "orderId"
		},
		"29939": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"29940": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"29941": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.update"
		},
		"29942": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "selector"
		},
		"29943": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"29944": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"29945": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.delete"
		},
		"29946": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.delete"
		},
		"29947": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "orderIds"
		},
		"29948": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"29949": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.delete"
		},
		"29950": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "orderId"
		},
		"29951": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"29952": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.listAddresses"
		},
		"29953": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.listAddresses"
		},
		"29954": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "filters"
		},
		"29955": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "config"
		},
		"29956": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"29957": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.createAddresses"
		},
		"29958": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.createAddresses"
		},
		"29959": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"29960": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"29961": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.createAddresses"
		},
		"29962": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"29963": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"29964": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.updateAddresses"
		},
		"29965": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.updateAddresses"
		},
		"29966": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"29967": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"29968": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.updateAddresses"
		},
		"29969": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"29970": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"29971": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.deleteAddresses"
		},
		"29972": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.deleteAddresses"
		},
		"29973": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "ids"
		},
		"29974": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"29975": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.deleteAddresses"
		},
		"29976": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "ids"
		},
		"29977": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"29978": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.retrieveLineItem"
		},
		"29979": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.retrieveLineItem"
		},
		"29980": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "itemId"
		},
		"29981": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "config"
		},
		"29982": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"29983": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.listLineItems"
		},
		"29984": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.listLineItems"
		},
		"29985": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "filters"
		},
		"29986": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "config"
		},
		"29987": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"29988": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.addLineItems"
		},
		"29989": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.addLineItems"
		},
		"29990": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"29991": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.addLineItems"
		},
		"29992": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"29993": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.addLineItems"
		},
		"29994": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "orderId"
		},
		"29995": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "items"
		},
		"29996": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"29997": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.updateLineItems"
		},
		"29998": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.updateLineItems"
		},
		"29999": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"30000": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.updateLineItems"
		},
		"30001": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "selector"
		},
		"30002": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"30003": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"30004": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.updateLineItems"
		},
		"30005": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "lineId"
		},
		"30006": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"30007": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"30008": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.removeLineItems"
		},
		"30009": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.removeLineItems"
		},
		"30010": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "itemIds"
		},
		"30011": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"30012": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.removeLineItems"
		},
		"30013": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "itemIds"
		},
		"30014": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"30015": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.removeLineItems"
		},
		"30016": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "selector"
		},
		"30017": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"30018": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.updateOrderItem"
		},
		"30019": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.updateOrderItem"
		},
		"30020": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "selector"
		},
		"30021": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"30022": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"30023": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.updateOrderItem"
		},
		"30024": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "orderDetailId"
		},
		"30025": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"30026": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"30027": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.updateOrderItem"
		},
		"30028": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "orderDetailIdOrDataOrSelector"
		},
		"30029": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"30030": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"30031": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.listShippingMethods"
		},
		"30032": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.listShippingMethods"
		},
		"30033": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "filters"
		},
		"30034": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "config"
		},
		"30035": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"30036": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.addShippingMethods"
		},
		"30037": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.addShippingMethods"
		},
		"30038": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"30039": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.addShippingMethods"
		},
		"30040": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"30041": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.addShippingMethods"
		},
		"30042": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "orderId"
		},
		"30043": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "methods"
		},
		"30044": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"30045": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.removeShippingMethods"
		},
		"30046": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.removeShippingMethods"
		},
		"30047": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "methodIds"
		},
		"30048": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"30049": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.removeShippingMethods"
		},
		"30050": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "methodIds"
		},
		"30051": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"30052": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.removeShippingMethods"
		},
		"30053": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "selector"
		},
		"30054": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"30055": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.listLineItemAdjustments"
		},
		"30056": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.listLineItemAdjustments"
		},
		"30057": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "filters"
		},
		"30058": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "config"
		},
		"30059": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"30060": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.addLineItemAdjustments"
		},
		"30061": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.addLineItemAdjustments"
		},
		"30062": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"30063": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.addLineItemAdjustments"
		},
		"30064": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"30065": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.addLineItemAdjustments"
		},
		"30066": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "orderId"
		},
		"30067": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"30068": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.setLineItemAdjustments"
		},
		"30069": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.setLineItemAdjustments"
		},
		"30070": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "orderId"
		},
		"30071": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"30072": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"30073": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.removeLineItemAdjustments"
		},
		"30074": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.removeLineItemAdjustments"
		},
		"30075": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "adjustmentIds"
		},
		"30076": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"30077": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.removeLineItemAdjustments"
		},
		"30078": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "adjustmentIds"
		},
		"30079": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"30080": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.removeLineItemAdjustments"
		},
		"30081": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "selector"
		},
		"30082": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"30083": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.listShippingMethodAdjustments"
		},
		"30084": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.listShippingMethodAdjustments"
		},
		"30085": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "filters"
		},
		"30086": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "config"
		},
		"30087": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"30088": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.addShippingMethodAdjustments"
		},
		"30089": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.addShippingMethodAdjustments"
		},
		"30090": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"30091": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.addShippingMethodAdjustments"
		},
		"30092": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"30093": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.addShippingMethodAdjustments"
		},
		"30094": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "orderId"
		},
		"30095": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"30096": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"30097": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.setShippingMethodAdjustments"
		},
		"30098": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.setShippingMethodAdjustments"
		},
		"30099": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "orderId"
		},
		"30100": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"30101": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"30102": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.removeShippingMethodAdjustments"
		},
		"30103": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.removeShippingMethodAdjustments"
		},
		"30104": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "adjustmentIds"
		},
		"30105": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"30106": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.removeShippingMethodAdjustments"
		},
		"30107": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "adjustmentId"
		},
		"30108": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"30109": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.removeShippingMethodAdjustments"
		},
		"30110": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "selector"
		},
		"30111": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"30112": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.listLineItemTaxLines"
		},
		"30113": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.listLineItemTaxLines"
		},
		"30114": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "filters"
		},
		"30115": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "config"
		},
		"30116": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"30117": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.addLineItemTaxLines"
		},
		"30118": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.addLineItemTaxLines"
		},
		"30119": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "taxLines"
		},
		"30120": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.addLineItemTaxLines"
		},
		"30121": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "taxLine"
		},
		"30122": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.addLineItemTaxLines"
		},
		"30123": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "orderId"
		},
		"30124": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "taxLines"
		},
		"30125": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"30126": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.setLineItemTaxLines"
		},
		"30127": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.setLineItemTaxLines"
		},
		"30128": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "orderId"
		},
		"30129": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "taxLines"
		},
		"30130": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"30131": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.removeLineItemTaxLines"
		},
		"30132": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.removeLineItemTaxLines"
		},
		"30133": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "taxLineIds"
		},
		"30134": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"30135": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.removeLineItemTaxLines"
		},
		"30136": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "taxLineIds"
		},
		"30137": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"30138": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.removeLineItemTaxLines"
		},
		"30139": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "selector"
		},
		"30140": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"30141": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.listShippingMethodTaxLines"
		},
		"30142": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.listShippingMethodTaxLines"
		},
		"30143": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "filters"
		},
		"30144": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "config"
		},
		"30145": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"30146": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.addShippingMethodTaxLines"
		},
		"30147": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.addShippingMethodTaxLines"
		},
		"30148": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "taxLines"
		},
		"30149": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.addShippingMethodTaxLines"
		},
		"30150": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "taxLine"
		},
		"30151": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.addShippingMethodTaxLines"
		},
		"30152": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "orderId"
		},
		"30153": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "taxLines"
		},
		"30154": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"30155": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.setShippingMethodTaxLines"
		},
		"30156": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.setShippingMethodTaxLines"
		},
		"30157": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "orderId"
		},
		"30158": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "taxLines"
		},
		"30159": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"30160": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.removeShippingMethodTaxLines"
		},
		"30161": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.removeShippingMethodTaxLines"
		},
		"30162": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "taxLineIds"
		},
		"30163": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"30164": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.removeShippingMethodTaxLines"
		},
		"30165": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "taxLineIds"
		},
		"30166": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"30167": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.removeShippingMethodTaxLines"
		},
		"30168": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "selector"
		},
		"30169": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"30170": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.createOrderChange"
		},
		"30171": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.createOrderChange"
		},
		"30172": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"30173": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"30174": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.createOrderChange"
		},
		"30175": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"30176": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"30177": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.createOrderChange"
		},
		"30178": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"30179": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"30180": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.cancelOrderChange"
		},
		"30181": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.cancelOrderChange"
		},
		"30182": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "orderId"
		},
		"30183": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"30184": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.cancelOrderChange"
		},
		"30185": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "orderId"
		},
		"30186": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"30187": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.cancelOrderChange"
		},
		"30188": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"30189": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"30190": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.cancelOrderChange"
		},
		"30191": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"30192": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"30193": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.confirmOrderChange"
		},
		"30194": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.confirmOrderChange"
		},
		"30195": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "orderId"
		},
		"30196": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"30197": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.confirmOrderChange"
		},
		"30198": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "orderId"
		},
		"30199": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"30200": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.confirmOrderChange"
		},
		"30201": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"30202": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"30203": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.confirmOrderChange"
		},
		"30204": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"30205": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"30206": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.declineOrderChange"
		},
		"30207": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.declineOrderChange"
		},
		"30208": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "orderId"
		},
		"30209": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"30210": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.declineOrderChange"
		},
		"30211": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "orderId"
		},
		"30212": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"30213": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.declineOrderChange"
		},
		"30214": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"30215": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"30216": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.declineOrderChange"
		},
		"30217": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"30218": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"30219": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.applyPendingOrderActions"
		},
		"30220": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.applyPendingOrderActions"
		},
		"30221": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "orderId"
		},
		"30222": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"30223": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.addOrderAction"
		},
		"30224": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "IOrderModuleService.addOrderAction"
		},
		"30225": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "data"
		},
		"30226": {
			"sourceFileName": "../../../packages/types/src/order/service.ts",
			"qualifiedName": "sharedContext"
		},
		"30237": {
			"sourceFileName": "../../../packages/types/src/region__legacy/index.ts",
			"qualifiedName": ""
		},
		"30238": {
			"sourceFileName": "../../../packages/types/src/region__legacy/common.ts",
			"qualifiedName": "RegionDTO__legacy"
		},
		"30239": {
			"sourceFileName": "../../../packages/types/src/region__legacy/common.ts",
			"qualifiedName": "__type.name"
		},
		"30240": {
			"sourceFileName": "../../../packages/types/src/region__legacy/common.ts",
			"qualifiedName": "__type.currency_code"
		},
		"30241": {
			"sourceFileName": "../../../packages/types/src/region__legacy/common.ts",
			"qualifiedName": "__type.tax_rate"
		},
		"30242": {
			"sourceFileName": "../../../packages/types/src/region__legacy/common.ts",
			"qualifiedName": "__type.tax_code"
		},
		"30243": {
			"sourceFileName": "../../../packages/types/src/region__legacy/common.ts",
			"qualifiedName": "__type.gift_cards_taxable"
		},
		"30244": {
			"sourceFileName": "../../../packages/types/src/region__legacy/common.ts",
			"qualifiedName": "__type.automatic_taxes"
		},
		"30245": {
			"sourceFileName": "../../../packages/types/src/region__legacy/common.ts",
			"qualifiedName": "__type.tax_provider_id"
		},
		"30246": {
			"sourceFileName": "../../../packages/types/src/region__legacy/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"30247": {
			"sourceFileName": "../../../packages/types/src/region__legacy/common.ts",
			"qualifiedName": "__type.includes_tax"
		},
		"30248": {
			"sourceFileName": "../../../packages/types/src/search/index.ts",
			"qualifiedName": ""
		},
		"30249": {
			"sourceFileName": "../../../packages/types/src/search/index.ts",
			"qualifiedName": "IndexSettings"
		},
		"30250": {
			"sourceFileName": "../../../packages/types/src/search/index.ts",
			"qualifiedName": "__type"
		},
		"30251": {
			"sourceFileName": "../../../packages/types/src/search/index.ts",
			"qualifiedName": "__type.indexSettings"
		},
		"30252": {
			"sourceFileName": "../../../packages/types/src/search/index.ts",
			"qualifiedName": "__type.primaryKey"
		},
		"30253": {
			"sourceFileName": "../../../packages/types/src/search/index.ts",
			"qualifiedName": "__type.transformer"
		},
		"30254": {
			"sourceFileName": "../../../packages/types/src/search/index.ts",
			"qualifiedName": "__type"
		},
		"30255": {
			"sourceFileName": "../../../packages/types/src/search/index.ts",
			"qualifiedName": "__type"
		},
		"30256": {
			"sourceFileName": "../../../packages/types/src/search/index.ts",
			"qualifiedName": "document"
		},
		"30257": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService"
		},
		"30258": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.options"
		},
		"30259": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.createIndex"
		},
		"30260": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.createIndex"
		},
		"30261": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"30262": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "options"
		},
		"30263": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.getIndex"
		},
		"30264": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.getIndex"
		},
		"30265": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"30266": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.addDocuments"
		},
		"30267": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.addDocuments"
		},
		"30268": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"30269": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "documents"
		},
		"30270": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "type"
		},
		"30271": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.replaceDocuments"
		},
		"30272": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.replaceDocuments"
		},
		"30273": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"30274": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "documents"
		},
		"30275": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "type"
		},
		"30276": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.deleteDocument"
		},
		"30277": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.deleteDocument"
		},
		"30278": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"30279": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "document_id"
		},
		"30280": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.deleteAllDocuments"
		},
		"30281": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.deleteAllDocuments"
		},
		"30282": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"30283": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.search"
		},
		"30284": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.search"
		},
		"30285": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"30286": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "query"
		},
		"30287": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "options"
		},
		"30288": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.updateSettings"
		},
		"30289": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.updateSettings"
		},
		"30290": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"30291": {
			"sourceFileName": "../../../packages/types/src/search/interface.ts",
			"qualifiedName": "settings"
		},
		"30292": {
			"sourceFileName": "../../../packages/types/src/transaction-base/index.ts",
			"qualifiedName": ""
		},
		"30293": {
			"sourceFileName": "../../../packages/types/src/transaction-base/transaction-base.ts",
			"qualifiedName": "ITransactionBaseService"
		},
		"30294": {
			"sourceFileName": "../../../packages/types/src/transaction-base/transaction-base.ts",
			"qualifiedName": "ITransactionBaseService.withTransaction"
		},
		"30295": {
			"sourceFileName": "../../../packages/types/src/transaction-base/transaction-base.ts",
			"qualifiedName": "ITransactionBaseService.withTransaction"
		},
		"30296": {
			"sourceFileName": "../../../packages/types/src/transaction-base/transaction-base.ts",
			"qualifiedName": "transactionManager"
		},
		"30297": {
			"sourceFileName": "../../../packages/types/src/workflow/index.ts",
			"qualifiedName": ""
		},
		"30298": {
			"sourceFileName": "../../../packages/types/src/workflow/common.ts",
			"qualifiedName": ""
		},
		"30299": {
			"sourceFileName": "../../../packages/types/src/workflow/common.ts",
			"qualifiedName": "WorkflowInputConfig"
		},
		"30300": {
			"sourceFileName": "../../../packages/types/src/workflow/common.ts",
			"qualifiedName": "WorkflowInputConfig.listConfig"
		},
		"30301": {
			"sourceFileName": "../../../packages/types/src/workflow/common.ts",
			"qualifiedName": "__type"
		},
		"30302": {
			"sourceFileName": "../../../packages/types/src/workflow/common.ts",
			"qualifiedName": "__type.select"
		},
		"30303": {
			"sourceFileName": "../../../packages/types/src/workflow/common.ts",
			"qualifiedName": "__type.relations"
		},
		"30304": {
			"sourceFileName": "../../../packages/types/src/workflow/common.ts",
			"qualifiedName": "WorkflowInputConfig.retrieveConfig"
		},
		"30305": {
			"sourceFileName": "../../../packages/types/src/workflow/common.ts",
			"qualifiedName": "__type"
		},
		"30306": {
			"sourceFileName": "../../../packages/types/src/workflow/common.ts",
			"qualifiedName": "__type.select"
		},
		"30307": {
			"sourceFileName": "../../../packages/types/src/workflow/common.ts",
			"qualifiedName": "__type.relations"
		},
		"30308": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/index.ts",
			"qualifiedName": ""
		},
		"30309": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO"
		},
		"30310": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO.starts_at"
		},
		"30311": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO.ends_at"
		},
		"30312": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO.status"
		},
		"30313": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO.rules_count"
		},
		"30314": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO.rules"
		},
		"30315": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO.prices"
		},
		"30316": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type"
		},
		"30317": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type.amount"
		},
		"30318": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type.currency_code"
		},
		"30319": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type.region_id"
		},
		"30320": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type.max_quantity"
		},
		"30321": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type.min_quantity"
		},
		"30322": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO.customer_groups"
		},
		"30323": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type"
		},
		"30324": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type.id"
		},
		"30325": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListRuleDTO"
		},
		"30326": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListRuleDTO.rule_attribute"
		},
		"30327": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListRuleDTO.value"
		},
		"30328": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO"
		},
		"30329": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.amount"
		},
		"30330": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.currency_code"
		},
		"30331": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.price_set_id"
		},
		"30332": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.region_id"
		},
		"30333": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.max_quantity"
		},
		"30334": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.min_quantity"
		},
		"30335": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowInputDTO"
		},
		"30336": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowInputDTO.price_lists"
		},
		"30337": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListProductsWorkflowInputDTO"
		},
		"30338": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListProductsWorkflowInputDTO.product_ids"
		},
		"30339": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListProductsWorkflowInputDTO.price_list_id"
		},
		"30340": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListVariantsWorkflowInputDTO"
		},
		"30341": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListVariantsWorkflowInputDTO.variant_ids"
		},
		"30342": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListVariantsWorkflowInputDTO.price_list_id"
		},
		"30343": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListPricesWorkflowInputDTO"
		},
		"30344": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListPricesWorkflowInputDTO.money_amount_ids"
		},
		"30345": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListPricesWorkflowInputDTO.price_list_id"
		},
		"30346": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO"
		},
		"30347": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.title"
		},
		"30348": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.name"
		},
		"30349": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.description"
		},
		"30350": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.type"
		},
		"30351": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.starts_at"
		},
		"30352": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.ends_at"
		},
		"30353": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.status"
		},
		"30354": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.rules_count"
		},
		"30355": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.prices"
		},
		"30356": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.rules"
		},
		"30357": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/remove-price-list.ts",
			"qualifiedName": "RemovePriceListWorkflowInputDTO"
		},
		"30358": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/remove-price-list.ts",
			"qualifiedName": "RemovePriceListWorkflowInputDTO.price_lists"
		},
		"30359": {
			"sourceFileName": "../../../packages/types/src/workflow/invite/index.ts",
			"qualifiedName": ""
		},
		"30360": {
			"sourceFileName": "../../../packages/types/src/workflow/invite/create-invite.ts",
			"qualifiedName": "CreateInvitesWorkflowInputDTO"
		},
		"30361": {
			"sourceFileName": "../../../packages/types/src/workflow/invite/create-invite.ts",
			"qualifiedName": "CreateInvitesWorkflowInputDTO.invites"
		},
		"30362": {
			"sourceFileName": "../../../packages/types/src/workflow/invite/delete-invite.ts",
			"qualifiedName": "DeleteInvitesWorkflowInput"
		},
		"30363": {
			"sourceFileName": "../../../packages/types/src/workflow/invite/delete-invite.ts",
			"qualifiedName": "DeleteInvitesWorkflowInput.ids"
		},
		"30364": {
			"sourceFileName": "../../../packages/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "AcceptInviteWorkflowInputDTO"
		},
		"30365": {
			"sourceFileName": "../../../packages/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "AcceptInviteWorkflowInputDTO.invite_token"
		},
		"30366": {
			"sourceFileName": "../../../packages/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "AcceptInviteWorkflowInputDTO.auth_user_id"
		},
		"30367": {
			"sourceFileName": "../../../packages/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "AcceptInviteWorkflowInputDTO.user"
		},
		"30368": {
			"sourceFileName": "../../../packages/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "__type"
		},
		"30369": {
			"sourceFileName": "../../../packages/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "__type.email"
		},
		"30370": {
			"sourceFileName": "../../../packages/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "__type.first_name"
		},
		"30371": {
			"sourceFileName": "../../../packages/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "__type.last_name"
		},
		"30372": {
			"sourceFileName": "../../../packages/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "__type.avatar_url"
		},
		"30373": {
			"sourceFileName": "../../../packages/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "__type.metadata"
		},
		"30374": {
			"sourceFileName": "../../../packages/types/src/workflow/invite/resend-invite.ts",
			"qualifiedName": "ResendInvitesWorkflowInputDTO"
		},
		"30375": {
			"sourceFileName": "../../../packages/types/src/workflow/invite/resend-invite.ts",
			"qualifiedName": "ResendInvitesWorkflowInputDTO.invite_ids"
		},
		"30376": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "FileServiceUploadResult"
		},
		"30377": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.url"
		},
		"30378": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.key"
		},
		"30379": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "FileServiceGetUploadStreamResult"
		},
		"30380": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.writeStream"
		},
		"30381": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.promise"
		},
		"30382": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.url"
		},
		"30383": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.fileKey"
		},
		"30384": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "GetUploadedFileType"
		},
		"30385": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.fileKey"
		},
		"30386": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.isPrivate"
		},
		"30387": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "DeleteFileType"
		},
		"30388": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.fileKey"
		},
		"30389": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "UploadStreamDescriptorType"
		},
		"30390": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.name"
		},
		"30391": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.ext"
		},
		"30392": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.isPrivate"
		},
		"30393": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerRelationship"
		},
		"30394": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"30395": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.alias"
		},
		"30396": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.foreignKey"
		},
		"30397": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.primaryKey"
		},
		"30398": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"30399": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.isInternalService"
		},
		"30400": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.inverse"
		},
		"30401": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.isList"
		},
		"30402": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.args"
		},
		"30403": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias"
		},
		"30404": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.name"
		},
		"30405": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.args"
		},
		"30406": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig"
		},
		"30407": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.serviceName"
		},
		"30408": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.alias"
		},
		"30409": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.fieldAlias"
		},
		"30410": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"30411": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.path"
		},
		"30412": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"30413": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.primaryKeys"
		},
		"30414": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.relationships"
		},
		"30415": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.extends"
		},
		"30416": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"30417": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"30418": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"30419": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.args"
		},
		"30420": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerArgument"
		},
		"30421": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerArgument.name"
		},
		"30422": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerArgument.value"
		},
		"30423": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerDirective"
		},
		"30424": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerDirective.name"
		},
		"30425": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerDirective.value"
		},
		"30426": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery"
		},
		"30427": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery.service"
		},
		"30428": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery.alias"
		},
		"30429": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery.expands"
		},
		"30430": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"30431": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.property"
		},
		"30432": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.fields"
		},
		"30433": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.args"
		},
		"30434": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.directives"
		},
		"30435": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"30436": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.__index"
		},
		"30438": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery.fields"
		},
		"30439": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery.args"
		},
		"30440": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery.directives"
		},
		"30441": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"30442": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.__index"
		},
		"30444": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerOptions"
		},
		"30445": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerOptions.throwIfKeyNotFound"
		},
		"30446": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerOptions.throwIfRelationNotFound"
		},
		"30447": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteNestedExpands"
		},
		"30448": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteNestedExpands.__index"
		},
		"30450": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"30451": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.fields"
		},
		"30452": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.args"
		},
		"30453": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.expands"
		},
		"30454": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty"
		},
		"30455": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.property"
		},
		"30456": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.parent"
		},
		"30457": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.parentConfig"
		},
		"30458": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.serviceConfig"
		},
		"30459": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.fields"
		},
		"30460": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.args"
		},
		"30461": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.expands"
		},
		"30462": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule"
		},
		"30463": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule.list"
		},
		"30464": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule.list"
		},
		"30465": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "filters"
		},
		"30466": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "config"
		},
		"30467": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "sharedContext"
		},
		"30468": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule.listAndCount"
		},
		"30469": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule.listAndCount"
		},
		"30470": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "filters"
		},
		"30471": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "config"
		},
		"30472": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "sharedContext"
		},
		"30473": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule.create"
		},
		"30474": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule.create"
		},
		"30475": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "primaryKeyOrBulkData"
		},
		"30476": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "foreignKeyData"
		},
		"30477": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "sharedContext"
		},
		"30478": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule.dismiss"
		},
		"30479": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule.dismiss"
		},
		"30480": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "primaryKeyOrBulkData"
		},
		"30481": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "foreignKeyData"
		},
		"30482": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "sharedContext"
		},
		"30483": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule.delete"
		},
		"30484": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule.delete"
		},
		"30485": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "data"
		},
		"30486": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "sharedContext"
		},
		"30487": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule.softDelete"
		},
		"30488": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule.softDelete"
		},
		"30489": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "data"
		},
		"30490": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "config"
		},
		"30491": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "sharedContext"
		},
		"30492": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule.restore"
		},
		"30493": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "ILinkModule.restore"
		},
		"30494": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "data"
		},
		"30495": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "config"
		},
		"30496": {
			"sourceFileName": "../../../packages/types/src/link-modules/index.ts",
			"qualifiedName": "sharedContext"
		},
		"30507": {
			"sourceFileName": "../../../packages/types/src/product-category/repository.ts",
			"qualifiedName": "ProductCategoryTransformOptions"
		},
		"30508": {
			"sourceFileName": "../../../packages/types/src/product-category/repository.ts",
			"qualifiedName": "ProductCategoryTransformOptions.includeDescendantsTree"
		},
		"30509": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "SharedContext"
		},
		"30510": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionManager"
		},
		"30511": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.manager"
		},
		"30512": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat"
		},
		"30513": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.groupBy"
		},
		"30514": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.sortBy"
		},
		"30515": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type"
		},
		"30516": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.__index"
		},
		"30518": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator"
		},
		"30519": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"30520": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"30521": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "msg"
		},
		"30522": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"30523": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"30524": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "format"
		},
		"30525": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"30526": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"30527": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"30528": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"30529": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "T"
		},
		"30530": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "messageData"
		},
		"30531": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "options"
		},
		"30532": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "Context"
		},
		"30533": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.__type"
		},
		"30534": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionManager"
		},
		"30535": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.manager"
		},
		"30536": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"30537": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"30538": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"30539": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionId"
		},
		"30540": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.messageAggregator"
		},
		"30541": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.requestId"
		},
		"30542": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.idempotencyKey"
		},
		"30543": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "TManager"
		},
		"30544": {
			"sourceFileName": "../../../packages/types/src/totals/big-number.ts",
			"qualifiedName": "BigNumberRawValue"
		},
		"30545": {
			"sourceFileName": "../../../packages/types/src/totals/big-number.ts",
			"qualifiedName": "__type"
		},
		"30546": {
			"sourceFileName": "../../../packages/types/src/totals/big-number.ts",
			"qualifiedName": "__type.value"
		},
		"30547": {
			"sourceFileName": "../../../packages/types/src/totals/big-number.ts",
			"qualifiedName": "__type.__index"
		},
		"30549": {
			"sourceFileName": "../../../packages/types/src/totals/big-number.ts",
			"qualifiedName": "BigNumberInput"
		},
		"30550": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "SessionOptions"
		},
		"30551": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.name"
		},
		"30552": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.resave"
		},
		"30553": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.rolling"
		},
		"30554": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.saveUninitialized"
		},
		"30555": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.secret"
		},
		"30556": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.ttl"
		},
		"30557": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "PrevLimit"
		},
		"30558": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "Query"
		},
		"30559": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"30560": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "ExpandScalar"
		},
		"30561": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"30562": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "Order"
		},
		"30563": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"30564": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "Dictionary"
		},
		"30565": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"30566": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"30568": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"30569": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService"
		},
		"30570": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.transaction"
		},
		"30571": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.transaction"
		},
		"30572": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"30573": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "task"
		},
		"30574": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"30575": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"30576": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "transactionManager"
		},
		"30577": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"30578": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"30579": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"30580": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.transaction"
		},
		"30581": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"30582": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getFreshManager"
		},
		"30583": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getFreshManager"
		},
		"30584": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"30585": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getActiveManager"
		},
		"30586": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getActiveManager"
		},
		"30587": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"30588": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.serialize"
		},
		"30589": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.serialize"
		},
		"30590": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TOutput"
		},
		"30591": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"30592": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"30593": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.T"
		},
		"30594": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateGeoZoneBaseDTO"
		},
		"30595": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateGeoZoneBaseDTO.type"
		},
		"30596": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateGeoZoneBaseDTO.service_zone_id"
		},
		"30597": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateGeoZoneBaseDTO.country_code"
		},
		"30598": {
			"sourceFileName": "../../../packages/types/src/fulfillment/mutations/geo-zone.ts",
			"qualifiedName": "CreateGeoZoneBaseDTO.metadata"
		},
		"30599": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleDeclaration"
		},
		"30600": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice"
		},
		"30601": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice.region_id"
		},
		"30602": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice.currency_code"
		},
		"30603": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice.amount"
		},
		"30604": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice.variant_id"
		},
		"30605": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice.min_quantity"
		},
		"30606": {
			"sourceFileName": "../../../packages/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice.max_quantity"
		},
		"30607": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "Scalar"
		},
		"30608": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"30609": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.toHexString"
		},
		"30610": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.toHexString"
		},
		"30611": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "FilterValue"
		},
		"30612": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"30613": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "FilterValue2"
		},
		"30614": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"30615": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "Primary"
		},
		"30616": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"30617": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.[PrimaryKeyType]"
		},
		"30618": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"30619": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type._id"
		},
		"30620": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"30621": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.uuid"
		},
		"30622": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"30623": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.id"
		},
		"30624": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"30625": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "ReadonlyPrimary"
		},
		"30626": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		}
	}
}