{
	"id": 0,
	"name": "tax",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 151,
			"name": "FindConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to configure how an entity is retrieved from the database. It accepts as a typed parameter an "
					},
					{
						"kind": "code",
						"text": "`Entity`"
					},
					{
						"kind": "text",
						"text": " class,\nwhich provides correct typing of field names in its properties."
					}
				]
			},
			"children": [
				{
					"id": 152,
					"name": "select",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being attribute names of the entity to retrieve in the result."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": 162,
										"name": "Entity",
										"package": "@medusajs/types",
										"qualifiedName": "FindConfig.Entity",
										"refersToTypeParameter": true
									}
								}
							]
						}
					}
				},
				{
					"id": 153,
					"name": "skip",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A number indicating the number of records to skip before retrieving the results."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 154,
					"name": "take",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A number indicating the number of records to return in the result."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 155,
					"name": "relations",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being relation names of the entity to retrieve in the result."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 156,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to specify how to sort the returned records. Its keys are the names of attributes of the entity, and a key's value can either be "
							},
							{
								"kind": "code",
								"text": "`ASC`"
							},
							{
								"kind": "text",
								"text": "\nto sort retrieved records in an ascending order, or "
							},
							{
								"kind": "code",
								"text": "`DESC`"
							},
							{
								"kind": "text",
								"text": " to sort retrieved records in a descending order."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 157,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"indexSignature": {
								"id": 158,
								"name": "__index",
								"variant": "signature",
								"kind": 8192,
								"flags": {},
								"parameters": [
									{
										"id": 159,
										"name": "K",
										"variant": "param",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "ASC"
										},
										{
											"type": "literal",
											"value": "DESC"
										}
									]
								}
							}
						}
					}
				},
				{
					"id": 160,
					"name": "withDeleted",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean indicating whether deleted records should also be retrieved as part of the result. This only works if the entity extends the\n"
							},
							{
								"kind": "code",
								"text": "`SoftDeletableEntity`"
							},
							{
								"kind": "text",
								"text": " class."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 161,
					"name": "filters",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Enable ORM specific defined filters"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						152,
						153,
						154,
						155,
						156,
						160,
						161
					]
				}
			],
			"typeParameters": [
				{
					"id": 162,
					"name": "Entity",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 378,
			"name": "BaseFilterable",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object used to allow specifying flexible queries with and/or conditions."
					}
				]
			},
			"children": [
				{
					"id": 379,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 378,
									"typeArguments": [
										{
											"type": "reference",
											"target": 381,
											"name": "T",
											"package": "@medusajs/types",
											"qualifiedName": "BaseFilterable.T",
											"refersToTypeParameter": true
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 381,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "BaseFilterable.T",
									"refersToTypeParameter": true
								}
							]
						}
					}
				},
				{
					"id": 380,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 378,
									"typeArguments": [
										{
											"type": "reference",
											"target": 381,
											"name": "T",
											"package": "@medusajs/types",
											"qualifiedName": "BaseFilterable.T",
											"refersToTypeParameter": true
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 381,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "BaseFilterable.T",
									"refersToTypeParameter": true
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						379,
						380
					]
				}
			],
			"typeParameters": [
				{
					"id": 381,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 188,
					"name": "FilterableTaxRateProps"
				},
				{
					"type": "reference",
					"target": 250,
					"name": "FilterableTaxRegionProps"
				},
				{
					"type": "reference",
					"target": 277,
					"name": "FilterableTaxRateRuleProps"
				}
			]
		},
		{
			"id": 334,
			"name": "SoftDeleteReturn",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
					}
				]
			},
			"children": [
				{
					"id": 335,
					"name": "returnLinkableKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being the ID attribute names of the entity's relations."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 336,
							"name": "TReturnableLinkableKeys",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						335
					]
				}
			],
			"typeParameters": [
				{
					"id": 336,
					"name": "TReturnableLinkableKeys",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 225,
			"name": "RestoreReturn",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to specify an entity's related entities that should be restored when the main entity is restored."
					}
				]
			},
			"children": [
				{
					"id": 226,
					"name": "returnLinkableKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being the ID attribute names of the entity's relations."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 227,
							"name": "TReturnableLinkableKeys",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						226
					]
				}
			],
			"typeParameters": [
				{
					"id": 227,
					"name": "TReturnableLinkableKeys",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 451,
			"name": "Query",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 452,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 452,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "intrinsic",
					"name": "object"
				},
				"trueType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 452,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reference",
						"target": 478,
						"name": "Scalar",
						"package": "@medusajs/types"
					},
					"trueType": {
						"type": "intrinsic",
						"name": "never"
					},
					"falseType": {
						"type": "reference",
						"target": 482,
						"typeArguments": [
							{
								"type": "reference",
								"target": 452,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterQuery",
						"package": "@medusajs/types"
					}
				},
				"falseType": {
					"type": "reference",
					"target": 488,
					"typeArguments": [
						{
							"type": "reference",
							"target": 452,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "FilterValue",
					"package": "@medusajs/types"
				}
			}
		},
		{
			"id": 453,
			"name": "ExpandScalar",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 454,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": null
					},
					{
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 454,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "intrinsic",
							"name": "string"
						},
						"trueType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "RegExp"
									},
									"name": "RegExp",
									"package": "typescript"
								}
							]
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 454,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							},
							"trueType": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"falseType": {
								"type": "reference",
								"target": 454,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					}
				]
			}
		},
		{
			"id": 478,
			"name": "Scalar",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "boolean"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "intrinsic",
						"name": "bigint"
					},
					{
						"type": "intrinsic",
						"name": "symbol"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "RegExp"
						},
						"name": "RegExp",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/node/buffer.d.ts",
							"qualifiedName": "__global.Buffer"
						},
						"name": "Buffer",
						"package": "@types/node",
						"qualifiedName": "__global.Buffer"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 479,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 480,
									"name": "toHexString",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"signatures": [
										{
											"id": 481,
											"name": "toHexString",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"children": [
										480
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 503,
			"name": "ReadonlyPrimary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 504,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 504,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "array",
					"elementType": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				"trueType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Readonly"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": 504,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "Readonly",
					"package": "typescript"
				},
				"falseType": {
					"type": "reference",
					"target": 504,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				}
			}
		},
		{
			"id": 493,
			"name": "Primary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 502,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 502,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reflection",
					"declaration": {
						"id": 494,
						"name": "__type",
						"variant": "declaration",
						"kind": 65536,
						"flags": {},
						"children": [
							{
								"id": 495,
								"name": "[PrimaryKeyType]",
								"variant": "declaration",
								"kind": 1024,
								"flags": {
									"isOptional": true
								},
								"type": {
									"type": "inferred",
									"name": "PK"
								}
							}
						],
						"groups": [
							{
								"title": "Properties",
								"children": [
									495
								]
							}
						]
					}
				},
				"trueType": {
					"type": "reference",
					"target": 503,
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../packages/types/src/dal/utils.ts",
								"qualifiedName": "PK"
							},
							"name": "PK",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "ReadonlyPrimary",
					"package": "@medusajs/types"
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 502,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reflection",
						"declaration": {
							"id": 496,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 497,
									"name": "_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "inferred",
										"name": "PK"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										497
									]
								}
							]
						}
					},
					"trueType": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 503,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/types/src/dal/utils.ts",
											"qualifiedName": "PK"
										},
										"name": "PK",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ReadonlyPrimary",
								"package": "@medusajs/types"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"falseType": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 502,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "reflection",
							"declaration": {
								"id": 498,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 499,
										"name": "uuid",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"type": {
											"type": "inferred",
											"name": "PK"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											499
										]
									}
								]
							}
						},
						"trueType": {
							"type": "reference",
							"target": 503,
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../../packages/types/src/dal/utils.ts",
										"qualifiedName": "PK"
									},
									"name": "PK",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "ReadonlyPrimary",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 502,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reflection",
								"declaration": {
									"id": 500,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 501,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "inferred",
												"name": "PK"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												501
											]
										}
									]
								}
							},
							"trueType": {
								"type": "reference",
								"target": 503,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/types/src/dal/utils.ts",
											"qualifiedName": "PK"
										},
										"name": "PK",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ReadonlyPrimary",
								"package": "@medusajs/types"
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					}
				}
			}
		},
		{
			"id": 382,
			"name": "OperatorMap",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 403,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 383,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 384,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 451,
									"typeArguments": [
										{
											"type": "reference",
											"target": 403,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "Query",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 385,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 451,
									"typeArguments": [
										{
											"type": "reference",
											"target": 403,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "Query",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 386,
							"name": "$eq",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 453,
										"typeArguments": [
											{
												"type": "reference",
												"target": 403,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "ExpandScalar",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 453,
											"typeArguments": [
												{
													"type": "reference",
													"target": 403,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "ExpandScalar",
											"package": "@medusajs/types"
										}
									}
								]
							}
						},
						{
							"id": 387,
							"name": "$ne",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 453,
								"typeArguments": [
									{
										"type": "reference",
										"target": 403,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 388,
							"name": "$in",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 453,
									"typeArguments": [
										{
											"type": "reference",
											"target": 403,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "ExpandScalar",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 389,
							"name": "$nin",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 453,
									"typeArguments": [
										{
											"type": "reference",
											"target": 403,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "ExpandScalar",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 390,
							"name": "$not",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 451,
								"typeArguments": [
									{
										"type": "reference",
										"target": 403,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "Query",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 391,
							"name": "$gt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 453,
								"typeArguments": [
									{
										"type": "reference",
										"target": 403,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 392,
							"name": "$gte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 453,
								"typeArguments": [
									{
										"type": "reference",
										"target": 403,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 393,
							"name": "$lt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 453,
								"typeArguments": [
									{
										"type": "reference",
										"target": 403,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 394,
							"name": "$lte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 453,
								"typeArguments": [
									{
										"type": "reference",
										"target": 403,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 395,
							"name": "$like",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 396,
							"name": "$re",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 397,
							"name": "$ilike",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 398,
							"name": "$fulltext",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 399,
							"name": "$overlap",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 400,
							"name": "$contains",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 401,
							"name": "$contained",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 402,
							"name": "$exists",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								384,
								385,
								386,
								387,
								388,
								389,
								390,
								391,
								392,
								393,
								394,
								395,
								396,
								397,
								398,
								399,
								400,
								401,
								402
							]
						}
					]
				}
			}
		},
		{
			"id": 491,
			"name": "FilterValue2",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 492,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 492,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					{
						"type": "reference",
						"target": 453,
						"typeArguments": [
							{
								"type": "reference",
								"target": 492,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "ExpandScalar",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 493,
						"typeArguments": [
							{
								"type": "reference",
								"target": 492,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "Primary",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 488,
			"name": "FilterValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 489,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 382,
						"typeArguments": [
							{
								"type": "reference",
								"target": 491,
								"typeArguments": [
									{
										"type": "reference",
										"target": 489,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "FilterValue2",
								"package": "@medusajs/types"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 491,
						"typeArguments": [
							{
								"type": "reference",
								"target": 489,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterValue2",
						"package": "@medusajs/types"
					},
					{
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 491,
							"typeArguments": [
								{
									"type": "reference",
									"target": 489,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "FilterValue2",
							"package": "@medusajs/types"
						}
					},
					{
						"type": "literal",
						"value": null
					}
				]
			}
		},
		{
			"id": 490,
			"name": "PrevLimit",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "tuple",
				"elements": [
					{
						"type": "intrinsic",
						"name": "never"
					},
					{
						"type": "literal",
						"value": 1
					},
					{
						"type": "literal",
						"value": 2
					},
					{
						"type": "literal",
						"value": 3
					}
				]
			}
		},
		{
			"id": 482,
			"name": "FilterQuery",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 486,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 487,
					"name": "Prev",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"default": {
						"type": "literal",
						"value": 3
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 487,
					"name": "Prev",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "intrinsic",
					"name": "never"
				},
				"trueType": {
					"type": "intrinsic",
					"name": "never"
				},
				"falseType": {
					"type": "mapped",
					"parameter": "Key",
					"parameterType": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "reference",
							"target": 486,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					},
					"templateType": {
						"type": "conditional",
						"checkType": {
							"type": "indexedAccess",
							"indexType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/types/src/dal/utils.ts",
									"qualifiedName": "Key"
								},
								"name": "Key",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"objectType": {
								"type": "reference",
								"target": 486,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						"extendsType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "boolean"
								},
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "intrinsic",
									"name": "bigint"
								},
								{
									"type": "intrinsic",
									"name": "symbol"
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Date"
									},
									"name": "Date",
									"package": "typescript"
								}
							]
						},
						"trueType": {
							"type": "union",
							"types": [
								{
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/types/src/dal/utils.ts",
											"qualifiedName": "Key"
										},
										"name": "Key",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"objectType": {
										"type": "reference",
										"target": 486,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								{
									"type": "reference",
									"target": 382,
									"typeArguments": [
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/types/src/dal/utils.ts",
													"qualifiedName": "Key"
												},
												"name": "Key",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 486,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									],
									"name": "OperatorMap",
									"package": "@medusajs/types"
								}
							]
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../packages/types/src/dal/utils.ts",
										"qualifiedName": "Key"
									},
									"name": "Key",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"objectType": {
									"type": "reference",
									"target": 486,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							},
							"extendsType": {
								"type": "inferred",
								"name": "U"
							},
							"trueType": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../packages/types/src/dal/utils.ts",
										"qualifiedName": "U"
									},
									"name": "U",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"extendsType": {
									"type": "reflection",
									"declaration": {
										"id": 483,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"indexSignature": {
											"id": 484,
											"name": "__index",
											"variant": "signature",
											"kind": 8192,
											"flags": {},
											"parameters": [
												{
													"id": 485,
													"name": "x",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "inferred",
												"name": "V"
											}
										}
									}
								},
								"trueType": {
									"type": "conditional",
									"checkType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/types/src/dal/utils.ts",
											"qualifiedName": "V"
										},
										"name": "V",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"extendsType": {
										"type": "intrinsic",
										"name": "object"
									},
									"trueType": {
										"type": "reference",
										"target": 482,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Partial"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/types/src/dal/utils.ts",
															"qualifiedName": "V"
														},
														"name": "V",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "Partial",
												"package": "typescript"
											},
											{
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": 487,
													"name": "Prev",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 490,
													"name": "PrevLimit",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "FilterQuery",
										"package": "@medusajs/types"
									},
									"falseType": {
										"type": "intrinsic",
										"name": "never"
									}
								},
								"falseType": {
									"type": "intrinsic",
									"name": "never"
								}
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					},
					"optionalModifier": "+"
				}
			}
		},
		{
			"id": 468,
			"name": "MessageBody",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 477,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 469,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 470,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 471,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 472,
											"name": "service",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 473,
											"name": "action",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 474,
											"name": "object",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 475,
											"name": "eventGroupId",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												472,
												473,
												474,
												475
											]
										}
									]
								}
							}
						},
						{
							"id": 476,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 477,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								470,
								476
							]
						}
					]
				}
			}
		},
		{
			"id": 428,
			"name": "Message",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 433,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 429,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 430,
							"name": "eventName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 431,
							"name": "body",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 468,
								"typeArguments": [
									{
										"type": "reference",
										"target": 433,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "MessageBody",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 432,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								430,
								431,
								432
							]
						}
					]
				}
			}
		},
		{
			"id": 440,
			"name": "MessageFormat",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 450,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 441,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 442,
							"name": "eventName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 443,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 444,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 445,
											"name": "service",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 446,
											"name": "action",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 447,
											"name": "object",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 448,
											"name": "eventGroupId",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												445,
												446,
												447,
												448
											]
										}
									]
								}
							}
						},
						{
							"id": 449,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 450,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 450,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								442,
								443,
								449
							]
						}
					]
				}
			}
		},
		{
			"id": 458,
			"name": "JoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 459,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 460,
							"name": "alias",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 461,
							"name": "foreignKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 462,
							"name": "primaryKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 463,
							"name": "serviceName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 464,
							"name": "isInternalService",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the relationship is an internal service from the medusa core\nTODO: Remove when there are no more \"internal\" services"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 465,
							"name": "inverse",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "In an inverted relationship the foreign key is on the other service and the primary key is on the current service"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 466,
							"name": "isList",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Force the relationship to return a list"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 467,
							"name": "args",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Extra arguments to pass to the remoteFetchData callback"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								460,
								461,
								462,
								463,
								464,
								465,
								466,
								467
							]
						}
					]
				}
			}
		},
		{
			"id": 455,
			"name": "JoinerServiceConfigAlias",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 456,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 457,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						456,
						457
					]
				}
			]
		},
		{
			"id": 410,
			"name": "JoinerServiceConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 411,
					"name": "serviceName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 412,
					"name": "alias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Property name to use as entrypoint to the service"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 455,
								"name": "JoinerServiceConfigAlias",
								"package": "@medusajs/types"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 455,
									"name": "JoinerServiceConfigAlias",
									"package": "@medusajs/types"
								}
							}
						]
					}
				},
				{
					"id": 413,
					"name": "fieldAlias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "alias for deeper nested relationships (e.g. { 'price': 'prices.calculated_price_set.amount' })"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 414,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 415,
													"name": "path",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 416,
													"name": "forwardArgumentsOnPath",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														415,
														416
													]
												}
											]
										}
									}
								]
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 417,
					"name": "primaryKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 418,
					"name": "relationships",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 458,
							"name": "JoinerRelationship",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 419,
					"name": "extends",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 420,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 421,
										"name": "serviceName",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 422,
										"name": "relationship",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "reference",
											"target": 458,
											"name": "JoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											421,
											422
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 423,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						411,
						412,
						413,
						417,
						418,
						419,
						423
					]
				}
			]
		},
		{
			"id": 337,
			"name": "ModuleJoinerConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 410,
								"name": "JoinerServiceConfig",
								"package": "@medusajs/types"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "serviceName"
									},
									{
										"type": "literal",
										"value": "primaryKeys"
									},
									{
										"type": "literal",
										"value": "relationships"
									},
									{
										"type": "literal",
										"value": "extends"
									}
								]
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 338,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 339,
									"name": "schema",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "GraphQL schema for the all module's available entities and fields"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 340,
									"name": "relationships",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 424,
											"name": "ModuleJoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 341,
									"name": "extends",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 342,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 343,
														"name": "serviceName",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 344,
														"name": "fieldAlias",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "Record"
															},
															"typeArguments": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "reflection",
																			"declaration": {
																				"id": 345,
																				"name": "__type",
																				"variant": "declaration",
																				"kind": 65536,
																				"flags": {},
																				"children": [
																					{
																						"id": 346,
																						"name": "path",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					},
																					{
																						"id": 347,
																						"name": "forwardArgumentsOnPath",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {},
																						"type": {
																							"type": "array",
																							"elementType": {
																								"type": "intrinsic",
																								"name": "string"
																							}
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"children": [
																							346,
																							347
																						]
																					}
																				]
																			}
																		}
																	]
																}
															],
															"name": "Record",
															"package": "typescript"
														}
													},
													{
														"id": 348,
														"name": "relationship",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": 424,
															"name": "ModuleJoinerRelationship",
															"package": "@medusajs/types"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															343,
															344,
															348
														]
													}
												]
											}
										}
									}
								},
								{
									"id": 349,
									"name": "serviceName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 350,
									"name": "primaryKeys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 351,
									"name": "isLink",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If the module is a link module"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 352,
									"name": "linkableKeys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Keys that can be used to link to other modules. e.g { product_id: \"Product\" } \"Product\" being the entity it refers to"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 353,
									"name": "isReadOnlyLink",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true it expands a RemoteQuery property but doesn't create a pivot table"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 354,
									"name": "databaseConfig",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 355,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 356,
													"name": "tableName",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Name of the pivot table. If not provided it is auto generated"
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 357,
													"name": "idPrefix",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Prefix for the id column. If not provided it is \"link\""
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 358,
													"name": "extraFields",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 359,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 360,
																			"name": "type",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": "date"
																					},
																					{
																						"type": "literal",
																						"value": "time"
																					},
																					{
																						"type": "literal",
																						"value": "datetime"
																					},
																					{
																						"type": "literal",
																						"value": "bigint"
																					},
																					{
																						"type": "literal",
																						"value": "blob"
																					},
																					{
																						"type": "literal",
																						"value": "uint8array"
																					},
																					{
																						"type": "literal",
																						"value": "array"
																					},
																					{
																						"type": "literal",
																						"value": "enumArray"
																					},
																					{
																						"type": "literal",
																						"value": "enum"
																					},
																					{
																						"type": "literal",
																						"value": "json"
																					},
																					{
																						"type": "literal",
																						"value": "integer"
																					},
																					{
																						"type": "literal",
																						"value": "smallint"
																					},
																					{
																						"type": "literal",
																						"value": "tinyint"
																					},
																					{
																						"type": "literal",
																						"value": "mediumint"
																					},
																					{
																						"type": "literal",
																						"value": "float"
																					},
																					{
																						"type": "literal",
																						"value": "double"
																					},
																					{
																						"type": "literal",
																						"value": "boolean"
																					},
																					{
																						"type": "literal",
																						"value": "decimal"
																					},
																					{
																						"type": "literal",
																						"value": "string"
																					},
																					{
																						"type": "literal",
																						"value": "uuid"
																					},
																					{
																						"type": "literal",
																						"value": "text"
																					}
																				]
																			}
																		},
																		{
																			"id": 361,
																			"name": "defaultValue",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 362,
																			"name": "nullable",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "boolean"
																			}
																		},
																		{
																			"id": 363,
																			"name": "options",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "Mikro-orm options for the column"
																					}
																				]
																			},
																			"type": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																					"qualifiedName": "Record"
																				},
																				"typeArguments": [
																					{
																						"type": "intrinsic",
																						"name": "string"
																					},
																					{
																						"type": "intrinsic",
																						"name": "unknown"
																					}
																				],
																				"name": "Record",
																				"package": "typescript"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				360,
																				361,
																				362,
																				363
																			]
																		}
																	]
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														356,
														357,
														358
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										339,
										340,
										341,
										349,
										350,
										351,
										352,
										353,
										354
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 424,
			"name": "ModuleJoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 458,
						"name": "JoinerRelationship",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 425,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 426,
									"name": "isInternalService",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true, the relationship is an internal service from the medusa core TODO: Remove when there are no more \"internal\" services"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 427,
									"name": "deleteCascade",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true, the link joiner will cascade deleting the relationship"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										426,
										427
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 140,
			"name": "IModuleService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"extendedBy": [
				{
					"type": "reference",
					"target": 1,
					"name": "ITaxModuleService"
				}
			]
		},
		{
			"id": 434,
			"name": "MessageAggregatorFormat",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 435,
					"name": "groupBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 436,
					"name": "sortBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 437,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"indexSignature": {
								"id": 438,
								"name": "__index",
								"variant": "signature",
								"kind": 8192,
								"flags": {},
								"parameters": [
									{
										"id": 439,
										"name": "key",
										"variant": "param",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "union",
									"types": [
										{
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "number"
										}
									]
								}
							}
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						435,
						436
					]
				}
			]
		},
		{
			"id": 364,
			"name": "IMessageAggregator",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 365,
					"name": "save",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 366,
							"name": "save",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 367,
									"name": "msg",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 428,
												"name": "Message",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 428,
													"name": "Message",
													"package": "@medusajs/types"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 368,
					"name": "getMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 369,
							"name": "getMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 370,
									"name": "format",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 434,
										"name": "MessageAggregatorFormat",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 428,
											"name": "Message",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 371,
					"name": "clearMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 372,
							"name": "clearMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 373,
					"name": "saveRawMessageData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 374,
							"name": "saveRawMessageData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameter": [
								{
									"id": 375,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 376,
									"name": "messageData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 440,
												"typeArguments": [
													{
														"type": "reference",
														"target": 375,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "MessageFormat",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 440,
													"typeArguments": [
														{
															"type": "reference",
															"target": 375,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													],
													"name": "MessageFormat",
													"package": "@medusajs/types"
												}
											}
										]
									}
								},
								{
									"id": 377,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						365,
						368,
						371,
						373
					]
				}
			]
		},
		{
			"id": 176,
			"name": "Context",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A context used to share resources, such as transaction manager, between the application and the module."
					}
				]
			},
			"children": [
				{
					"id": 177,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "literal",
						"value": "MedusaContext"
					}
				},
				{
					"id": 178,
					"name": "transactionManager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a transaction manager of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`transactionManager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 187,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 179,
					"name": "manager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a manager, typically an entity manager, of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`manager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 187,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 180,
					"name": "isolationLevel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the isolation level of the context. Possible values are "
							},
							{
								"kind": "code",
								"text": "`READ UNCOMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`READ COMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`REPEATABLE READ`"
							},
							{
								"kind": "text",
								"text": ", or "
							},
							{
								"kind": "code",
								"text": "`SERIALIZABLE`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 181,
					"name": "enableNestedTransactions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean value indicating whether nested transactions are enabled."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 182,
					"name": "eventGroupId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the group to aggregate the events to be emitted at a later point."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 183,
					"name": "transactionId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current transaction."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 184,
					"name": "messageAggregator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a message aggregator, which is used to aggregate messages to be emitted at a later point."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 364,
						"name": "IMessageAggregator",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 185,
					"name": "requestId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current request."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 186,
					"name": "idempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the idempotencyKey of the current workflow execution."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						177,
						178,
						179,
						180,
						181,
						182,
						183,
						184,
						185,
						186
					]
				}
			],
			"typeParameters": [
				{
					"id": 187,
					"name": "TManager",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			]
		},
		{
			"id": 163,
			"name": "TaxRateDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 164,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Tax Rate."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 165,
					"name": "rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The numerical rate to charge."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 166,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code the tax rate is identified by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 167,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the Tax Rate. E.g. \"VAT\"."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 168,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 169,
					"name": "tax_region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The id of the Tax Region the rate is associated with."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 170,
					"name": "is_combinable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Flag to indicate if the Tax Rate should be combined with parent rates."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 171,
					"name": "is_default",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Flag to indicate if the Tax Rate is the default rate for the region."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 172,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the Tax Rate was created."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 173,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the Tax Rate was updated."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 174,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the Tax Rate was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 175,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the user that created the Tax Rate."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						164,
						165,
						166,
						167,
						168,
						169,
						170,
						171,
						172,
						173,
						174,
						175
					]
				}
			]
		},
		{
			"id": 188,
			"name": "FilterableTaxRateProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object used to allow specifying flexible queries with and/or conditions."
					}
				]
			},
			"children": [
				{
					"id": 197,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 188,
									"name": "FilterableTaxRateProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 378,
									"typeArguments": [
										{
											"type": "reference",
											"target": 188,
											"name": "FilterableTaxRateProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 379,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 198,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 188,
									"name": "FilterableTaxRateProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 378,
									"typeArguments": [
										{
											"type": "reference",
											"target": 188,
											"name": "FilterableTaxRateProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 380,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 189,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 190,
					"name": "tax_region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 191,
					"name": "rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							},
							{
								"type": "reference",
								"target": 382,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 192,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 382,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 193,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 382,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 194,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 382,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 195,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 382,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 196,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 382,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						197,
						198,
						189,
						190,
						191,
						192,
						193,
						194,
						195,
						196
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 378,
					"typeArguments": [
						{
							"type": "reference",
							"target": 188,
							"name": "FilterableTaxRateProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 240,
			"name": "TaxRegionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 241,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 242,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 243,
					"name": "province_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 244,
					"name": "parent_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 245,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 246,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 247,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 248,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 249,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						241,
						242,
						243,
						244,
						245,
						246,
						247,
						248,
						249
					]
				}
			]
		},
		{
			"id": 250,
			"name": "FilterableTaxRegionProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object used to allow specifying flexible queries with and/or conditions."
					}
				]
			},
			"children": [
				{
					"id": 259,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 250,
									"name": "FilterableTaxRegionProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 378,
									"typeArguments": [
										{
											"type": "reference",
											"target": 250,
											"name": "FilterableTaxRegionProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 379,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 260,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 250,
									"name": "FilterableTaxRegionProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 378,
									"typeArguments": [
										{
											"type": "reference",
											"target": 250,
											"name": "FilterableTaxRegionProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 380,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 251,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 252,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 382,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 253,
					"name": "province_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 382,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 254,
					"name": "parent_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 382,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 255,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": 382,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Record"
									},
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "unknown"
										}
									],
									"name": "Record",
									"package": "typescript"
								}
							}
						]
					}
				},
				{
					"id": 256,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 382,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 257,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 382,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 258,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 382,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						259,
						260,
						251,
						252,
						253,
						254,
						255,
						256,
						257,
						258
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 378,
					"typeArguments": [
						{
							"type": "reference",
							"target": 250,
							"name": "FilterableTaxRegionProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 267,
			"name": "TaxRateRuleDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 268,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 269,
					"name": "reference",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 270,
					"name": "reference_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 271,
					"name": "tax_rate_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 272,
					"name": "tax_rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 163,
						"name": "TaxRateDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 273,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 274,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 275,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 276,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						268,
						269,
						270,
						271,
						272,
						273,
						274,
						275,
						276
					]
				}
			]
		},
		{
			"id": 277,
			"name": "FilterableTaxRateRuleProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object used to allow specifying flexible queries with and/or conditions."
					}
				]
			},
			"children": [
				{
					"id": 286,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 277,
									"name": "FilterableTaxRateRuleProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 378,
									"typeArguments": [
										{
											"type": "reference",
											"target": 277,
											"name": "FilterableTaxRateRuleProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 379,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 287,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 277,
									"name": "FilterableTaxRateRuleProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 378,
									"typeArguments": [
										{
											"type": "reference",
											"target": 277,
											"name": "FilterableTaxRateRuleProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 380,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 278,
					"name": "reference",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 382,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 279,
					"name": "reference_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 382,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 280,
					"name": "tax_rate_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 382,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 281,
					"name": "tax_rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 188,
						"name": "FilterableTaxRateProps",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 282,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": 382,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Record"
									},
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "unknown"
										}
									],
									"name": "Record",
									"package": "typescript"
								}
							}
						]
					}
				},
				{
					"id": 283,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 382,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 284,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 382,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 285,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 382,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						286,
						287,
						278,
						279,
						280,
						281,
						282,
						283,
						284,
						285
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 378,
					"typeArguments": [
						{
							"type": "reference",
							"target": 277,
							"name": "FilterableTaxRateRuleProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 288,
			"name": "TaxableItemDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 289,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 290,
					"name": "product_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 291,
					"name": "product_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 292,
					"name": "product_category_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 293,
					"name": "product_categories",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 294,
					"name": "product_sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 295,
					"name": "product_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 296,
					"name": "product_type_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 297,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 298,
					"name": "unit_price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 299,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						289,
						290,
						291,
						292,
						293,
						294,
						295,
						296,
						297,
						298,
						299
					]
				}
			]
		},
		{
			"id": 300,
			"name": "TaxableShippingDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 301,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 302,
					"name": "shipping_option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 303,
					"name": "unit_price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 304,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						301,
						302,
						303,
						304
					]
				}
			]
		},
		{
			"id": 305,
			"name": "TaxCalculationContext",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 306,
					"name": "address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 307,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 308,
									"name": "country_code",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 309,
									"name": "province_code",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 310,
									"name": "address_1",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 311,
									"name": "address_2",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 312,
									"name": "city",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 313,
									"name": "postal_code",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										308,
										309,
										310,
										311,
										312,
										313
									]
								}
							]
						}
					}
				},
				{
					"id": 314,
					"name": "customer",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 315,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 316,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 317,
									"name": "email",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 318,
									"name": "customer_groups",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										316,
										317,
										318
									]
								}
							]
						}
					}
				},
				{
					"id": 319,
					"name": "is_return",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						306,
						314,
						319
					]
				}
			]
		},
		{
			"id": 404,
			"name": "TaxLineDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 405,
					"name": "rate_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 406,
					"name": "rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 407,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 408,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 409,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						405,
						406,
						407,
						408,
						409
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 320,
					"name": "ItemTaxLineDTO"
				},
				{
					"type": "reference",
					"target": 327,
					"name": "ShippingTaxLineDTO"
				}
			]
		},
		{
			"id": 320,
			"name": "ItemTaxLineDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 322,
					"name": "rate_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 405,
						"name": "TaxLineDTO.rate_id"
					}
				},
				{
					"id": 323,
					"name": "rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 406,
						"name": "TaxLineDTO.rate"
					}
				},
				{
					"id": 324,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 407,
						"name": "TaxLineDTO.code"
					}
				},
				{
					"id": 325,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 408,
						"name": "TaxLineDTO.name"
					}
				},
				{
					"id": 326,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 409,
						"name": "TaxLineDTO.provider_id"
					}
				},
				{
					"id": 321,
					"name": "line_item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						322,
						323,
						324,
						325,
						326,
						321
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 404,
					"name": "TaxLineDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 327,
			"name": "ShippingTaxLineDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 329,
					"name": "rate_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 405,
						"name": "TaxLineDTO.rate_id"
					}
				},
				{
					"id": 330,
					"name": "rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 406,
						"name": "TaxLineDTO.rate"
					}
				},
				{
					"id": 331,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 407,
						"name": "TaxLineDTO.code"
					}
				},
				{
					"id": 332,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 408,
						"name": "TaxLineDTO.name"
					}
				},
				{
					"id": 333,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 409,
						"name": "TaxLineDTO.provider_id"
					}
				},
				{
					"id": 328,
					"name": "shipping_line_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						329,
						330,
						331,
						332,
						333,
						328
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 404,
					"name": "TaxLineDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 199,
			"name": "CreateTaxRateDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 200,
					"name": "tax_region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 201,
					"name": "rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 202,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 203,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 204,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Omit"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 261,
									"name": "CreateTaxRateRuleDTO",
									"package": "@medusajs/types"
								},
								{
									"type": "literal",
									"value": "tax_rate_id"
								}
							],
							"name": "Omit",
							"package": "typescript"
						}
					}
				},
				{
					"id": 205,
					"name": "is_default",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 206,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 207,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						200,
						201,
						202,
						203,
						204,
						205,
						206,
						207
					]
				}
			]
		},
		{
			"id": 217,
			"name": "UpsertTaxRateDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 218,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 219,
					"name": "rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 220,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 221,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 222,
					"name": "is_default",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 223,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 224,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						218,
						219,
						220,
						221,
						222,
						223,
						224
					]
				}
			]
		},
		{
			"id": 208,
			"name": "UpdateTaxRateDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 209,
					"name": "rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 210,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 211,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 212,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Omit"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 261,
									"name": "CreateTaxRateRuleDTO",
									"package": "@medusajs/types"
								},
								{
									"type": "literal",
									"value": "tax_rate_id"
								}
							],
							"name": "Omit",
							"package": "typescript"
						}
					}
				},
				{
					"id": 213,
					"name": "is_default",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 214,
					"name": "is_combinable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 215,
					"name": "updated_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 216,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						209,
						210,
						211,
						212,
						213,
						214,
						215,
						216
					]
				}
			]
		},
		{
			"id": 228,
			"name": "CreateTaxRegionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 229,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 230,
					"name": "province_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 231,
					"name": "parent_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 232,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 233,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 234,
					"name": "default_tax_rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 235,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 236,
									"name": "rate",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								},
								{
									"id": 237,
									"name": "code",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 238,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 239,
									"name": "metadata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										236,
										237,
										238,
										239
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						229,
						230,
						231,
						232,
						233,
						234
					]
				}
			]
		},
		{
			"id": 261,
			"name": "CreateTaxRateRuleDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 262,
					"name": "reference",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 263,
					"name": "reference_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 264,
					"name": "tax_rate_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 265,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 266,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						262,
						263,
						264,
						265,
						266
					]
				}
			]
		},
		{
			"id": 1,
			"name": "ITaxModuleService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 2,
					"name": "retrieve",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3,
							"name": "retrieve",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 4,
									"name": "taxRateId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 151,
										"typeArguments": [
											{
												"type": "reference",
												"target": 163,
												"name": "TaxRateDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 176,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 163,
										"name": "TaxRateDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 7,
					"name": "list",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8,
							"name": "list",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 9,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 188,
										"name": "FilterableTaxRateProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 10,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 151,
										"typeArguments": [
											{
												"type": "reference",
												"target": 163,
												"name": "TaxRateDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 11,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 176,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 163,
											"name": "TaxRateDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 12,
					"name": "listAndCount",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 13,
							"name": "listAndCount",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 14,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 188,
										"name": "FilterableTaxRateProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 15,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 151,
										"typeArguments": [
											{
												"type": "reference",
												"target": 163,
												"name": "TaxRateDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 16,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 176,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 163,
													"name": "TaxRateDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 17,
					"name": "create",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 18,
							"name": "create",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 19,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 199,
											"name": "CreateTaxRateDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 20,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 176,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 163,
											"name": "TaxRateDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 21,
							"name": "create",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 22,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 199,
										"name": "CreateTaxRateDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 23,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 176,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 163,
										"name": "TaxRateDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 24,
					"name": "update",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 25,
							"name": "update",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 26,
									"name": "taxRateId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 27,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 208,
										"name": "UpdateTaxRateDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 28,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 176,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 163,
										"name": "TaxRateDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 29,
							"name": "update",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 30,
									"name": "taxRateIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 31,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 208,
										"name": "UpdateTaxRateDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 32,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 176,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 163,
											"name": "TaxRateDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 33,
							"name": "update",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 34,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 188,
										"name": "FilterableTaxRateProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 35,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 208,
										"name": "UpdateTaxRateDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 36,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 176,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 163,
											"name": "TaxRateDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 37,
					"name": "upsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 38,
							"name": "upsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 39,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 217,
										"name": "UpsertTaxRateDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 40,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 176,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 163,
										"name": "TaxRateDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 41,
							"name": "upsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 42,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 217,
											"name": "UpsertTaxRateDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 43,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 176,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 163,
											"name": "TaxRateDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 44,
					"name": "delete",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 45,
							"name": "delete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 46,
									"name": "taxRateIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 47,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 176,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 48,
							"name": "delete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 49,
									"name": "taxRateId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 50,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 176,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 51,
					"name": "restore",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 52,
							"name": "restore",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameter": [
								{
									"id": 53,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 54,
									"name": "taxRateIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 55,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 225,
										"typeArguments": [
											{
												"type": "reference",
												"target": 53,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 56,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 176,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 57,
					"name": "createTaxRegions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 58,
							"name": "createTaxRegions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 59,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 228,
										"name": "CreateTaxRegionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 60,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 176,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 240,
										"name": "TaxRegionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 61,
							"name": "createTaxRegions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 62,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 228,
											"name": "CreateTaxRegionDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 63,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 176,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 240,
											"name": "TaxRegionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 64,
					"name": "deleteTaxRegions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 65,
							"name": "deleteTaxRegions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 66,
									"name": "taxRegionIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 67,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 176,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 68,
							"name": "deleteTaxRegions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 69,
									"name": "taxRegionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 70,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 176,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 71,
					"name": "listTaxRegions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 72,
							"name": "listTaxRegions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 73,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 250,
										"name": "FilterableTaxRegionProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 74,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 151,
										"typeArguments": [
											{
												"type": "reference",
												"target": 240,
												"name": "TaxRegionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 75,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 176,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 240,
											"name": "TaxRegionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 76,
					"name": "createTaxRateRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 77,
							"name": "createTaxRateRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 78,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 261,
										"name": "CreateTaxRateRuleDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 79,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 176,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 267,
										"name": "TaxRateRuleDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 80,
							"name": "createTaxRateRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 81,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 261,
											"name": "CreateTaxRateRuleDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 82,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 176,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 267,
											"name": "TaxRateRuleDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 83,
					"name": "deleteTaxRateRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 84,
							"name": "deleteTaxRateRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 85,
									"name": "taxRateRuleId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 86,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 176,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 87,
							"name": "deleteTaxRateRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 88,
									"name": "taxRateRuleIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 89,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 176,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 90,
					"name": "listTaxRateRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 91,
							"name": "listTaxRateRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 92,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 277,
										"name": "FilterableTaxRateRuleProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 93,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 151,
										"typeArguments": [
											{
												"type": "reference",
												"target": 267,
												"name": "TaxRateRuleDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 94,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 176,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 267,
											"name": "TaxRateRuleDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 95,
					"name": "getTaxLines",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 96,
							"name": "getTaxLines",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 97,
									"name": "items",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"target": 288,
													"name": "TaxableItemDTO",
													"package": "@medusajs/types"
												},
												{
													"type": "reference",
													"target": 300,
													"name": "TaxableShippingDTO",
													"package": "@medusajs/types"
												}
											]
										}
									}
								},
								{
									"id": 98,
									"name": "calculationContext",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 305,
										"name": "TaxCalculationContext",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 99,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 176,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"target": 320,
													"name": "ItemTaxLineDTO",
													"package": "@medusajs/types"
												},
												{
													"type": "reference",
													"target": 327,
													"name": "ShippingTaxLineDTO",
													"package": "@medusajs/types"
												}
											]
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 100,
					"name": "softDelete",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 101,
							"name": "softDelete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameter": [
								{
									"id": 102,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 103,
									"name": "taxRateIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 104,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 334,
										"typeArguments": [
											{
												"type": "reference",
												"target": 102,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 105,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 176,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 106,
					"name": "softDeleteTaxRegions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 107,
							"name": "softDeleteTaxRegions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameter": [
								{
									"id": 108,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 109,
									"name": "taxRegionIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 110,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 334,
										"typeArguments": [
											{
												"type": "reference",
												"target": 108,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 111,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 176,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 112,
					"name": "restoreTaxRegions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 113,
							"name": "restoreTaxRegions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameter": [
								{
									"id": 114,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 115,
									"name": "taxRegionIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 116,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 225,
										"typeArguments": [
											{
												"type": "reference",
												"target": 114,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 117,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 176,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 118,
					"name": "softDeleteTaxRateRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 119,
							"name": "softDeleteTaxRateRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameter": [
								{
									"id": 120,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 121,
									"name": "taxRateRuleIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 122,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 334,
										"typeArguments": [
											{
												"type": "reference",
												"target": 120,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 123,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 176,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 124,
					"name": "restoreTaxRateRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 125,
							"name": "restoreTaxRateRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameter": [
								{
									"id": 126,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 127,
									"name": "taxRateRuleIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 128,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 225,
										"typeArguments": [
											{
												"type": "reference",
												"target": 126,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 129,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 176,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						2,
						7,
						12,
						17,
						24,
						37,
						44,
						51,
						57,
						64,
						71,
						76,
						83,
						90,
						95,
						100,
						106,
						112,
						118,
						124
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 140,
					"name": "IModuleService",
					"package": "@medusajs/types"
				}
			]
		}
	],
	"groups": [
		{
			"title": "Interfaces",
			"children": [
				151,
				378,
				334,
				225,
				455,
				410,
				140,
				434,
				364,
				176,
				163,
				188,
				240,
				250,
				267,
				277,
				288,
				300,
				305,
				404,
				320,
				327,
				199,
				217,
				208,
				228,
				261,
				1
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				451,
				453,
				478,
				503,
				493,
				382,
				491,
				488,
				490,
				482,
				468,
				428,
				440,
				458,
				337,
				424
			]
		}
	],
	"packageName": "@medusajs/types",
	"symbolIdMap": {
		"0": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": ""
		},
		"1": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService"
		},
		"2": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.retrieve"
		},
		"3": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.retrieve"
		},
		"4": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "taxRateId"
		},
		"5": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "config"
		},
		"6": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"7": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.list"
		},
		"8": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.list"
		},
		"9": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "filters"
		},
		"10": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "config"
		},
		"11": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"12": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.listAndCount"
		},
		"13": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.listAndCount"
		},
		"14": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "filters"
		},
		"15": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "config"
		},
		"16": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"17": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.create"
		},
		"18": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.create"
		},
		"19": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "data"
		},
		"20": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"21": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.create"
		},
		"22": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "data"
		},
		"23": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"24": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.update"
		},
		"25": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.update"
		},
		"26": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "taxRateId"
		},
		"27": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "data"
		},
		"28": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"29": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.update"
		},
		"30": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "taxRateIds"
		},
		"31": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "data"
		},
		"32": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"33": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.update"
		},
		"34": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "selector"
		},
		"35": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "data"
		},
		"36": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"37": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.upsert"
		},
		"38": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.upsert"
		},
		"39": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "data"
		},
		"40": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"41": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.upsert"
		},
		"42": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "data"
		},
		"43": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"44": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.delete"
		},
		"45": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.delete"
		},
		"46": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "taxRateIds"
		},
		"47": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"48": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.delete"
		},
		"49": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "taxRateId"
		},
		"50": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"51": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.restore"
		},
		"52": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.restore"
		},
		"53": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"54": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "taxRateIds"
		},
		"55": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "config"
		},
		"56": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"57": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.createTaxRegions"
		},
		"58": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.createTaxRegions"
		},
		"59": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "data"
		},
		"60": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"61": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.createTaxRegions"
		},
		"62": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "data"
		},
		"63": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"64": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.deleteTaxRegions"
		},
		"65": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.deleteTaxRegions"
		},
		"66": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "taxRegionIds"
		},
		"67": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"68": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.deleteTaxRegions"
		},
		"69": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "taxRegionId"
		},
		"70": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"71": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.listTaxRegions"
		},
		"72": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.listTaxRegions"
		},
		"73": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "filters"
		},
		"74": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "config"
		},
		"75": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"76": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.createTaxRateRules"
		},
		"77": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.createTaxRateRules"
		},
		"78": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "data"
		},
		"79": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"80": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.createTaxRateRules"
		},
		"81": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "data"
		},
		"82": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"83": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.deleteTaxRateRules"
		},
		"84": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.deleteTaxRateRules"
		},
		"85": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "taxRateRuleId"
		},
		"86": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"87": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.deleteTaxRateRules"
		},
		"88": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "taxRateRuleIds"
		},
		"89": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"90": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.listTaxRateRules"
		},
		"91": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.listTaxRateRules"
		},
		"92": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "filters"
		},
		"93": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "config"
		},
		"94": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"95": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.getTaxLines"
		},
		"96": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.getTaxLines"
		},
		"97": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "items"
		},
		"98": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "calculationContext"
		},
		"99": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"100": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.softDelete"
		},
		"101": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.softDelete"
		},
		"102": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"103": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "taxRateIds"
		},
		"104": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "config"
		},
		"105": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"106": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.softDeleteTaxRegions"
		},
		"107": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.softDeleteTaxRegions"
		},
		"108": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"109": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "taxRegionIds"
		},
		"110": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "config"
		},
		"111": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"112": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.restoreTaxRegions"
		},
		"113": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.restoreTaxRegions"
		},
		"114": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"115": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "taxRegionIds"
		},
		"116": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "config"
		},
		"117": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"118": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.softDeleteTaxRateRules"
		},
		"119": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.softDeleteTaxRateRules"
		},
		"120": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"121": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "taxRateRuleIds"
		},
		"122": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "config"
		},
		"123": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"124": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.restoreTaxRateRules"
		},
		"125": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "ITaxModuleService.restoreTaxRateRules"
		},
		"126": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"127": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "taxRateRuleIds"
		},
		"128": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "config"
		},
		"129": {
			"sourceFileName": "../../../packages/types/src/tax/service.ts",
			"qualifiedName": "sharedContext"
		},
		"140": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "IModuleService"
		},
		"151": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig"
		},
		"152": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.select"
		},
		"153": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.skip"
		},
		"154": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.take"
		},
		"155": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.relations"
		},
		"156": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.order"
		},
		"157": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"158": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.__index"
		},
		"160": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.withDeleted"
		},
		"161": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.filters"
		},
		"162": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.Entity"
		},
		"163": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateDTO"
		},
		"164": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateDTO.id"
		},
		"165": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateDTO.rate"
		},
		"166": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateDTO.code"
		},
		"167": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateDTO.name"
		},
		"168": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateDTO.metadata"
		},
		"169": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateDTO.tax_region_id"
		},
		"170": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateDTO.is_combinable"
		},
		"171": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateDTO.is_default"
		},
		"172": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateDTO.created_at"
		},
		"173": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateDTO.updated_at"
		},
		"174": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateDTO.deleted_at"
		},
		"175": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateDTO.created_by"
		},
		"176": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "Context"
		},
		"177": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.__type"
		},
		"178": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionManager"
		},
		"179": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.manager"
		},
		"180": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"181": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"182": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"183": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionId"
		},
		"184": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.messageAggregator"
		},
		"185": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.requestId"
		},
		"186": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.idempotencyKey"
		},
		"187": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "TManager"
		},
		"188": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateProps"
		},
		"189": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateProps.id"
		},
		"190": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateProps.tax_region_id"
		},
		"191": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateProps.rate"
		},
		"192": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateProps.code"
		},
		"193": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateProps.name"
		},
		"194": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateProps.created_at"
		},
		"195": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateProps.updated_at"
		},
		"196": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateProps.created_by"
		},
		"197": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"198": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"199": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRateDTO"
		},
		"200": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRateDTO.tax_region_id"
		},
		"201": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRateDTO.rate"
		},
		"202": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRateDTO.code"
		},
		"203": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRateDTO.name"
		},
		"204": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRateDTO.rules"
		},
		"205": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRateDTO.is_default"
		},
		"206": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRateDTO.created_by"
		},
		"207": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRateDTO.metadata"
		},
		"208": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "UpdateTaxRateDTO"
		},
		"209": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "UpdateTaxRateDTO.rate"
		},
		"210": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "UpdateTaxRateDTO.code"
		},
		"211": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "UpdateTaxRateDTO.name"
		},
		"212": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "UpdateTaxRateDTO.rules"
		},
		"213": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "UpdateTaxRateDTO.is_default"
		},
		"214": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "UpdateTaxRateDTO.is_combinable"
		},
		"215": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "UpdateTaxRateDTO.updated_by"
		},
		"216": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "UpdateTaxRateDTO.metadata"
		},
		"217": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "UpsertTaxRateDTO"
		},
		"218": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "UpsertTaxRateDTO.id"
		},
		"219": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "UpsertTaxRateDTO.rate"
		},
		"220": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "UpsertTaxRateDTO.code"
		},
		"221": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "UpsertTaxRateDTO.name"
		},
		"222": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "UpsertTaxRateDTO.is_default"
		},
		"223": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "UpsertTaxRateDTO.created_by"
		},
		"224": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "UpsertTaxRateDTO.metadata"
		},
		"225": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RestoreReturn"
		},
		"226": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.returnLinkableKeys"
		},
		"227": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"228": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRegionDTO"
		},
		"229": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRegionDTO.country_code"
		},
		"230": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRegionDTO.province_code"
		},
		"231": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRegionDTO.parent_id"
		},
		"232": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRegionDTO.metadata"
		},
		"233": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRegionDTO.created_by"
		},
		"234": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRegionDTO.default_tax_rate"
		},
		"235": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "__type"
		},
		"236": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "__type.rate"
		},
		"237": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "__type.code"
		},
		"238": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "__type.name"
		},
		"239": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "__type.metadata"
		},
		"240": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRegionDTO"
		},
		"241": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRegionDTO.id"
		},
		"242": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRegionDTO.country_code"
		},
		"243": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRegionDTO.province_code"
		},
		"244": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRegionDTO.parent_id"
		},
		"245": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRegionDTO.metadata"
		},
		"246": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRegionDTO.created_at"
		},
		"247": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRegionDTO.updated_at"
		},
		"248": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRegionDTO.created_by"
		},
		"249": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRegionDTO.deleted_at"
		},
		"250": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRegionProps"
		},
		"251": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRegionProps.id"
		},
		"252": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRegionProps.country_code"
		},
		"253": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRegionProps.province_code"
		},
		"254": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRegionProps.parent_id"
		},
		"255": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRegionProps.metadata"
		},
		"256": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRegionProps.created_at"
		},
		"257": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRegionProps.updated_at"
		},
		"258": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRegionProps.created_by"
		},
		"259": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"260": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"261": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRateRuleDTO"
		},
		"262": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRateRuleDTO.reference"
		},
		"263": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRateRuleDTO.reference_id"
		},
		"264": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRateRuleDTO.tax_rate_id"
		},
		"265": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRateRuleDTO.metadata"
		},
		"266": {
			"sourceFileName": "../../../packages/types/src/tax/mutations.ts",
			"qualifiedName": "CreateTaxRateRuleDTO.created_by"
		},
		"267": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateRuleDTO"
		},
		"268": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateRuleDTO.id"
		},
		"269": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateRuleDTO.reference"
		},
		"270": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateRuleDTO.reference_id"
		},
		"271": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateRuleDTO.tax_rate_id"
		},
		"272": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateRuleDTO.tax_rate"
		},
		"273": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateRuleDTO.metadata"
		},
		"274": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateRuleDTO.created_at"
		},
		"275": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateRuleDTO.updated_at"
		},
		"276": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxRateRuleDTO.created_by"
		},
		"277": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateRuleProps"
		},
		"278": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateRuleProps.reference"
		},
		"279": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateRuleProps.reference_id"
		},
		"280": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateRuleProps.tax_rate_id"
		},
		"281": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateRuleProps.tax_rate"
		},
		"282": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateRuleProps.metadata"
		},
		"283": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateRuleProps.created_at"
		},
		"284": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateRuleProps.updated_at"
		},
		"285": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "FilterableTaxRateRuleProps.created_by"
		},
		"286": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"287": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"288": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxableItemDTO"
		},
		"289": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxableItemDTO.id"
		},
		"290": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxableItemDTO.product_id"
		},
		"291": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxableItemDTO.product_name"
		},
		"292": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxableItemDTO.product_category_id"
		},
		"293": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxableItemDTO.product_categories"
		},
		"294": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxableItemDTO.product_sku"
		},
		"295": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxableItemDTO.product_type"
		},
		"296": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxableItemDTO.product_type_id"
		},
		"297": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxableItemDTO.quantity"
		},
		"298": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxableItemDTO.unit_price"
		},
		"299": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxableItemDTO.currency_code"
		},
		"300": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxableShippingDTO"
		},
		"301": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxableShippingDTO.id"
		},
		"302": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxableShippingDTO.shipping_option_id"
		},
		"303": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxableShippingDTO.unit_price"
		},
		"304": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxableShippingDTO.currency_code"
		},
		"305": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxCalculationContext"
		},
		"306": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxCalculationContext.address"
		},
		"307": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "__type"
		},
		"308": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "__type.country_code"
		},
		"309": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "__type.province_code"
		},
		"310": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "__type.address_1"
		},
		"311": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "__type.address_2"
		},
		"312": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "__type.city"
		},
		"313": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "__type.postal_code"
		},
		"314": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxCalculationContext.customer"
		},
		"315": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "__type"
		},
		"316": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "__type.id"
		},
		"317": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "__type.email"
		},
		"318": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "__type.customer_groups"
		},
		"319": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxCalculationContext.is_return"
		},
		"320": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "ItemTaxLineDTO"
		},
		"321": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "ItemTaxLineDTO.line_item_id"
		},
		"322": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO.rate_id"
		},
		"323": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO.rate"
		},
		"324": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO.code"
		},
		"325": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO.name"
		},
		"326": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO.provider_id"
		},
		"327": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "ShippingTaxLineDTO"
		},
		"328": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "ShippingTaxLineDTO.shipping_line_id"
		},
		"329": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO.rate_id"
		},
		"330": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO.rate"
		},
		"331": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO.code"
		},
		"332": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO.name"
		},
		"333": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO.provider_id"
		},
		"334": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "SoftDeleteReturn"
		},
		"335": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.returnLinkableKeys"
		},
		"336": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"337": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerConfig"
		},
		"338": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"339": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.schema"
		},
		"340": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationships"
		},
		"341": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extends"
		},
		"342": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"343": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"344": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.fieldAlias"
		},
		"345": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"346": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.path"
		},
		"347": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"348": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"349": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"350": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.primaryKeys"
		},
		"351": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isLink"
		},
		"352": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.linkableKeys"
		},
		"353": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isReadOnlyLink"
		},
		"354": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.databaseConfig"
		},
		"355": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"356": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.tableName"
		},
		"357": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.idPrefix"
		},
		"358": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraFields"
		},
		"359": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"360": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.type"
		},
		"361": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultValue"
		},
		"362": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.nullable"
		},
		"363": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"364": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator"
		},
		"365": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"366": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"367": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "msg"
		},
		"368": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"369": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"370": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "format"
		},
		"371": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"372": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"373": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"374": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"375": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "T"
		},
		"376": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "messageData"
		},
		"377": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "options"
		},
		"378": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable"
		},
		"379": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"380": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"381": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.T"
		},
		"382": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "OperatorMap"
		},
		"383": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"384": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$and"
		},
		"385": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$or"
		},
		"386": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$eq"
		},
		"387": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$ne"
		},
		"388": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$in"
		},
		"389": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$nin"
		},
		"390": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$not"
		},
		"391": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$gt"
		},
		"392": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$gte"
		},
		"393": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$lt"
		},
		"394": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$lte"
		},
		"395": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$like"
		},
		"396": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$re"
		},
		"397": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$ilike"
		},
		"398": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$fulltext"
		},
		"399": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$overlap"
		},
		"400": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$contains"
		},
		"401": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$contained"
		},
		"402": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$exists"
		},
		"403": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"404": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO"
		},
		"405": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO.rate_id"
		},
		"406": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO.rate"
		},
		"407": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO.code"
		},
		"408": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO.name"
		},
		"409": {
			"sourceFileName": "../../../packages/types/src/tax/common.ts",
			"qualifiedName": "TaxLineDTO.provider_id"
		},
		"410": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig"
		},
		"411": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.serviceName"
		},
		"412": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.alias"
		},
		"413": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.fieldAlias"
		},
		"414": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"415": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.path"
		},
		"416": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"417": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.primaryKeys"
		},
		"418": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.relationships"
		},
		"419": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.extends"
		},
		"420": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"421": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"422": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"423": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.args"
		},
		"424": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerRelationship"
		},
		"425": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"426": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isInternalService"
		},
		"427": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.deleteCascade"
		},
		"428": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "Message"
		},
		"429": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"430": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventName"
		},
		"431": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.body"
		},
		"432": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"433": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "T"
		},
		"434": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat"
		},
		"435": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.groupBy"
		},
		"436": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.sortBy"
		},
		"437": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type"
		},
		"438": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.__index"
		},
		"440": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "MessageFormat"
		},
		"441": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"442": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventName"
		},
		"443": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"444": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"445": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.service"
		},
		"446": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.action"
		},
		"447": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.object"
		},
		"448": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"449": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"450": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "T"
		},
		"451": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "Query"
		},
		"452": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"453": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "ExpandScalar"
		},
		"454": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"455": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias"
		},
		"456": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.name"
		},
		"457": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.args"
		},
		"458": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerRelationship"
		},
		"459": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"460": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.alias"
		},
		"461": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.foreignKey"
		},
		"462": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.primaryKey"
		},
		"463": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"464": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.isInternalService"
		},
		"465": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.inverse"
		},
		"466": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.isList"
		},
		"467": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.args"
		},
		"468": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "MessageBody"
		},
		"469": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"470": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"471": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"472": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.service"
		},
		"473": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.action"
		},
		"474": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.object"
		},
		"475": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"476": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"477": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "T"
		},
		"478": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "Scalar"
		},
		"479": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"480": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.toHexString"
		},
		"481": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.toHexString"
		},
		"482": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "FilterQuery"
		},
		"483": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"484": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"486": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"487": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "Prev"
		},
		"488": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "FilterValue"
		},
		"489": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"490": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "PrevLimit"
		},
		"491": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "FilterValue2"
		},
		"492": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"493": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "Primary"
		},
		"494": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"495": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.[PrimaryKeyType]"
		},
		"496": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"497": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type._id"
		},
		"498": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"499": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.uuid"
		},
		"500": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"501": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.id"
		},
		"502": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"503": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "ReadonlyPrimary"
		},
		"504": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		}
	}
}