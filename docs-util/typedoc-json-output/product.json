{
	"id": 7919,
	"name": "product",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 8267,
			"name": "FindConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to configure how an entity is retrieved from the database. It accepts as a typed parameter an "
					},
					{
						"kind": "code",
						"text": "`Entity`"
					},
					{
						"kind": "text",
						"text": " class,\nwhich provides correct typing of field names in its properties."
					}
				]
			},
			"children": [
				{
					"id": 8268,
					"name": "select",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being attribute names of the entity to retrieve in the result."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": 8278,
										"name": "Entity",
										"package": "@medusajs/types",
										"qualifiedName": "FindConfig.Entity",
										"refersToTypeParameter": true
									}
								}
							]
						}
					}
				},
				{
					"id": 8269,
					"name": "skip",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A number indicating the number of records to skip before retrieving the results."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 8270,
					"name": "take",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A number indicating the number of records to return in the result."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 8271,
					"name": "relations",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being relation names of the entity to retrieve in the result."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 8272,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to specify how to sort the returned records. Its keys are the names of attributes of the entity, and a key's value can either be "
							},
							{
								"kind": "code",
								"text": "`ASC`"
							},
							{
								"kind": "text",
								"text": "\nto sort retrieved records in an ascending order, or "
							},
							{
								"kind": "code",
								"text": "`DESC`"
							},
							{
								"kind": "text",
								"text": " to sort retrieved records in a descending order."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 8273,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"indexSignature": {
								"id": 8274,
								"name": "__index",
								"variant": "signature",
								"kind": 8192,
								"flags": {},
								"parameters": [
									{
										"id": 8275,
										"name": "K",
										"variant": "param",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "ASC"
										},
										{
											"type": "literal",
											"value": "DESC"
										}
									]
								}
							}
						}
					}
				},
				{
					"id": 8276,
					"name": "withDeleted",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean indicating whether deleted records should also be retrieved as part of the result. This only works if the entity extends the\n"
							},
							{
								"kind": "code",
								"text": "`SoftDeletableEntity`"
							},
							{
								"kind": "text",
								"text": " class."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 8277,
					"name": "filters",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Enable ORM specific defined filters"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8268,
						8269,
						8270,
						8271,
						8272,
						8276,
						8277
					]
				}
			],
			"typeParameters": [
				{
					"id": 8278,
					"name": "Entity",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 8707,
			"name": "BaseFilterable",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object used to allow specifying flexible queries with and/or conditions."
					}
				]
			},
			"children": [
				{
					"id": 8708,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 8707,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8710,
											"name": "T",
											"package": "@medusajs/types",
											"qualifiedName": "BaseFilterable.T",
											"refersToTypeParameter": true
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 8710,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "BaseFilterable.T",
									"refersToTypeParameter": true
								}
							]
						}
					}
				},
				{
					"id": 8709,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 8707,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8710,
											"name": "T",
											"package": "@medusajs/types",
											"qualifiedName": "BaseFilterable.T",
											"refersToTypeParameter": true
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 8710,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "BaseFilterable.T",
									"refersToTypeParameter": true
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8708,
						8709
					]
				}
			],
			"typeParameters": [
				{
					"id": 8710,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 8323,
					"name": "FilterableProductProps"
				},
				{
					"type": "reference",
					"target": 8428,
					"name": "FilterableProductTagProps"
				},
				{
					"type": "reference",
					"target": 8444,
					"name": "FilterableProductTypeProps"
				},
				{
					"type": "reference",
					"target": 8469,
					"name": "FilterableProductOptionProps"
				},
				{
					"type": "reference",
					"target": 8514,
					"name": "FilterableProductVariantProps"
				},
				{
					"type": "reference",
					"target": 8589,
					"name": "FilterableProductCollectionProps"
				},
				{
					"type": "reference",
					"target": 8626,
					"name": "FilterableProductCategoryProps"
				}
			]
		},
		{
			"id": 8417,
			"name": "SoftDeleteReturn",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
					}
				]
			},
			"children": [
				{
					"id": 8418,
					"name": "returnLinkableKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being the ID attribute names of the entity's relations."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 8419,
							"name": "TReturnableLinkableKeys",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8418
					]
				}
			],
			"typeParameters": [
				{
					"id": 8419,
					"name": "TReturnableLinkableKeys",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 8420,
			"name": "RestoreReturn",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to specify an entity's related entities that should be restored when the main entity is restored."
					}
				]
			},
			"children": [
				{
					"id": 8421,
					"name": "returnLinkableKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being the ID attribute names of the entity's relations."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 8422,
							"name": "TReturnableLinkableKeys",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8421
					]
				}
			],
			"typeParameters": [
				{
					"id": 8422,
					"name": "TReturnableLinkableKeys",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 8799,
			"name": "Query",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 8800,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 8800,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "intrinsic",
					"name": "object"
				},
				"trueType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 8800,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reference",
						"target": 8829,
						"name": "Scalar",
						"package": "@medusajs/types"
					},
					"trueType": {
						"type": "intrinsic",
						"name": "never"
					},
					"falseType": {
						"type": "reference",
						"target": 8833,
						"typeArguments": [
							{
								"type": "reference",
								"target": 8800,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterQuery",
						"package": "@medusajs/types"
					}
				},
				"falseType": {
					"type": "reference",
					"target": 8839,
					"typeArguments": [
						{
							"type": "reference",
							"target": 8800,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "FilterValue",
					"package": "@medusajs/types"
				}
			}
		},
		{
			"id": 8801,
			"name": "ExpandScalar",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 8802,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": null
					},
					{
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 8802,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "intrinsic",
							"name": "string"
						},
						"trueType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "RegExp"
									},
									"name": "RegExp",
									"package": "typescript"
								}
							]
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 8802,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							},
							"trueType": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"falseType": {
								"type": "reference",
								"target": 8802,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					}
				]
			}
		},
		{
			"id": 8829,
			"name": "Scalar",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "boolean"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "intrinsic",
						"name": "bigint"
					},
					{
						"type": "intrinsic",
						"name": "symbol"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "RegExp"
						},
						"name": "RegExp",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/node/buffer.d.ts",
							"qualifiedName": "__global.Buffer"
						},
						"name": "Buffer",
						"package": "@types/node",
						"qualifiedName": "__global.Buffer"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 8830,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 8831,
									"name": "toHexString",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"signatures": [
										{
											"id": 8832,
											"name": "toHexString",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"children": [
										8831
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 8854,
			"name": "ReadonlyPrimary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 8855,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 8855,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "array",
					"elementType": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				"trueType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Readonly"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": 8855,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "Readonly",
					"package": "typescript"
				},
				"falseType": {
					"type": "reference",
					"target": 8855,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				}
			}
		},
		{
			"id": 8844,
			"name": "Primary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 8853,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 8853,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reflection",
					"declaration": {
						"id": 8845,
						"name": "__type",
						"variant": "declaration",
						"kind": 65536,
						"flags": {},
						"children": [
							{
								"id": 8846,
								"name": "[PrimaryKeyType]",
								"variant": "declaration",
								"kind": 1024,
								"flags": {
									"isOptional": true
								},
								"type": {
									"type": "inferred",
									"name": "PK"
								}
							}
						],
						"groups": [
							{
								"title": "Properties",
								"children": [
									8846
								]
							}
						]
					}
				},
				"trueType": {
					"type": "reference",
					"target": 8854,
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../packages/types/src/dal/utils.ts",
								"qualifiedName": "PK"
							},
							"name": "PK",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "ReadonlyPrimary",
					"package": "@medusajs/types"
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 8853,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reflection",
						"declaration": {
							"id": 8847,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 8848,
									"name": "_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "inferred",
										"name": "PK"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										8848
									]
								}
							]
						}
					},
					"trueType": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 8854,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/types/src/dal/utils.ts",
											"qualifiedName": "PK"
										},
										"name": "PK",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ReadonlyPrimary",
								"package": "@medusajs/types"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"falseType": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 8853,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "reflection",
							"declaration": {
								"id": 8849,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 8850,
										"name": "uuid",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"type": {
											"type": "inferred",
											"name": "PK"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											8850
										]
									}
								]
							}
						},
						"trueType": {
							"type": "reference",
							"target": 8854,
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../../packages/types/src/dal/utils.ts",
										"qualifiedName": "PK"
									},
									"name": "PK",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "ReadonlyPrimary",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 8853,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reflection",
								"declaration": {
									"id": 8851,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 8852,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "inferred",
												"name": "PK"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												8852
											]
										}
									]
								}
							},
							"trueType": {
								"type": "reference",
								"target": 8854,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/types/src/dal/utils.ts",
											"qualifiedName": "PK"
										},
										"name": "PK",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ReadonlyPrimary",
								"package": "@medusajs/types"
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					}
				}
			}
		},
		{
			"id": 8711,
			"name": "OperatorMap",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 8732,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 8712,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 8713,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 8799,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8732,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "Query",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 8714,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 8799,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8732,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "Query",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 8715,
							"name": "$eq",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 8801,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8732,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "ExpandScalar",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8801,
											"typeArguments": [
												{
													"type": "reference",
													"target": 8732,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "ExpandScalar",
											"package": "@medusajs/types"
										}
									}
								]
							}
						},
						{
							"id": 8716,
							"name": "$ne",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 8801,
								"typeArguments": [
									{
										"type": "reference",
										"target": 8732,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 8717,
							"name": "$in",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 8801,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8732,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "ExpandScalar",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 8718,
							"name": "$nin",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 8801,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8732,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "ExpandScalar",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 8719,
							"name": "$not",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 8799,
								"typeArguments": [
									{
										"type": "reference",
										"target": 8732,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "Query",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 8720,
							"name": "$gt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 8801,
								"typeArguments": [
									{
										"type": "reference",
										"target": 8732,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 8721,
							"name": "$gte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 8801,
								"typeArguments": [
									{
										"type": "reference",
										"target": 8732,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 8722,
							"name": "$lt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 8801,
								"typeArguments": [
									{
										"type": "reference",
										"target": 8732,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 8723,
							"name": "$lte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 8801,
								"typeArguments": [
									{
										"type": "reference",
										"target": 8732,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 8724,
							"name": "$like",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 8725,
							"name": "$re",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 8726,
							"name": "$ilike",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 8727,
							"name": "$fulltext",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 8728,
							"name": "$overlap",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 8729,
							"name": "$contains",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 8730,
							"name": "$contained",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 8731,
							"name": "$exists",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								8713,
								8714,
								8715,
								8716,
								8717,
								8718,
								8719,
								8720,
								8721,
								8722,
								8723,
								8724,
								8725,
								8726,
								8727,
								8728,
								8729,
								8730,
								8731
							]
						}
					]
				}
			}
		},
		{
			"id": 8842,
			"name": "FilterValue2",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 8843,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 8843,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					{
						"type": "reference",
						"target": 8801,
						"typeArguments": [
							{
								"type": "reference",
								"target": 8843,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "ExpandScalar",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 8844,
						"typeArguments": [
							{
								"type": "reference",
								"target": 8843,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "Primary",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 8839,
			"name": "FilterValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 8840,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 8711,
						"typeArguments": [
							{
								"type": "reference",
								"target": 8842,
								"typeArguments": [
									{
										"type": "reference",
										"target": 8840,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "FilterValue2",
								"package": "@medusajs/types"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 8842,
						"typeArguments": [
							{
								"type": "reference",
								"target": 8840,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterValue2",
						"package": "@medusajs/types"
					},
					{
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 8842,
							"typeArguments": [
								{
									"type": "reference",
									"target": 8840,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "FilterValue2",
							"package": "@medusajs/types"
						}
					},
					{
						"type": "literal",
						"value": null
					}
				]
			}
		},
		{
			"id": 8841,
			"name": "PrevLimit",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "tuple",
				"elements": [
					{
						"type": "intrinsic",
						"name": "never"
					},
					{
						"type": "literal",
						"value": 1
					},
					{
						"type": "literal",
						"value": 2
					},
					{
						"type": "literal",
						"value": 3
					}
				]
			}
		},
		{
			"id": 8833,
			"name": "FilterQuery",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 8837,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 8838,
					"name": "Prev",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"default": {
						"type": "literal",
						"value": 3
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 8838,
					"name": "Prev",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "intrinsic",
					"name": "never"
				},
				"trueType": {
					"type": "intrinsic",
					"name": "never"
				},
				"falseType": {
					"type": "mapped",
					"parameter": "Key",
					"parameterType": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "reference",
							"target": 8837,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					},
					"templateType": {
						"type": "conditional",
						"checkType": {
							"type": "indexedAccess",
							"indexType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/types/src/dal/utils.ts",
									"qualifiedName": "Key"
								},
								"name": "Key",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"objectType": {
								"type": "reference",
								"target": 8837,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						"extendsType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "boolean"
								},
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "intrinsic",
									"name": "bigint"
								},
								{
									"type": "intrinsic",
									"name": "symbol"
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Date"
									},
									"name": "Date",
									"package": "typescript"
								}
							]
						},
						"trueType": {
							"type": "union",
							"types": [
								{
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/types/src/dal/utils.ts",
											"qualifiedName": "Key"
										},
										"name": "Key",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"objectType": {
										"type": "reference",
										"target": 8837,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								{
									"type": "reference",
									"target": 8711,
									"typeArguments": [
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/types/src/dal/utils.ts",
													"qualifiedName": "Key"
												},
												"name": "Key",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 8837,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									],
									"name": "OperatorMap",
									"package": "@medusajs/types"
								}
							]
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../packages/types/src/dal/utils.ts",
										"qualifiedName": "Key"
									},
									"name": "Key",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"objectType": {
									"type": "reference",
									"target": 8837,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							},
							"extendsType": {
								"type": "inferred",
								"name": "U"
							},
							"trueType": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../packages/types/src/dal/utils.ts",
										"qualifiedName": "U"
									},
									"name": "U",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"extendsType": {
									"type": "reflection",
									"declaration": {
										"id": 8834,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"indexSignature": {
											"id": 8835,
											"name": "__index",
											"variant": "signature",
											"kind": 8192,
											"flags": {},
											"parameters": [
												{
													"id": 8836,
													"name": "x",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "inferred",
												"name": "V"
											}
										}
									}
								},
								"trueType": {
									"type": "conditional",
									"checkType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/types/src/dal/utils.ts",
											"qualifiedName": "V"
										},
										"name": "V",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"extendsType": {
										"type": "intrinsic",
										"name": "object"
									},
									"trueType": {
										"type": "reference",
										"target": 8833,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Partial"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/types/src/dal/utils.ts",
															"qualifiedName": "V"
														},
														"name": "V",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "Partial",
												"package": "typescript"
											},
											{
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": 8838,
													"name": "Prev",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 8841,
													"name": "PrevLimit",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "FilterQuery",
										"package": "@medusajs/types"
									},
									"falseType": {
										"type": "intrinsic",
										"name": "never"
									}
								},
								"falseType": {
									"type": "intrinsic",
									"name": "never"
								}
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					},
					"optionalModifier": "+"
				}
			}
		},
		{
			"id": 8819,
			"name": "MessageBody",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 8828,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 8820,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 8821,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 8822,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 8823,
											"name": "service",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 8824,
											"name": "action",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 8825,
											"name": "object",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 8826,
											"name": "eventGroupId",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												8823,
												8824,
												8825,
												8826
											]
										}
									]
								}
							}
						},
						{
							"id": 8827,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 8828,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								8821,
								8827
							]
						}
					]
				}
			}
		},
		{
			"id": 8776,
			"name": "Message",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 8781,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 8777,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 8778,
							"name": "eventName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 8779,
							"name": "body",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 8819,
								"typeArguments": [
									{
										"type": "reference",
										"target": 8781,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "MessageBody",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 8780,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								8778,
								8779,
								8780
							]
						}
					]
				}
			}
		},
		{
			"id": 8788,
			"name": "MessageFormat",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 8798,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 8789,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 8790,
							"name": "eventName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 8791,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 8792,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 8793,
											"name": "service",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 8794,
											"name": "action",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 8795,
											"name": "object",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 8796,
											"name": "eventGroupId",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												8793,
												8794,
												8795,
												8796
											]
										}
									]
								}
							}
						},
						{
							"id": 8797,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 8798,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8798,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								8790,
								8791,
								8797
							]
						}
					]
				}
			}
		},
		{
			"id": 8809,
			"name": "JoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 8810,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 8811,
							"name": "alias",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 8812,
							"name": "foreignKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 8813,
							"name": "primaryKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 8814,
							"name": "serviceName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 8815,
							"name": "isInternalService",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the relationship is an internal service from the medusa core\nTODO: Remove when there are no more \"internal\" services"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 8816,
							"name": "inverse",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "In an inverted relationship the foreign key is on the other service and the primary key is on the current service"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 8817,
							"name": "isList",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Force the relationship to return a list"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 8818,
							"name": "args",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Extra arguments to pass to the remoteFetchData callback"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								8811,
								8812,
								8813,
								8814,
								8815,
								8816,
								8817,
								8818
							]
						}
					]
				}
			}
		},
		{
			"id": 8806,
			"name": "JoinerServiceConfigAlias",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 8807,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 8808,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8807,
						8808
					]
				}
			]
		},
		{
			"id": 8758,
			"name": "JoinerServiceConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 8759,
					"name": "serviceName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8760,
					"name": "alias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Property name to use as entrypoint to the service"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 8806,
								"name": "JoinerServiceConfigAlias",
								"package": "@medusajs/types"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 8806,
									"name": "JoinerServiceConfigAlias",
									"package": "@medusajs/types"
								}
							}
						]
					}
				},
				{
					"id": 8761,
					"name": "fieldAlias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "alias for deeper nested relationships (e.g. { 'price': 'prices.calculated_price_set.amount' })"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 8762,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 8763,
													"name": "path",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 8764,
													"name": "forwardArgumentsOnPath",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														8763,
														8764
													]
												}
											]
										}
									}
								]
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 8765,
					"name": "primaryKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 8766,
					"name": "relationships",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 8809,
							"name": "JoinerRelationship",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 8767,
					"name": "extends",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 8768,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 8769,
										"name": "serviceName",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 8770,
										"name": "relationship",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "reference",
											"target": 8809,
											"name": "JoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											8769,
											8770
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 8771,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8759,
						8760,
						8761,
						8765,
						8766,
						8767,
						8771
					]
				}
			]
		},
		{
			"id": 8653,
			"name": "ModuleJoinerConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 8758,
								"name": "JoinerServiceConfig",
								"package": "@medusajs/types"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "serviceName"
									},
									{
										"type": "literal",
										"value": "primaryKeys"
									},
									{
										"type": "literal",
										"value": "relationships"
									},
									{
										"type": "literal",
										"value": "extends"
									}
								]
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 8654,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 8655,
									"name": "schema",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "GraphQL schema for the all module's available entities and fields"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 8656,
									"name": "relationships",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8772,
											"name": "ModuleJoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 8657,
									"name": "extends",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 8658,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 8659,
														"name": "serviceName",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 8660,
														"name": "fieldAlias",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "Record"
															},
															"typeArguments": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "reflection",
																			"declaration": {
																				"id": 8661,
																				"name": "__type",
																				"variant": "declaration",
																				"kind": 65536,
																				"flags": {},
																				"children": [
																					{
																						"id": 8662,
																						"name": "path",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					},
																					{
																						"id": 8663,
																						"name": "forwardArgumentsOnPath",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"type": {
																							"type": "array",
																							"elementType": {
																								"type": "intrinsic",
																								"name": "string"
																							}
																						}
																					},
																					{
																						"id": 8664,
																						"name": "isList",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"type": {
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"children": [
																							8662,
																							8663,
																							8664
																						]
																					}
																				]
																			}
																		}
																	]
																}
															],
															"name": "Record",
															"package": "typescript"
														}
													},
													{
														"id": 8665,
														"name": "relationship",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": 8772,
															"name": "ModuleJoinerRelationship",
															"package": "@medusajs/types"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															8659,
															8660,
															8665
														]
													}
												]
											}
										}
									}
								},
								{
									"id": 8666,
									"name": "serviceName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 8667,
									"name": "primaryKeys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 8668,
									"name": "isLink",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If the module is a link module"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 8669,
									"name": "linkableKeys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Keys that can be used to link to other modules. e.g { product_id: \"Product\" } \"Product\" being the entity it refers to"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 8670,
									"name": "isReadOnlyLink",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true it expands a RemoteQuery property but doesn't create a pivot table"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 8671,
									"name": "databaseConfig",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 8672,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 8673,
													"name": "tableName",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Name of the pivot table. If not provided it is auto generated"
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 8674,
													"name": "idPrefix",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Prefix for the id column. If not provided it is \"link\""
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 8675,
													"name": "extraFields",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 8676,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 8677,
																			"name": "type",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": "date"
																					},
																					{
																						"type": "literal",
																						"value": "time"
																					},
																					{
																						"type": "literal",
																						"value": "datetime"
																					},
																					{
																						"type": "literal",
																						"value": "bigint"
																					},
																					{
																						"type": "literal",
																						"value": "blob"
																					},
																					{
																						"type": "literal",
																						"value": "uint8array"
																					},
																					{
																						"type": "literal",
																						"value": "array"
																					},
																					{
																						"type": "literal",
																						"value": "enumArray"
																					},
																					{
																						"type": "literal",
																						"value": "enum"
																					},
																					{
																						"type": "literal",
																						"value": "json"
																					},
																					{
																						"type": "literal",
																						"value": "integer"
																					},
																					{
																						"type": "literal",
																						"value": "smallint"
																					},
																					{
																						"type": "literal",
																						"value": "tinyint"
																					},
																					{
																						"type": "literal",
																						"value": "mediumint"
																					},
																					{
																						"type": "literal",
																						"value": "float"
																					},
																					{
																						"type": "literal",
																						"value": "double"
																					},
																					{
																						"type": "literal",
																						"value": "boolean"
																					},
																					{
																						"type": "literal",
																						"value": "decimal"
																					},
																					{
																						"type": "literal",
																						"value": "string"
																					},
																					{
																						"type": "literal",
																						"value": "uuid"
																					},
																					{
																						"type": "literal",
																						"value": "text"
																					}
																				]
																			}
																		},
																		{
																			"id": 8678,
																			"name": "defaultValue",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 8679,
																			"name": "nullable",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "boolean"
																			}
																		},
																		{
																			"id": 8680,
																			"name": "options",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "Mikro-orm options for the column"
																					}
																				]
																			},
																			"type": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																					"qualifiedName": "Record"
																				},
																				"typeArguments": [
																					{
																						"type": "intrinsic",
																						"name": "string"
																					},
																					{
																						"type": "intrinsic",
																						"name": "unknown"
																					}
																				],
																				"name": "Record",
																				"package": "typescript"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				8677,
																				8678,
																				8679,
																				8680
																			]
																		}
																	]
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														8673,
														8674,
														8675
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										8655,
										8656,
										8657,
										8666,
										8667,
										8668,
										8669,
										8670,
										8671
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 8772,
			"name": "ModuleJoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 8809,
						"name": "JoinerRelationship",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 8773,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 8774,
									"name": "isInternalService",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true, the relationship is an internal service from the medusa core TODO: Remove when there are no more \"internal\" services"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 8775,
									"name": "deleteCascade",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true, the link joiner will cascade deleting the relationship"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										8774,
										8775
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 8256,
			"name": "IModuleService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"extendedBy": [
				{
					"type": "reference",
					"target": 7920,
					"name": "IProductModuleService"
				}
			]
		},
		{
			"id": 8681,
			"name": "ProductStatus",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 8682,
					"name": "DRAFT",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "draft"
					}
				},
				{
					"id": 8683,
					"name": "PROPOSED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "proposed"
					}
				},
				{
					"id": 8684,
					"name": "PUBLISHED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "published"
					}
				},
				{
					"id": 8685,
					"name": "REJECTED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "rejected"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						8682,
						8683,
						8684,
						8685
					]
				}
			]
		},
		{
			"id": 8279,
			"name": "ProductDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product's data."
					}
				]
			},
			"children": [
				{
					"id": 8280,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8281,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8282,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The handle of the product. The handle can be used to create slug URL paths."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 8283,
					"name": "subtitle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The subttle of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 8284,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 8285,
					"name": "is_giftcard",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product is a gift card."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 8286,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The status of the product."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8681,
						"name": "ProductStatus",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8287,
					"name": "thumbnail",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL of the product's thumbnail."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 8288,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 8289,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 8290,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 8291,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 8292,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The origin country of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 8293,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The HS Code of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 8294,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The MID Code of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 8295,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 8296,
					"name": "collection",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product collection."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 8580,
								"name": "ProductCollectionDTO",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 8297,
					"name": "collection_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product collection id."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 8298,
					"name": "categories",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product categories."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 8613,
									"name": "ProductCategoryDTO",
									"package": "@medusajs/types"
								}
							}
						]
					}
				},
				{
					"id": 8299,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product type."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 8437,
								"name": "ProductTypeDTO",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 8300,
					"name": "type_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product type id."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 8301,
					"name": "tags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product tags."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 8423,
							"name": "ProductTagDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 8302,
					"name": "variants",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product variants."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 8488,
							"name": "ProductVariantDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 8303,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product options."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 8459,
							"name": "ProductOptionDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 8304,
					"name": "images",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product images."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 8686,
							"name": "ProductImageDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 8305,
					"name": "discountable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product can be discounted."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 8306,
					"name": "external_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product in an external system. This is useful if you're integrating the product with a third-party service and want to maintain\na reference to the ID in the integrated service."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 8307,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product was created."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 8308,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product was updated."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 8309,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 8310,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8280,
						8281,
						8282,
						8283,
						8284,
						8285,
						8286,
						8287,
						8288,
						8289,
						8290,
						8291,
						8292,
						8293,
						8294,
						8295,
						8296,
						8297,
						8298,
						8299,
						8300,
						8301,
						8302,
						8303,
						8304,
						8305,
						8306,
						8307,
						8308,
						8309,
						8310
					]
				}
			]
		},
		{
			"id": 8488,
			"name": "ProductVariantDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product variant's data."
					}
				]
			},
			"children": [
				{
					"id": 8489,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8490,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tile of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8491,
					"name": "sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The SKU of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 8492,
					"name": "barcode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The barcode of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 8493,
					"name": "ean",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The EAN of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 8494,
					"name": "upc",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The UPC of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 8495,
					"name": "inventory_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The inventory quantiy of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 8496,
					"name": "allow_backorder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product variant can be ordered when it's out of stock."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 8497,
					"name": "manage_inventory",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product variant's inventory should be managed by the core system."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 8498,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The HS Code of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 8499,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The origin country of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 8500,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The MID Code of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 8501,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 8502,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 8503,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 8504,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 8505,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 8506,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product options."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 8749,
							"name": "ProductVariantOptionDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 8507,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 8508,
					"name": "product",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 8279,
								"name": "ProductDTO",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 8509,
					"name": "product_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product id."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 8510,
					"name": "variant_rank",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "he ranking of the variant among other variants associated with the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 8511,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product variant was created."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 8512,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product variant was updated."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 8513,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product variant was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8489,
						8490,
						8491,
						8492,
						8493,
						8494,
						8495,
						8496,
						8497,
						8498,
						8499,
						8500,
						8501,
						8502,
						8503,
						8504,
						8505,
						8506,
						8507,
						8508,
						8509,
						8510,
						8511,
						8512,
						8513
					]
				}
			]
		},
		{
			"id": 8613,
			"name": "ProductCategoryDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product category's data."
					}
				]
			},
			"children": [
				{
					"id": 8614,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product category."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8615,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the product category."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8616,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the product category."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8617,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The handle of the product category. The handle can be used to create slug URL paths."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8618,
					"name": "is_active",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product category is active."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 8619,
					"name": "is_internal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product category is internal. This can be used to only show the product category to admins and hide it from customers."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 8620,
					"name": "rank",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ranking of the product category among sibling categories."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 8621,
					"name": "parent_category",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated parent category."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 8613,
								"name": "ProductCategoryDTO",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 8622,
					"name": "parent_category_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated parent category id."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 8623,
					"name": "category_children",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated child categories."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 8613,
							"name": "ProductCategoryDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 8624,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product category was created."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 8625,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product category was updated."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8614,
						8615,
						8616,
						8617,
						8618,
						8619,
						8620,
						8621,
						8622,
						8623,
						8624,
						8625
					]
				}
			]
		},
		{
			"id": 8637,
			"name": "CreateProductCategoryDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product category to create."
					}
				]
			},
			"children": [
				{
					"id": 8638,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product category's name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8639,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product category's handle."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8640,
					"name": "is_active",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product category is active."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 8641,
					"name": "is_internal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product category is internal. This can be used to only show the product category to admins and hide it from customers."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 8642,
					"name": "rank",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ranking of the category among sibling categories."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 8643,
					"name": "parent_category_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the parent product category, if it has any."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 8644,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8638,
						8639,
						8640,
						8641,
						8642,
						8643,
						8644
					]
				}
			]
		},
		{
			"id": 8645,
			"name": "UpdateProductCategoryDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The data to update in a product category."
					}
				]
			},
			"children": [
				{
					"id": 8646,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the product category."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8647,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The handle of the product category."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8648,
					"name": "is_active",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product category is active."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 8649,
					"name": "is_internal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product category is internal. This can be used to only show the product category to admins and hide it from customers."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 8650,
					"name": "rank",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ranking of the category among sibling categories."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 8651,
					"name": "parent_category_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the parent product category, if it has any."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 8652,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8646,
						8647,
						8648,
						8649,
						8650,
						8651,
						8652
					]
				}
			]
		},
		{
			"id": 8423,
			"name": "ProductTagDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product tag's data."
					}
				]
			},
			"children": [
				{
					"id": 8424,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product tag."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8425,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the product tag."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8426,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 8427,
					"name": "products",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated products."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 8279,
							"name": "ProductDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8424,
						8425,
						8426,
						8427
					]
				}
			]
		},
		{
			"id": 8580,
			"name": "ProductCollectionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product collection's data."
					}
				]
			},
			"children": [
				{
					"id": 8581,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product collection."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8582,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the product collection."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8583,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The handle of the product collection. The handle can be used to create slug URL paths."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8584,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 8585,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product collection was created."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 8586,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product collection was updated."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 8587,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product collection was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 8588,
					"name": "products",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated products."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 8279,
							"name": "ProductDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8581,
						8582,
						8583,
						8584,
						8585,
						8586,
						8587,
						8588
					]
				}
			]
		},
		{
			"id": 8437,
			"name": "ProductTypeDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product type's data."
					}
				]
			},
			"children": [
				{
					"id": 8438,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8439,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the product type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8440,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 8441,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product type was created."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 8442,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product type was updated."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 8443,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product type was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8438,
						8439,
						8440,
						8441,
						8442,
						8443
					]
				}
			]
		},
		{
			"id": 8459,
			"name": "ProductOptionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product option's data."
					}
				]
			},
			"children": [
				{
					"id": 8460,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product option."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8461,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the product option."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8462,
					"name": "product",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 8279,
								"name": "ProductDTO",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 8463,
					"name": "product_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product id."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 8464,
					"name": "values",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product option values."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 8740,
							"name": "ProductOptionValueDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 8465,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 8466,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product option was created."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 8467,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product option was updated."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 8468,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product option was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8460,
						8461,
						8462,
						8463,
						8464,
						8465,
						8466,
						8467,
						8468
					]
				}
			]
		},
		{
			"id": 8749,
			"name": "ProductVariantOptionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 8750,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product variant option."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8751,
					"name": "option_value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the product variant option."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 8740,
								"name": "ProductOptionValueDTO",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 8752,
					"name": "option_value_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the product variant option id."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 8753,
					"name": "variant",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product variant."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 8488,
								"name": "ProductVariantDTO",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 8754,
					"name": "variant_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product variant id."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 8755,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product variant option was created."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 8756,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product variant option was updated."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 8757,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product variant option was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8750,
						8751,
						8752,
						8753,
						8754,
						8755,
						8756,
						8757
					]
				}
			]
		},
		{
			"id": 8686,
			"name": "ProductImageDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The product image's data."
					}
				]
			},
			"children": [
				{
					"id": 8687,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product image."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8688,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL of the product image."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8689,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 8690,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product image was created."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 8691,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product image was updated."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 8692,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product image was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8687,
						8688,
						8689,
						8690,
						8691,
						8692
					]
				}
			]
		},
		{
			"id": 8740,
			"name": "ProductOptionValueDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The product option value's data."
					}
				]
			},
			"children": [
				{
					"id": 8741,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product option value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8742,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the product option value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8743,
					"name": "option",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product option. It may only be available if the "
							},
							{
								"kind": "code",
								"text": "`option`"
							},
							{
								"kind": "text",
								"text": " relation is expanded."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 8459,
								"name": "ProductOptionDTO",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 8744,
					"name": "option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product option id."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 8745,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 8746,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product option value was created."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 8747,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product option value was updated."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 8748,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product option value was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8741,
						8742,
						8743,
						8744,
						8745,
						8746,
						8747,
						8748
					]
				}
			]
		},
		{
			"id": 8323,
			"name": "FilterableProductProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on retrieved products."
					}
				]
			},
			"children": [
				{
					"id": 8339,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 8323,
									"name": "FilterableProductProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 8707,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8323,
											"name": "FilterableProductProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8708,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 8340,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 8323,
									"name": "FilterableProductProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 8707,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8323,
											"name": "FilterableProductProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8709,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 8324,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search through the products' attributes, such as titles and descriptions, using this search term."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8325,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The status to filter products by"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 8681,
								"name": "ProductStatus",
								"package": "@medusajs/types"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 8681,
									"name": "ProductStatus",
									"package": "@medusajs/types"
								}
							}
						]
					}
				},
				{
					"id": 8326,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The titles to filter products by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 8327,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The handles to filter products by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 8328,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter products by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 8329,
					"name": "is_giftcard",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filters only or excluding gift card products"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 8330,
					"name": "tags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filters on a product's tags."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 8331,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 8332,
									"name": "value",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Values to filter product tags by."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										8332
									]
								}
							]
						}
					}
				},
				{
					"id": 8333,
					"name": "type_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter a product by the ID of the associated type"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 8334,
					"name": "category_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filters on a product's category_id."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 8711,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 8335,
					"name": "collection_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filters a product by its associated collections."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 8711,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 8336,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filters a product based on when it was created"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8711,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8337,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filters a product based on when it was updated"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8711,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8338,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filters soft-deleted products based on the date they were deleted at."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8711,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8339,
						8340,
						8324,
						8325,
						8326,
						8327,
						8328,
						8329,
						8330,
						8333,
						8334,
						8335,
						8336,
						8337,
						8338
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 8707,
					"typeArguments": [
						{
							"type": "reference",
							"target": 8323,
							"name": "FilterableProductProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 8428,
			"name": "FilterableProductTagProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on retrieved product tags."
					}
				]
			},
			"children": [
				{
					"id": 8431,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 8428,
									"name": "FilterableProductTagProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 8707,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8428,
											"name": "FilterableProductTagProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8708,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 8432,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 8428,
									"name": "FilterableProductTagProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 8707,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8428,
											"name": "FilterableProductTagProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8709,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 8429,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter product tags by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 8430,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value to filter product tags by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8431,
						8432,
						8429,
						8430
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 8707,
					"typeArguments": [
						{
							"type": "reference",
							"target": 8428,
							"name": "FilterableProductTagProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 8444,
			"name": "FilterableProductTypeProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on retrieved product types."
					}
				]
			},
			"children": [
				{
					"id": 8447,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 8444,
									"name": "FilterableProductTypeProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 8707,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8444,
											"name": "FilterableProductTypeProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8708,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 8448,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 8444,
									"name": "FilterableProductTypeProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 8707,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8444,
											"name": "FilterableProductTypeProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8709,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 8445,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter product types by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 8446,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value to filter product types by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8447,
						8448,
						8445,
						8446
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 8707,
					"typeArguments": [
						{
							"type": "reference",
							"target": 8444,
							"name": "FilterableProductTypeProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 8469,
			"name": "FilterableProductOptionProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on retrieved product options."
					}
				]
			},
			"children": [
				{
					"id": 8473,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 8469,
									"name": "FilterableProductOptionProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 8707,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8469,
											"name": "FilterableProductOptionProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8708,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 8474,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 8469,
									"name": "FilterableProductOptionProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 8707,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8469,
											"name": "FilterableProductOptionProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8709,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 8470,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter product options by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 8471,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The titles to filter product options by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 8472,
					"name": "product_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the product options by their associated products' IDs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8473,
						8474,
						8470,
						8471,
						8472
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 8707,
					"typeArguments": [
						{
							"type": "reference",
							"target": 8469,
							"name": "FilterableProductOptionProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 8589,
			"name": "FilterableProductCollectionProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on retrieved product collections."
					}
				]
			},
			"children": [
				{
					"id": 8593,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 8589,
									"name": "FilterableProductCollectionProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 8707,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8589,
											"name": "FilterableProductCollectionProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8708,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 8594,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 8589,
									"name": "FilterableProductCollectionProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 8707,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8589,
											"name": "FilterableProductCollectionProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8709,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 8590,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter product collections by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 8591,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The handles to filter product collections by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 8592,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title to filter product collections by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8593,
						8594,
						8590,
						8591,
						8592
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 8707,
					"typeArguments": [
						{
							"type": "reference",
							"target": 8589,
							"name": "FilterableProductCollectionProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 8514,
			"name": "FilterableProductVariantProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on retrieved product variants."
					}
				]
			},
			"children": [
				{
					"id": 8519,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 8514,
									"name": "FilterableProductVariantProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 8707,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8514,
											"name": "FilterableProductVariantProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8708,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 8520,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 8514,
									"name": "FilterableProductVariantProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 8707,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8514,
											"name": "FilterableProductVariantProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8709,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 8515,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter product variants by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 8516,
					"name": "sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The SKUs to filter product variants by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 8517,
					"name": "product_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the product variants by their associated products' IDs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 8518,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter product variants by their associated options."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8519,
						8520,
						8515,
						8516,
						8517,
						8518
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 8707,
					"typeArguments": [
						{
							"type": "reference",
							"target": 8514,
							"name": "FilterableProductVariantProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 8626,
			"name": "FilterableProductCategoryProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on retrieved product categories."
					}
				]
			},
			"children": [
				{
					"id": 8635,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 8626,
									"name": "FilterableProductCategoryProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 8707,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8626,
											"name": "FilterableProductCategoryProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8708,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 8636,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 8626,
									"name": "FilterableProductCategoryProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 8707,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8626,
											"name": "FilterableProductCategoryProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8709,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 8627,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter product categories by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 8628,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The names to filter product categories by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 8629,
					"name": "parent_category_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter product categories by their parent category's ID."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 8630,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The handles to filter product categories by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 8631,
					"name": "is_active",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter product categories by whether they're active."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 8632,
					"name": "is_internal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter product categories by whether they're internal."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 8633,
					"name": "include_descendants_tree",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether to include children of retrieved product categories."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 8634,
					"name": "include_ancestors_tree",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether to include parents of retrieved product categories."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8635,
						8636,
						8627,
						8628,
						8629,
						8630,
						8631,
						8632,
						8633,
						8634
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 8707,
					"typeArguments": [
						{
							"type": "reference",
							"target": 8626,
							"name": "FilterableProductCategoryProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 8595,
			"name": "CreateProductCollectionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product collection to create."
					}
				]
			},
			"children": [
				{
					"id": 8596,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product collection's title."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8597,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product collection's handle. If not provided, the value of this attribute is set to the slug version of the title."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8598,
					"name": "product_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The products to associate with the collection."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 8599,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8596,
						8597,
						8598,
						8599
					]
				}
			]
		},
		{
			"id": 8600,
			"name": "UpsertProductCollectionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The product collection to create or update."
					}
				]
			},
			"children": [
				{
					"id": 8601,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product collection to update. If not provided,\nthe product collection is created. In this case, the "
							},
							{
								"kind": "code",
								"text": "`title`"
							},
							{
								"kind": "text",
								"text": " property is\nrequired."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8602,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the product collection."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8608,
						"name": "UpdateProductCollectionDTO.value"
					}
				},
				{
					"id": 8603,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the product collection."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8609,
						"name": "UpdateProductCollectionDTO.title"
					}
				},
				{
					"id": 8604,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The handle of the product collection."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8610,
						"name": "UpdateProductCollectionDTO.handle"
					}
				},
				{
					"id": 8605,
					"name": "product_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the products to associate with the product collection."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8611,
						"name": "UpdateProductCollectionDTO.product_ids"
					}
				},
				{
					"id": 8606,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8612,
						"name": "UpdateProductCollectionDTO.metadata"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8601,
						8602,
						8603,
						8604,
						8605,
						8606
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 8607,
					"name": "UpdateProductCollectionDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 8607,
			"name": "UpdateProductCollectionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The data to update in a product collection. The "
					},
					{
						"kind": "code",
						"text": "`id`"
					},
					{
						"kind": "text",
						"text": " is used to identify which product collection to update."
					}
				]
			},
			"children": [
				{
					"id": 8608,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the product collection."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8609,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the product collection."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8610,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The handle of the product collection."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8611,
					"name": "product_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the products to associate with the product collection."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 8612,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8608,
						8609,
						8610,
						8611,
						8612
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 8600,
					"name": "UpsertProductCollectionDTO"
				}
			]
		},
		{
			"id": 8449,
			"name": "CreateProductTypeDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product type to create."
					}
				]
			},
			"children": [
				{
					"id": 8450,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product type's value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8451,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8450,
						8451
					]
				}
			]
		},
		{
			"id": 8452,
			"name": "UpsertProductTypeDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product type to create or update"
					}
				]
			},
			"children": [
				{
					"id": 8453,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product type's ID. If provided, the product\ntag is updated. Otheriwse, it's created.\nIn that case, the "
							},
							{
								"kind": "code",
								"text": "`value`"
							},
							{
								"kind": "text",
								"text": " property is required."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8454,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The new value of the product type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8457,
						"name": "UpdateProductTypeDTO.value"
					}
				},
				{
					"id": 8455,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8458,
						"name": "UpdateProductTypeDTO.metadata"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8453,
						8454,
						8455
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 8456,
					"name": "UpdateProductTypeDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 8456,
			"name": "UpdateProductTypeDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The data to update in a product type. The "
					},
					{
						"kind": "code",
						"text": "`id`"
					},
					{
						"kind": "text",
						"text": " is used to identify which product type to update."
					}
				]
			},
			"children": [
				{
					"id": 8457,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The new value of the product type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8458,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8457,
						8458
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 8452,
					"name": "UpsertProductTypeDTO"
				}
			]
		},
		{
			"id": 8733,
			"name": "UpsertProductImageDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product image to create or update."
					}
				]
			},
			"children": [
				{
					"id": 8734,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product image's ID. If not provided, the image is created. In\nthat case, the "
							},
							{
								"kind": "code",
								"text": "`url`"
							},
							{
								"kind": "text",
								"text": " property is required."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8735,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The new URL of the product image."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8804,
						"name": "UpdateProductImageDTO.url"
					}
				},
				{
					"id": 8736,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8805,
						"name": "UpdateProductImageDTO.metadata"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8734,
						8735,
						8736
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 8803,
					"name": "UpdateProductImageDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 8803,
			"name": "UpdateProductImageDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The data to update in a product image. The "
					},
					{
						"kind": "code",
						"text": "`id`"
					},
					{
						"kind": "text",
						"text": " is used to identify which product image to update."
					}
				]
			},
			"children": [
				{
					"id": 8804,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The new URL of the product image."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8805,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8804,
						8805
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 8733,
					"name": "UpsertProductImageDTO"
				}
			]
		},
		{
			"id": 8433,
			"name": "CreateProductTagDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product tag to create."
					}
				]
			},
			"children": [
				{
					"id": 8434,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the product tag."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8434
					]
				}
			]
		},
		{
			"id": 8737,
			"name": "UpsertProductTagDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product tag to create or update."
					}
				]
			},
			"children": [
				{
					"id": 8738,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product tag to update. If not provided, the tag\nis created. In that case, the "
							},
							{
								"kind": "code",
								"text": "`value`"
							},
							{
								"kind": "text",
								"text": " property is required."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8739,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the product tag."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8436,
						"name": "UpdateProductTagDTO.value"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8738,
						8739
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 8435,
					"name": "UpdateProductTagDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 8435,
			"name": "UpdateProductTagDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The data to update in a product tag. The "
					},
					{
						"kind": "code",
						"text": "`id`"
					},
					{
						"kind": "text",
						"text": " is used to identify which product tag to update."
					}
				]
			},
			"children": [
				{
					"id": 8436,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the product tag."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8436
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 8737,
					"name": "UpsertProductTagDTO"
				}
			]
		},
		{
			"id": 8475,
			"name": "CreateProductOptionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product option to create."
					}
				]
			},
			"children": [
				{
					"id": 8476,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product option's title."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8477,
					"name": "values",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product option values."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 8478,
					"name": "product_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8476,
						8477,
						8478
					]
				}
			]
		},
		{
			"id": 8479,
			"name": "UpsertProductOptionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product option to create or update."
					}
				]
			},
			"children": [
				{
					"id": 8480,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product option to update. If not provided, the product\noption is created. In that case, the "
							},
							{
								"kind": "code",
								"text": "`title`"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "`values`"
							},
							{
								"kind": "text",
								"text": " properties are\nrequired."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8481,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product option's title."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8485,
						"name": "UpdateProductOptionDTO.title"
					}
				},
				{
					"id": 8482,
					"name": "values",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product option values."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8486,
						"name": "UpdateProductOptionDTO.values"
					}
				},
				{
					"id": 8483,
					"name": "product_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8487,
						"name": "UpdateProductOptionDTO.product_id"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8480,
						8481,
						8482,
						8483
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 8484,
					"name": "UpdateProductOptionDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 8484,
			"name": "UpdateProductOptionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 8485,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product option's title."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8486,
					"name": "values",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product option values."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 8487,
					"name": "product_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8485,
						8486,
						8487
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 8479,
					"name": "UpsertProductOptionDTO"
				}
			]
		},
		{
			"id": 8521,
			"name": "CreateProductVariantDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product variant to create."
					}
				]
			},
			"children": [
				{
					"id": 8522,
					"name": "product_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The id of the product"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8523,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tile of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8524,
					"name": "sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The SKU of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8525,
					"name": "barcode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The barcode of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8526,
					"name": "ean",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The EAN of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8527,
					"name": "upc",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The UPC of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8528,
					"name": "allow_backorder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product variant can be ordered when it's out of stock."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 8529,
					"name": "inventory_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The inventory quantiy of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 8530,
					"name": "manage_inventory",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product variant's inventory should be managed by the core system."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 8531,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The HS Code of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8532,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The origin country of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8533,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The MID Code of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8534,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8535,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 8536,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 8537,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 8538,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 8539,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The options of the variant. Each key is an option's title, and value\nis an option's value. If an option with the specified title doesn't exist,\na new one is created."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n`{ Color: \"Blue\" }`\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 8540,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8522,
						8523,
						8524,
						8525,
						8526,
						8527,
						8528,
						8529,
						8530,
						8531,
						8532,
						8533,
						8534,
						8535,
						8536,
						8537,
						8538,
						8539,
						8540
					]
				}
			]
		},
		{
			"id": 8541,
			"name": "UpsertProductVariantDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product variant to create or update."
					}
				]
			},
			"children": [
				{
					"id": 8542,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product variant to update."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8543,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tile of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8562,
						"name": "UpdateProductVariantDTO.title"
					}
				},
				{
					"id": 8544,
					"name": "sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The SKU of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8563,
						"name": "UpdateProductVariantDTO.sku"
					}
				},
				{
					"id": 8545,
					"name": "barcode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The barcode of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8564,
						"name": "UpdateProductVariantDTO.barcode"
					}
				},
				{
					"id": 8546,
					"name": "ean",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The EAN of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8565,
						"name": "UpdateProductVariantDTO.ean"
					}
				},
				{
					"id": 8547,
					"name": "upc",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The UPC of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8566,
						"name": "UpdateProductVariantDTO.upc"
					}
				},
				{
					"id": 8548,
					"name": "allow_backorder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product variant can be ordered when it's out of stock."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8567,
						"name": "UpdateProductVariantDTO.allow_backorder"
					}
				},
				{
					"id": 8549,
					"name": "inventory_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The inventory quantiy of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8568,
						"name": "UpdateProductVariantDTO.inventory_quantity"
					}
				},
				{
					"id": 8550,
					"name": "manage_inventory",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product variant's inventory should be managed by the core system."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8569,
						"name": "UpdateProductVariantDTO.manage_inventory"
					}
				},
				{
					"id": 8551,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The HS Code of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8570,
						"name": "UpdateProductVariantDTO.hs_code"
					}
				},
				{
					"id": 8552,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The origin country of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8571,
						"name": "UpdateProductVariantDTO.origin_country"
					}
				},
				{
					"id": 8553,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The MID Code of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8572,
						"name": "UpdateProductVariantDTO.mid_code"
					}
				},
				{
					"id": 8554,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8573,
						"name": "UpdateProductVariantDTO.material"
					}
				},
				{
					"id": 8555,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8574,
						"name": "UpdateProductVariantDTO.weight"
					}
				},
				{
					"id": 8556,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8575,
						"name": "UpdateProductVariantDTO.length"
					}
				},
				{
					"id": 8557,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8576,
						"name": "UpdateProductVariantDTO.height"
					}
				},
				{
					"id": 8558,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8577,
						"name": "UpdateProductVariantDTO.width"
					}
				},
				{
					"id": 8559,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product variant options to associate with the product variant."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8578,
						"name": "UpdateProductVariantDTO.options"
					}
				},
				{
					"id": 8560,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8579,
						"name": "UpdateProductVariantDTO.metadata"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8542,
						8543,
						8544,
						8545,
						8546,
						8547,
						8548,
						8549,
						8550,
						8551,
						8552,
						8553,
						8554,
						8555,
						8556,
						8557,
						8558,
						8559,
						8560
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 8561,
					"name": "UpdateProductVariantDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 8561,
			"name": "UpdateProductVariantDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The data to update in a product variant. The "
					},
					{
						"kind": "code",
						"text": "`id`"
					},
					{
						"kind": "text",
						"text": " is used to identify which product variant to update."
					}
				]
			},
			"children": [
				{
					"id": 8562,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tile of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8563,
					"name": "sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The SKU of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8564,
					"name": "barcode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The barcode of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8565,
					"name": "ean",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The EAN of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8566,
					"name": "upc",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The UPC of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8567,
					"name": "allow_backorder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product variant can be ordered when it's out of stock."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 8568,
					"name": "inventory_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The inventory quantiy of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 8569,
					"name": "manage_inventory",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product variant's inventory should be managed by the core system."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 8570,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The HS Code of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8571,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The origin country of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8572,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The MID Code of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8573,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8574,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 8575,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 8576,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 8577,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 8578,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product variant options to associate with the product variant."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 8579,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8562,
						8563,
						8564,
						8565,
						8566,
						8567,
						8568,
						8569,
						8570,
						8571,
						8572,
						8573,
						8574,
						8575,
						8576,
						8577,
						8578,
						8579
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 8541,
					"name": "UpsertProductVariantDTO"
				}
			]
		},
		{
			"id": 8341,
			"name": "CreateProductDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product to create."
					}
				]
			},
			"children": [
				{
					"id": 8342,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8343,
					"name": "subtitle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The subttle of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8344,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8345,
					"name": "is_giftcard",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product is a gift card."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 8346,
					"name": "discountable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product can be discounted."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 8347,
					"name": "thumbnail",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL of the product's thumbnail."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8348,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The handle of the product. The handle can be used to create slug URL paths.\nIf not supplied, the value of the "
							},
							{
								"kind": "code",
								"text": "`handle`"
							},
							{
								"kind": "text",
								"text": " attribute of the product is set to the slug version of the "
							},
							{
								"kind": "code",
								"text": "`title`"
							},
							{
								"kind": "text",
								"text": " attribute."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8349,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The status of the product."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8681,
						"name": "ProductStatus",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8350,
					"name": "images",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated images to created or updated."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 8733,
							"name": "UpsertProductImageDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 8351,
					"name": "type_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product type id to associate with the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8352,
					"name": "collection_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product collection to associate with the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8353,
					"name": "tags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated tags to be created or updated."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 8737,
							"name": "UpsertProductTagDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 8354,
					"name": "category_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product categories to associate with the product."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 8355,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product options to be created and associated with the product."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 8475,
							"name": "CreateProductOptionDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 8356,
					"name": "variants",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product variants to be created and associated with the product."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 8521,
							"name": "CreateProductVariantDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 8357,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 8358,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 8359,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 8360,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 8361,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The origin country of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8362,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The HS Code of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8363,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8364,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The MID Code of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8365,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8342,
						8343,
						8344,
						8345,
						8346,
						8347,
						8348,
						8349,
						8350,
						8351,
						8352,
						8353,
						8354,
						8355,
						8356,
						8357,
						8358,
						8359,
						8360,
						8361,
						8362,
						8363,
						8364,
						8365
					]
				}
			]
		},
		{
			"id": 8366,
			"name": "UpsertProductDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product to be created or updated."
					}
				]
			},
			"children": [
				{
					"id": 8367,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product to update. If not provided, a product\nis created instead. In that case, the "
							},
							{
								"kind": "code",
								"text": "`title`"
							},
							{
								"kind": "text",
								"text": " property is required."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8368,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8393,
						"name": "UpdateProductDTO.title"
					}
				},
				{
					"id": 8369,
					"name": "subtitle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The subttle of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8394,
						"name": "UpdateProductDTO.subtitle"
					}
				},
				{
					"id": 8370,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8395,
						"name": "UpdateProductDTO.description"
					}
				},
				{
					"id": 8371,
					"name": "is_giftcard",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product is a gift card."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8396,
						"name": "UpdateProductDTO.is_giftcard"
					}
				},
				{
					"id": 8372,
					"name": "discountable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product can be discounted."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8397,
						"name": "UpdateProductDTO.discountable"
					}
				},
				{
					"id": 8373,
					"name": "thumbnail",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL of the product's thumbnail."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8398,
						"name": "UpdateProductDTO.thumbnail"
					}
				},
				{
					"id": 8374,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The handle of the product. The handle can be used to create slug URL paths.\nIf not supplied, the value of the "
							},
							{
								"kind": "code",
								"text": "`handle`"
							},
							{
								"kind": "text",
								"text": " attribute of the product is set to the slug version of the "
							},
							{
								"kind": "code",
								"text": "`title`"
							},
							{
								"kind": "text",
								"text": " attribute."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8399,
						"name": "UpdateProductDTO.handle"
					}
				},
				{
					"id": 8375,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The status of the product."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8681,
						"name": "ProductStatus",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8400,
						"name": "UpdateProductDTO.status"
					}
				},
				{
					"id": 8376,
					"name": "images",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated images to create or update."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 8733,
							"name": "UpsertProductImageDTO",
							"package": "@medusajs/types"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8401,
						"name": "UpdateProductDTO.images"
					}
				},
				{
					"id": 8377,
					"name": "type_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product type to associate with the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8402,
						"name": "UpdateProductDTO.type_id"
					}
				},
				{
					"id": 8378,
					"name": "collection_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product collection to associate with the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8403,
						"name": "UpdateProductDTO.collection_id"
					}
				},
				{
					"id": 8379,
					"name": "tags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated tags to create or update."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 8737,
							"name": "UpsertProductTagDTO",
							"package": "@medusajs/types"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8404,
						"name": "UpdateProductDTO.tags"
					}
				},
				{
					"id": 8380,
					"name": "category_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product categories to associate with the product."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8405,
						"name": "UpdateProductDTO.category_ids"
					}
				},
				{
					"id": 8381,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated options to create or update."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 8479,
							"name": "UpsertProductOptionDTO",
							"package": "@medusajs/types"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8406,
						"name": "UpdateProductDTO.options"
					}
				},
				{
					"id": 8382,
					"name": "variants",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product variants to be created and associated with the product.\nYou can also update existing product variants associated with the product."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 8541,
							"name": "UpsertProductVariantDTO",
							"package": "@medusajs/types"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8407,
						"name": "UpdateProductDTO.variants"
					}
				},
				{
					"id": 8383,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8408,
						"name": "UpdateProductDTO.width"
					}
				},
				{
					"id": 8384,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8409,
						"name": "UpdateProductDTO.height"
					}
				},
				{
					"id": 8385,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8410,
						"name": "UpdateProductDTO.length"
					}
				},
				{
					"id": 8386,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8411,
						"name": "UpdateProductDTO.weight"
					}
				},
				{
					"id": 8387,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The origin country of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8412,
						"name": "UpdateProductDTO.origin_country"
					}
				},
				{
					"id": 8388,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The HS Code of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8413,
						"name": "UpdateProductDTO.hs_code"
					}
				},
				{
					"id": 8389,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8414,
						"name": "UpdateProductDTO.material"
					}
				},
				{
					"id": 8390,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The MID Code of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8415,
						"name": "UpdateProductDTO.mid_code"
					}
				},
				{
					"id": 8391,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8416,
						"name": "UpdateProductDTO.metadata"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8367,
						8368,
						8369,
						8370,
						8371,
						8372,
						8373,
						8374,
						8375,
						8376,
						8377,
						8378,
						8379,
						8380,
						8381,
						8382,
						8383,
						8384,
						8385,
						8386,
						8387,
						8388,
						8389,
						8390,
						8391
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 8392,
					"name": "UpdateProductDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 8392,
			"name": "UpdateProductDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The data to update in a product."
					}
				]
			},
			"children": [
				{
					"id": 8393,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8394,
					"name": "subtitle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The subttle of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8395,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8396,
					"name": "is_giftcard",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product is a gift card."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 8397,
					"name": "discountable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product can be discounted."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 8398,
					"name": "thumbnail",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL of the product's thumbnail."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8399,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The handle of the product. The handle can be used to create slug URL paths.\nIf not supplied, the value of the "
							},
							{
								"kind": "code",
								"text": "`handle`"
							},
							{
								"kind": "text",
								"text": " attribute of the product is set to the slug version of the "
							},
							{
								"kind": "code",
								"text": "`title`"
							},
							{
								"kind": "text",
								"text": " attribute."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8400,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The status of the product."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8681,
						"name": "ProductStatus",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8401,
					"name": "images",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated images to create or update."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 8733,
							"name": "UpsertProductImageDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 8402,
					"name": "type_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product type to associate with the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 8403,
					"name": "collection_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product collection to associate with the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 8404,
					"name": "tags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated tags to create or update."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 8737,
							"name": "UpsertProductTagDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 8405,
					"name": "category_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product categories to associate with the product."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 8406,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated options to create or update."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 8479,
							"name": "UpsertProductOptionDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 8407,
					"name": "variants",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product variants to be created and associated with the product.\nYou can also update existing product variants associated with the product."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 8541,
							"name": "UpsertProductVariantDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 8408,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 8409,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 8410,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 8411,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 8412,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The origin country of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8413,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The HS Code of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8414,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8415,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The MID Code of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8416,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8393,
						8394,
						8395,
						8396,
						8397,
						8398,
						8399,
						8400,
						8401,
						8402,
						8403,
						8404,
						8405,
						8406,
						8407,
						8408,
						8409,
						8410,
						8411,
						8412,
						8413,
						8414,
						8415,
						8416
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 8366,
					"name": "UpsertProductDTO"
				}
			]
		},
		{
			"id": 7920,
			"name": "IProductModuleService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The main service interface for the Product Module."
					}
				]
			},
			"children": [
				{
					"id": 7921,
					"name": "retrieve",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 7922,
							"name": "retrieve",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a product by its ID"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved product."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a product by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst product = await productModuleService.retrieve(\"prod_123\")\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst product = await productModuleService.retrieve(\"prod_123\", {\n  relations: [\"categories\"],\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 7923,
									"name": "productId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the product to retrieve."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 7924,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8267,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8279,
												"name": "ProductDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 7925,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 8279,
										"name": "ProductDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 7926,
					"name": "list",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 7927,
							"name": "list",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of price sets based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of products."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of products using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst products = await productModuleService.list({\n  id: [\"prod_123\", \"prod_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the products:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst products = await productModuleService.list(\n  {\n    id: [\"prod_123\", \"prod_321\"],\n  },\n  {\n    relations: [\"categories\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst products = await productModuleService.list(\n  {\n    id: [\"prod_123\", \"prod_321\"],\n  },\n  {\n    relations: [\"categories\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 7928,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved products."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8323,
										"name": "FilterableProductProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 7929,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the products are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8267,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8279,
												"name": "ProductDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 7930,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8279,
											"name": "ProductDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 7931,
					"name": "listAndCount",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 7932,
							"name": "listAndCount",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of products along with the total count of available products satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of products along with the total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of products using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [products, count] =\n  await productModuleService.listAndCount({\n    id: [\"prod_123\", \"prod_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the products:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [products, count] =\n  await productModuleService.listAndCount(\n    {\n      id: [\"prod_123\", \"prod_321\"],\n    },\n    {\n      relations: [\"categories\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [products, count] =\n  await productModuleService.listAndCount(\n    {\n      id: [\"prod_123\", \"prod_321\"],\n    },\n    {\n      relations: [\"categories\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 7933,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved products."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8323,
										"name": "FilterableProductProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 7934,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the products are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8267,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8279,
												"name": "ProductDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 7935,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 8279,
													"name": "ProductDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 7936,
					"name": "create",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 7937,
							"name": "create",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create a list of products."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of created products."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst products = await productModuleService.create([\n  {\n    title: \"Shirt\",\n  },\n  {\n    title: \"Pants\",\n    handle: \"pants\",\n  },\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 7938,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The products to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8341,
											"name": "CreateProductDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 7939,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8279,
											"name": "ProductDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 7940,
							"name": "create",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create a product."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created product."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst product = await productModuleService.create({\n  title: \"Shirt\",\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 7941,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The product to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8341,
										"name": "CreateProductDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 7942,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 8279,
										"name": "ProductDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 7943,
					"name": "upsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 7944,
							"name": "upsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing products, or creates new ones if they don't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated and created products."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst products = await productModuleService.upsert([\n  {\n    id: \"prod_123\",\n    handle: \"pant\",\n  },\n  {\n    title: \"Shirt\",\n  },\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 7945,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for each product."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8366,
											"name": "UpsertProductDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 7946,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8279,
											"name": "ProductDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 7947,
							"name": "upsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates the product if it exists, or creates a new ones if it doesn't."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated or created product."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst product = await productModuleService.upsert({\n  title: \"Shirt\",\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 7948,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for the new product."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8366,
										"name": "UpsertProductDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 7949,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 8279,
										"name": "ProductDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 7950,
					"name": "update",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 7951,
							"name": "update",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a product."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated product."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst product = await productModuleService.update(\n  \"prod_123\",\n  {\n    handle: \"pant\",\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 7952,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the product to be updated."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 7953,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes of the product to be updated"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8392,
										"name": "UpdateProductDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 7954,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 8279,
										"name": "ProductDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 7955,
							"name": "update",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a list of products matching the specified filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated products."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst products = await productModuleService.update(\n  {\n    title: \"Pant\",\n  },\n  {\n    handle: \"pant\",\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 7956,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters specifying which products to update."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8323,
										"name": "FilterableProductProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 7957,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to be updated on the selected products"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8392,
										"name": "UpdateProductDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 7958,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8279,
											"name": "ProductDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 7959,
					"name": "delete",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 7960,
							"name": "delete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete products. Unlike the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "softDelete",
										"target": 7963,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " method, this method will completely remove the products and they can no longer be accessed or retrieved."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the products are successfully deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.delete([\"prod_123\", \"prod_321\"])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 7961,
									"name": "productIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the products to be deleted."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 7962,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 7963,
					"name": "softDelete",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 7964,
							"name": "softDelete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete products. Unlike the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "delete",
										"target": 7959,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " method, this method won't completely remove the product. It can still be accessed or retrieved using methods like "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "retrieve",
										"target": 7921,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " if you pass the "
									},
									{
										"kind": "code",
										"text": "`withDeleted`"
									},
									{
										"kind": "text",
										"text": " property to the "
									},
									{
										"kind": "code",
										"text": "`config`"
									},
									{
										"kind": "text",
										"text": " object parameter.\n\nThe soft-deleted products can be restored using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "restore",
										"target": 7969,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted, such as the ID of associated product variants. The object's keys are the ID attribute names of the product entity's relations, such as "
											},
											{
												"kind": "code",
												"text": "`variant_id`"
											},
											{
												"kind": "text",
												"text": ", and its value is an array of strings, each being the ID of a record associated with the product through this relation, such as the IDs of associated product variants.\n\nIf there are no related records, the promise resolved to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.softDelete([\n  \"prod_123\",\n  \"prod_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 7965,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 7966,
									"name": "productIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the products to soft-delete."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 7967,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to soft delete along with the each of the products. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the product's relation attribute names, such as "
											},
											{
												"kind": "code",
												"text": "`variant_id`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8417,
										"typeArguments": [
											{
												"type": "reference",
												"target": 7965,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 7968,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 7969,
					"name": "restore",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 7970,
							"name": "restore",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to restore products which were deleted using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "softDelete",
										"target": 7963,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored, such as the ID of associated product variants. The object's keys are the ID attribute names of the product entity's relations, such as "
											},
											{
												"kind": "code",
												"text": "`variant_id`"
											},
											{
												"kind": "text",
												"text": ", and its value is an array of strings, each being the ID of the record associated with the product through this relation, such as the IDs of associated product variants.\n\nIf there are no related records that were restored, the promise resolved to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.restore([\"prod_123\", \"prod_321\"])\n```"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 7971,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 7972,
									"name": "productIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the products to restore."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 7973,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the products. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the product's relation attribute names, such as "
											},
											{
												"kind": "code",
												"text": "`variant_id`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8420,
										"typeArguments": [
											{
												"type": "reference",
												"target": 7971,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 7974,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 7975,
					"name": "retrieveTag",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 7976,
							"name": "retrieveTag",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a tag by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved product tag."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a product tag by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst tag = await productModuleService.retrieveTag(\"ptag_123\")\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst tag = await productModuleService.retrieveTag(\n  \"ptag_123\",\n  {\n    relations: [\"products\"],\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 7977,
									"name": "tagId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the tag to retrieve."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 7978,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product tag is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product tag."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8267,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8423,
												"name": "ProductTagDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 7979,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 8423,
										"name": "ProductTagDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 7980,
					"name": "listTags",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 7981,
							"name": "listTags",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of tags based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of product tags."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of product tags using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst tags = await productModuleService.listTags({\n  id: [\"ptag_123\", \"ptag_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the product tags:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst tags = await productModuleService.listTags(\n  {\n    id: [\"ptag_123\", \"ptag_321\"],\n  },\n  {\n    relations: [\"products\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst tags = await productModuleService.listTags(\n  {\n    id: [\"ptag_123\", \"ptag_321\"],\n  },\n  {\n    relations: [\"products\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 7982,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters applied on the retrieved product tags."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8428,
										"name": "FilterableProductTagProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 7983,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product tags are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product tag."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8267,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8423,
												"name": "ProductTagDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 7984,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8423,
											"name": "ProductTagDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 7985,
					"name": "listAndCountTags",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 7986,
							"name": "listAndCountTags",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of product tags along with the total count of available product tags satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of product tags along with the total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of product tags using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [tags, count] =\n  await productModuleService.listAndCountTags({\n    id: [\"ptag_123\", \"ptag_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the product tags:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [tags, count] =\n  await productModuleService.listAndCountTags(\n    {\n      id: [\"ptag_123\", \"ptag_321\"],\n    },\n    {\n      relations: [\"products\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [tags, count] =\n  await productModuleService.listAndCountTags(\n    {\n      id: [\"ptag_123\", \"ptag_321\"],\n    },\n    {\n      relations: [\"products\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 7987,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters applied on the retrieved product tags."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8428,
										"name": "FilterableProductTagProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 7988,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product tags are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product tag."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8267,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8423,
												"name": "ProductTagDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 7989,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 8423,
													"name": "ProductTagDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 7990,
					"name": "createTags",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 7991,
							"name": "createTags",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create product tags."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of product tags."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst tags = await productModuleService.createTags([\n  {\n    value: \"Clothes\",\n  },\n  {\n    value: \"Accessories\",\n  },\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 7992,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The product tags to create."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8433,
											"name": "CreateProductTagDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 7993,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8423,
											"name": "ProductTagDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 7998,
					"name": "deleteTags",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 7999,
							"name": "deleteTags",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete product tags by their ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the product tags are successfully deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.deleteTags([\n  \"ptag_123\",\n  \"ptag_321\",\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8000,
									"name": "productTagIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the product tags to be deleted."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 8001,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8002,
					"name": "retrieveType",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8003,
							"name": "retrieveType",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a product type by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved product type."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst productType =\n  await productModuleService.retrieveType(\"ptyp_123\")\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8004,
									"name": "typeId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the product type to retrieve."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 8005,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product type is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product type."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8267,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8437,
												"name": "ProductTypeDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8006,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 8437,
										"name": "ProductTypeDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8007,
					"name": "listTypes",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8008,
							"name": "listTypes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of product types based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of product types."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of product types using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst productTypes = await productModuleService.listTypes({\n  id: [\"ptyp_123\", \"ptyp_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst productTypes = await productModuleService.listTypes(\n  {\n    id: [\"ptyp_123\", \"ptyp_321\"],\n  },\n  {\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8009,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved product types."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8444,
										"name": "FilterableProductTypeProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8010,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product types are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product type."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8267,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8437,
												"name": "ProductTypeDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8011,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8437,
											"name": "ProductTypeDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8012,
					"name": "listAndCountTypes",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8013,
							"name": "listAndCountTypes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of product types along with the total count of available product types satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of product types along with their total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of product types using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [productTypes, count] =\n  await productModuleService.listAndCountTypes({\n    id: [\"ptyp_123\", \"ptyp_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [productTypes, count] =\n  await productModuleService.listAndCountTypes(\n    {\n      id: [\"ptyp_123\", \"ptyp_321\"],\n    },\n    {\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8014,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to be applied on the retrieved product type."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8444,
										"name": "FilterableProductTypeProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8015,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product types are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product type."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8267,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8437,
												"name": "ProductTypeDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8016,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 8437,
													"name": "ProductTypeDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8017,
					"name": "createTypes",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8018,
							"name": "createTypes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create a product type."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of created product types."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst productTypes = await productModuleService.createTypes([\n  {\n    value: \"digital\",\n  },\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8019,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The product types to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8449,
											"name": "CreateProductTypeDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 8020,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8437,
											"name": "ProductTypeDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 8021,
							"name": "createTypes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create a product type."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created product type."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst productType = await productModuleService.createTypes({\n  value: \"digital\",\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8022,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The product type to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8449,
										"name": "CreateProductTypeDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8023,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 8437,
										"name": "ProductTypeDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8024,
					"name": "upsertTypes",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8025,
							"name": "upsertTypes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing types, or creates new ones if they don't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated and created types."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst productTypes = await productModuleService.upsertTypes([\n  {\n    id: \"ptyp_123\",\n    metadata: {\n      test: true,\n    },\n  },\n  {\n    value: \"Digital\",\n  },\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8026,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for each type."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8452,
											"name": "UpsertProductTypeDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 8027,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8437,
											"name": "ProductTypeDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 8028,
							"name": "upsertTypes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates an existing type, or creates a new one if it doesn't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated or created type."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst productType = await productModuleService.upsertTypes({\n  id: \"ptyp_123\",\n  metadata: {\n    test: true,\n  },\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8029,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for the type."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8452,
										"name": "UpsertProductTypeDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8030,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 8437,
										"name": "ProductTypeDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8031,
					"name": "updateTypes",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8032,
							"name": "updateTypes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a type."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated type."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst productType = await productModuleService.updateTypes(\n  \"ptyp_123\",\n  {\n    value: \"Digital\",\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8033,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the type to be updated."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 8034,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes of the type to be updated"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8456,
										"name": "UpdateProductTypeDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8035,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 8437,
										"name": "ProductTypeDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 8036,
							"name": "updateTypes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a list of types matching the specified filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated types."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst productTypes = await productModuleService.updateTypes(\n  {\n    id: [\"ptyp_123\", \"ptyp_321\"],\n  },\n  {\n    value: \"Digital\",\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8037,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters specifying which types to update."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8444,
										"name": "FilterableProductTypeProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8038,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to be updated on the selected types"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8456,
										"name": "UpdateProductTypeDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8039,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8437,
											"name": "ProductTypeDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8040,
					"name": "deleteTypes",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8041,
							"name": "deleteTypes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete a product type."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the product types are successfully deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.deleteTypes([\n  \"ptyp_123\",\n  \"ptyp_321\",\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8042,
									"name": "productTypeIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the product types to be deleted."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 8043,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8044,
					"name": "softDeleteTypes",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8045,
							"name": "softDeleteTypes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete types. Unlike the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "delete",
										"target": 7959,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " method, this method won't completely remove the type. It can still be accessed or retrieved using methods like "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "retrieve",
										"target": 7921,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " if you pass the "
									},
									{
										"kind": "code",
										"text": "`withDeleted`"
									},
									{
										"kind": "text",
										"text": " property to the "
									},
									{
										"kind": "code",
										"text": "`config`"
									},
									{
										"kind": "text",
										"text": " object parameter.\n\nThe soft-deleted types can be restored using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "restore",
										"target": 7969,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted. The object's keys are the ID attribute names of the type entity's relations, and its value is an array of strings, each being the ID of a record associated with the type through this relation.\n\nIf there are no related records, the promise resolved to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.softDeleteTypes([\n  \"ptyp_123\",\n  \"ptyp_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 8046,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 8047,
									"name": "typeIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the types to soft-delete."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 8048,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to soft delete along with the each of the types. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the type's relation attribute names."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8417,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8046,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8049,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8050,
					"name": "restoreTypes",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8051,
							"name": "restoreTypes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to restore types which were deleted using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "softDelete",
										"target": 7963,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored. The object's keys are the ID attribute names of the type entity's relations, and its value is an array of strings, each being the ID of the record associated with the type through this relation.\n\nIf there are no related records that were restored, the promise resolved to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.restoreTypes([\n  \"ptyp_123\",\n  \"ptyp_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 8052,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 8053,
									"name": "typeIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the types to restore."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 8054,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the types. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the type's relation attribute names."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8420,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8052,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8055,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8056,
					"name": "retrieveOption",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8057,
							"name": "retrieveOption",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a product option by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved product option."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a product option by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst option =\n  await productModuleService.retrieveOption(\"opt_123\")\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst option = await productModuleService.retrieveOption(\n  \"opt_123\",\n  {\n    relations: [\"product\"],\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8058,
									"name": "optionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the product option to retrieve."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 8059,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product option is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product option."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8267,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8459,
												"name": "ProductOptionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8060,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 8459,
										"name": "ProductOptionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8061,
					"name": "listOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8062,
							"name": "listOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of product options based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of product options."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of product options using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst options = await productModuleService.listOptions({\n id: [\"opt_123\", \"opt_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the product options:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst options = await productModuleService.listOptions(\n  {\n    id: [\"opt_123\", \"opt_321\"],\n  },\n  {\n    relations: [\"product\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst options = await productModuleService.listOptions(\n  {\n    id: [\"opt_123\", \"opt_321\"],\n  },\n  {\n    relations: [\"product\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8063,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters applied on the retrieved product options."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8469,
										"name": "FilterableProductOptionProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8064,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product options are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product option."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8267,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8459,
												"name": "ProductOptionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8065,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8459,
											"name": "ProductOptionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8066,
					"name": "listAndCountOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8067,
							"name": "listAndCountOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of product options along with the total count of available product options satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of product options along with the total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of product options using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [options, count] =\n  await productModuleService.listAndCountOptions({\n    id: [\"opt_123\", \"opt_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the product types:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [options, count] =\n  await productModuleService.listAndCountOptions(\n    {\n      id: [\"opt_123\", \"opt_321\"],\n    },\n    {\n      relations: [\"product\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [options, count] =\n  await productModuleService.listAndCountOptions(\n    {\n      id: [\"opt_123\", \"opt_321\"],\n    },\n    {\n      relations: [\"product\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8068,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters applied on the retrieved product options."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8469,
										"name": "FilterableProductOptionProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8069,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product options are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product option."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8267,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8459,
												"name": "ProductOptionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8070,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 8459,
													"name": "ProductOptionDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8071,
					"name": "createOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8072,
							"name": "createOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create product options."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of created product options."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst options = await productModuleService.createOptions([\n  {\n    title: \"Color\",\n    values: [\"Blue\", \"Green\"],\n    product_id: \"prod_123\",\n  },\n  {\n    title: \"Size\",\n    values: [\"Small\", \"Medium\"],\n    product_id: \"prod_321\",\n  },\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8073,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The product options to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8475,
											"name": "CreateProductOptionDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 8074,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8459,
											"name": "ProductOptionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 8075,
							"name": "createOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create a product option."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created product option."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst option = await productModuleService.createOptions({\n  title: \"Color\",\n  values: [\"Blue\", \"Green\"],\n  product_id: \"prod_123\",\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8076,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The product option to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8475,
										"name": "CreateProductOptionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8077,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 8459,
										"name": "ProductOptionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8078,
					"name": "upsertOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8079,
							"name": "upsertOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing options, or creates new ones if they don't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated and created options."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst options = await productModuleService.upsertOptions([\n  {\n    id: \"opt_123\",\n    title: \"Color\",\n  },\n  {\n    title: \"Color\",\n    values: [\"Blue\", \"Green\"],\n    product_id: \"prod_123\",\n  },\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8080,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for each option."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8479,
											"name": "UpsertProductOptionDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 8081,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8459,
											"name": "ProductOptionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 8082,
							"name": "upsertOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates an existing option, or creates a new one if it doesn't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated or created option."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst option = await productModuleService.upsertOptions({\n  id: \"opt_123\",\n  title: \"Color\",\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8083,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for the option."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8479,
										"name": "UpsertProductOptionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8084,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 8459,
										"name": "ProductOptionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8085,
					"name": "updateOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8086,
							"name": "updateOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a option."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated option."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst option = await productModuleService.updateOptions(\n  \"opt_123\",\n  {\n    title: \"Color\",\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8087,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the option to be updated."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 8088,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes of the option to be updated"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8484,
										"name": "UpdateProductOptionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8089,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 8459,
										"name": "ProductOptionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 8090,
							"name": "updateOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a list of options matching the specified filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated options."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst options = await productModuleService.updateOptions(\n  {\n    title: \"Color\",\n  },\n  {\n    values: [\"Blue\", \"Green\"],\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8091,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters specifying which options to update."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8469,
										"name": "FilterableProductOptionProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8092,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to be updated on the selected options"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8484,
										"name": "UpdateProductOptionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8093,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8459,
											"name": "ProductOptionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8094,
					"name": "deleteOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8095,
							"name": "deleteOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete a product option."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the product options are successfully deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.deleteOptions([\n  \"opt_123\",\n  \"opt_321\",\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8096,
									"name": "productOptionIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the product options to delete."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 8097,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8098,
					"name": "softDeleteOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8099,
							"name": "softDeleteOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete options. Unlike the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "delete",
										"target": 7959,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " method, this method won't completely remove the option. It can still be accessed or retrieved using methods like "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "retrieve",
										"target": 7921,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " if you pass the "
									},
									{
										"kind": "code",
										"text": "`withDeleted`"
									},
									{
										"kind": "text",
										"text": " property to the "
									},
									{
										"kind": "code",
										"text": "`config`"
									},
									{
										"kind": "text",
										"text": " object parameter.\n\nThe soft-deleted options can be restored using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "restore",
										"target": 7969,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted. The object's keys are the ID attribute names of the option entity's relations, and its value is an array of strings, each being the ID of a record associated with the option through this relation.\n\nIf there are no related records, the promise resolved to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.softDeleteOptions([\n  \"opt_123\",\n  \"opt_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 8100,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 8101,
									"name": "optionIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the options to soft-delete."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 8102,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to soft delete along with the each of the options. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the option's relation attribute names, such as "
											},
											{
												"kind": "code",
												"text": "`option_value_id`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8417,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8100,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8103,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8104,
					"name": "restoreOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8105,
							"name": "restoreOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to restore options which were deleted using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "softDelete",
										"target": 7963,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored. The object's keys are the ID attribute names of the option entity's relations, and its value is an array of strings, each being the ID of the record associated with the option through this relation.\n\nIf there are no related records that were restored, the promise resolved to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.restoreOptions([\n  \"opt_123\",\n  \"opt_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 8106,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 8107,
									"name": "optionIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the options to restore."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 8108,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the options. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the option's relation attribute names."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8420,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8106,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8109,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8110,
					"name": "retrieveVariant",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8111,
							"name": "retrieveVariant",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a product variant by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved product variant."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a product variant by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst variant =\n  await productModuleService.retrieveVariant(\"variant_123\")\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst variant = await productModuleService.retrieveVariant(\n  \"variant_123\",\n  {\n    relations: [\"options\"],\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8112,
									"name": "productVariantId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the product variant to retrieve."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 8113,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product variant is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product variant."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8267,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8488,
												"name": "ProductVariantDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8114,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 8488,
										"name": "ProductVariantDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8115,
					"name": "listVariants",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8116,
							"name": "listVariants",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of product variants based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of product variants."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of product variants using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst variants = await productModuleService.listVariants({\n  id: [\"variant_123\", \"variant_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the product variants:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst variants = await productModuleService.listVariants(\n  {\n    id: [\"variant_123\", \"variant_321\"],\n  },\n  {\n    relations: [\"options\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst variants = await productModuleService.listVariants(\n  {\n    id: [\"variant_123\", \"variant_321\"],\n  },\n  {\n    relations: [\"options\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8117,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters applied on the retrieved product variants."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8514,
										"name": "FilterableProductVariantProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8118,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product variants are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product variant."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8267,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8488,
												"name": "ProductVariantDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8119,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8488,
											"name": "ProductVariantDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8120,
					"name": "listAndCountVariants",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8121,
							"name": "listAndCountVariants",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of product variants along with the total count of available product variants satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of product variants along with their total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of product variants using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [variants, count] =\n  await productModuleService.listAndCountVariants({\n    id: [\"variant_123\", \"variant_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the product variants:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [variants, count] =\n  await productModuleService.listAndCountVariants(\n    {\n      id: [\"variant_123\", \"variant_321\"],\n    },\n    {\n      relations: [\"options\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [variants, count] =\n  await productModuleService.listAndCountVariants(\n    {\n      id: [\"variant_123\", \"variant_321\"],\n    },\n    {\n      relations: [\"options\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8122,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters applied on the retrieved product variants."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8514,
										"name": "FilterableProductVariantProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8123,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product variants are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product variant."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8267,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8488,
												"name": "ProductVariantDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8124,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 8488,
													"name": "ProductVariantDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8125,
					"name": "createVariants",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8126,
							"name": "createVariants",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create product variants."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of created product variants."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst variants = await productModuleService.createVariants([\n  {\n    title: \"Blue Shirt\",\n    product_id: \"prod_123\",\n    options: {\n      Color: \"Blue\",\n    },\n  },\n  {\n    title: \"Green Shirt\",\n    product_id: \"prod_321\",\n    options: {\n      Color: \"Green\",\n    },\n  },\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8127,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The product variants to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8521,
											"name": "CreateProductVariantDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 8128,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8488,
											"name": "ProductVariantDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 8129,
							"name": "createVariants",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create a product variant."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created product variant."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst variant = await productModuleService.createVariants({\n  title: \"Blue Shirt\",\n  product_id: \"prod_123\",\n  options: {\n    Color: \"Blue\",\n  },\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8130,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The product variant to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8521,
										"name": "CreateProductVariantDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8131,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 8488,
										"name": "ProductVariantDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8132,
					"name": "upsertVariants",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8133,
							"name": "upsertVariants",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing variants, or creates new ones if they don't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated and created variants."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst variants = await productModuleService.upsertVariants([\n  {\n    id: \"variant_123\",\n    title: \"Green Shirt\",\n  },\n  {\n    title: \"Blue Shirt\",\n    options: {\n      Color: \"Blue\",\n    },\n  },\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8134,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for each variant."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8541,
											"name": "UpsertProductVariantDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 8135,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8488,
											"name": "ProductVariantDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 8136,
							"name": "upsertVariants",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates an existing variant, or creates a new one if it doesn't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated or created variant."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst variant = await productModuleService.upsertVariants({\n  id: \"variant_123\",\n  title: \"Green Shirt\",\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8137,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for the variant."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8541,
										"name": "UpsertProductVariantDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8138,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 8488,
										"name": "ProductVariantDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8139,
					"name": "updateVariants",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8140,
							"name": "updateVariants",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a variant."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated variant."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst variant = await productModuleService.updateVariants(\n  \"variant_123\",\n  {\n    title: \"Blue Shirt\",\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8141,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the variant to be updated."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 8142,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes of the variant to be updated"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8561,
										"name": "UpdateProductVariantDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8143,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 8488,
										"name": "ProductVariantDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 8144,
							"name": "updateVariants",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a list of variants matching the specified filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated variants."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst variants = await productModuleService.updateVariants(\n  {\n    id: [\"variant_123\", \"variant_321\"],\n  },\n  {\n    title: \"Blue Shirt\",\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8145,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters specifying which variants to update."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8514,
										"name": "FilterableProductVariantProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8146,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to be updated on the selected variants"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8561,
										"name": "UpdateProductVariantDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8147,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8488,
											"name": "ProductVariantDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8148,
					"name": "deleteVariants",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8149,
							"name": "deleteVariants",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete ProductVariant. This method will completely remove the ProductVariant and they can no longer be accessed or retrieved."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the ProductVariant are successfully deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.deleteVariants([\n  \"variant_123\",\n  \"variant_321\",\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8150,
									"name": "productVariantIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the ProductVariant to be deleted."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 8151,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8152,
					"name": "softDeleteVariants",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8153,
							"name": "softDeleteVariants",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete variants. Unlike the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "delete",
										"target": 7959,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " method, this method won't completely remove the variant. It can still be accessed or retrieved using methods like "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "retrieve",
										"target": 7921,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " if you pass the "
									},
									{
										"kind": "code",
										"text": "`withDeleted`"
									},
									{
										"kind": "text",
										"text": " property to the "
									},
									{
										"kind": "code",
										"text": "`config`"
									},
									{
										"kind": "text",
										"text": " object parameter.\n\nThe soft-deleted variants can be restored using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "restore",
										"target": 7969,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted. The object's keys are the ID attribute names of the variant entity's relations, and its value is an array of strings, each being the ID of a record associated with the variant through this relation.\n\nIf there are no related records, the promise resolved to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.softDeleteVariants([\n  \"variant_123\",\n  \"variant_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 8154,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 8155,
									"name": "variantIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the variants to soft-delete."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 8156,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to soft delete along with the each of the variants. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the variant's relation attribute names, such as "
											},
											{
												"kind": "code",
												"text": "`option_value_id`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8417,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8154,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8157,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8158,
					"name": "restoreVariants",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8159,
							"name": "restoreVariants",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to restore variants which were deleted using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "softDelete",
										"target": 7963,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored. The object's keys are the ID attribute names of the variant entity's relations, and its value is an array of strings, each being the ID of the record associated with the variant through this relation.\n\nIf there are no related records that were restored, the promise resolved to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.restoreVariants([\n  \"variant_123\",\n  \"variant_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 8160,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 8161,
									"name": "variantIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the variants to restore."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 8162,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the variants. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the variant's relation attribute names."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8420,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8160,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8163,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8164,
					"name": "retrieveCollection",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8165,
							"name": "retrieveCollection",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a product collection by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved product collection."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a product collection by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst collection =\n  await productModuleService.retrieveCollection(\"pcol_123\")\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst collection =\n  await productModuleService.retrieveCollection(\"pcol_123\", {\n    relations: [\"products\"],\n  })\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8166,
									"name": "productCollectionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the product collection to retrieve."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 8167,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product collection is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product collection."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8267,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8580,
												"name": "ProductCollectionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8168,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 8580,
										"name": "ProductCollectionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8169,
					"name": "listCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8170,
							"name": "listCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of product collections based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of product collections."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of product collections using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst collections =\n  await productModuleService.listCollections({\n    id: [\"pcol_123\", \"pcol_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the product collections:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst collections =\n  await productModuleService.listCollections(\n    {\n      id: [\"pcol_123\", \"pcol_321\"],\n    },\n    {\n      relations: [\"products\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst collections =\n  await productModuleService.listCollections(\n    {\n      id: [\"pcol_123\", \"pcol_321\"],\n    },\n    {\n      relations: [\"products\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8171,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters applied on the retrieved product collections."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8589,
										"name": "FilterableProductCollectionProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8172,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product collections are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product collection."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8267,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8580,
												"name": "ProductCollectionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8173,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8580,
											"name": "ProductCollectionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8174,
					"name": "listAndCountCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8175,
							"name": "listAndCountCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of product collections along with the total count of available product collections satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of product collections along with the total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of product collections using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [collections, count] =\n  await productModuleService.listAndCountCollections({\n    id: [\"pcol_123\", \"pcol_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the product collections:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [collections, count] =\n  await productModuleService.listAndCountCollections(\n    {\n      id: [\"pcol_123\", \"pcol_321\"],\n    },\n    {\n      relations: [\"products\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [collections, count] =\n  await productModuleService.listAndCountCollections(\n    {\n      id: [\"pcol_123\", \"pcol_321\"],\n    },\n    {\n      relations: [\"products\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8176,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters applied on the retrieved product collections."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8589,
										"name": "FilterableProductCollectionProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8177,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product collections are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product collection."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8267,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8580,
												"name": "ProductCollectionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8178,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 8580,
													"name": "ProductCollectionDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8179,
					"name": "createCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8180,
							"name": "createCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create product collections."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of created product collections."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst collections =\n  await productModuleService.createCollections([\n    {\n      title: \"Summer Collection\",\n    },\n    {\n      title: \"Winter Collection\",\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8181,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The product collections to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8595,
											"name": "CreateProductCollectionDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 8182,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8580,
											"name": "ProductCollectionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 8183,
							"name": "createCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create a product collection."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created product collection."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst collection =\n  await productModuleService.createCollections({\n    title: \"Summer Collection\",\n  })\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8184,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The product collection to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8595,
										"name": "CreateProductCollectionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8185,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 8580,
										"name": "ProductCollectionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8186,
					"name": "upsertCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8187,
							"name": "upsertCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing collections, or creates new ones if they don't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated and created collections."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst collections =\n  await productModuleService.upsertCollections([\n    {\n      id: \"pcol_123\",\n      title: \"Winter Collection\",\n    },\n    {\n      title: \"Summer Collection\",\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8188,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for each collection."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8600,
											"name": "UpsertProductCollectionDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 8189,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8580,
											"name": "ProductCollectionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 8190,
							"name": "upsertCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates an existing collection, or creates a new one if it doesn't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated or created collection."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst collection =\n  await productModuleService.upsertCollections({\n    id: \"pcol_123\",\n    title: \"Winter Collection\",\n  })\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8191,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for the collection."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8600,
										"name": "UpsertProductCollectionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8192,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 8580,
										"name": "ProductCollectionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8193,
					"name": "updateCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8194,
							"name": "updateCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a collection."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated collection."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst collection =\n  await productModuleService.updateCollections(\"pcol_123\", {\n    title: \"Summer Collection\",\n  })\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8195,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the collection to be updated."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 8196,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes of the collection to be updated"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8607,
										"name": "UpdateProductCollectionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8197,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 8580,
										"name": "ProductCollectionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 8198,
							"name": "updateCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a list of collections matching the specified filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated collections."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst collections =\n  await productModuleService.updateCollections(\n    {\n      id: [\"pcol_123\", \"pcol_321\"],\n    },\n    {\n      title: \"Summer Collection\",\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8199,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters specifying which collections to update."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8589,
										"name": "FilterableProductCollectionProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8200,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to be updated on the selected collections"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8607,
										"name": "UpdateProductCollectionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8201,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8580,
											"name": "ProductCollectionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8202,
					"name": "deleteCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8203,
							"name": "deleteCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete collections by their ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the product options are successfully deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.deleteCollections([\n  \"pcol_123\",\n  \"pcol_321\",\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8204,
									"name": "productCollectionIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the product collections to be updated."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 8205,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8206,
					"name": "softDeleteCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8207,
							"name": "softDeleteCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete product collections. Unlike the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "deleteCollections",
										"target": 8202,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " method, this method won't completely remove the collection. It can still be accessed or retrieved using methods like "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "retrieveCollections"
									},
									{
										"kind": "text",
										"text": " if you pass the "
									},
									{
										"kind": "code",
										"text": "`withDeleted`"
									},
									{
										"kind": "text",
										"text": " property to the "
									},
									{
										"kind": "code",
										"text": "`config`"
									},
									{
										"kind": "text",
										"text": " object parameter.\n\nThe soft-deleted collections can be restored using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "restoreCollections",
										"target": 8212,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted. The object's keys are the ID attribute names of the collection entity's relations.\n\nIf there are no related records, the promise resolved to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.softDeleteCollections([\n  \"pcol_123\",\n  \"pcol_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 8208,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 8209,
									"name": "collectionIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the collections to soft-delete."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 8210,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to soft delete along with the each of the collections. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the collection's relation attribute names."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8417,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8208,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8211,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8212,
					"name": "restoreCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8213,
							"name": "restoreCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to restore collections which were deleted using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "softDelete",
										"target": 7963,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored. The object's keys are the ID attribute names of the product entity's relations.\n\nIf there are no related records that were restored, the promise resolved to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.restoreCollections([\n  \"pcol_123\",\n  \"pcol_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 8214,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 8215,
									"name": "collectionIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the collections to restore."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 8216,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the collections. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the collection's relation attribute names."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8420,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8214,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8217,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8218,
					"name": "retrieveCategory",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8219,
							"name": "retrieveCategory",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a product category by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved product category."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a product category by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst category =\n  await productModuleService.retrieveCategory(\"pcat_123\")\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst category = await productModuleService.retrieveCategory(\n  \"pcat_123\",\n  {\n    relations: [\"products\"],\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8220,
									"name": "productCategoryId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the product category to retrieve."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 8221,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product category is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product category."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8267,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8613,
												"name": "ProductCategoryDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8222,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 8613,
										"name": "ProductCategoryDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8223,
					"name": "listCategories",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8224,
							"name": "listCategories",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of product categories based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of product categories."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of product categories using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst categories = await productModuleService.listCategories({\n  id: [\"pcat_123\", \"pcat_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the product categories:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst categories = await productModuleService.listCategories(\n  {\n    id: [\"pcat_123\", \"pcat_321\"],\n  },\n  {\n    relations: [\"products\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst categories = await productModuleService.listCategories(\n  {\n    id: [\"pcat_123\", \"pcat_321\"],\n  },\n  {\n    relations: [\"products\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8225,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to be applied on the retrieved product categories."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8626,
										"name": "FilterableProductCategoryProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8226,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product categories are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product category."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8267,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8613,
												"name": "ProductCategoryDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8227,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8613,
											"name": "ProductCategoryDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8228,
					"name": "listAndCountCategories",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8229,
							"name": "listAndCountCategories",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of product categories along with the total count of available product categories satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of product categories along with their total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of product categories using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [categories, count] =\n  await productModuleService.listAndCountCategories({\n    id: [\"pcat_123\", \"pcat_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the product categories:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [categories, count] =\n  await productModuleService.listAndCountCategories(\n    {\n      id: [\"pcat_123\", \"pcat_321\"],\n    },\n    {\n      relations: [\"products\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [categories, count] =\n  await productModuleService.listAndCountCategories(\n    {\n      id: [\"pcat_123\", \"pcat_321\"],\n    },\n    {\n      relations: [\"products\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8230,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved product categories."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8626,
										"name": "FilterableProductCategoryProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8231,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product categories are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product category."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8267,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8613,
												"name": "ProductCategoryDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8232,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 8613,
													"name": "ProductCategoryDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8233,
					"name": "createCategory",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8234,
							"name": "createCategory",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create a product category."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created product category."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst category = await productModuleService.createCategory({\n  name: \"Shirts\",\n  parent_category_id: null,\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8235,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The product category to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8637,
										"name": "CreateProductCategoryDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8236,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 8613,
										"name": "ProductCategoryDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8237,
					"name": "updateCategory",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8238,
							"name": "updateCategory",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a product category by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated product category."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst category = await productModuleService.updateCategory(\n  \"pcat_123\",\n  {\n    name: \"Shirts\",\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8239,
									"name": "categoryId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the product category to update."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 8240,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in th product category."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8645,
										"name": "UpdateProductCategoryDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8241,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 8613,
										"name": "ProductCategoryDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8242,
					"name": "deleteCategory",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8243,
							"name": "deleteCategory",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete a product category by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the product category is successfully deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.deleteCategory(\"pcat_123\")\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8244,
									"name": "categoryId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the product category to delete."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 8245,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8311,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						7921,
						7926,
						7931,
						7936,
						7943,
						7950,
						7959,
						7963,
						7969,
						7975,
						7980,
						7985,
						7990,
						7998,
						8002,
						8007,
						8012,
						8017,
						8024,
						8031,
						8040,
						8044,
						8050,
						8056,
						8061,
						8066,
						8071,
						8078,
						8085,
						8094,
						8098,
						8104,
						8110,
						8115,
						8120,
						8125,
						8132,
						8139,
						8148,
						8152,
						8158,
						8164,
						8169,
						8174,
						8179,
						8186,
						8193,
						8202,
						8206,
						8212,
						8218,
						8223,
						8228,
						8233,
						8237,
						8242
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 8256,
					"name": "IModuleService",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 8782,
			"name": "MessageAggregatorFormat",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 8783,
					"name": "groupBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 8784,
					"name": "sortBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 8785,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"indexSignature": {
								"id": 8786,
								"name": "__index",
								"variant": "signature",
								"kind": 8192,
								"flags": {},
								"parameters": [
									{
										"id": 8787,
										"name": "key",
										"variant": "param",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "union",
									"types": [
										{
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "number"
										}
									]
								}
							}
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8783,
						8784
					]
				}
			]
		},
		{
			"id": 8693,
			"name": "IMessageAggregator",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 8694,
					"name": "save",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8695,
							"name": "save",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 8696,
									"name": "msg",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 8776,
												"name": "Message",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 8776,
													"name": "Message",
													"package": "@medusajs/types"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 8697,
					"name": "getMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8698,
							"name": "getMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 8699,
									"name": "format",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 8782,
										"name": "MessageAggregatorFormat",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8776,
											"name": "Message",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8700,
					"name": "clearMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8701,
							"name": "clearMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 8702,
					"name": "saveRawMessageData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8703,
							"name": "saveRawMessageData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameter": [
								{
									"id": 8704,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 8705,
									"name": "messageData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 8788,
												"typeArguments": [
													{
														"type": "reference",
														"target": 8704,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "MessageFormat",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 8788,
													"typeArguments": [
														{
															"type": "reference",
															"target": 8704,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													],
													"name": "MessageFormat",
													"package": "@medusajs/types"
												}
											}
										]
									}
								},
								{
									"id": 8706,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						8694,
						8697,
						8700,
						8702
					]
				}
			]
		},
		{
			"id": 8311,
			"name": "Context",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A context used to share resources, such as transaction manager, between the application and the module."
					}
				]
			},
			"children": [
				{
					"id": 8312,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "literal",
						"value": "MedusaContext"
					}
				},
				{
					"id": 8313,
					"name": "transactionManager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a transaction manager of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`transactionManager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8322,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 8314,
					"name": "manager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a manager, typically an entity manager, of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`manager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8322,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 8315,
					"name": "isolationLevel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the isolation level of the context. Possible values are "
							},
							{
								"kind": "code",
								"text": "`READ UNCOMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`READ COMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`REPEATABLE READ`"
							},
							{
								"kind": "text",
								"text": ", or "
							},
							{
								"kind": "code",
								"text": "`SERIALIZABLE`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8316,
					"name": "enableNestedTransactions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean value indicating whether nested transactions are enabled."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 8317,
					"name": "eventGroupId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the group to aggregate the events to be emitted at a later point."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8318,
					"name": "transactionId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current transaction."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8319,
					"name": "messageAggregator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a message aggregator, which is used to aggregate messages to be emitted at a later point."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8693,
						"name": "IMessageAggregator",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8320,
					"name": "requestId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current request."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8321,
					"name": "idempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the idempotencyKey of the current workflow execution."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8312,
						8313,
						8314,
						8315,
						8316,
						8317,
						8318,
						8319,
						8320,
						8321
					]
				}
			],
			"typeParameters": [
				{
					"id": 8322,
					"name": "TManager",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			]
		}
	],
	"groups": [
		{
			"title": "Enumerations",
			"children": [
				8681
			]
		},
		{
			"title": "Interfaces",
			"children": [
				8267,
				8707,
				8417,
				8420,
				8806,
				8758,
				8256,
				8279,
				8488,
				8613,
				8637,
				8645,
				8423,
				8580,
				8437,
				8459,
				8749,
				8686,
				8740,
				8323,
				8428,
				8444,
				8469,
				8589,
				8514,
				8626,
				8595,
				8600,
				8607,
				8449,
				8452,
				8456,
				8733,
				8803,
				8433,
				8737,
				8435,
				8475,
				8479,
				8484,
				8521,
				8541,
				8561,
				8341,
				8366,
				8392,
				7920,
				8782,
				8693,
				8311
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				8799,
				8801,
				8829,
				8854,
				8844,
				8711,
				8842,
				8839,
				8841,
				8833,
				8819,
				8776,
				8788,
				8809,
				8653,
				8772
			]
		}
	],
	"packageName": "@medusajs/types",
	"symbolIdMap": {
		"7919": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": ""
		},
		"7920": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService"
		},
		"7921": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.retrieve"
		},
		"7922": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.retrieve"
		},
		"7923": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "productId"
		},
		"7924": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"7925": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"7926": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.list"
		},
		"7927": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.list"
		},
		"7928": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "filters"
		},
		"7929": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"7930": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"7931": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listAndCount"
		},
		"7932": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listAndCount"
		},
		"7933": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "filters"
		},
		"7934": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"7935": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"7936": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.create"
		},
		"7937": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.create"
		},
		"7938": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"7939": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"7940": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.create"
		},
		"7941": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"7942": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"7943": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsert"
		},
		"7944": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsert"
		},
		"7945": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"7946": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"7947": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsert"
		},
		"7948": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"7949": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"7950": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.update"
		},
		"7951": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.update"
		},
		"7952": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "id"
		},
		"7953": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"7954": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"7955": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.update"
		},
		"7956": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "selector"
		},
		"7957": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"7958": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"7959": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.delete"
		},
		"7960": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.delete"
		},
		"7961": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "productIds"
		},
		"7962": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"7963": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.softDelete"
		},
		"7964": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.softDelete"
		},
		"7965": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"7966": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "productIds"
		},
		"7967": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"7968": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"7969": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.restore"
		},
		"7970": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.restore"
		},
		"7971": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"7972": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "productIds"
		},
		"7973": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"7974": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"7975": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.retrieveTag"
		},
		"7976": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.retrieveTag"
		},
		"7977": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "tagId"
		},
		"7978": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"7979": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"7980": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listTags"
		},
		"7981": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listTags"
		},
		"7982": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "filters"
		},
		"7983": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"7984": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"7985": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listAndCountTags"
		},
		"7986": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listAndCountTags"
		},
		"7987": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "filters"
		},
		"7988": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"7989": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"7990": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createTags"
		},
		"7991": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createTags"
		},
		"7992": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"7993": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"7998": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.deleteTags"
		},
		"7999": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.deleteTags"
		},
		"8000": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "productTagIds"
		},
		"8001": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8002": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.retrieveType"
		},
		"8003": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.retrieveType"
		},
		"8004": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "typeId"
		},
		"8005": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"8006": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8007": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listTypes"
		},
		"8008": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listTypes"
		},
		"8009": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "filters"
		},
		"8010": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"8011": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8012": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listAndCountTypes"
		},
		"8013": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listAndCountTypes"
		},
		"8014": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "filters"
		},
		"8015": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"8016": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8017": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createTypes"
		},
		"8018": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createTypes"
		},
		"8019": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"8020": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8021": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createTypes"
		},
		"8022": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"8023": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8024": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertTypes"
		},
		"8025": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertTypes"
		},
		"8026": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"8027": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8028": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertTypes"
		},
		"8029": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"8030": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8031": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateTypes"
		},
		"8032": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateTypes"
		},
		"8033": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "id"
		},
		"8034": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"8035": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8036": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateTypes"
		},
		"8037": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "selector"
		},
		"8038": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"8039": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8040": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.deleteTypes"
		},
		"8041": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.deleteTypes"
		},
		"8042": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "productTypeIds"
		},
		"8043": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8044": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.softDeleteTypes"
		},
		"8045": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.softDeleteTypes"
		},
		"8046": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"8047": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "typeIds"
		},
		"8048": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"8049": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8050": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.restoreTypes"
		},
		"8051": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.restoreTypes"
		},
		"8052": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"8053": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "typeIds"
		},
		"8054": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"8055": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8056": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.retrieveOption"
		},
		"8057": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.retrieveOption"
		},
		"8058": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "optionId"
		},
		"8059": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"8060": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8061": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listOptions"
		},
		"8062": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listOptions"
		},
		"8063": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "filters"
		},
		"8064": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"8065": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8066": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listAndCountOptions"
		},
		"8067": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listAndCountOptions"
		},
		"8068": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "filters"
		},
		"8069": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"8070": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8071": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createOptions"
		},
		"8072": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createOptions"
		},
		"8073": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"8074": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8075": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createOptions"
		},
		"8076": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"8077": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8078": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertOptions"
		},
		"8079": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertOptions"
		},
		"8080": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"8081": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8082": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertOptions"
		},
		"8083": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"8084": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8085": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateOptions"
		},
		"8086": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateOptions"
		},
		"8087": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "id"
		},
		"8088": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"8089": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8090": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateOptions"
		},
		"8091": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "selector"
		},
		"8092": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"8093": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8094": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.deleteOptions"
		},
		"8095": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.deleteOptions"
		},
		"8096": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "productOptionIds"
		},
		"8097": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8098": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.softDeleteOptions"
		},
		"8099": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.softDeleteOptions"
		},
		"8100": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"8101": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "optionIds"
		},
		"8102": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"8103": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8104": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.restoreOptions"
		},
		"8105": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.restoreOptions"
		},
		"8106": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"8107": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "optionIds"
		},
		"8108": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"8109": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8110": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.retrieveVariant"
		},
		"8111": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.retrieveVariant"
		},
		"8112": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "productVariantId"
		},
		"8113": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"8114": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8115": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listVariants"
		},
		"8116": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listVariants"
		},
		"8117": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "filters"
		},
		"8118": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"8119": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8120": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listAndCountVariants"
		},
		"8121": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listAndCountVariants"
		},
		"8122": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "filters"
		},
		"8123": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"8124": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8125": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createVariants"
		},
		"8126": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createVariants"
		},
		"8127": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"8128": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8129": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createVariants"
		},
		"8130": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"8131": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8132": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertVariants"
		},
		"8133": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertVariants"
		},
		"8134": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"8135": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8136": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertVariants"
		},
		"8137": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"8138": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8139": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateVariants"
		},
		"8140": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateVariants"
		},
		"8141": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "id"
		},
		"8142": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"8143": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8144": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateVariants"
		},
		"8145": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "selector"
		},
		"8146": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"8147": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8148": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.deleteVariants"
		},
		"8149": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.deleteVariants"
		},
		"8150": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "productVariantIds"
		},
		"8151": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8152": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.softDeleteVariants"
		},
		"8153": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.softDeleteVariants"
		},
		"8154": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"8155": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "variantIds"
		},
		"8156": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"8157": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8158": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.restoreVariants"
		},
		"8159": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.restoreVariants"
		},
		"8160": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"8161": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "variantIds"
		},
		"8162": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"8163": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8164": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.retrieveCollection"
		},
		"8165": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.retrieveCollection"
		},
		"8166": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "productCollectionId"
		},
		"8167": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"8168": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8169": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listCollections"
		},
		"8170": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listCollections"
		},
		"8171": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "filters"
		},
		"8172": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"8173": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8174": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listAndCountCollections"
		},
		"8175": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listAndCountCollections"
		},
		"8176": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "filters"
		},
		"8177": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"8178": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8179": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createCollections"
		},
		"8180": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createCollections"
		},
		"8181": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"8182": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8183": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createCollections"
		},
		"8184": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"8185": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8186": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertCollections"
		},
		"8187": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertCollections"
		},
		"8188": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"8189": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8190": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertCollections"
		},
		"8191": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"8192": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8193": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateCollections"
		},
		"8194": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateCollections"
		},
		"8195": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "id"
		},
		"8196": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"8197": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8198": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateCollections"
		},
		"8199": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "selector"
		},
		"8200": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"8201": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8202": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.deleteCollections"
		},
		"8203": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.deleteCollections"
		},
		"8204": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "productCollectionIds"
		},
		"8205": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8206": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.softDeleteCollections"
		},
		"8207": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.softDeleteCollections"
		},
		"8208": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"8209": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "collectionIds"
		},
		"8210": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"8211": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8212": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.restoreCollections"
		},
		"8213": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.restoreCollections"
		},
		"8214": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"8215": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "collectionIds"
		},
		"8216": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"8217": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8218": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.retrieveCategory"
		},
		"8219": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.retrieveCategory"
		},
		"8220": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "productCategoryId"
		},
		"8221": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"8222": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8223": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listCategories"
		},
		"8224": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listCategories"
		},
		"8225": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "filters"
		},
		"8226": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"8227": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8228": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listAndCountCategories"
		},
		"8229": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listAndCountCategories"
		},
		"8230": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "filters"
		},
		"8231": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"8232": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8233": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createCategory"
		},
		"8234": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createCategory"
		},
		"8235": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"8236": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8237": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateCategory"
		},
		"8238": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateCategory"
		},
		"8239": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "categoryId"
		},
		"8240": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"8241": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8242": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.deleteCategory"
		},
		"8243": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.deleteCategory"
		},
		"8244": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "categoryId"
		},
		"8245": {
			"sourceFileName": "../../../packages/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8256": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "IModuleService"
		},
		"8267": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig"
		},
		"8268": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.select"
		},
		"8269": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.skip"
		},
		"8270": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.take"
		},
		"8271": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.relations"
		},
		"8272": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.order"
		},
		"8273": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"8274": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.__index"
		},
		"8276": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.withDeleted"
		},
		"8277": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.filters"
		},
		"8278": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.Entity"
		},
		"8279": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO"
		},
		"8280": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.id"
		},
		"8281": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.title"
		},
		"8282": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.handle"
		},
		"8283": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.subtitle"
		},
		"8284": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.description"
		},
		"8285": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.is_giftcard"
		},
		"8286": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.status"
		},
		"8287": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.thumbnail"
		},
		"8288": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.width"
		},
		"8289": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.weight"
		},
		"8290": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.length"
		},
		"8291": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.height"
		},
		"8292": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.origin_country"
		},
		"8293": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.hs_code"
		},
		"8294": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.mid_code"
		},
		"8295": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.material"
		},
		"8296": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.collection"
		},
		"8297": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.collection_id"
		},
		"8298": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.categories"
		},
		"8299": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.type"
		},
		"8300": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.type_id"
		},
		"8301": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.tags"
		},
		"8302": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.variants"
		},
		"8303": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.options"
		},
		"8304": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.images"
		},
		"8305": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.discountable"
		},
		"8306": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.external_id"
		},
		"8307": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.created_at"
		},
		"8308": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.updated_at"
		},
		"8309": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.deleted_at"
		},
		"8310": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.metadata"
		},
		"8311": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "Context"
		},
		"8312": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.__type"
		},
		"8313": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionManager"
		},
		"8314": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.manager"
		},
		"8315": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"8316": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"8317": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"8318": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionId"
		},
		"8319": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.messageAggregator"
		},
		"8320": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.requestId"
		},
		"8321": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.idempotencyKey"
		},
		"8322": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "TManager"
		},
		"8323": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps"
		},
		"8324": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps.q"
		},
		"8325": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps.status"
		},
		"8326": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps.title"
		},
		"8327": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps.handle"
		},
		"8328": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps.id"
		},
		"8329": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps.is_giftcard"
		},
		"8330": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps.tags"
		},
		"8331": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "__type"
		},
		"8332": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "__type.value"
		},
		"8333": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps.type_id"
		},
		"8334": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps.category_id"
		},
		"8335": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps.collection_id"
		},
		"8336": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps.created_at"
		},
		"8337": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps.updated_at"
		},
		"8338": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps.deleted_at"
		},
		"8339": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"8340": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"8341": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO"
		},
		"8342": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.title"
		},
		"8343": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.subtitle"
		},
		"8344": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.description"
		},
		"8345": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.is_giftcard"
		},
		"8346": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.discountable"
		},
		"8347": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.thumbnail"
		},
		"8348": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.handle"
		},
		"8349": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.status"
		},
		"8350": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.images"
		},
		"8351": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.type_id"
		},
		"8352": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.collection_id"
		},
		"8353": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.tags"
		},
		"8354": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.category_ids"
		},
		"8355": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.options"
		},
		"8356": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.variants"
		},
		"8357": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.width"
		},
		"8358": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.height"
		},
		"8359": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.length"
		},
		"8360": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.weight"
		},
		"8361": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.origin_country"
		},
		"8362": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.hs_code"
		},
		"8363": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.material"
		},
		"8364": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.mid_code"
		},
		"8365": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.metadata"
		},
		"8366": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpsertProductDTO"
		},
		"8367": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpsertProductDTO.id"
		},
		"8368": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.title"
		},
		"8369": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.subtitle"
		},
		"8370": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.description"
		},
		"8371": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.is_giftcard"
		},
		"8372": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.discountable"
		},
		"8373": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.thumbnail"
		},
		"8374": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.handle"
		},
		"8375": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.status"
		},
		"8376": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.images"
		},
		"8377": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.type_id"
		},
		"8378": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.collection_id"
		},
		"8379": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.tags"
		},
		"8380": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.category_ids"
		},
		"8381": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.options"
		},
		"8382": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.variants"
		},
		"8383": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.width"
		},
		"8384": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.height"
		},
		"8385": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.length"
		},
		"8386": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.weight"
		},
		"8387": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.origin_country"
		},
		"8388": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.hs_code"
		},
		"8389": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.material"
		},
		"8390": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.mid_code"
		},
		"8391": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.metadata"
		},
		"8392": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO"
		},
		"8393": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.title"
		},
		"8394": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.subtitle"
		},
		"8395": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.description"
		},
		"8396": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.is_giftcard"
		},
		"8397": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.discountable"
		},
		"8398": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.thumbnail"
		},
		"8399": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.handle"
		},
		"8400": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.status"
		},
		"8401": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.images"
		},
		"8402": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.type_id"
		},
		"8403": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.collection_id"
		},
		"8404": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.tags"
		},
		"8405": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.category_ids"
		},
		"8406": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.options"
		},
		"8407": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.variants"
		},
		"8408": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.width"
		},
		"8409": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.height"
		},
		"8410": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.length"
		},
		"8411": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.weight"
		},
		"8412": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.origin_country"
		},
		"8413": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.hs_code"
		},
		"8414": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.material"
		},
		"8415": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.mid_code"
		},
		"8416": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.metadata"
		},
		"8417": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "SoftDeleteReturn"
		},
		"8418": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.returnLinkableKeys"
		},
		"8419": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"8420": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RestoreReturn"
		},
		"8421": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.returnLinkableKeys"
		},
		"8422": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"8423": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductTagDTO"
		},
		"8424": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductTagDTO.id"
		},
		"8425": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductTagDTO.value"
		},
		"8426": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductTagDTO.metadata"
		},
		"8427": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductTagDTO.products"
		},
		"8428": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "FilterableProductTagProps"
		},
		"8429": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "FilterableProductTagProps.id"
		},
		"8430": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "FilterableProductTagProps.value"
		},
		"8431": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"8432": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"8433": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductTagDTO"
		},
		"8434": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductTagDTO.value"
		},
		"8435": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductTagDTO"
		},
		"8436": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductTagDTO.value"
		},
		"8437": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductTypeDTO"
		},
		"8438": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductTypeDTO.id"
		},
		"8439": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductTypeDTO.value"
		},
		"8440": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductTypeDTO.metadata"
		},
		"8441": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductTypeDTO.created_at"
		},
		"8442": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductTypeDTO.updated_at"
		},
		"8443": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductTypeDTO.deleted_at"
		},
		"8444": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "FilterableProductTypeProps"
		},
		"8445": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "FilterableProductTypeProps.id"
		},
		"8446": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "FilterableProductTypeProps.value"
		},
		"8447": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"8448": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"8449": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductTypeDTO"
		},
		"8450": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductTypeDTO.value"
		},
		"8451": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductTypeDTO.metadata"
		},
		"8452": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpsertProductTypeDTO"
		},
		"8453": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpsertProductTypeDTO.id"
		},
		"8454": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductTypeDTO.value"
		},
		"8455": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductTypeDTO.metadata"
		},
		"8456": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductTypeDTO"
		},
		"8457": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductTypeDTO.value"
		},
		"8458": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductTypeDTO.metadata"
		},
		"8459": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductOptionDTO"
		},
		"8460": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductOptionDTO.id"
		},
		"8461": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductOptionDTO.title"
		},
		"8462": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductOptionDTO.product"
		},
		"8463": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductOptionDTO.product_id"
		},
		"8464": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductOptionDTO.values"
		},
		"8465": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductOptionDTO.metadata"
		},
		"8466": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductOptionDTO.created_at"
		},
		"8467": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductOptionDTO.updated_at"
		},
		"8468": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductOptionDTO.deleted_at"
		},
		"8469": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "FilterableProductOptionProps"
		},
		"8470": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "FilterableProductOptionProps.id"
		},
		"8471": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "FilterableProductOptionProps.title"
		},
		"8472": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "FilterableProductOptionProps.product_id"
		},
		"8473": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"8474": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"8475": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductOptionDTO"
		},
		"8476": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductOptionDTO.title"
		},
		"8477": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductOptionDTO.values"
		},
		"8478": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductOptionDTO.product_id"
		},
		"8479": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpsertProductOptionDTO"
		},
		"8480": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpsertProductOptionDTO.id"
		},
		"8481": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductOptionDTO.title"
		},
		"8482": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductOptionDTO.values"
		},
		"8483": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductOptionDTO.product_id"
		},
		"8484": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductOptionDTO"
		},
		"8485": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductOptionDTO.title"
		},
		"8486": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductOptionDTO.values"
		},
		"8487": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductOptionDTO.product_id"
		},
		"8488": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO"
		},
		"8489": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.id"
		},
		"8490": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.title"
		},
		"8491": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.sku"
		},
		"8492": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.barcode"
		},
		"8493": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.ean"
		},
		"8494": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.upc"
		},
		"8495": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.inventory_quantity"
		},
		"8496": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.allow_backorder"
		},
		"8497": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.manage_inventory"
		},
		"8498": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.hs_code"
		},
		"8499": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.origin_country"
		},
		"8500": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.mid_code"
		},
		"8501": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.material"
		},
		"8502": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.weight"
		},
		"8503": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.length"
		},
		"8504": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.height"
		},
		"8505": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.width"
		},
		"8506": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.options"
		},
		"8507": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.metadata"
		},
		"8508": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.product"
		},
		"8509": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.product_id"
		},
		"8510": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.variant_rank"
		},
		"8511": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.created_at"
		},
		"8512": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.updated_at"
		},
		"8513": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.deleted_at"
		},
		"8514": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "FilterableProductVariantProps"
		},
		"8515": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "FilterableProductVariantProps.id"
		},
		"8516": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "FilterableProductVariantProps.sku"
		},
		"8517": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "FilterableProductVariantProps.product_id"
		},
		"8518": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "FilterableProductVariantProps.options"
		},
		"8519": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"8520": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"8521": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO"
		},
		"8522": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.product_id"
		},
		"8523": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.title"
		},
		"8524": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.sku"
		},
		"8525": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.barcode"
		},
		"8526": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.ean"
		},
		"8527": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.upc"
		},
		"8528": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.allow_backorder"
		},
		"8529": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.inventory_quantity"
		},
		"8530": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.manage_inventory"
		},
		"8531": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.hs_code"
		},
		"8532": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.origin_country"
		},
		"8533": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.mid_code"
		},
		"8534": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.material"
		},
		"8535": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.weight"
		},
		"8536": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.length"
		},
		"8537": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.height"
		},
		"8538": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.width"
		},
		"8539": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.options"
		},
		"8540": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.metadata"
		},
		"8541": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpsertProductVariantDTO"
		},
		"8542": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpsertProductVariantDTO.id"
		},
		"8543": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.title"
		},
		"8544": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.sku"
		},
		"8545": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.barcode"
		},
		"8546": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.ean"
		},
		"8547": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.upc"
		},
		"8548": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.allow_backorder"
		},
		"8549": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.inventory_quantity"
		},
		"8550": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.manage_inventory"
		},
		"8551": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.hs_code"
		},
		"8552": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.origin_country"
		},
		"8553": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.mid_code"
		},
		"8554": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.material"
		},
		"8555": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.weight"
		},
		"8556": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.length"
		},
		"8557": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.height"
		},
		"8558": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.width"
		},
		"8559": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.options"
		},
		"8560": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.metadata"
		},
		"8561": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO"
		},
		"8562": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.title"
		},
		"8563": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.sku"
		},
		"8564": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.barcode"
		},
		"8565": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.ean"
		},
		"8566": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.upc"
		},
		"8567": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.allow_backorder"
		},
		"8568": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.inventory_quantity"
		},
		"8569": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.manage_inventory"
		},
		"8570": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.hs_code"
		},
		"8571": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.origin_country"
		},
		"8572": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.mid_code"
		},
		"8573": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.material"
		},
		"8574": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.weight"
		},
		"8575": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.length"
		},
		"8576": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.height"
		},
		"8577": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.width"
		},
		"8578": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.options"
		},
		"8579": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.metadata"
		},
		"8580": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductCollectionDTO"
		},
		"8581": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductCollectionDTO.id"
		},
		"8582": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductCollectionDTO.title"
		},
		"8583": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductCollectionDTO.handle"
		},
		"8584": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductCollectionDTO.metadata"
		},
		"8585": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductCollectionDTO.created_at"
		},
		"8586": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductCollectionDTO.updated_at"
		},
		"8587": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductCollectionDTO.deleted_at"
		},
		"8588": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductCollectionDTO.products"
		},
		"8589": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "FilterableProductCollectionProps"
		},
		"8590": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "FilterableProductCollectionProps.id"
		},
		"8591": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "FilterableProductCollectionProps.handle"
		},
		"8592": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "FilterableProductCollectionProps.title"
		},
		"8593": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"8594": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"8595": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductCollectionDTO"
		},
		"8596": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductCollectionDTO.title"
		},
		"8597": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductCollectionDTO.handle"
		},
		"8598": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductCollectionDTO.product_ids"
		},
		"8599": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductCollectionDTO.metadata"
		},
		"8600": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpsertProductCollectionDTO"
		},
		"8601": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpsertProductCollectionDTO.id"
		},
		"8602": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCollectionDTO.value"
		},
		"8603": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCollectionDTO.title"
		},
		"8604": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCollectionDTO.handle"
		},
		"8605": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCollectionDTO.product_ids"
		},
		"8606": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCollectionDTO.metadata"
		},
		"8607": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCollectionDTO"
		},
		"8608": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCollectionDTO.value"
		},
		"8609": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCollectionDTO.title"
		},
		"8610": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCollectionDTO.handle"
		},
		"8611": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCollectionDTO.product_ids"
		},
		"8612": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCollectionDTO.metadata"
		},
		"8613": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO"
		},
		"8614": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.id"
		},
		"8615": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.name"
		},
		"8616": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.description"
		},
		"8617": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.handle"
		},
		"8618": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.is_active"
		},
		"8619": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.is_internal"
		},
		"8620": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.rank"
		},
		"8621": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.parent_category"
		},
		"8622": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.parent_category_id"
		},
		"8623": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.category_children"
		},
		"8624": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.created_at"
		},
		"8625": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.updated_at"
		},
		"8626": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "FilterableProductCategoryProps"
		},
		"8627": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "FilterableProductCategoryProps.id"
		},
		"8628": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "FilterableProductCategoryProps.name"
		},
		"8629": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "FilterableProductCategoryProps.parent_category_id"
		},
		"8630": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "FilterableProductCategoryProps.handle"
		},
		"8631": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "FilterableProductCategoryProps.is_active"
		},
		"8632": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "FilterableProductCategoryProps.is_internal"
		},
		"8633": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "FilterableProductCategoryProps.include_descendants_tree"
		},
		"8634": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "FilterableProductCategoryProps.include_ancestors_tree"
		},
		"8635": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"8636": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"8637": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductCategoryDTO"
		},
		"8638": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductCategoryDTO.name"
		},
		"8639": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductCategoryDTO.handle"
		},
		"8640": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductCategoryDTO.is_active"
		},
		"8641": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductCategoryDTO.is_internal"
		},
		"8642": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductCategoryDTO.rank"
		},
		"8643": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductCategoryDTO.parent_category_id"
		},
		"8644": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "CreateProductCategoryDTO.metadata"
		},
		"8645": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCategoryDTO"
		},
		"8646": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCategoryDTO.name"
		},
		"8647": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCategoryDTO.handle"
		},
		"8648": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCategoryDTO.is_active"
		},
		"8649": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCategoryDTO.is_internal"
		},
		"8650": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCategoryDTO.rank"
		},
		"8651": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCategoryDTO.parent_category_id"
		},
		"8652": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCategoryDTO.metadata"
		},
		"8653": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerConfig"
		},
		"8654": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"8655": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.schema"
		},
		"8656": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationships"
		},
		"8657": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extends"
		},
		"8658": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"8659": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"8660": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.fieldAlias"
		},
		"8661": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"8662": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.path"
		},
		"8663": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"8664": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isList"
		},
		"8665": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"8666": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"8667": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.primaryKeys"
		},
		"8668": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isLink"
		},
		"8669": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.linkableKeys"
		},
		"8670": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isReadOnlyLink"
		},
		"8671": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.databaseConfig"
		},
		"8672": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"8673": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.tableName"
		},
		"8674": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.idPrefix"
		},
		"8675": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraFields"
		},
		"8676": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"8677": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.type"
		},
		"8678": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultValue"
		},
		"8679": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.nullable"
		},
		"8680": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"8681": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductStatus"
		},
		"8682": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductStatus.DRAFT"
		},
		"8683": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductStatus.PROPOSED"
		},
		"8684": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductStatus.PUBLISHED"
		},
		"8685": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductStatus.REJECTED"
		},
		"8686": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductImageDTO"
		},
		"8687": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductImageDTO.id"
		},
		"8688": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductImageDTO.url"
		},
		"8689": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductImageDTO.metadata"
		},
		"8690": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductImageDTO.created_at"
		},
		"8691": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductImageDTO.updated_at"
		},
		"8692": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductImageDTO.deleted_at"
		},
		"8693": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator"
		},
		"8694": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"8695": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"8696": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "msg"
		},
		"8697": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"8698": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"8699": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "format"
		},
		"8700": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"8701": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"8702": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"8703": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"8704": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "T"
		},
		"8705": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "messageData"
		},
		"8706": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "options"
		},
		"8707": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable"
		},
		"8708": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"8709": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"8710": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.T"
		},
		"8711": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "OperatorMap"
		},
		"8712": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"8713": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$and"
		},
		"8714": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$or"
		},
		"8715": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$eq"
		},
		"8716": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$ne"
		},
		"8717": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$in"
		},
		"8718": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$nin"
		},
		"8719": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$not"
		},
		"8720": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$gt"
		},
		"8721": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$gte"
		},
		"8722": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$lt"
		},
		"8723": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$lte"
		},
		"8724": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$like"
		},
		"8725": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$re"
		},
		"8726": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$ilike"
		},
		"8727": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$fulltext"
		},
		"8728": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$overlap"
		},
		"8729": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$contains"
		},
		"8730": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$contained"
		},
		"8731": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.$exists"
		},
		"8732": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"8733": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpsertProductImageDTO"
		},
		"8734": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpsertProductImageDTO.id"
		},
		"8735": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductImageDTO.url"
		},
		"8736": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductImageDTO.metadata"
		},
		"8737": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpsertProductTagDTO"
		},
		"8738": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpsertProductTagDTO.id"
		},
		"8739": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductTagDTO.value"
		},
		"8740": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductOptionValueDTO"
		},
		"8741": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductOptionValueDTO.id"
		},
		"8742": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductOptionValueDTO.value"
		},
		"8743": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductOptionValueDTO.option"
		},
		"8744": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductOptionValueDTO.option_id"
		},
		"8745": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductOptionValueDTO.metadata"
		},
		"8746": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductOptionValueDTO.created_at"
		},
		"8747": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductOptionValueDTO.updated_at"
		},
		"8748": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductOptionValueDTO.deleted_at"
		},
		"8749": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductVariantOptionDTO"
		},
		"8750": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductVariantOptionDTO.id"
		},
		"8751": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductVariantOptionDTO.option_value"
		},
		"8752": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductVariantOptionDTO.option_value_id"
		},
		"8753": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductVariantOptionDTO.variant"
		},
		"8754": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductVariantOptionDTO.variant_id"
		},
		"8755": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductVariantOptionDTO.created_at"
		},
		"8756": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductVariantOptionDTO.updated_at"
		},
		"8757": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductVariantOptionDTO.deleted_at"
		},
		"8758": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig"
		},
		"8759": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.serviceName"
		},
		"8760": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.alias"
		},
		"8761": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.fieldAlias"
		},
		"8762": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"8763": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.path"
		},
		"8764": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"8765": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.primaryKeys"
		},
		"8766": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.relationships"
		},
		"8767": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.extends"
		},
		"8768": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"8769": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"8770": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"8771": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.args"
		},
		"8772": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerRelationship"
		},
		"8773": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"8774": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isInternalService"
		},
		"8775": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.deleteCascade"
		},
		"8776": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "Message"
		},
		"8777": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"8778": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventName"
		},
		"8779": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.body"
		},
		"8780": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"8781": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "T"
		},
		"8782": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat"
		},
		"8783": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.groupBy"
		},
		"8784": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.sortBy"
		},
		"8785": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type"
		},
		"8786": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.__index"
		},
		"8788": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "MessageFormat"
		},
		"8789": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"8790": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventName"
		},
		"8791": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"8792": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"8793": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.service"
		},
		"8794": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.action"
		},
		"8795": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.object"
		},
		"8796": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"8797": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"8798": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "T"
		},
		"8799": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "Query"
		},
		"8800": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"8801": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "ExpandScalar"
		},
		"8802": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"8803": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductImageDTO"
		},
		"8804": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductImageDTO.url"
		},
		"8805": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "UpdateProductImageDTO.metadata"
		},
		"8806": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias"
		},
		"8807": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.name"
		},
		"8808": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.args"
		},
		"8809": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerRelationship"
		},
		"8810": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"8811": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.alias"
		},
		"8812": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.foreignKey"
		},
		"8813": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.primaryKey"
		},
		"8814": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"8815": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.isInternalService"
		},
		"8816": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.inverse"
		},
		"8817": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.isList"
		},
		"8818": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.args"
		},
		"8819": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "MessageBody"
		},
		"8820": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"8821": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"8822": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"8823": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.service"
		},
		"8824": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.action"
		},
		"8825": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.object"
		},
		"8826": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"8827": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"8828": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "T"
		},
		"8829": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "Scalar"
		},
		"8830": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"8831": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.toHexString"
		},
		"8832": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.toHexString"
		},
		"8833": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "FilterQuery"
		},
		"8834": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"8835": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"8837": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"8838": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "Prev"
		},
		"8839": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "FilterValue"
		},
		"8840": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"8841": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "PrevLimit"
		},
		"8842": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "FilterValue2"
		},
		"8843": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"8844": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "Primary"
		},
		"8845": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"8846": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.[PrimaryKeyType]"
		},
		"8847": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"8848": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type._id"
		},
		"8849": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"8850": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.uuid"
		},
		"8851": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"8852": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "__type.id"
		},
		"8853": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"8854": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "ReadonlyPrimary"
		},
		"8855": {
			"sourceFileName": "../../../packages/types/src/dal/utils.ts",
			"qualifiedName": "T"
		}
	}
}