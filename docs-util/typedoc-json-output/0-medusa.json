{
	"id": 17558,
	"name": "medusa",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 21426,
			"name": "MedusaError",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Standardized error to be used across Medusa project."
					}
				]
			},
			"children": [
				{
					"id": 21449,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21450,
					"name": "message",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Error.message"
					}
				},
				{
					"id": 21451,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21452,
					"name": "date",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 21427,
					"name": "Types",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 21428,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 21429,
									"name": "DB_ERROR",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Errors stemming from the database"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 21430,
									"name": "DUPLICATE_ERROR",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 21431,
									"name": "INVALID_ARGUMENT",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 21432,
									"name": "INVALID_DATA",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 21433,
									"name": "UNAUTHORIZED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 21434,
									"name": "NOT_FOUND",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 21435,
									"name": "NOT_ALLOWED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 21436,
									"name": "UNEXPECTED_STATE",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 21437,
									"name": "CONFLICT",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 21438,
									"name": "PAYMENT_AUTHORIZATION_ERROR",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										21429,
										21430,
										21431,
										21432,
										21433,
										21434,
										21435,
										21436,
										21437,
										21438
									]
								}
							]
						}
					}
				},
				{
					"id": 21439,
					"name": "Codes",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 21440,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 21441,
									"name": "INSUFFICIENT_INVENTORY",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 21442,
									"name": "CART_INCOMPATIBLE_STATE",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										21441,
										21442
									]
								}
							]
						}
					}
				},
				{
					"id": 21443,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21444,
							"name": "new MedusaError",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a standardized error to be used across Medusa project."
									}
								]
							},
							"parameters": [
								{
									"id": 21445,
									"name": "type",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "type of error"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 21446,
									"name": "message",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "message to go along with error"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 21447,
									"name": "code",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "code of error"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 21448,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "params"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 21426,
								"name": "MedusaError",
								"package": "medusa-core-utils"
							},
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "Error.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Error.constructor"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21443
					]
				},
				{
					"title": "Properties",
					"children": [
						21449,
						21450,
						21451,
						21452,
						21427,
						21439
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Error"
					},
					"name": "Error",
					"package": "typescript"
				}
			]
		},
		{
			"id": 21455,
			"name": "MedusaContainer",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/awilix/lib/container.d.ts",
							"qualifiedName": "AwilixContainer"
						},
						"name": "AwilixContainer",
						"package": "awilix"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 21456,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 21457,
									"name": "registerAdd",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 21458,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 21459,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"typeParameter": [
														{
															"id": 21462,
															"name": "T",
															"variant": "typeParam",
															"kind": 131072,
															"flags": {}
														}
													],
													"parameters": [
														{
															"id": 21460,
															"name": "name",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 21461,
															"name": "registration",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 21462,
																"name": "T",
																"package": "medusa-core-utils",
																"refersToTypeParameter": true
															}
														}
													],
													"type": {
														"type": "reference",
														"target": 21455,
														"name": "MedusaContainer",
														"package": "medusa-core-utils"
													}
												}
											]
										}
									}
								},
								{
									"id": 21463,
									"name": "createScope",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 21464,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 21465,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 21455,
														"name": "MedusaContainer",
														"package": "medusa-core-utils"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										21457,
										21463
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 21397,
			"name": "AdminPostCampaignsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 21398,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21399,
							"name": "new AdminPostCampaignsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21397,
								"name": "AdminPostCampaignsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21400,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21401,
					"name": "campaign_identifier",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21402,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21403,
					"name": "currency",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21404,
					"name": "budget",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 21572,
						"name": "CampaignBudget",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 21405,
					"name": "starts_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21406,
					"name": "ends_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21407,
					"name": "promotions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 21577,
							"name": "IdObject",
							"package": "@medusajs/medusa"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21398
					]
				},
				{
					"title": "Properties",
					"children": [
						21400,
						21401,
						21402,
						21403,
						21404,
						21405,
						21406,
						21407
					]
				}
			]
		},
		{
			"id": 21577,
			"name": "IdObject",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 21578,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21579,
							"name": "new IdObject",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21577,
								"name": "IdObject",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21580,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21578
					]
				},
				{
					"title": "Properties",
					"children": [
						21580
					]
				}
			]
		},
		{
			"id": 21572,
			"name": "CampaignBudget",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 21573,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21574,
							"name": "new CampaignBudget",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21572,
								"name": "CampaignBudget",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21575,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 21662,
						"name": "CampaignBudgetType",
						"package": "@medusajs/utils"
					}
				},
				{
					"id": 21576,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21573
					]
				},
				{
					"title": "Properties",
					"children": [
						21575,
						21576
					]
				}
			]
		},
		{
			"id": 20267,
			"name": "AdminPromotionsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": 20979,
				"typeArguments": [
					{
						"type": "reflection",
						"declaration": {
							"id": 20268,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 20269,
									"name": "promotions",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 21380,
											"name": "PromotionDTO",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										20269
									]
								}
							]
						}
					}
				],
				"name": "PaginatedResponse",
				"package": "@medusajs/types"
			}
		},
		{
			"id": 20270,
			"name": "AdminGetPromotionsPromotionParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 20271,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20272,
							"name": "new AdminGetPromotionsPromotionParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20270,
								"name": "AdminGetPromotionsPromotionParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20631,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20630,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 20273,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20632,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 20274,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20633,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20271
					]
				},
				{
					"title": "Properties",
					"children": [
						20273,
						20274
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20629,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 20275,
			"name": "AdminGetPromotionsRuleValueParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 20279,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search terms to search fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20280,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).expand"
					}
				},
				{
					"id": 20281,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).fields"
					}
				},
				{
					"id": 20282,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).offset"
					}
				},
				{
					"id": 20283,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n20\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).limit"
					}
				},
				{
					"id": 20284,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).order"
					}
				},
				{
					"id": 20276,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20277,
							"name": "new AdminGetPromotionsRuleValueParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 20278,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 20275,
								"name": "AdminGetPromotionsRuleValueParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).constructor"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20276
					]
				},
				{
					"title": "Properties",
					"children": [
						20279,
						20280,
						20281,
						20282,
						20283,
						20284
					]
				}
			],
			"extendedTypes": [
				{
					"type": "intersection",
					"types": [
						{
							"type": "reference",
							"target": 20629,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindParams",
							"package": "@medusajs/medusa"
						},
						{
							"type": "reference",
							"target": 20634,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindPaginationParams",
							"package": "@medusajs/medusa"
						}
					]
				}
			]
		},
		{
			"id": 20285,
			"name": "AdminGetPromotionsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 20289,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20290,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search terms to search promotions' code fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20291,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the promotions' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 20292,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the promotions' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 20293,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).expand"
					}
				},
				{
					"id": 20294,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).fields"
					}
				},
				{
					"id": 20295,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).offset"
					}
				},
				{
					"id": 20296,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n20\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).limit"
					}
				},
				{
					"id": 20297,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).order"
					}
				},
				{
					"id": 20286,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20287,
							"name": "new AdminGetPromotionsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 20288,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 20285,
								"name": "AdminGetPromotionsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).constructor"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20286
					]
				},
				{
					"title": "Properties",
					"children": [
						20289,
						20290,
						20291,
						20292,
						20293,
						20294,
						20295,
						20296,
						20297
					]
				}
			],
			"extendedTypes": [
				{
					"type": "intersection",
					"types": [
						{
							"type": "reference",
							"target": 20629,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindParams",
							"package": "@medusajs/medusa"
						},
						{
							"type": "reference",
							"target": 20634,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindPaginationParams",
							"package": "@medusajs/medusa"
						}
					]
				}
			]
		},
		{
			"id": 20298,
			"name": "AdminPostCreatePromotionRule",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 20299,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20300,
							"name": "new AdminPostCreatePromotionRule",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20298,
								"name": "AdminPostCreatePromotionRule",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20301,
					"name": "operator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 21388,
						"name": "PromotionRuleOperator",
						"package": "@medusajs/utils"
					}
				},
				{
					"id": 20302,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 20303,
					"name": "attribute",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20304,
					"name": "values",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20299
					]
				},
				{
					"title": "Properties",
					"children": [
						20301,
						20302,
						20303,
						20304
					]
				}
			]
		},
		{
			"id": 20305,
			"name": "AdminPostPromotionsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 20306,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20307,
							"name": "new AdminPostPromotionsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20305,
								"name": "AdminPostPromotionsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20308,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20309,
					"name": "is_automatic",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 20310,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 21396,
						"name": "PromotionTypeValues",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 20311,
					"name": "campaign_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20312,
					"name": "campaign",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 21397,
						"name": "AdminPostCampaignsReq",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 20313,
					"name": "application_method",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 20315,
						"name": "AdminPostApplicationMethodsReq",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 20314,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 20298,
							"name": "AdminPostCreatePromotionRule",
							"package": "@medusajs/medusa"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20306
					]
				},
				{
					"title": "Properties",
					"children": [
						20308,
						20309,
						20310,
						20311,
						20312,
						20313,
						20314
					]
				}
			]
		},
		{
			"id": 20315,
			"name": "AdminPostApplicationMethodsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 20316,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20317,
							"name": "new AdminPostApplicationMethodsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20315,
								"name": "AdminPostApplicationMethodsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20318,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20319,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20320,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 20321,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 21408,
						"name": "ApplicationMethodType",
						"package": "@medusajs/utils"
					}
				},
				{
					"id": 20322,
					"name": "target_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 21411,
						"name": "ApplicationMethodTargetType",
						"package": "@medusajs/utils"
					}
				},
				{
					"id": 20323,
					"name": "allocation",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 21415,
						"name": "ApplicationMethodAllocation",
						"package": "@medusajs/utils"
					}
				},
				{
					"id": 20324,
					"name": "target_rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 20298,
							"name": "AdminPostCreatePromotionRule",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 20325,
					"name": "buy_rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 20298,
							"name": "AdminPostCreatePromotionRule",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 20326,
					"name": "apply_to_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 20327,
					"name": "buy_rules_min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20316
					]
				},
				{
					"title": "Properties",
					"children": [
						20318,
						20319,
						20320,
						20321,
						20322,
						20323,
						20324,
						20325,
						20326,
						20327
					]
				}
			]
		},
		{
			"id": 20328,
			"name": "AdminPostApplicationMethodsMethodReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 20329,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20330,
							"name": "new AdminPostApplicationMethodsMethodReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20328,
								"name": "AdminPostApplicationMethodsMethodReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20331,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20332,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20333,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 20334,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 21408,
						"name": "ApplicationMethodType",
						"package": "@medusajs/utils"
					}
				},
				{
					"id": 20335,
					"name": "target_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 21411,
						"name": "ApplicationMethodTargetType",
						"package": "@medusajs/utils"
					}
				},
				{
					"id": 20336,
					"name": "allocation",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 21415,
						"name": "ApplicationMethodAllocation",
						"package": "@medusajs/utils"
					}
				},
				{
					"id": 20337,
					"name": "target_rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 20298,
							"name": "AdminPostCreatePromotionRule",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 20338,
					"name": "buy_rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 20298,
							"name": "AdminPostCreatePromotionRule",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 20339,
					"name": "apply_to_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 20340,
					"name": "buy_rules_min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20329
					]
				},
				{
					"title": "Properties",
					"children": [
						20331,
						20332,
						20333,
						20334,
						20335,
						20336,
						20337,
						20338,
						20339,
						20340
					]
				}
			]
		},
		{
			"id": 20341,
			"name": "AdminPostPromotionsPromotionReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 20342,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20343,
							"name": "new AdminPostPromotionsPromotionReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20341,
								"name": "AdminPostPromotionsPromotionReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20344,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20345,
					"name": "is_automatic",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 20346,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 21418,
						"name": "PromotionType",
						"package": "@medusajs/utils"
					}
				},
				{
					"id": 20347,
					"name": "campaign_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20348,
					"name": "campaign",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 21397,
						"name": "AdminPostCampaignsReq",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 20349,
					"name": "application_method",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 20328,
						"name": "AdminPostApplicationMethodsMethodReq",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 20350,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 20298,
							"name": "AdminPostCreatePromotionRule",
							"package": "@medusajs/medusa"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20342
					]
				},
				{
					"title": "Properties",
					"children": [
						20344,
						20345,
						20346,
						20347,
						20348,
						20349,
						20350
					]
				}
			]
		},
		{
			"id": 20351,
			"name": "AdminPostBatchAddRules",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 20352,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20353,
							"name": "new AdminPostBatchAddRules",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20351,
								"name": "AdminPostBatchAddRules",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20354,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 20298,
							"name": "AdminPostCreatePromotionRule",
							"package": "@medusajs/medusa"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20352
					]
				},
				{
					"title": "Properties",
					"children": [
						20354
					]
				}
			]
		},
		{
			"id": 20355,
			"name": "AdminPostBatchRemoveRules",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 20356,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20357,
							"name": "new AdminPostBatchRemoveRules",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20355,
								"name": "AdminPostBatchRemoveRules",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20358,
					"name": "rule_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20356
					]
				},
				{
					"title": "Properties",
					"children": [
						20358
					]
				}
			]
		},
		{
			"id": 20359,
			"name": "AdminPostBatchUpdateRules",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 20360,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20361,
							"name": "new AdminPostBatchUpdateRules",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20359,
								"name": "AdminPostBatchUpdateRules",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20362,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 20363,
							"name": "AdminPostUpdatePromotionRule",
							"package": "@medusajs/medusa"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20360
					]
				},
				{
					"title": "Properties",
					"children": [
						20362
					]
				}
			]
		},
		{
			"id": 20363,
			"name": "AdminPostUpdatePromotionRule",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 20364,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20365,
							"name": "new AdminPostUpdatePromotionRule",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20363,
								"name": "AdminPostUpdatePromotionRule",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20366,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20367,
					"name": "operator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 21388,
						"name": "PromotionRuleOperator",
						"package": "@medusajs/utils"
					}
				},
				{
					"id": 20368,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 20369,
					"name": "attribute",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20370,
					"name": "values",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20364
					]
				},
				{
					"title": "Properties",
					"children": [
						20366,
						20367,
						20368,
						20369,
						20370
					]
				}
			]
		},
		{
			"id": 20373,
			"name": "authenticateCustomer",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 20374,
					"name": "authenticateCustomer",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
							"qualifiedName": "e.RequestHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/@types/express-serve-static-core/index.d.ts",
									"qualifiedName": "ParamsDictionary"
								},
								"name": "ParamsDictionary",
								"package": "@types/express-serve-static-core"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/@types/qs/index.d.ts",
									"qualifiedName": "QueryString.ParsedQs"
								},
								"name": "ParsedQs",
								"package": "@types/qs",
								"qualifiedName": "QueryString.ParsedQs"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						],
						"name": "RequestHandler",
						"package": "@types/express",
						"qualifiedName": "e.RequestHandler"
					}
				}
			]
		},
		{
			"id": 20371,
			"name": "authenticate",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 20372,
					"name": "authenticate",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
							"qualifiedName": "e.RequestHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/@types/express-serve-static-core/index.d.ts",
									"qualifiedName": "ParamsDictionary"
								},
								"name": "ParamsDictionary",
								"package": "@types/express-serve-static-core"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/@types/qs/index.d.ts",
									"qualifiedName": "QueryString.ParsedQs"
								},
								"name": "ParsedQs",
								"package": "@types/qs",
								"qualifiedName": "QueryString.ParsedQs"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						],
						"name": "RequestHandler",
						"package": "@types/express",
						"qualifiedName": "e.RequestHandler"
					}
				}
			]
		},
		{
			"id": 21421,
			"name": "handler",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 21422,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"signatures": [
						{
							"id": 21423,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 21424,
									"name": "req",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
											"qualifiedName": "e.Request"
										},
										"name": "Request",
										"package": "@types/express",
										"qualifiedName": "e.Request"
									}
								},
								{
									"id": 21425,
									"name": "res",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
											"qualifiedName": "e.Response"
										},
										"name": "Response",
										"package": "@types/express",
										"qualifiedName": "e.Response"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			}
		},
		{
			"id": 20375,
			"name": "wrapHandler",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 20376,
					"name": "wrapHandler",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "use "
									},
									{
										"kind": "code",
										"text": "`import { wrapHandler } from \"@medusajs/utils\"`"
									}
								]
							}
						]
					},
					"parameters": [
						{
							"id": 20377,
							"name": "fn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21421,
								"name": "handler",
								"package": "@medusajs/medusa"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
							"qualifiedName": "e.RequestHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/@types/express-serve-static-core/index.d.ts",
									"qualifiedName": "ParamsDictionary"
								},
								"name": "ParamsDictionary",
								"package": "@types/express-serve-static-core"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/@types/qs/index.d.ts",
									"qualifiedName": "QueryString.ParsedQs"
								},
								"name": "ParsedQs",
								"package": "@types/qs",
								"qualifiedName": "QueryString.ParsedQs"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						],
						"name": "RequestHandler",
						"package": "@types/express",
						"qualifiedName": "e.RequestHandler"
					}
				}
			]
		},
		{
			"id": 20378,
			"name": "canAccessBatchJob",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 20379,
					"name": "canAccessBatchJob",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 20380,
							"name": "req",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 20381,
							"name": "res",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 20382,
							"name": "next",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Promise"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Promise",
						"package": "typescript"
					}
				}
			]
		},
		{
			"id": 20383,
			"name": "getRequestedBatchJob",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 20384,
					"name": "getRequestedBatchJob",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 20385,
							"name": "req",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 20386,
							"name": "res",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 20387,
							"name": "next",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Promise"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Promise",
						"package": "typescript"
					}
				}
			]
		},
		{
			"id": 20388,
			"name": "doesConditionBelongToDiscount",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 20389,
					"name": "doesConditionBelongToDiscount",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 20390,
							"name": "req",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 20391,
							"name": "res",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 20392,
							"name": "next",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Promise"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Promise",
						"package": "typescript"
					}
				}
			]
		},
		{
			"id": 20393,
			"name": "errorHandler",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 20394,
					"name": "errorHandler",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 20395,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 20396,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 20397,
											"name": "err",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 21426,
												"name": "MedusaError",
												"package": "medusa-core-utils"
											}
										},
										{
											"id": 20398,
											"name": "req",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.Request"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../node_modules/@types/express-serve-static-core/index.d.ts",
															"qualifiedName": "ParamsDictionary"
														},
														"name": "ParamsDictionary",
														"package": "@types/express-serve-static-core"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../node_modules/@types/qs/index.d.ts",
															"qualifiedName": "QueryString.ParsedQs"
														},
														"name": "ParsedQs",
														"package": "@types/qs",
														"qualifiedName": "QueryString.ParsedQs"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												],
												"name": "Request",
												"package": "@types/express",
												"qualifiedName": "e.Request"
											}
										},
										{
											"id": 20399,
											"name": "res",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.Response"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												],
												"name": "Response",
												"package": "@types/express",
												"qualifiedName": "e.Response"
											}
										},
										{
											"id": 20400,
											"name": "next",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.NextFunction"
												},
												"name": "NextFunction",
												"package": "@types/express",
												"qualifiedName": "e.NextFunction"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 20401,
			"name": "isFeatureFlagEnabled",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 20402,
					"name": "isFeatureFlagEnabled",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 20403,
							"name": "flagKey",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 20404,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 20405,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 20406,
											"name": "req",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.Request"
												},
												"name": "Request",
												"package": "@types/express",
												"qualifiedName": "e.Request"
											}
										},
										{
											"id": 20407,
											"name": "res",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.Response"
												},
												"name": "Response",
												"package": "@types/express",
												"qualifiedName": "e.Response"
											}
										},
										{
											"id": 20408,
											"name": "next",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.NextFunction"
												},
												"name": "NextFunction",
												"package": "@types/express",
												"qualifiedName": "e.NextFunction"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 20409,
			"name": "normalizeQuery",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 20410,
					"name": "normalizeQuery",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Normalize an input query, especially from array like query params to an array type\ne.g: /admin/orders/?fields[]=id,status,cart_id becomes { fields: [\"id\", \"status\", \"cart_id\"] }"
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 20411,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 20412,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 20413,
											"name": "req",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.Request"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../node_modules/@types/express-serve-static-core/index.d.ts",
															"qualifiedName": "ParamsDictionary"
														},
														"name": "ParamsDictionary",
														"package": "@types/express-serve-static-core"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../node_modules/@types/qs/index.d.ts",
															"qualifiedName": "QueryString.ParsedQs"
														},
														"name": "ParsedQs",
														"package": "@types/qs",
														"qualifiedName": "QueryString.ParsedQs"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												],
												"name": "Request",
												"package": "@types/express",
												"qualifiedName": "e.Request"
											}
										},
										{
											"id": 20414,
											"name": "res",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.Response"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												],
												"name": "Response",
												"package": "@types/express",
												"qualifiedName": "e.Response"
											}
										},
										{
											"id": 20415,
											"name": "next",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.NextFunction"
												},
												"name": "NextFunction",
												"package": "@types/express",
												"qualifiedName": "e.NextFunction"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 20416,
			"name": "requireCustomerAuthentication",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 20417,
					"name": "requireCustomerAuthentication",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
							"qualifiedName": "e.RequestHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/@types/express-serve-static-core/index.d.ts",
									"qualifiedName": "ParamsDictionary"
								},
								"name": "ParamsDictionary",
								"package": "@types/express-serve-static-core"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/@types/qs/index.d.ts",
									"qualifiedName": "QueryString.ParsedQs"
								},
								"name": "ParsedQs",
								"package": "@types/qs",
								"qualifiedName": "QueryString.ParsedQs"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						],
						"name": "RequestHandler",
						"package": "@types/express",
						"qualifiedName": "e.RequestHandler"
					}
				}
			]
		},
		{
			"id": 20418,
			"name": "transformBody",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 20419,
					"name": "transformBody",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"typeParameter": [
						{
							"id": 20420,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 20421,
							"name": "plainToClass",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20644,
								"typeArguments": [
									{
										"type": "reference",
										"target": 20420,
										"name": "T",
										"package": "@medusajs/medusa",
										"refersToTypeParameter": true
									}
								],
								"name": "ClassConstructor",
								"package": "@medusajs/medusa"
							}
						},
						{
							"id": 20422,
							"name": "config",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/class-validator/types/validation/ValidatorOptions.d.ts",
									"qualifiedName": "ValidatorOptions"
								},
								"name": "ValidatorOptions",
								"package": "class-validator"
							},
							"defaultValue": "..."
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 20423,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 20424,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 20425,
											"name": "req",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.Request"
												},
												"name": "Request",
												"package": "@types/express",
												"qualifiedName": "e.Request"
											}
										},
										{
											"id": 20426,
											"name": "res",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.Response"
												},
												"name": "Response",
												"package": "@types/express",
												"qualifiedName": "e.Response"
											}
										},
										{
											"id": 20427,
											"name": "next",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.NextFunction"
												},
												"name": "NextFunction",
												"package": "@types/express",
												"qualifiedName": "e.NextFunction"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 20428,
			"name": "transformIncludesOptions",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 20429,
					"name": "transformIncludesOptions",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve the includes options from the fields query param.\nIf the include option is present then assigned it to includes on req"
							}
						]
					},
					"parameters": [
						{
							"id": 20430,
							"name": "allowedIncludes",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The list of fields that can be passed and assign to req.includes"
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"defaultValue": "[]"
						},
						{
							"id": 20431,
							"name": "expectedIncludes",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The list of fields that the consumer can pass to the end point using this middleware. It is a subset of "
									},
									{
										"kind": "code",
										"text": "`allowedIncludes`"
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"defaultValue": "[]"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 20432,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 20433,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 20434,
											"name": "req",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.Request"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../node_modules/@types/express-serve-static-core/index.d.ts",
															"qualifiedName": "ParamsDictionary"
														},
														"name": "ParamsDictionary",
														"package": "@types/express-serve-static-core"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../node_modules/@types/qs/index.d.ts",
															"qualifiedName": "QueryString.ParsedQs"
														},
														"name": "ParsedQs",
														"package": "@types/qs",
														"qualifiedName": "QueryString.ParsedQs"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												],
												"name": "Request",
												"package": "@types/express",
												"qualifiedName": "e.Request"
											}
										},
										{
											"id": 20435,
											"name": "res",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.Response"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												],
												"name": "Response",
												"package": "@types/express",
												"qualifiedName": "e.Response"
											}
										},
										{
											"id": 20436,
											"name": "next",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.NextFunction"
												},
												"name": "NextFunction",
												"package": "@types/express",
												"qualifiedName": "e.NextFunction"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 20437,
			"name": "transformQuery",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 20438,
					"name": "transformQuery",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Middleware that transform the query input for the admin end points"
							}
						]
					},
					"typeParameter": [
						{
							"id": 20439,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20560,
								"name": "RequestQueryFields",
								"package": "@medusajs/medusa"
							}
						},
						{
							"id": 20440,
							"name": "TEntity",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
									"qualifiedName": "BaseEntity"
								},
								"name": "BaseEntity",
								"package": "@medusajs/medusa"
							}
						}
					],
					"parameters": [
						{
							"id": 20441,
							"name": "plainToClass",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20644,
								"typeArguments": [
									{
										"type": "reference",
										"target": 20439,
										"name": "T",
										"package": "@medusajs/medusa",
										"refersToTypeParameter": true
									}
								],
								"name": "ClassConstructor",
								"package": "@medusajs/medusa"
							}
						},
						{
							"id": 20442,
							"name": "queryConfig",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20549,
								"typeArguments": [
									{
										"type": "reference",
										"target": 20440,
										"name": "TEntity",
										"package": "@medusajs/medusa",
										"refersToTypeParameter": true
									}
								],
								"name": "QueryConfig",
								"package": "@medusajs/medusa"
							},
							"defaultValue": "{}"
						},
						{
							"id": 20443,
							"name": "config",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/class-validator/types/validation/ValidatorOptions.d.ts",
									"qualifiedName": "ValidatorOptions"
								},
								"name": "ValidatorOptions",
								"package": "class-validator"
							},
							"defaultValue": "{}"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 20444,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 20445,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 20446,
											"name": "req",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.Request"
												},
												"name": "Request",
												"package": "@types/express",
												"qualifiedName": "e.Request"
											}
										},
										{
											"id": 20447,
											"name": "res",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.Response"
												},
												"name": "Response",
												"package": "@types/express",
												"qualifiedName": "e.Response"
											}
										},
										{
											"id": 20448,
											"name": "next",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.NextFunction"
												},
												"name": "NextFunction",
												"package": "@types/express",
												"qualifiedName": "e.NextFunction"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 20449,
			"name": "transformStoreQuery",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 20450,
					"name": "transformStoreQuery",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Middleware that transform the query input for the store endpoints"
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "use "
									},
									{
										"kind": "code",
										"text": "`transformQuery`"
									},
									{
										"kind": "text",
										"text": " instead"
									}
								]
							}
						]
					},
					"typeParameter": [
						{
							"id": 20451,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20560,
								"name": "RequestQueryFields",
								"package": "@medusajs/medusa"
							}
						},
						{
							"id": 20452,
							"name": "TEntity",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
									"qualifiedName": "BaseEntity"
								},
								"name": "BaseEntity",
								"package": "@medusajs/medusa"
							}
						}
					],
					"parameters": [
						{
							"id": 20453,
							"name": "plainToClass",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20644,
								"typeArguments": [
									{
										"type": "reference",
										"target": 20451,
										"name": "T",
										"package": "@medusajs/medusa",
										"refersToTypeParameter": true
									}
								],
								"name": "ClassConstructor",
								"package": "@medusajs/medusa"
							}
						},
						{
							"id": 20454,
							"name": "queryConfig",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 20549,
								"typeArguments": [
									{
										"type": "reference",
										"target": 20452,
										"name": "TEntity",
										"package": "@medusajs/medusa",
										"refersToTypeParameter": true
									}
								],
								"name": "QueryConfig",
								"package": "@medusajs/medusa"
							}
						},
						{
							"id": 20455,
							"name": "config",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/class-validator/types/validation/ValidatorOptions.d.ts",
									"qualifiedName": "ValidatorOptions"
								},
								"name": "ValidatorOptions",
								"package": "class-validator"
							},
							"defaultValue": "{}"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 20456,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 20457,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 20458,
											"name": "req",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.Request"
												},
												"name": "Request",
												"package": "@types/express",
												"qualifiedName": "e.Request"
											}
										},
										{
											"id": 20459,
											"name": "res",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.Response"
												},
												"name": "Response",
												"package": "@types/express",
												"qualifiedName": "e.Response"
											}
										},
										{
											"id": 20460,
											"name": "next",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.NextFunction"
												},
												"name": "NextFunction",
												"package": "@types/express",
												"qualifiedName": "e.NextFunction"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 17563,
			"name": "AdminPostAnalyticsConfigReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 17564,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17565,
							"name": "new AdminPostAnalyticsConfigReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17563,
								"name": "AdminPostAnalyticsConfigReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 17566,
					"name": "opt_out",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 17567,
					"name": "anonymize",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17564
					]
				},
				{
					"title": "Properties",
					"children": [
						17566,
						17567
					]
				}
			]
		},
		{
			"id": 17559,
			"name": "AdminAnalyticsConfigRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 17560,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 17561,
							"name": "analytics_config",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/analytics-config.ts",
									"qualifiedName": "AnalyticsConfig"
								},
								"name": "AnalyticsConfig",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								17561
							]
						}
					]
				}
			}
		},
		{
			"id": 17562,
			"name": "AdminAnalyticsConfigDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": 20570,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 17568,
			"name": "AdminPostAnalyticsConfigAnalyticsConfigReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 17569,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17570,
							"name": "new AdminPostAnalyticsConfigAnalyticsConfigReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17568,
								"name": "AdminPostAnalyticsConfigAnalyticsConfigReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 17571,
					"name": "opt_out",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 17572,
					"name": "anonymize",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17569
					]
				},
				{
					"title": "Properties",
					"children": [
						17571,
						17572
					]
				}
			]
		},
		{
			"id": 17579,
			"name": "AdminPostAuthReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The admin's credentials used to log in."
					}
				]
			},
			"children": [
				{
					"id": 17580,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17581,
							"name": "new AdminPostAuthReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The admin's credentials used to log in."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 17579,
								"name": "AdminPostAuthReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 17582,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The user's email."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17583,
					"name": "password",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The user's password."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17580
					]
				},
				{
					"title": "Properties",
					"children": [
						17582,
						17583
					]
				}
			]
		},
		{
			"id": 17573,
			"name": "AdminAuthRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The user's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 17574,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 17575,
							"name": "user",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "User details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/user.ts",
											"qualifiedName": "User"
										},
										"name": "User",
										"package": "@medusajs/medusa"
									},
									{
										"type": "literal",
										"value": "password_hash"
									}
								],
								"name": "Omit",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								17575
							]
						}
					]
				}
			}
		},
		{
			"id": 17576,
			"name": "AdminBearerAuthRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The access token of the user, if they're authenticated successfully."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 17577,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 17578,
							"name": "access_token",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Access token that can be used to send authenticated requests."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								17578
							]
						}
					]
				}
			}
		},
		{
			"id": 17591,
			"name": "AdminPostBatchesReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the batch job to create."
					}
				]
			},
			"children": [
				{
					"id": 17592,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17593,
							"name": "new AdminPostBatchesReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the batch job to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 17591,
								"name": "AdminPostBatchesReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 17594,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of batch job to start, which is defined by the `batchType` property of the associated batch job strategy."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17595,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Additional infomration regarding the batch to be used for processing."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 17596,
					"name": "dry_run",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Set a batch job in dry_run mode, which would delay executing the batch job until it's confirmed."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17592
					]
				},
				{
					"title": "Properties",
					"children": [
						17594,
						17595,
						17596
					]
				}
			]
		},
		{
			"id": 17584,
			"name": "AdminBatchJobRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The batch job's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 17585,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 17586,
							"name": "batch_job",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Batch job details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/batch-job.ts",
									"qualifiedName": "BatchJob"
								},
								"name": "BatchJob",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								17586
							]
						}
					]
				}
			}
		},
		{
			"id": 17587,
			"name": "AdminBatchJobListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 20566,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 17588,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 17589,
									"name": "batch_jobs",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of batch job details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/batch-job.ts",
												"qualifiedName": "BatchJob"
											},
											"name": "BatchJob",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										17589
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 17590,
			"name": "defaultAdminBatchFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 17597,
			"name": "AdminGetBatchPaginationParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Request parameters used to configure and paginate retrieved batch jobs."
					}
				]
			},
			"children": [
				{
					"id": 17598,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17599,
							"name": "new AdminGetBatchPaginationParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17597,
								"name": "AdminGetBatchPaginationParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 17600,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "10"
				},
				{
					"id": 17601,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 17602,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17603,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17604,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17598
					]
				},
				{
					"title": "Properties",
					"children": [
						17600,
						17601,
						17602,
						17603,
						17604
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 17605,
					"name": "AdminGetBatchParams"
				}
			]
		},
		{
			"id": 17605,
			"name": "AdminGetBatchParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure pagination of the retrieved batch jobs."
					}
				]
			},
			"children": [
				{
					"id": 17606,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17607,
							"name": "new AdminGetBatchParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17605,
								"name": "AdminGetBatchParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17599,
								"name": "AdminGetBatchPaginationParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 17598,
						"name": "AdminGetBatchPaginationParams.constructor"
					}
				},
				{
					"id": 17617,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "10",
					"inheritedFrom": {
						"type": "reference",
						"target": 17600,
						"name": "AdminGetBatchPaginationParams.limit"
					}
				},
				{
					"id": 17618,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": 17601,
						"name": "AdminGetBatchPaginationParams.offset"
					}
				},
				{
					"id": 17619,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 17602,
						"name": "AdminGetBatchPaginationParams.expand"
					}
				},
				{
					"id": 17620,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 17603,
						"name": "AdminGetBatchPaginationParams.fields"
					}
				},
				{
					"id": 17621,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 17604,
						"name": "AdminGetBatchPaginationParams.order"
					}
				},
				{
					"id": 17608,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter batch jobs by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 17609,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Types to filter batch jobs by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 17610,
					"name": "confirmed_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the batch jobs' "
							},
							{
								"kind": "code",
								"text": "`confirmed_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 20577,
								"name": "DateComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 17611,
					"name": "pre_processed_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the batch jobs' "
							},
							{
								"kind": "code",
								"text": "`pre_processed_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 20577,
								"name": "DateComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 17612,
					"name": "completed_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the batch jobs' "
							},
							{
								"kind": "code",
								"text": "`completed_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 20577,
								"name": "DateComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 17613,
					"name": "failed_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the batch jobs' "
							},
							{
								"kind": "code",
								"text": "`failed_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 20577,
								"name": "DateComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 17614,
					"name": "canceled_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the batch jobs' "
							},
							{
								"kind": "code",
								"text": "`canceled_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 20577,
								"name": "DateComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 17615,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the batch jobs' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 17616,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the batch jobs' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17606
					]
				},
				{
					"title": "Properties",
					"children": [
						17617,
						17618,
						17619,
						17620,
						17621,
						17608,
						17609,
						17610,
						17611,
						17612,
						17613,
						17614,
						17615,
						17616
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 17597,
					"name": "AdminGetBatchPaginationParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 17636,
			"name": "AdminPostProductsToCollectionReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the products to add to the collection."
					}
				]
			},
			"children": [
				{
					"id": 17637,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17638,
							"name": "new AdminPostProductsToCollectionReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the products to add to the collection."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 17636,
								"name": "AdminPostProductsToCollectionReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 17639,
					"name": "product_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of Product IDs to add to the Product Collection."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17637
					]
				},
				{
					"title": "Properties",
					"children": [
						17639
					]
				}
			]
		},
		{
			"id": 17640,
			"name": "AdminPostCollectionsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The product collection's details."
					}
				]
			},
			"children": [
				{
					"id": 17641,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17642,
							"name": "new AdminPostCollectionsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The product collection's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 17640,
								"name": "AdminPostCollectionsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 17643,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the collection."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17644,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional handle to be used in slugs. If none is provided, the kebab-case version of the title will be used."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17645,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs to hold additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17641
					]
				},
				{
					"title": "Properties",
					"children": [
						17643,
						17644,
						17645
					]
				}
			]
		},
		{
			"id": 17622,
			"name": "defaultAdminCollectionsFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 17623,
			"name": "defaultAdminCollectionsRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 17624,
			"name": "AdminCollectionsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 20566,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 17625,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 17626,
									"name": "collections",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "an array of collection details"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/product-collection.ts",
												"qualifiedName": "ProductCollection"
											},
											"name": "ProductCollection",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										17626
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 17627,
			"name": "AdminCollectionsDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 20570,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 17628,
			"name": "AdminDeleteProductsFromCollectionRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Deletion operation details"
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 17629,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 17630,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the collection"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 17631,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of object the removal was executed on"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "product-collection"
						},
						{
							"id": 17632,
							"name": "removed_products",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The IDs of the products removed from the collection"
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								17630,
								17631,
								17632
							]
						}
					]
				}
			}
		},
		{
			"id": 17633,
			"name": "AdminCollectionsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The collection's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 17634,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 17635,
							"name": "collection",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Product Collection details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/product-collection.ts",
									"qualifiedName": "ProductCollection"
								},
								"name": "ProductCollection",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								17635
							]
						}
					]
				}
			}
		},
		{
			"id": 17646,
			"name": "AdminGetCollectionsPaginationParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to configure the pagination of the retrieved product collections."
					}
				]
			},
			"children": [
				{
					"id": 17647,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17648,
							"name": "new AdminGetCollectionsPaginationParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17646,
								"name": "AdminGetCollectionsPaginationParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 17649,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "10"
				},
				{
					"id": 17650,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17647
					]
				},
				{
					"title": "Properties",
					"children": [
						17649,
						17650
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 17651,
					"name": "AdminGetCollectionsParams"
				}
			]
		},
		{
			"id": 17651,
			"name": "AdminGetCollectionsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved product collections."
					}
				]
			},
			"children": [
				{
					"id": 17652,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17653,
							"name": "new AdminGetCollectionsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17651,
								"name": "AdminGetCollectionsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 17648,
								"name": "AdminGetCollectionsPaginationParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 17647,
						"name": "AdminGetCollectionsPaginationParams.constructor"
					}
				},
				{
					"id": 17662,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "10",
					"inheritedFrom": {
						"type": "reference",
						"target": 17649,
						"name": "AdminGetCollectionsPaginationParams.limit"
					}
				},
				{
					"id": 17663,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": 17650,
						"name": "AdminGetCollectionsPaginationParams.offset"
					}
				},
				{
					"id": 17654,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Title to filter product collections by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17655,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Handle to filter product collections by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17656,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the product collections' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 17657,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the product collections' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 17658,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the product collections' "
							},
							{
								"kind": "code",
								"text": "`deleted_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 17659,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Term to search product collections by their title and handle."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17660,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17661,
					"name": "discount_condition_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter product collections by their associated discount condition's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17652
					]
				},
				{
					"title": "Properties",
					"children": [
						17662,
						17663,
						17654,
						17655,
						17656,
						17657,
						17658,
						17659,
						17660,
						17661
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 17646,
					"name": "AdminGetCollectionsPaginationParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 17664,
			"name": "AdminDeleteProductsFromCollectionReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the products to remove from the collection."
					}
				]
			},
			"children": [
				{
					"id": 17665,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17666,
							"name": "new AdminDeleteProductsFromCollectionReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the products to remove from the collection."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 17664,
								"name": "AdminDeleteProductsFromCollectionReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 17667,
					"name": "product_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of Product IDs to remove from the Product Collection."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17665
					]
				},
				{
					"title": "Properties",
					"children": [
						17667
					]
				}
			]
		},
		{
			"id": 17668,
			"name": "AdminPostCollectionsCollectionReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The product collection's details to update."
					}
				]
			},
			"children": [
				{
					"id": 17669,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17670,
							"name": "new AdminPostCollectionsCollectionReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The product collection's details to update."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 17668,
								"name": "AdminPostCollectionsCollectionReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 17671,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the collection."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17672,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional handle to be used in slugs. If none is provided, the kebab-case version of the title will be used."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17673,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs to hold additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17669
					]
				},
				{
					"title": "Properties",
					"children": [
						17671,
						17672,
						17673
					]
				}
			]
		},
		{
			"id": 17674,
			"name": "AdminCurrenciesListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "List of currencies with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 20566,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 17675,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 17676,
									"name": "currencies",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of currency details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/currency.ts",
												"qualifiedName": "Currency"
											},
											"name": "Currency",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										17676
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 17677,
			"name": "AdminCurrenciesRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A currency's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 17678,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 17679,
							"name": "currency",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Currency details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/currency.ts",
									"qualifiedName": "Currency"
								},
								"name": "Currency",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								17679
							]
						}
					]
				}
			}
		},
		{
			"id": 17680,
			"name": "AdminGetCurrenciesParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved currencies."
					}
				]
			},
			"children": [
				{
					"id": 17681,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17682,
							"name": "new AdminGetCurrenciesParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17680,
								"name": "AdminGetCurrenciesParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20636,
								"name": "FindPaginationParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20635,
						"name": "FindPaginationParams.constructor"
					}
				},
				{
					"id": 17683,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Code to filter currencies by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17684,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search parameter for currencies."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17685,
					"name": "includes_tax",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter currencies by whether they include tax."
							}
						],
						"blockTags": [
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "text",
										"text": "tax_inclusive_pricing"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 17686,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": ".\nBy default, the returned currencies will be sorted by their "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": 20639,
						"name": "FindPaginationParams.order"
					}
				},
				{
					"id": 17687,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": 20637,
						"name": "FindPaginationParams.offset"
					}
				},
				{
					"id": 17688,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n20\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20",
					"inheritedFrom": {
						"type": "reference",
						"target": 20638,
						"name": "FindPaginationParams.limit"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17681
					]
				},
				{
					"title": "Properties",
					"children": [
						17683,
						17684,
						17685,
						17686,
						17687,
						17688
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20634,
					"name": "FindPaginationParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 17689,
			"name": "AdminPostCurrenciesCurrencyReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update in the currency"
					}
				]
			},
			"children": [
				{
					"id": 17690,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17691,
							"name": "new AdminPostCurrenciesCurrencyReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update in the currency"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 17689,
								"name": "AdminPostCurrenciesCurrencyReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 17692,
					"name": "includes_tax",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Tax included in prices of currency."
							}
						],
						"blockTags": [
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "tax_inclusive_pricing",
										"tag": "@featureFlag"
									}
								]
							},
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "tax_inclusive_pricing",
										"tag": "@featureFlag"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17690
					]
				},
				{
					"title": "Properties",
					"children": [
						17692
					]
				}
			]
		},
		{
			"id": 17701,
			"name": "AdminPostCustomerGroupsGroupCustomersBatchReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The customers to add to the customer group."
					}
				]
			},
			"children": [
				{
					"id": 17702,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17703,
							"name": "new AdminPostCustomerGroupsGroupCustomersBatchReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The customers to add to the customer group."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 17701,
								"name": "AdminPostCustomerGroupsGroupCustomersBatchReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 17704,
					"name": "customer_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ids of the customers to add"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 20885,
							"name": "CustomerGroupsBatchCustomer",
							"package": "@medusajs/medusa"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17702
					]
				},
				{
					"title": "Properties",
					"children": [
						17704
					]
				}
			]
		},
		{
			"id": 17705,
			"name": "AdminPostCustomerGroupsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the customer group to create."
					}
				]
			},
			"children": [
				{
					"id": 17706,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17707,
							"name": "new AdminPostCustomerGroupsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the customer group to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 17705,
								"name": "AdminPostCustomerGroupsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 17708,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Name of the customer group"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17709,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Metadata of the customer group."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17706
					]
				},
				{
					"title": "Properties",
					"children": [
						17708,
						17709
					]
				}
			]
		},
		{
			"id": 17710,
			"name": "AdminDeleteCustomerGroupsGroupCustomerBatchReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The customers to remove from the customer group."
					}
				]
			},
			"children": [
				{
					"id": 17711,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17712,
							"name": "new AdminDeleteCustomerGroupsGroupCustomerBatchReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The customers to remove from the customer group."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 17710,
								"name": "AdminDeleteCustomerGroupsGroupCustomerBatchReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 17713,
					"name": "customer_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ids of the customers to remove"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 20885,
							"name": "CustomerGroupsBatchCustomer",
							"package": "@medusajs/medusa"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17711
					]
				},
				{
					"title": "Properties",
					"children": [
						17713
					]
				}
			]
		},
		{
			"id": 17714,
			"name": "AdminGetCustomerGroupsGroupParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 17715,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17716,
							"name": "new AdminGetCustomerGroupsGroupParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17714,
								"name": "AdminGetCustomerGroupsGroupParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20631,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20630,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 17717,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20632,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 17718,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20633,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17715
					]
				},
				{
					"title": "Properties",
					"children": [
						17717,
						17718
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20629,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 17693,
			"name": "AdminCustomerGroupsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The customer group's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 17694,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 17695,
							"name": "customer_group",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Customer group details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/customer-group.ts",
									"qualifiedName": "CustomerGroup"
								},
								"name": "CustomerGroup",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								17695
							]
						}
					]
				}
			}
		},
		{
			"id": 17696,
			"name": "AdminCustomerGroupsDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 20570,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 17697,
			"name": "AdminCustomerGroupsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 20566,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 17698,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 17699,
									"name": "customer_groups",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of customer group details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/customer-group.ts",
												"qualifiedName": "CustomerGroup"
											},
											"name": "CustomerGroup",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										17699
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 17700,
			"name": "defaultAdminCustomerGroupsRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "never"
				}
			},
			"defaultValue": "[]"
		},
		{
			"id": 17719,
			"name": "AdminGetCustomerGroupsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved customer groups."
					}
				]
			},
			"children": [
				{
					"id": 17720,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17721,
							"name": "new AdminGetCustomerGroupsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17719,
								"name": "AdminGetCustomerGroupsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20891,
								"name": "FilterableCustomerGroupProps.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20890,
						"name": "FilterableCustomerGroupProps.constructor"
					}
				},
				{
					"id": 17722,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17723,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 17724,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "10"
				},
				{
					"id": 17725,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17726,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "inline-tag",
								"tag": "@inheritDoc",
								"text": "FindPaginationParams.fields"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17727,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter customer groups by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 20584,
								"name": "StringComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20892,
						"name": "FilterableCustomerGroupProps.id"
					}
				},
				{
					"id": 17728,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search customer groups by their name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20893,
						"name": "FilterableCustomerGroupProps.q"
					}
				},
				{
					"id": 17729,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Names to filter customer groups by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20894,
						"name": "FilterableCustomerGroupProps.name"
					}
				},
				{
					"id": 17730,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the customer groups' "
							},
							{
								"kind": "code",
								"text": "`update_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20895,
						"name": "FilterableCustomerGroupProps.updated_at"
					}
				},
				{
					"id": 17731,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the customer groups' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20896,
						"name": "FilterableCustomerGroupProps.created_at"
					}
				},
				{
					"id": 17732,
					"name": "discount_condition_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter customer groups by their associated discount condition's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20897,
						"name": "FilterableCustomerGroupProps.discount_condition_id"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17720
					]
				},
				{
					"title": "Properties",
					"children": [
						17722,
						17723,
						17724,
						17725,
						17726,
						17727,
						17728,
						17729,
						17730,
						17731,
						17732
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20889,
					"name": "FilterableCustomerGroupProps",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 17733,
			"name": "AdminPostCustomerGroupsGroupReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update in the customer group."
					}
				]
			},
			"children": [
				{
					"id": 17734,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17735,
							"name": "new AdminPostCustomerGroupsGroupReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update in the customer group."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 17733,
								"name": "AdminPostCustomerGroupsGroupReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 17736,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Name of the customer group"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17737,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Metadata of the customer group."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17734
					]
				},
				{
					"title": "Properties",
					"children": [
						17736,
						17737
					]
				}
			]
		},
		{
			"id": 17745,
			"name": "AdminPostCustomersReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the customer to create."
					}
				]
			},
			"children": [
				{
					"id": 17746,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17747,
							"name": "new AdminPostCustomersReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the customer to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 17745,
								"name": "AdminPostCustomersReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 17748,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's email."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17749,
					"name": "first_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's first name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17750,
					"name": "last_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's last name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17751,
					"name": "password",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's password."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17752,
					"name": "phone",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's phone number."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17753,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs to hold additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17746
					]
				},
				{
					"title": "Properties",
					"children": [
						17748,
						17749,
						17750,
						17751,
						17752,
						17753
					]
				}
			]
		},
		{
			"id": 17738,
			"name": "AdminCustomersRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The customer's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 17739,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 17740,
							"name": "customer",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Customer details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/customer.ts",
									"qualifiedName": "Customer"
								},
								"name": "Customer",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								17740
							]
						}
					]
				}
			}
		},
		{
			"id": 17741,
			"name": "AdminCustomersListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of customers with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 20566,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 17742,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 17743,
									"name": "customers",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of customer details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/customer.ts",
												"qualifiedName": "Customer"
											},
											"name": "Customer",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										17743
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 17744,
			"name": "defaultAdminCustomersRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 17754,
			"name": "AdminGetCustomersParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved customers."
					}
				]
			},
			"children": [
				{
					"id": 17755,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17756,
							"name": "new AdminGetCustomersParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17754,
								"name": "AdminGetCustomersParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20900,
								"name": "AdminListCustomerSelector.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20899,
						"name": "AdminListCustomerSelector.constructor"
					}
				},
				{
					"id": 17757,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n50\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "50"
				},
				{
					"id": 17758,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 17759,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17760,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17761,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term used to search customers' email, first name, last name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20901,
						"name": "AdminListCustomerSelector.q"
					}
				},
				{
					"id": 17762,
					"name": "has_account",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter customers by whether they have an account."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20902,
						"name": "AdminListCustomerSelector.has_account"
					}
				},
				{
					"id": 17763,
					"name": "groups",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter customers by the customer's customer groups."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20903,
						"name": "AdminListCustomerSelector.groups"
					}
				},
				{
					"id": 17764,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20904,
						"name": "AdminListCustomerSelector.order"
					}
				},
				{
					"id": 17765,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the customers' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20905,
						"name": "AdminListCustomerSelector.created_at"
					}
				},
				{
					"id": 17766,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the customers' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20906,
						"name": "AdminListCustomerSelector.updated_at"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17755
					]
				},
				{
					"title": "Properties",
					"children": [
						17757,
						17758,
						17759,
						17760,
						17761,
						17762,
						17763,
						17764,
						17765,
						17766
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20898,
					"name": "AdminListCustomerSelector",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 20907,
			"name": "Group",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 20908,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20909,
							"name": "new Group",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20907,
								"name": "Group",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20910,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of a customer group"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20908
					]
				},
				{
					"title": "Properties",
					"children": [
						20910
					]
				}
			]
		},
		{
			"id": 17767,
			"name": "AdminPostCustomersCustomerReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the customer to update."
					}
				]
			},
			"children": [
				{
					"id": 17768,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17769,
							"name": "new AdminPostCustomersCustomerReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the customer to update."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 17767,
								"name": "AdminPostCustomersCustomerReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 17770,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Customer's email. You can't update the email of a registered customer."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17771,
					"name": "first_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Customer's first name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17772,
					"name": "last_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Customer's last name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17773,
					"name": "password",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Customer's password."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17774,
					"name": "phone",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Customer's phone number."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17775,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs to hold additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 17776,
					"name": "groups",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A list of customer groups to which the customer belongs."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 20907,
							"name": "Group",
							"package": "@medusajs/medusa"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17768
					]
				},
				{
					"title": "Properties",
					"children": [
						17770,
						17771,
						17772,
						17773,
						17774,
						17775,
						17776
					]
				}
			]
		},
		{
			"id": 17932,
			"name": "AdminPostDiscountsDiscountConditionsConditionBatchReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the resources to add."
					}
				]
			},
			"children": [
				{
					"id": 17933,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17934,
							"name": "new AdminPostDiscountsDiscountConditionsConditionBatchReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the resources to add."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 17932,
								"name": "AdminPostDiscountsDiscountConditionsConditionBatchReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 17935,
					"name": "resources",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The resources to be added to the discount condition"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 17936,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 17937,
										"name": "id",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"comment": {
											"summary": [
												{
													"kind": "text",
													"text": "The ID of the item"
												}
											]
										},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											17937
										]
									}
								]
							}
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17933
					]
				},
				{
					"title": "Properties",
					"children": [
						17935
					]
				}
			]
		},
		{
			"id": 17938,
			"name": "AdminPostDiscountsDiscountConditionsConditionBatchParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 17939,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17940,
							"name": "new AdminPostDiscountsDiscountConditionsConditionBatchParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17938,
								"name": "AdminPostDiscountsDiscountConditionsConditionBatchParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20631,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20630,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 17941,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20632,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 17942,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20633,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17939
					]
				},
				{
					"title": "Properties",
					"children": [
						17941,
						17942
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20629,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 17794,
			"name": "AdminPostDiscountsDiscountConditions",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 17795,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17796,
							"name": "new AdminPostDiscountsDiscountConditions",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17794,
								"name": "AdminPostDiscountsDiscountConditions",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20913,
								"name": "AdminUpsertConditionsReq.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20912,
						"name": "AdminUpsertConditionsReq.constructor"
					}
				},
				{
					"id": 17797,
					"name": "operator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Operator of the condition. `in` indicates that discountable resources are within the specified resources. `not_in` indicates that discountable resources are everything but the specified resources."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/discount-condition.ts",
							"qualifiedName": "DiscountConditionOperator"
						},
						"name": "DiscountConditionOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 17798,
					"name": "products",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The products associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`products`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20914,
						"name": "AdminUpsertConditionsReq.products"
					}
				},
				{
					"id": 17799,
					"name": "product_collections",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product collections associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`product_collections`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20915,
						"name": "AdminUpsertConditionsReq.product_collections"
					}
				},
				{
					"id": 17800,
					"name": "product_types",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product types associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`product_types`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20916,
						"name": "AdminUpsertConditionsReq.product_types"
					}
				},
				{
					"id": 17801,
					"name": "product_tags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product tags associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`product_tags`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20917,
						"name": "AdminUpsertConditionsReq.product_tags"
					}
				},
				{
					"id": 17802,
					"name": "customer_groups",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer groups associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`customer_groups`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20918,
						"name": "AdminUpsertConditionsReq.customer_groups"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17795
					]
				},
				{
					"title": "Properties",
					"children": [
						17797,
						17798,
						17799,
						17800,
						17801,
						17802
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20911,
					"name": "AdminUpsertConditionsReq",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 17803,
			"name": "AdminPostDiscountsDiscountConditionsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 17804,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17805,
							"name": "new AdminPostDiscountsDiscountConditionsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17803,
								"name": "AdminPostDiscountsDiscountConditionsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20631,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20630,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 17806,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20632,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 17807,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20633,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17804
					]
				},
				{
					"title": "Properties",
					"children": [
						17806,
						17807
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20629,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 17808,
			"name": "AdminPostDiscountsDiscountRule",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Details of the discount rule to create."
					}
				]
			},
			"children": [
				{
					"id": 17809,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17810,
							"name": "new AdminPostDiscountsDiscountRule",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17808,
								"name": "AdminPostDiscountsDiscountRule",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 17811,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discount rule's description."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17812,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discount rule's type."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/discount-rule.ts",
							"qualifiedName": "DiscountRuleType"
						},
						"name": "DiscountRuleType",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 17813,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discount rule's value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 17814,
					"name": "allocation",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discount rule's allocation."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/discount-rule.ts",
							"qualifiedName": "AllocationType"
						},
						"name": "AllocationType",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 17815,
					"name": "conditions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discount rule's conditions."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 17829,
							"name": "AdminCreateCondition",
							"package": "@medusajs/medusa"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17809
					]
				},
				{
					"title": "Properties",
					"children": [
						17811,
						17812,
						17813,
						17814,
						17815
					]
				}
			]
		},
		{
			"id": 17816,
			"name": "AdminPostDiscountsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the discount to create."
					}
				]
			},
			"children": [
				{
					"id": 17817,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17818,
							"name": "new AdminPostDiscountsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the discount to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 17816,
								"name": "AdminPostDiscountsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 17819,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A unique code that will be used to redeem the discount"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17820,
					"name": "rule",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discount rule that defines how discounts are calculated"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 17808,
						"name": "AdminPostDiscountsDiscountRule",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 17821,
					"name": "is_dynamic",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the discount should have multiple instances of itself, each with a different code. This can be useful for automatically generated discount codes that all have to follow a common set of rules."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 17822,
					"name": "is_disabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the discount code is disabled on creation. If set to `true`, it will not be available for customers."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 17823,
					"name": "starts_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date and time at which the discount should be available."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 17824,
					"name": "ends_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date and time at which the discount should no longer be available."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 17825,
					"name": "valid_duration",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The duration the discount runs between"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17826,
					"name": "usage_limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Maximum number of times the discount can be used"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 17827,
					"name": "regions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A list of region IDs representing the Regions in which the Discount can be used."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 17828,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs to hold additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17817
					]
				},
				{
					"title": "Properties",
					"children": [
						17819,
						17820,
						17821,
						17822,
						17823,
						17824,
						17825,
						17826,
						17827,
						17828
					]
				}
			]
		},
		{
			"id": 17829,
			"name": "AdminCreateCondition",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Details of the discount condition to create."
					}
				]
			},
			"children": [
				{
					"id": 17830,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17831,
							"name": "new AdminCreateCondition",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17829,
								"name": "AdminCreateCondition",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20913,
								"name": "AdminUpsertConditionsReq.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20912,
						"name": "AdminUpsertConditionsReq.constructor"
					}
				},
				{
					"id": 17832,
					"name": "operator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The operator of the discount condition."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/discount-condition.ts",
							"qualifiedName": "DiscountConditionOperator"
						},
						"name": "DiscountConditionOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 17833,
					"name": "products",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The products associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`products`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20914,
						"name": "AdminUpsertConditionsReq.products"
					}
				},
				{
					"id": 17834,
					"name": "product_collections",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product collections associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`product_collections`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20915,
						"name": "AdminUpsertConditionsReq.product_collections"
					}
				},
				{
					"id": 17835,
					"name": "product_types",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product types associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`product_types`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20916,
						"name": "AdminUpsertConditionsReq.product_types"
					}
				},
				{
					"id": 17836,
					"name": "product_tags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product tags associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`product_tags`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20917,
						"name": "AdminUpsertConditionsReq.product_tags"
					}
				},
				{
					"id": 17837,
					"name": "customer_groups",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer groups associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`customer_groups`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20918,
						"name": "AdminUpsertConditionsReq.customer_groups"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17830
					]
				},
				{
					"title": "Properties",
					"children": [
						17832,
						17833,
						17834,
						17835,
						17836,
						17837
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20911,
					"name": "AdminUpsertConditionsReq",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 17838,
			"name": "AdminPostDiscountsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 17839,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17840,
							"name": "new AdminPostDiscountsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17838,
								"name": "AdminPostDiscountsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20631,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20630,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 17841,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20632,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 17842,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20633,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17839
					]
				},
				{
					"title": "Properties",
					"children": [
						17841,
						17842
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20629,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 17843,
			"name": "AdminPostDiscountsDiscountDynamicCodesReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the dynamic discount to create."
					}
				]
			},
			"children": [
				{
					"id": 17844,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17845,
							"name": "new AdminPostDiscountsDiscountDynamicCodesReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the dynamic discount to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 17843,
								"name": "AdminPostDiscountsDiscountDynamicCodesReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 17846,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A unique code that will be used to redeem the Discount"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17847,
					"name": "usage_limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Maximum number of times the discount code can be used"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "1"
				},
				{
					"id": 17848,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs to hold additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17844
					]
				},
				{
					"title": "Properties",
					"children": [
						17846,
						17847,
						17848
					]
				}
			]
		},
		{
			"id": 17849,
			"name": "AdminDeleteDiscountsDiscountConditionsConditionParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 17850,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17851,
							"name": "new AdminDeleteDiscountsDiscountConditionsConditionParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17849,
								"name": "AdminDeleteDiscountsDiscountConditionsConditionParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20631,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20630,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 17852,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20632,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 17853,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20633,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17850
					]
				},
				{
					"title": "Properties",
					"children": [
						17852,
						17853
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20629,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 17943,
			"name": "AdminDeleteDiscountsDiscountConditionsConditionBatchParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 17944,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17945,
							"name": "new AdminDeleteDiscountsDiscountConditionsConditionBatchParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17943,
								"name": "AdminDeleteDiscountsDiscountConditionsConditionBatchParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20631,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20630,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 17946,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20632,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 17947,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20633,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17944
					]
				},
				{
					"title": "Properties",
					"children": [
						17946,
						17947
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20629,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 17948,
			"name": "AdminDeleteDiscountsDiscountConditionsConditionBatchReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The resources to remove."
					}
				]
			},
			"children": [
				{
					"id": 17949,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17950,
							"name": "new AdminDeleteDiscountsDiscountConditionsConditionBatchReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The resources to remove."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 17948,
								"name": "AdminDeleteDiscountsDiscountConditionsConditionBatchReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 17951,
					"name": "resources",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The resources to be removed from the discount condition"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 17952,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 17953,
										"name": "id",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"comment": {
											"summary": [
												{
													"kind": "text",
													"text": "The id of the item"
												}
											]
										},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											17953
										]
									}
								]
							}
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17949
					]
				},
				{
					"title": "Properties",
					"children": [
						17951
					]
				}
			]
		},
		{
			"id": 17854,
			"name": "AdminGetDiscountsDiscountConditionsConditionParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 17855,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17856,
							"name": "new AdminGetDiscountsDiscountConditionsConditionParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17854,
								"name": "AdminGetDiscountsDiscountConditionsConditionParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20631,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20630,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 17857,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20632,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 17858,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20633,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17855
					]
				},
				{
					"title": "Properties",
					"children": [
						17857,
						17858
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20629,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 17864,
			"name": "AdminGetDiscountsDiscountCodeParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 17865,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17866,
							"name": "new AdminGetDiscountsDiscountCodeParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17864,
								"name": "AdminGetDiscountsDiscountCodeParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20631,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20630,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 17867,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20632,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 17868,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20633,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17865
					]
				},
				{
					"title": "Properties",
					"children": [
						17867,
						17868
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20629,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 17859,
			"name": "AdminGetDiscountParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 17860,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17861,
							"name": "new AdminGetDiscountParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17859,
								"name": "AdminGetDiscountParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20631,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20630,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 17862,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20632,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 17863,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20633,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17860
					]
				},
				{
					"title": "Properties",
					"children": [
						17862,
						17863
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20629,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 17777,
			"name": "defaultAdminDiscountsFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/discount.ts",
							"qualifiedName": "Discount"
						},
						"name": "Discount",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 17778,
			"name": "defaultAdminDiscountsRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 17779,
			"name": "defaultAdminDiscountConditionFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/discount-condition.ts",
							"qualifiedName": "DiscountCondition"
						},
						"name": "DiscountCondition",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 17780,
			"name": "defaultAdminDiscountConditionRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 17781,
			"name": "AdminDiscountsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The discount's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 17782,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 17783,
							"name": "discount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Discount details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/discount.ts",
									"qualifiedName": "Discount"
								},
								"name": "Discount",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								17783
							]
						}
					]
				}
			}
		},
		{
			"id": 17784,
			"name": "AdminDiscountConditionsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 17785,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 17786,
							"name": "discount_condition",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Discount condition details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/discount-condition.ts",
									"qualifiedName": "DiscountCondition"
								},
								"name": "DiscountCondition",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								17786
							]
						}
					]
				}
			}
		},
		{
			"id": 17787,
			"name": "AdminDiscountsDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 20570,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 17788,
			"name": "AdminDiscountConditionsDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 20570,
						"name": "DeleteResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 17789,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 17790,
									"name": "discount",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The Discount to which the condition used to belong to."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/discount.ts",
											"qualifiedName": "Discount"
										},
										"name": "Discount",
										"package": "@medusajs/medusa"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										17790
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 17791,
			"name": "AdminDiscountsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of discounts with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 20566,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 17792,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 17793,
									"name": "discounts",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The list of discounts."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/discount.ts",
												"qualifiedName": "Discount"
											},
											"name": "Discount",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										17793
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 17869,
			"name": "AdminGetDiscountsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved discounts."
					}
				]
			},
			"children": [
				{
					"id": 17873,
					"name": "rule",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter discounts by their associated rule."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20919,
						"name": "AdminGetDiscountsDiscountRuleParams",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 17874,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search terms to search discounts' code fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17875,
					"name": "is_dynamic",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter discounts by whether they're dynamic."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 17876,
					"name": "is_disabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter discounts by whether they're disabled."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 17877,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the discounts' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 17878,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the discounts' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 17879,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).order"
					}
				},
				{
					"id": 17880,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).expand"
					}
				},
				{
					"id": 17881,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).fields"
					}
				},
				{
					"id": 17882,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).offset"
					}
				},
				{
					"id": 17883,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n20\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).limit"
					}
				},
				{
					"id": 17870,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17871,
							"name": "new AdminGetDiscountsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 17872,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17869,
								"name": "AdminGetDiscountsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).constructor"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17870
					]
				},
				{
					"title": "Properties",
					"children": [
						17873,
						17874,
						17875,
						17876,
						17877,
						17878,
						17879,
						17880,
						17881,
						17882,
						17883
					]
				}
			],
			"extendedTypes": [
				{
					"type": "intersection",
					"types": [
						{
							"type": "reference",
							"target": 20629,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindParams",
							"package": "@medusajs/medusa"
						},
						{
							"type": "reference",
							"target": 20634,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindPaginationParams",
							"package": "@medusajs/medusa"
						}
					]
				}
			]
		},
		{
			"id": 17884,
			"name": "AdminPostDiscountsDiscountConditionsCondition",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 17885,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17886,
							"name": "new AdminPostDiscountsDiscountConditionsCondition",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17884,
								"name": "AdminPostDiscountsDiscountConditionsCondition",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20913,
								"name": "AdminUpsertConditionsReq.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20912,
						"name": "AdminUpsertConditionsReq.constructor"
					}
				},
				{
					"id": 17887,
					"name": "products",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The products associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`products`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20914,
						"name": "AdminUpsertConditionsReq.products"
					}
				},
				{
					"id": 17888,
					"name": "product_collections",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product collections associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`product_collections`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20915,
						"name": "AdminUpsertConditionsReq.product_collections"
					}
				},
				{
					"id": 17889,
					"name": "product_types",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product types associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`product_types`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20916,
						"name": "AdminUpsertConditionsReq.product_types"
					}
				},
				{
					"id": 17890,
					"name": "product_tags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product tags associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`product_tags`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20917,
						"name": "AdminUpsertConditionsReq.product_tags"
					}
				},
				{
					"id": 17891,
					"name": "customer_groups",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer groups associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`customer_groups`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20918,
						"name": "AdminUpsertConditionsReq.customer_groups"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17885
					]
				},
				{
					"title": "Properties",
					"children": [
						17887,
						17888,
						17889,
						17890,
						17891
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20911,
					"name": "AdminUpsertConditionsReq",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 17892,
			"name": "AdminPostDiscountsDiscountConditionsConditionParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 17893,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17894,
							"name": "new AdminPostDiscountsDiscountConditionsConditionParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17892,
								"name": "AdminPostDiscountsDiscountConditionsConditionParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20631,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20630,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 17895,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20632,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 17896,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20633,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17893
					]
				},
				{
					"title": "Properties",
					"children": [
						17895,
						17896
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20629,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 17897,
			"name": "AdminUpdateDiscountRule",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes of the discount rule to update."
					}
				]
			},
			"children": [
				{
					"id": 17898,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17899,
							"name": "new AdminUpdateDiscountRule",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17897,
								"name": "AdminUpdateDiscountRule",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 17900,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discount rule's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17901,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discount rule's description."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17902,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discount rule's value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 17903,
					"name": "allocation",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discount rule's allocation."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/discount-rule.ts",
							"qualifiedName": "AllocationType"
						},
						"name": "AllocationType",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 17904,
					"name": "conditions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discount rule's discount conditions."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 17917,
							"name": "AdminUpsertCondition",
							"package": "@medusajs/medusa"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17898
					]
				},
				{
					"title": "Properties",
					"children": [
						17900,
						17901,
						17902,
						17903,
						17904
					]
				}
			]
		},
		{
			"id": 17905,
			"name": "AdminPostDiscountsDiscountReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the discount to update."
					}
				]
			},
			"children": [
				{
					"id": 17906,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17907,
							"name": "new AdminPostDiscountsDiscountReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the discount to update."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 17905,
								"name": "AdminPostDiscountsDiscountReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 17908,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A unique code that will be used to redeem the discount"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17909,
					"name": "rule",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discount rule that defines how discounts are calculated"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 17897,
						"name": "AdminUpdateDiscountRule",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 17910,
					"name": "is_disabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the discount code is disabled on creation. If set to `true`, it will not be available for customers."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 17911,
					"name": "starts_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date and time at which the discount should be available."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 17912,
					"name": "ends_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date and time at which the discount should no longer be available."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 17913,
					"name": "valid_duration",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The duration the discount runs between"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 17914,
					"name": "usage_limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Maximum number of times the discount can be used"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 17915,
					"name": "regions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A list of region IDs representing the Regions in which the Discount can be used."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 17916,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing metadata of the discount"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17906
					]
				},
				{
					"title": "Properties",
					"children": [
						17908,
						17909,
						17910,
						17911,
						17912,
						17913,
						17914,
						17915,
						17916
					]
				}
			]
		},
		{
			"id": 17917,
			"name": "AdminUpsertCondition",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to create or update in the discount condition."
					}
				]
			},
			"children": [
				{
					"id": 17918,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17919,
							"name": "new AdminUpsertCondition",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17917,
								"name": "AdminUpsertCondition",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20913,
								"name": "AdminUpsertConditionsReq.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20912,
						"name": "AdminUpsertConditionsReq.constructor"
					}
				},
				{
					"id": 17920,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discount condition's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17921,
					"name": "operator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discount condition's operator."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/discount-condition.ts",
							"qualifiedName": "DiscountConditionOperator"
						},
						"name": "DiscountConditionOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 17922,
					"name": "products",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The products associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`products`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20914,
						"name": "AdminUpsertConditionsReq.products"
					}
				},
				{
					"id": 17923,
					"name": "product_collections",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product collections associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`product_collections`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20915,
						"name": "AdminUpsertConditionsReq.product_collections"
					}
				},
				{
					"id": 17924,
					"name": "product_types",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product types associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`product_types`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20916,
						"name": "AdminUpsertConditionsReq.product_types"
					}
				},
				{
					"id": 17925,
					"name": "product_tags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product tags associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`product_tags`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20917,
						"name": "AdminUpsertConditionsReq.product_tags"
					}
				},
				{
					"id": 17926,
					"name": "customer_groups",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer groups associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`customer_groups`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20918,
						"name": "AdminUpsertConditionsReq.customer_groups"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17918
					]
				},
				{
					"title": "Properties",
					"children": [
						17920,
						17921,
						17922,
						17923,
						17924,
						17925,
						17926
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20911,
					"name": "AdminUpsertConditionsReq",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 17927,
			"name": "AdminPostDiscountsDiscountParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 17928,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17929,
							"name": "new AdminPostDiscountsDiscountParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 17927,
								"name": "AdminPostDiscountsDiscountParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20631,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20630,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 17930,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20632,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 17931,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20633,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17928
					]
				},
				{
					"title": "Properties",
					"children": [
						17930,
						17931
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20629,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 17968,
			"name": "AdminPostDraftOrdersReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the draft order to create."
					}
				]
			},
			"children": [
				{
					"id": 17969,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17970,
							"name": "new AdminPostDraftOrdersReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the draft order to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 17968,
								"name": "AdminPostDraftOrdersReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 17971,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The status of the draft order. The draft order's default status is `open`. It's changed to `completed` when its payment is marked as paid."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17972,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The email of the customer of the draft order"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17973,
					"name": "billing_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Address to be used for billing purposes."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 20601,
								"name": "AddressPayload",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 17974,
					"name": "shipping_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Address to be used for shipping purposes."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 20601,
								"name": "AddressPayload",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 17975,
					"name": "items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The draft order's line items."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 20924,
							"name": "Item",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 17976,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the region for the draft order"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17977,
					"name": "discounts",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discounts to add to the draft order"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 20932,
							"name": "Discount",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 17978,
					"name": "customer_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the customer this draft order is associated with."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17979,
					"name": "no_notification_order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional flag passed to the resulting order that indicates whether the customer should receive notifications about order updates."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 17980,
					"name": "shipping_methods",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The shipping methods for the draft order"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 20936,
							"name": "ShippingMethod",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 17981,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The optional key-value map with additional details about the Draft Order."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"defaultValue": "{}"
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17969
					]
				},
				{
					"title": "Properties",
					"children": [
						17971,
						17972,
						17973,
						17974,
						17975,
						17976,
						17977,
						17978,
						17979,
						17980,
						17981
					]
				}
			]
		},
		{
			"id": 20936,
			"name": "ShippingMethod",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A Shipping Method represents a way in which an Order or Return can be shipped. Shipping Methods are created from a Shipping Option, but may contain additional details that can be necessary for the Fulfillment Provider to handle the shipment. If the shipping method is created for a return, it may be associated with a claim or a swap that the return is part of."
					}
				]
			},
			"children": [
				{
					"id": 20937,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20938,
							"name": "new ShippingMethod",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Shipping Method represents a way in which an Order or Return can be shipped. Shipping Methods are created from a Shipping Option, but may contain additional details that can be necessary for the Fulfillment Provider to handle the shipment. If the shipping method is created for a return, it may be associated with a claim or a swap that the return is part of."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 20936,
								"name": "ShippingMethod",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20939,
					"name": "option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the shipping option in use"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20940,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The optional additional data needed for the shipping method"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"defaultValue": "{}"
				},
				{
					"id": 20941,
					"name": "price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price of the shipping method."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20937
					]
				},
				{
					"title": "Properties",
					"children": [
						20939,
						20940,
						20941
					]
				}
			]
		},
		{
			"id": 20932,
			"name": "Discount",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A discount can be applied to a cart for promotional purposes."
					}
				]
			},
			"children": [
				{
					"id": 20933,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20934,
							"name": "new Discount",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A discount can be applied to a cart for promotional purposes."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 20932,
								"name": "Discount",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20935,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the discount to apply"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20933
					]
				},
				{
					"title": "Properties",
					"children": [
						20935
					]
				}
			]
		},
		{
			"id": 20924,
			"name": "Item",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 20925,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20926,
							"name": "new Item",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20924,
								"name": "Item",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20927,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the line item if `variant_id` is not provided."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20928,
					"name": "unit_price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The custom price of the line item. If a `variant_id` is supplied, the price provided here will override the variant's price."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 20929,
					"name": "variant_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Product Variant associated with the line item. If the line item is custom, the `variant_id` should be omitted."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20930,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity of the line item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 20931,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The optional key-value map with additional details about the line item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"defaultValue": "{}"
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20925
					]
				},
				{
					"title": "Properties",
					"children": [
						20927,
						20928,
						20929,
						20930,
						20931
					]
				}
			]
		},
		{
			"id": 17982,
			"name": "AdminPostDraftOrdersDraftOrderLineItemsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the line item to create."
					}
				]
			},
			"children": [
				{
					"id": 17983,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17984,
							"name": "new AdminPostDraftOrdersDraftOrderLineItemsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the line item to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 17982,
								"name": "AdminPostDraftOrdersDraftOrderLineItemsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 17985,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the line item if `variant_id` is not provided."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"Custom item\""
				},
				{
					"id": 17986,
					"name": "unit_price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The custom price of the line item. If a `variant_id` is supplied, the price provided here will override the variant's price."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 17987,
					"name": "variant_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Product Variant associated with the line item. If the line item is custom, the `variant_id` should be omitted."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17988,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity of the line item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 17989,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The optional key-value map with additional details about the Line Item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"defaultValue": "{}"
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17983
					]
				},
				{
					"title": "Properties",
					"children": [
						17985,
						17986,
						17987,
						17988,
						17989
					]
				}
			]
		},
		{
			"id": 17954,
			"name": "defaultAdminDraftOrdersRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 17955,
			"name": "defaultAdminDraftOrdersCartRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 17956,
			"name": "defaultAdminDraftOrdersCartFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
							"qualifiedName": "Cart"
						},
						"name": "Cart",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 17957,
			"name": "defaultAdminDraftOrdersFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/draft-order.ts",
							"qualifiedName": "DraftOrder"
						},
						"name": "DraftOrder",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 17958,
			"name": "AdminPostDraftOrdersDraftOrderRegisterPaymentRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The order's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 17959,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 17960,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Order's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/order.ts",
									"qualifiedName": "Order"
								},
								"name": "Order",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								17960
							]
						}
					]
				}
			}
		},
		{
			"id": 17961,
			"name": "AdminDraftOrdersRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of draft orders."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 17962,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 17963,
							"name": "draft_order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Draft order's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/draft-order.ts",
									"qualifiedName": "DraftOrder"
								},
								"name": "DraftOrder",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								17963
							]
						}
					]
				}
			}
		},
		{
			"id": 17964,
			"name": "AdminDraftOrdersDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 20570,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 17965,
			"name": "AdminDraftOrdersListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of draft orders with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 20566,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 17966,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 17967,
									"name": "draft_orders",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of draft order's details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/draft-order.ts",
												"qualifiedName": "DraftOrder"
											},
											"name": "DraftOrder",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										17967
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 17990,
			"name": "AdminGetDraftOrdersParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved draft orders."
					}
				]
			},
			"children": [
				{
					"id": 17994,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search draft orders by their display IDs and emails."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 17995,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 50,\n}).expand"
					}
				},
				{
					"id": 17996,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n50\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 50,\n}).fields"
					}
				},
				{
					"id": 17997,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Statuses to filter draft orders by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 20942,
							"name": "DraftOrderStatusValue",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 17998,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the draft orders' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 17999,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the draft orders' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 18000,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 50,\n}).offset"
					}
				},
				{
					"id": 18001,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n20\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 50,\n}).limit"
					}
				},
				{
					"id": 18002,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 50,\n}).order"
					}
				},
				{
					"id": 17991,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 17992,
							"name": "new AdminGetDraftOrdersParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 17993,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 17990,
								"name": "AdminGetDraftOrdersParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "extendedFindParamsMixin({\n  limit: 50,\n}).constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 50,\n}).constructor"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						17991
					]
				},
				{
					"title": "Properties",
					"children": [
						17994,
						17995,
						17996,
						17997,
						17998,
						17999,
						18000,
						18001,
						18002
					]
				}
			],
			"extendedTypes": [
				{
					"type": "intersection",
					"types": [
						{
							"type": "reference",
							"target": 20629,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindParams",
							"package": "@medusajs/medusa"
						},
						{
							"type": "reference",
							"target": 20634,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindPaginationParams",
							"package": "@medusajs/medusa"
						}
					]
				}
			]
		},
		{
			"id": 18003,
			"name": "reserveQuantityForDraftOrder",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 18004,
					"name": "reserveQuantityForDraftOrder",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 18005,
							"name": "order",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An order is a purchase made by a customer. It holds details about payment and fulfillment of the order. An order may also be created from a draft order, which is created by an admin user."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/order.ts",
									"qualifiedName": "Order"
								},
								"name": "Order",
								"package": "@medusajs/medusa"
							}
						},
						{
							"id": 18006,
							"name": "context",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 18007,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 18008,
											"name": "productVariantInventoryService",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa/src/services/product-variant-inventory.ts",
													"qualifiedName": "ProductVariantInventoryService"
												},
												"name": "ProductVariantInventoryService",
												"package": "@medusajs/medusa"
											}
										},
										{
											"id": 18009,
											"name": "locationId",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												18008,
												18009
											]
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Promise"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "void"
							}
						],
						"name": "Promise",
						"package": "typescript"
					}
				}
			]
		},
		{
			"id": 18010,
			"name": "AdminPostDraftOrdersDraftOrderReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the draft order to update."
					}
				]
			},
			"children": [
				{
					"id": 18011,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18012,
							"name": "new AdminPostDraftOrdersDraftOrderReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the draft order to update."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 18010,
								"name": "AdminPostDraftOrdersDraftOrderReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 18013,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Region to create the Draft Order in."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18014,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The 2 character ISO code for the Country."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18015,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An email to be used in the Draft Order."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18016,
					"name": "billing_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Address to be used for billing purposes."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 20601,
								"name": "AddressPayload",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 18017,
					"name": "shipping_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Address to be used for shipping purposes."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 20601,
								"name": "AddressPayload",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 18018,
					"name": "discounts",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of Discount codes to add to the Draft Order."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 20943,
							"name": "Discount",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 18019,
					"name": "customer_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the customer this draft order is associated with."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18020,
					"name": "no_notification_order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional flag passed to the resulting order that indicates whether the customer should receive notifications about order updates."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18011
					]
				},
				{
					"title": "Properties",
					"children": [
						18013,
						18014,
						18015,
						18016,
						18017,
						18018,
						18019,
						18020
					]
				}
			]
		},
		{
			"id": 20943,
			"name": "Discount",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A discount can be applied to a cart for promotional purposes."
					}
				]
			},
			"children": [
				{
					"id": 20944,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20945,
							"name": "new Discount",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A discount can be applied to a cart for promotional purposes."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 20943,
								"name": "Discount",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20946,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code that a Discount is identifed by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20944
					]
				},
				{
					"title": "Properties",
					"children": [
						20946
					]
				}
			]
		},
		{
			"id": 18021,
			"name": "AdminPostDraftOrdersDraftOrderLineItemsItemReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the line item."
					}
				]
			},
			"children": [
				{
					"id": 18022,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18023,
							"name": "new AdminPostDraftOrdersDraftOrderLineItemsItemReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the line item."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 18021,
								"name": "AdminPostDraftOrdersDraftOrderLineItemsItemReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 18024,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the line item if `variant_id` is not provided."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18025,
					"name": "unit_price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The custom price of the line item. If a `variant_id` is supplied, the price provided here will override the variant's price."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 18026,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity of the line item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 18027,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The optional key-value map with additional details about the Line Item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"defaultValue": "{}"
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18022
					]
				},
				{
					"title": "Properties",
					"children": [
						18024,
						18025,
						18026,
						18027
					]
				}
			]
		},
		{
			"id": 18037,
			"name": "AdminPostGiftCardsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the gift card to create."
					}
				]
			},
			"children": [
				{
					"id": 18038,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18039,
							"name": "new AdminPostGiftCardsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the gift card to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 18037,
								"name": "AdminPostGiftCardsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 18040,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value (excluding VAT) that the Gift Card should represent."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 18041,
					"name": "ends_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date and time at which the Gift Card should no longer be available."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 18042,
					"name": "is_disabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the Gift Card is disabled on creation. If set to `true`, the gift card will not be available for customers."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 18043,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Region in which the Gift Card can be used."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18044,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs to hold additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18038
					]
				},
				{
					"title": "Properties",
					"children": [
						18040,
						18041,
						18042,
						18043,
						18044
					]
				}
			]
		},
		{
			"id": 18028,
			"name": "defaultAdminGiftCardFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/gift-card.ts",
							"qualifiedName": "GiftCard"
						},
						"name": "GiftCard",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 18029,
			"name": "defaultAdminGiftCardRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 18030,
			"name": "AdminGiftCardsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The gift card's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 18031,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 18032,
							"name": "gift_card",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A gift card's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/gift-card.ts",
									"qualifiedName": "GiftCard"
								},
								"name": "GiftCard",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								18032
							]
						}
					]
				}
			}
		},
		{
			"id": 18033,
			"name": "AdminGiftCardsDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 20570,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 18034,
			"name": "AdminGiftCardsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of gift cards with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 20566,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 18035,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 18036,
									"name": "gift_cards",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The list of gift cards."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/gift-card.ts",
												"qualifiedName": "GiftCard"
											},
											"name": "GiftCard",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										18036
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 18045,
			"name": "AdminGetGiftCardsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved gift cards."
					}
				]
			},
			"children": [
				{
					"id": 18046,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18047,
							"name": "new AdminGetGiftCardsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 18045,
								"name": "AdminGetGiftCardsParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 18048,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n50\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "50"
				},
				{
					"id": 18049,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 18050,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search gift cards by their code and display ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18051,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18046
					]
				},
				{
					"title": "Properties",
					"children": [
						18048,
						18049,
						18050,
						18051
					]
				}
			]
		},
		{
			"id": 18052,
			"name": "AdminPostGiftCardsGiftCardReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the gift card."
					}
				]
			},
			"children": [
				{
					"id": 18053,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18054,
							"name": "new AdminPostGiftCardsGiftCardReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the gift card."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 18052,
								"name": "AdminPostGiftCardsGiftCardReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 18055,
					"name": "balance",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value (excluding VAT) that the Gift Card should represent."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 18056,
					"name": "is_disabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the Gift Card is disabled on creation. If set to `true`, the gift card will not be available for customers."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 18057,
					"name": "ends_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date and time at which the Gift Card should no longer be available."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 18058,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Region in which the Gift Card can be used."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18059,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs to hold additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18053
					]
				},
				{
					"title": "Properties",
					"children": [
						18055,
						18056,
						18057,
						18058,
						18059
					]
				}
			]
		},
		{
			"id": 18085,
			"name": "AdminPostInventoryItemsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the inventory item to create."
					}
				]
			},
			"children": [
				{
					"id": 18086,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18087,
							"name": "new AdminPostInventoryItemsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the inventory item to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 18085,
								"name": "AdminPostInventoryItemsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 18088,
					"name": "variant_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the variant to create the inventory item for."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18089,
					"name": "sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique SKU of the associated Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18090,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Harmonized System code of the Inventory Item. May be used by Fulfillment Providers to pass customs information to shipping carriers."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18091,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight of the Inventory Item. May be used in shipping rate calculations."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 18092,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the Inventory Item. May be used in shipping rate calculations."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 18093,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the Inventory Item. May be used in shipping rate calculations."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 18094,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the Inventory Item. May be used in shipping rate calculations."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 18095,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The country in which the Inventory Item was produced. May be used by Fulfillment Providers to pass customs information to shipping carriers."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18096,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Manufacturers Identification code that identifies the manufacturer of the Inventory Item. May be used by Fulfillment Providers to pass customs information to shipping carriers."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18097,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material and composition that the Inventory Item is made of, May be used by Fulfillment Providers to pass customs information to shipping carriers."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18098,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The inventory item's title."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18099,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The inventory item's description."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18100,
					"name": "thumbnail",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The inventory item's thumbnail."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18101,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs with additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18086
					]
				},
				{
					"title": "Properties",
					"children": [
						18088,
						18089,
						18090,
						18091,
						18092,
						18093,
						18094,
						18095,
						18096,
						18097,
						18098,
						18099,
						18100,
						18101
					]
				}
			]
		},
		{
			"id": 18102,
			"name": "AdminPostInventoryItemsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 18103,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18104,
							"name": "new AdminPostInventoryItemsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 18102,
								"name": "AdminPostInventoryItemsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20631,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20630,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 18105,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20632,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 18106,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20633,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18103
					]
				},
				{
					"title": "Properties",
					"children": [
						18105,
						18106
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20629,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 18107,
			"name": "AdminPostInventoryItemsItemLocationLevelsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the location level to create."
					}
				]
			},
			"children": [
				{
					"id": 18108,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18109,
							"name": "new AdminPostInventoryItemsItemLocationLevelsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the location level to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 18107,
								"name": "AdminPostInventoryItemsItemLocationLevelsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 18110,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "the ID of the stock location"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18111,
					"name": "stocked_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "the stock quantity of the inventory item at this location"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 18112,
					"name": "incoming_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "the incoming stock quantity of the inventory item at this location"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18108
					]
				},
				{
					"title": "Properties",
					"children": [
						18110,
						18111,
						18112
					]
				}
			]
		},
		{
			"id": 18113,
			"name": "AdminPostInventoryItemsItemLocationLevelsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 18114,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18115,
							"name": "new AdminPostInventoryItemsItemLocationLevelsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 18113,
								"name": "AdminPostInventoryItemsItemLocationLevelsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20631,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20630,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 18116,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20632,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 18117,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20633,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18114
					]
				},
				{
					"title": "Properties",
					"children": [
						18116,
						18117
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20629,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 18118,
			"name": "AdminGetInventoryItemsItemParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 18119,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18120,
							"name": "new AdminGetInventoryItemsItemParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 18118,
								"name": "AdminGetInventoryItemsItemParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20631,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20630,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 18121,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20632,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 18122,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20633,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18119
					]
				},
				{
					"title": "Properties",
					"children": [
						18121,
						18122
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20629,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 18060,
			"name": "defaultAdminInventoryItemFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": 20947,
						"name": "InventoryItemDTO",
						"package": "@medusajs/types"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 18061,
			"name": "defaultAdminLocationLevelFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": 20967,
						"name": "InventoryLevelDTO",
						"package": "@medusajs/types"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 18062,
			"name": "defaultAdminInventoryItemRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "never"
				}
			},
			"defaultValue": "[]"
		},
		{
			"id": 18063,
			"name": "AdminInventoryItemsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The inventory item's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 18064,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 18065,
							"name": "inventory_item",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Inventory Item details"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 20947,
								"name": "InventoryItemDTO",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								18065
							]
						}
					]
				}
			}
		},
		{
			"id": 18066,
			"name": "AdminInventoryItemsDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 20570,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 18067,
			"name": "AdminInventoryItemsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 20566,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 18068,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 18069,
									"name": "inventory_items",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "an array of Inventory Item details"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 20947,
											"name": "InventoryItemDTO",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										18069
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 18070,
			"name": "DecoratedInventoryItemDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 20947,
						"name": "InventoryItemDTO",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 18071,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 18072,
									"name": "location_levels",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of location level details"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 20967,
											"name": "InventoryLevelDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 18073,
									"name": "variants",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of product variant details"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/product-variant.ts",
												"qualifiedName": "ProductVariant"
											},
											"name": "ProductVariant",
											"package": "@medusajs/medusa"
										}
									}
								},
								{
									"id": 18074,
									"name": "stocked_quantity",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The total quantity of the item in stock across levels"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 18075,
									"name": "reserved_quantity",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The total quantity of the item available across levels"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										18072,
										18073,
										18074,
										18075
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 18076,
			"name": "AdminInventoryItemsListWithVariantsAndLocationLevelsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 20566,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 18077,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 18078,
									"name": "inventory_items",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "an array of Inventory Item details"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 18070,
											"name": "DecoratedInventoryItemDTO",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										18078
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 18079,
			"name": "AdminInventoryItemsLocationLevelsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Details of inventory items and their associated location levels."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 18080,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 18081,
							"name": "inventory_item",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An inventory item's ID and associated location levels."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 18082,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 18083,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the location"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 18084,
											"name": "location_levels",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "List of stock levels at a given location"
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 20967,
													"name": "InventoryLevelDTO",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												18083,
												18084
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								18081
							]
						}
					]
				}
			}
		},
		{
			"id": 18123,
			"name": "AdminGetInventoryItemsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved inventory items."
					}
				]
			},
			"children": [
				{
					"id": 18127,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter inventory items by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 18128,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search terms to search inventory items' sku, title, and description."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18129,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Location IDs to filter inventory items by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 18130,
					"name": "sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "SKUs to filter inventory items by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 18131,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Origin countries to filter inventory items by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 18132,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "MID codes to filter inventory items by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 18133,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Materials to filter inventory items by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 18134,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "String filters to apply to inventory items' "
							},
							{
								"kind": "code",
								"text": "`hs_code`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 20584,
								"name": "StringComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 18135,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Number filters to apply to inventory items' "
							},
							{
								"kind": "code",
								"text": "`weight`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"target": 20594,
								"name": "NumericalComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 18136,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Number filters to apply to inventory items' "
							},
							{
								"kind": "code",
								"text": "`length`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"target": 20594,
								"name": "NumericalComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 18137,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Number filters to apply to inventory items' "
							},
							{
								"kind": "code",
								"text": "`height`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"target": 20594,
								"name": "NumericalComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 18138,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Number filters to apply to inventory items' "
							},
							{
								"kind": "code",
								"text": "`width`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"target": 20594,
								"name": "NumericalComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 18139,
					"name": "requires_shipping",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter inventory items by whether they require shipping."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 18140,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).expand"
					}
				},
				{
					"id": 18141,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).fields"
					}
				},
				{
					"id": 18142,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).offset"
					}
				},
				{
					"id": 18143,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n20\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).limit"
					}
				},
				{
					"id": 18144,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).order"
					}
				},
				{
					"id": 18124,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18125,
							"name": "new AdminGetInventoryItemsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 18126,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 18123,
								"name": "AdminGetInventoryItemsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).constructor"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18124
					]
				},
				{
					"title": "Properties",
					"children": [
						18127,
						18128,
						18129,
						18130,
						18131,
						18132,
						18133,
						18134,
						18135,
						18136,
						18137,
						18138,
						18139,
						18140,
						18141,
						18142,
						18143,
						18144
					]
				}
			],
			"extendedTypes": [
				{
					"type": "intersection",
					"types": [
						{
							"type": "reference",
							"target": 20629,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindParams",
							"package": "@medusajs/medusa"
						},
						{
							"type": "reference",
							"target": 20634,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindPaginationParams",
							"package": "@medusajs/medusa"
						}
					]
				}
			]
		},
		{
			"id": 18145,
			"name": "AdminGetInventoryItemsItemLocationLevelsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 18146,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18147,
							"name": "new AdminGetInventoryItemsItemLocationLevelsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 18145,
								"name": "AdminGetInventoryItemsItemLocationLevelsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20631,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20630,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 18148,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Location IDs to filter location levels."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 18149,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20632,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 18150,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20633,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18146
					]
				},
				{
					"title": "Properties",
					"children": [
						18148,
						18149,
						18150
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20629,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 18151,
			"name": "AdminPostInventoryItemsInventoryItemReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in an inventory item."
					}
				]
			},
			"children": [
				{
					"id": 18152,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18153,
							"name": "new AdminPostInventoryItemsInventoryItemReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The attributes to update in an inventory item."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 18151,
								"name": "AdminPostInventoryItemsInventoryItemReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 18154,
					"name": "sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18155,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The country in which the Inventory Item was produced. May be used by Fulfillment Providers to pass customs information to shipping carriers."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18156,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Harmonized System code of the Inventory Item. May be used by Fulfillment Providers to pass customs information to shipping carriers."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18157,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Manufacturers Identification code that identifies the manufacturer of the Inventory Item. May be used by Fulfillment Providers to pass customs information to shipping carriers."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18158,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material and composition that the Inventory Item is made of, May be used by Fulfillment Providers to pass customs information to shipping carriers."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18159,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight of the Inventory Item. May be used in shipping rate calculations."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 18160,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the Inventory Item. May be used in shipping rate calculations."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 18161,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the Inventory Item. May be used in shipping rate calculations."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 18162,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the Inventory Item. May be used in shipping rate calculations."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 18163,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The inventory item's title."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18164,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The inventory item's description."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18165,
					"name": "thumbnail",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The inventory item's thumbnail."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18166,
					"name": "requires_shipping",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the item requires shipping."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18152
					]
				},
				{
					"title": "Properties",
					"children": [
						18154,
						18155,
						18156,
						18157,
						18158,
						18159,
						18160,
						18161,
						18162,
						18163,
						18164,
						18165,
						18166
					]
				}
			]
		},
		{
			"id": 18167,
			"name": "AdminPostInventoryItemsInventoryItemParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 18168,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18169,
							"name": "new AdminPostInventoryItemsInventoryItemParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 18167,
								"name": "AdminPostInventoryItemsInventoryItemParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20631,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20630,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 18170,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20632,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 18171,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20633,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18168
					]
				},
				{
					"title": "Properties",
					"children": [
						18170,
						18171
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20629,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 18172,
			"name": "AdminPostInventoryItemsItemLocationLevelsLevelReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 18173,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18174,
							"name": "new AdminPostInventoryItemsItemLocationLevelsLevelReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 18172,
								"name": "AdminPostInventoryItemsItemLocationLevelsLevelReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 18175,
					"name": "incoming_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "the incoming stock quantity of an inventory item at the given location ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 18176,
					"name": "stocked_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "the total stock quantity of an inventory item at the given location ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18173
					]
				},
				{
					"title": "Properties",
					"children": [
						18175,
						18176
					]
				}
			]
		},
		{
			"id": 18177,
			"name": "AdminPostInventoryItemsItemLocationLevelsLevelParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 18178,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18179,
							"name": "new AdminPostInventoryItemsItemLocationLevelsLevelParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 18177,
								"name": "AdminPostInventoryItemsItemLocationLevelsLevelParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20631,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20630,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 18180,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20632,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 18181,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20633,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18178
					]
				},
				{
					"title": "Properties",
					"children": [
						18180,
						18181
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20629,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 18189,
			"name": "AdminPostInvitesInviteAcceptUserReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Details of the use accepting the invite."
					}
				]
			},
			"children": [
				{
					"id": 18190,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18191,
							"name": "new AdminPostInvitesInviteAcceptUserReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 18189,
								"name": "AdminPostInvitesInviteAcceptUserReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 18192,
					"name": "first_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The invite's first name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18193,
					"name": "last_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The invite's last name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18194,
					"name": "password",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The invite's password"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18190
					]
				},
				{
					"title": "Properties",
					"children": [
						18192,
						18193,
						18194
					]
				}
			]
		},
		{
			"id": 18195,
			"name": "AdminPostInvitesInviteAcceptReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the invite to be accepted."
					}
				]
			},
			"children": [
				{
					"id": 18196,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18197,
							"name": "new AdminPostInvitesInviteAcceptReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the invite to be accepted."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 18195,
								"name": "AdminPostInvitesInviteAcceptReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 18198,
					"name": "token",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The token of the invite to accept. This is a unique token generated when the invite was created or resent."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18199,
					"name": "user",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the user to create."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 18189,
						"name": "AdminPostInvitesInviteAcceptUserReq",
						"package": "@medusajs/medusa"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18196
					]
				},
				{
					"title": "Properties",
					"children": [
						18198,
						18199
					]
				}
			]
		},
		{
			"id": 18200,
			"name": "AdminPostInvitesReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 18201,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18202,
							"name": "new AdminPostInvitesReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 18200,
								"name": "AdminPostInvitesReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 18203,
					"name": "user",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The email associated with the invite. Once the invite is accepted, the email will be associated with the created user."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18204,
					"name": "role",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The role of the user to be created. This does not actually change the privileges of the user that is eventually created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/user.ts",
							"qualifiedName": "UserRoles"
						},
						"name": "UserRoles",
						"package": "@medusajs/medusa"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18201
					]
				},
				{
					"title": "Properties",
					"children": [
						18203,
						18204
					]
				}
			]
		},
		{
			"id": 18182,
			"name": "unauthenticatedInviteRoutes",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 18183,
					"name": "unauthenticatedInviteRoutes",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 18184,
							"name": "app",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			]
		},
		{
			"id": 18185,
			"name": "AdminInviteDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 20570,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 18186,
			"name": "AdminListInvitesRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of invites."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 18187,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 18188,
							"name": "invites",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of invites"
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../packages/medusa/src/models/invite.ts",
										"qualifiedName": "Invite"
									},
									"name": "Invite",
									"package": "@medusajs/medusa"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								18188
							]
						}
					]
				}
			}
		},
		{
			"id": 18212,
			"name": "AdminPostNotesReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the note to be created."
					}
				]
			},
			"children": [
				{
					"id": 18213,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18214,
							"name": "new AdminPostNotesReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the note to be created."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 18212,
								"name": "AdminPostNotesReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 18215,
					"name": "resource_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the resource which the Note relates to. For example, an order ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18216,
					"name": "resource_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of resource which the Note relates to. For example, `order`."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18217,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The content of the Note to create."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18213
					]
				},
				{
					"title": "Properties",
					"children": [
						18215,
						18216,
						18217
					]
				}
			]
		},
		{
			"id": 18205,
			"name": "AdminNotesRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The note's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 18206,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 18207,
							"name": "note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Note details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/note.ts",
									"qualifiedName": "Note"
								},
								"name": "Note",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								18207
							]
						}
					]
				}
			}
		},
		{
			"id": 18208,
			"name": "AdminNotesDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 20570,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 18209,
			"name": "AdminNotesListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of notes with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 20566,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 18210,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 18211,
									"name": "notes",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of notes"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/note.ts",
												"qualifiedName": "Note"
											},
											"name": "Note",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										18211
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 18218,
			"name": "AdminGetNotesParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved notes."
					}
				]
			},
			"children": [
				{
					"id": 18219,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18220,
							"name": "new AdminGetNotesParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 18218,
								"name": "AdminGetNotesParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 18221,
					"name": "resource_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Resource ID to filter notes by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18222,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n50\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "50"
				},
				{
					"id": 18223,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18219
					]
				},
				{
					"title": "Properties",
					"children": [
						18221,
						18222,
						18223
					]
				}
			]
		},
		{
			"id": 18224,
			"name": "AdminPostNotesNoteReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the note."
					}
				]
			},
			"children": [
				{
					"id": 18225,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18226,
							"name": "new AdminPostNotesNoteReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the note."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 18224,
								"name": "AdminPostNotesNoteReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 18227,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the Note."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18225
					]
				},
				{
					"title": "Properties",
					"children": [
						18227
					]
				}
			]
		},
		{
			"id": 18228,
			"name": "defaultAdminNotificationsRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 18229,
			"name": "defaultAdminNotificationsFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 18230,
			"name": "AdminNotificationsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 20979,
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 18231,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 18232,
									"name": "notifications",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "an array of notifications"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/notification.ts",
												"qualifiedName": "Notification"
											},
											"name": "Notification",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										18232
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 18233,
			"name": "AdminNotificationsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The notification's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 18234,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 18235,
							"name": "notification",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Notification details"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/notification.ts",
									"qualifiedName": "Notification"
								},
								"name": "Notification",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								18235
							]
						}
					]
				}
			}
		},
		{
			"id": 18236,
			"name": "AdminGetNotificationsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved notifications."
					}
				]
			},
			"children": [
				{
					"id": 18237,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18238,
							"name": "new AdminGetNotificationsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 18236,
								"name": "AdminGetNotificationsParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 18239,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n50\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "50"
				},
				{
					"id": 18240,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 18241,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18242,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18243,
					"name": "event_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Event name to filter notifications by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18244,
					"name": "resource_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Resource type to filter notifications by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18245,
					"name": "resource_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Resource ID to filter notifications by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18246,
					"name": "to",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter notifications by their "
							},
							{
								"kind": "code",
								"text": "`to`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18247,
					"name": "include_resends",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether to include resends in the results."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18237
					]
				},
				{
					"title": "Properties",
					"children": [
						18239,
						18240,
						18241,
						18242,
						18243,
						18244,
						18245,
						18246,
						18247
					]
				}
			]
		},
		{
			"id": 18248,
			"name": "AdminPostNotificationsNotificationResendReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The resend details."
					}
				]
			},
			"children": [
				{
					"id": 18249,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18250,
							"name": "new AdminPostNotificationsNotificationResendReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The resend details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 18248,
								"name": "AdminPostNotificationsNotificationResendReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 18251,
					"name": "to",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A new address or user identifier that the Notification should be sent to. If not provided, the previous `to` field of the notification will be used."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18249
					]
				},
				{
					"title": "Properties",
					"children": [
						18251
					]
				}
			]
		},
		{
			"id": 18264,
			"name": "AdminPostOrderEditsEditLineItemsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the line item change to create."
					}
				]
			},
			"children": [
				{
					"id": 18265,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18266,
							"name": "new AdminPostOrderEditsEditLineItemsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the line item change to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 18264,
								"name": "AdminPostOrderEditsEditLineItemsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 18267,
					"name": "variant_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product variant associated with the item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18268,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity of the item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 18269,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs to hold additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18265
					]
				},
				{
					"title": "Properties",
					"children": [
						18267,
						18268,
						18269
					]
				}
			]
		},
		{
			"id": 18270,
			"name": "AdminPostOrderEditsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the order edit to create."
					}
				]
			},
			"children": [
				{
					"id": 18271,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18272,
							"name": "new AdminPostOrderEditsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the order edit to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 18270,
								"name": "AdminPostOrderEditsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 18273,
					"name": "order_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the order to create the edit for."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18274,
					"name": "internal_note",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional note to associate with the order edit."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18275,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18271
					]
				},
				{
					"title": "Properties",
					"children": [
						18273,
						18274,
						18275
					]
				}
			]
		},
		{
			"id": 18276,
			"name": "GetOrderEditsOrderEditParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 18277,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18278,
							"name": "new GetOrderEditsOrderEditParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 18276,
								"name": "GetOrderEditsOrderEditParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20631,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20630,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 18279,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20632,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 18280,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20633,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18277
					]
				},
				{
					"title": "Properties",
					"children": [
						18279,
						18280
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20629,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 18252,
			"name": "AdminOrderEditsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The order edit details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 18253,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 18254,
							"name": "order_edit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Order edit details"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/order-edit.ts",
									"qualifiedName": "OrderEdit"
								},
								"name": "OrderEdit",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								18254
							]
						}
					]
				}
			}
		},
		{
			"id": 18255,
			"name": "AdminOrderEditsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of order edits with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 20566,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 18256,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 18257,
									"name": "order_edits",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of order edit details"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/order-edit.ts",
												"qualifiedName": "OrderEdit"
											},
											"name": "OrderEdit",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										18257
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 18258,
			"name": "AdminOrderEditDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 20570,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 18259,
			"name": "AdminOrderEditItemChangeDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of deleting order edit item changes."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 18260,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 18261,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the deleted Order Edit Item Change."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 18262,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the object that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "item_change"
							},
							"defaultValue": "item_change"
						},
						{
							"id": 18263,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether or not the Order Edit Item Change was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": true
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								18261,
								18262,
								18263
							]
						}
					]
				}
			}
		},
		{
			"id": 18281,
			"name": "GetOrderEditsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved order edits."
					}
				]
			},
			"children": [
				{
					"id": 18285,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search order edits by their internal note."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18286,
					"name": "order_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the order edits by their associated order's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18287,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).expand"
					}
				},
				{
					"id": 18288,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).fields"
					}
				},
				{
					"id": 18289,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).offset"
					}
				},
				{
					"id": 18290,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n20\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).limit"
					}
				},
				{
					"id": 18291,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).order"
					}
				},
				{
					"id": 18282,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18283,
							"name": "new GetOrderEditsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 18284,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 18281,
								"name": "GetOrderEditsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).constructor"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18282
					]
				},
				{
					"title": "Properties",
					"children": [
						18285,
						18286,
						18287,
						18288,
						18289,
						18290,
						18291
					]
				}
			],
			"extendedTypes": [
				{
					"type": "intersection",
					"types": [
						{
							"type": "reference",
							"target": 20629,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindParams",
							"package": "@medusajs/medusa"
						},
						{
							"type": "reference",
							"target": 20634,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindPaginationParams",
							"package": "@medusajs/medusa"
						}
					]
				}
			]
		},
		{
			"id": 18292,
			"name": "AdminPostOrderEditsRequestConfirmationReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 18293,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18294,
							"name": "new AdminPostOrderEditsRequestConfirmationReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 18292,
								"name": "AdminPostOrderEditsRequestConfirmationReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 18295,
					"name": "payment_collection_description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18293
					]
				},
				{
					"title": "Properties",
					"children": [
						18295
					]
				}
			]
		},
		{
			"id": 18300,
			"name": "AdminPostOrderEditsEditLineItemsLineItemReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to create or update of the line item change."
					}
				]
			},
			"children": [
				{
					"id": 18301,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18302,
							"name": "new AdminPostOrderEditsEditLineItemsLineItemReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to create or update of the line item change."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 18300,
								"name": "AdminPostOrderEditsEditLineItemsLineItemReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 18303,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity to update"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18301
					]
				},
				{
					"title": "Properties",
					"children": [
						18303
					]
				}
			]
		},
		{
			"id": 18296,
			"name": "AdminPostOrderEditsOrderEditReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the order edit."
					}
				]
			},
			"children": [
				{
					"id": 18297,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18298,
							"name": "new AdminPostOrderEditsOrderEditReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the order edit."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 18296,
								"name": "AdminPostOrderEditsOrderEditReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 18299,
					"name": "internal_note",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional note to create or update in the order edit."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18297
					]
				},
				{
					"title": "Properties",
					"children": [
						18299
					]
				}
			]
		},
		{
			"id": 18315,
			"name": "AdminPostOrdersOrderShippingMethodsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The shipping method's details."
					}
				]
			},
			"children": [
				{
					"id": 18316,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18317,
							"name": "new AdminPostOrdersOrderShippingMethodsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The shipping method's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 18315,
								"name": "AdminPostOrdersOrderShippingMethodsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 18318,
					"name": "price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price (excluding VAT) that should be charged for the Shipping Method"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 18319,
					"name": "option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Shipping Option to create the Shipping Method from."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18320,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The data required for the Shipping Option to create a Shipping Method. This depends on the Fulfillment Provider."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"defaultValue": "{}"
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18316
					]
				},
				{
					"title": "Properties",
					"children": [
						18318,
						18319,
						18320
					]
				}
			]
		},
		{
			"id": 18321,
			"name": "AdminPostOrdersOrderShippingMethodsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 18322,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18323,
							"name": "new AdminPostOrdersOrderShippingMethodsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 18321,
								"name": "AdminPostOrdersOrderShippingMethodsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20631,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20630,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 18324,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20632,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 18325,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20633,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18322
					]
				},
				{
					"title": "Properties",
					"children": [
						18324,
						18325
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20629,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 18326,
			"name": "AdminPostOrdersOrderArchiveParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 18327,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18328,
							"name": "new AdminPostOrdersOrderArchiveParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 18326,
								"name": "AdminPostOrdersOrderArchiveParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20631,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20630,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 18329,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20632,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 18330,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20633,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18327
					]
				},
				{
					"title": "Properties",
					"children": [
						18329,
						18330
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20629,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 18331,
			"name": "AdminPostOrdersClaimCancel",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 18332,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18333,
							"name": "new AdminPostOrdersClaimCancel",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 18331,
								"name": "AdminPostOrdersClaimCancel",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20631,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20630,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 18334,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20632,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 18335,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20633,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18332
					]
				},
				{
					"title": "Properties",
					"children": [
						18334,
						18335
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20629,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 18347,
			"name": "AdminPostOrdersClaimFulfillmentsCancelParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 18348,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18349,
							"name": "new AdminPostOrdersClaimFulfillmentsCancelParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 18347,
								"name": "AdminPostOrdersClaimFulfillmentsCancelParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20631,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20630,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 18350,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20632,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 18351,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20633,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18348
					]
				},
				{
					"title": "Properties",
					"children": [
						18350,
						18351
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20629,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 18352,
			"name": "AdminPostOrdersOrderSwapFulfillementsCancelParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 18353,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18354,
							"name": "new AdminPostOrdersOrderSwapFulfillementsCancelParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 18352,
								"name": "AdminPostOrdersOrderSwapFulfillementsCancelParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20631,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20630,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 18355,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20632,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 18356,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20633,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18353
					]
				},
				{
					"title": "Properties",
					"children": [
						18355,
						18356
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20629,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 18336,
			"name": "adjustInventoryForCancelledFulfillment",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 18337,
					"name": "adjustInventoryForCancelledFulfillment",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 18338,
							"name": "fulfillment",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Fulfillment is created once an admin can prepare the purchased goods. Fulfillments will eventually be shipped and hold information about how to track shipments. Fulfillments are created through a fulfillment provider, which typically integrates a third-party shipping service. Fulfillments can be associated with orders, claims, swaps, and returns."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/fulfillment.ts",
									"qualifiedName": "Fulfillment"
								},
								"name": "Fulfillment",
								"package": "@medusajs/medusa"
							}
						},
						{
							"id": 18339,
							"name": "context",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 18340,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 18341,
											"name": "productVariantInventoryService",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa/src/services/product-variant-inventory.ts",
													"qualifiedName": "ProductVariantInventoryService"
												},
												"name": "ProductVariantInventoryService",
												"package": "@medusajs/medusa"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												18341
											]
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Promise"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "void"
							}
						],
						"name": "Promise",
						"package": "typescript"
					}
				}
			]
		},
		{
			"id": 18342,
			"name": "AdminPostOrdersOrderFulfillementsCancelParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 18343,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18344,
							"name": "new AdminPostOrdersOrderFulfillementsCancelParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 18342,
								"name": "AdminPostOrdersOrderFulfillementsCancelParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20631,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20630,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 18345,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20632,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 18346,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20633,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18343
					]
				},
				{
					"title": "Properties",
					"children": [
						18345,
						18346
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20629,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 18357,
			"name": "AdminPostOrdersOrderCancel",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 18358,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18359,
							"name": "new AdminPostOrdersOrderCancel",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 18357,
								"name": "AdminPostOrdersOrderCancel",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20631,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20630,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 18360,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20632,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 18361,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20633,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18358
					]
				},
				{
					"title": "Properties",
					"children": [
						18360,
						18361
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20629,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 18362,
			"name": "AdminPostOrdersSwapCancelParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 18363,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18364,
							"name": "new AdminPostOrdersSwapCancelParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 18362,
								"name": "AdminPostOrdersSwapCancelParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20631,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20630,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 18365,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20632,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 18366,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20633,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18363
					]
				},
				{
					"title": "Properties",
					"children": [
						18365,
						18366
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20629,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 18367,
			"name": "AdminPostOrdersOrderCaptureParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 18368,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18369,
							"name": "new AdminPostOrdersOrderCaptureParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 18367,
								"name": "AdminPostOrdersOrderCaptureParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20631,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20630,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 18370,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20632,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 18371,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20633,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18368
					]
				},
				{
					"title": "Properties",
					"children": [
						18370,
						18371
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20629,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 18372,
			"name": "AdminPostOrdersOrderCompleteParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 18373,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18374,
							"name": "new AdminPostOrdersOrderCompleteParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 18372,
								"name": "AdminPostOrdersOrderCompleteParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20631,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20630,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 18375,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20632,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 18376,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20633,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18373
					]
				},
				{
					"title": "Properties",
					"children": [
						18375,
						18376
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20629,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 18395,
			"name": "AdminPostOrdersOrderClaimsClaimShipmentsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 18396,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18397,
							"name": "new AdminPostOrdersOrderClaimsClaimShipmentsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 18395,
								"name": "AdminPostOrdersOrderClaimsClaimShipmentsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 18398,
					"name": "fulfillment_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Fulfillment."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18399,
					"name": "tracking_numbers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of tracking numbers for the shipment."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18396
					]
				},
				{
					"title": "Properties",
					"children": [
						18398,
						18399
					]
				}
			]
		},
		{
			"id": 18400,
			"name": "AdminPostOrdersOrderClaimsClaimShipmentsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 18401,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18402,
							"name": "new AdminPostOrdersOrderClaimsClaimShipmentsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 18400,
								"name": "AdminPostOrdersOrderClaimsClaimShipmentsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20631,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20630,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 18403,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20632,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 18404,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20633,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18401
					]
				},
				{
					"title": "Properties",
					"children": [
						18403,
						18404
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20629,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 20993,
			"name": "ReturnShipping",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The return's shipping method details."
					}
				]
			},
			"children": [
				{
					"id": 20994,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20995,
							"name": "new ReturnShipping",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20993,
								"name": "ReturnShipping",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20996,
					"name": "option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the shipping option used for the return."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20997,
					"name": "price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The shipping method's price."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20994
					]
				},
				{
					"title": "Properties",
					"children": [
						20996,
						20997
					]
				}
			]
		},
		{
			"id": 21003,
			"name": "ShippingMethod",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A Shipping Method represents a way in which an Order or Return can be shipped. Shipping Methods are created from a Shipping Option, but may contain additional details that can be necessary for the Fulfillment Provider to handle the shipment. If the shipping method is created for a return, it may be associated with a claim or a swap that the return is part of."
					}
				]
			},
			"children": [
				{
					"id": 21004,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21005,
							"name": "new ShippingMethod",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Shipping Method represents a way in which an Order or Return can be shipped. Shipping Methods are created from a Shipping Option, but may contain additional details that can be necessary for the Fulfillment Provider to handle the shipment. If the shipping method is created for a return, it may be associated with a claim or a swap that the return is part of."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21003,
								"name": "ShippingMethod",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21006,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of an existing Shipping Method"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21007,
					"name": "option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Shipping Option to create a Shipping Method from"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21008,
					"name": "price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price to charge for the Shipping Method"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 21009,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs to hold additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21004
					]
				},
				{
					"title": "Properties",
					"children": [
						21006,
						21007,
						21008,
						21009
					]
				}
			]
		},
		{
			"id": 20984,
			"name": "Item",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 20985,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20986,
							"name": "new Item",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20984,
								"name": "Item",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20987,
					"name": "item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Line Item that will be claimed."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20988,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items that will be returned"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 20989,
					"name": "note",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Short text describing the Claim Item in further detail."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20990,
					"name": "reason",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The reason for the Claim"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/claim-item.ts",
							"qualifiedName": "ClaimReason"
						},
						"name": "ClaimReason",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 20991,
					"name": "tags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A list of tags to add to the Claim Item"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 20992,
					"name": "images",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A list of image URL's that will be associated with the Claim"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20985
					]
				},
				{
					"title": "Properties",
					"children": [
						20987,
						20988,
						20989,
						20990,
						20991,
						20992
					]
				}
			]
		},
		{
			"id": 20998,
			"name": "AdditionalItem",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 20999,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21000,
							"name": "new AdditionalItem",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20998,
								"name": "AdditionalItem",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21001,
					"name": "variant_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21002,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity of the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20999
					]
				},
				{
					"title": "Properties",
					"children": [
						21001,
						21002
					]
				}
			]
		},
		{
			"id": 18377,
			"name": "AdminPostOrdersOrderClaimsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the claim to be created."
					}
				]
			},
			"children": [
				{
					"id": 18378,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18379,
							"name": "new AdminPostOrdersOrderClaimsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the claim to be created."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 18377,
								"name": "AdminPostOrdersOrderClaimsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 18380,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the Claim. This will determine how the Claim is treated: `replace` Claims will result in a Fulfillment with new items being created, while a `refund` Claim will refund the amount paid for the claimed items."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "replace"
							},
							{
								"type": "literal",
								"value": "refund"
							}
						]
					}
				},
				{
					"id": 18381,
					"name": "claim_items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Claim Items that the Claim will consist of."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 20984,
							"name": "Item",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 18382,
					"name": "return_shipping",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Optional details for the Return Shipping Method, if the items are to be sent back. Providing this field will result in a return being created and associated with the claim."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20993,
						"name": "ReturnShipping",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 18383,
					"name": "additional_items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The new items to send to the Customer. This is only used if the claim's type is `replace`."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 20998,
							"name": "AdditionalItem",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 18384,
					"name": "shipping_methods",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Shipping Methods to send the additional Line Items with. This is only used if the claim's type is `replace`."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 21003,
							"name": "ShippingMethod",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 18385,
					"name": "refund_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount to refund the customer. This is used when the claim's type is `refund`."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 18386,
					"name": "shipping_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional shipping address to send the claimed items to. If not provided, the parent order's shipping address will be used."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20601,
						"name": "AddressPayload",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 18387,
					"name": "no_notification",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set to true no notification will be send related to this Claim."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 18388,
					"name": "return_location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the location used for the associated return."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18389,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs to hold additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18378
					]
				},
				{
					"title": "Properties",
					"children": [
						18380,
						18381,
						18382,
						18383,
						18384,
						18385,
						18386,
						18387,
						18388,
						18389
					]
				}
			]
		},
		{
			"id": 18390,
			"name": "AdminPostOrdersOrderClaimsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 18391,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18392,
							"name": "new AdminPostOrdersOrderClaimsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 18390,
								"name": "AdminPostOrdersOrderClaimsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20631,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20630,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 18393,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20632,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 18394,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20633,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18391
					]
				},
				{
					"title": "Properties",
					"children": [
						18393,
						18394
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20629,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 18405,
			"name": "updateInventoryAndReservations",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 18406,
					"name": "updateInventoryAndReservations",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 18407,
							"name": "fulfillments",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../packages/medusa/src/models/fulfillment.ts",
										"qualifiedName": "Fulfillment"
									},
									"name": "Fulfillment",
									"package": "@medusajs/medusa"
								}
							}
						},
						{
							"id": 18408,
							"name": "context",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 18409,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 18410,
											"name": "inventoryService",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa/src/services/product-variant-inventory.ts",
													"qualifiedName": "ProductVariantInventoryService"
												},
												"name": "ProductVariantInventoryService",
												"package": "@medusajs/medusa"
											}
										},
										{
											"id": 18411,
											"name": "locationId",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												18410,
												18411
											]
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Promise"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "void"
							}
						],
						"name": "Promise",
						"package": "typescript"
					}
				}
			]
		},
		{
			"id": 18412,
			"name": "AdminPostOrdersOrderFulfillmentsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the fulfillment to be created."
					}
				]
			},
			"children": [
				{
					"id": 18413,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18414,
							"name": "new AdminPostOrdersOrderFulfillmentsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the fulfillment to be created."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 18412,
								"name": "AdminPostOrdersOrderFulfillmentsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 18415,
					"name": "items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Line Items to include in the Fulfillment."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 21010,
							"name": "Item",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 18416,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the location where the items will be fulfilled from."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18417,
					"name": "no_notification",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set to `true`, no notification will be sent to the customer related to this fulfillment."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 18418,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs to hold additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18413
					]
				},
				{
					"title": "Properties",
					"children": [
						18415,
						18416,
						18417,
						18418
					]
				}
			]
		},
		{
			"id": 21010,
			"name": "Item",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 21011,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21012,
							"name": "new Item",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21010,
								"name": "Item",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21013,
					"name": "item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Line Item to fulfill."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21014,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity of the Line Item to fulfill."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21011
					]
				},
				{
					"title": "Properties",
					"children": [
						21013,
						21014
					]
				}
			]
		},
		{
			"id": 18419,
			"name": "AdminPostOrdersOrderFulfillmentsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 18420,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18421,
							"name": "new AdminPostOrdersOrderFulfillmentsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 18419,
								"name": "AdminPostOrdersOrderFulfillmentsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20631,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20630,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 18422,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20632,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 18423,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20633,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18420
					]
				},
				{
					"title": "Properties",
					"children": [
						18422,
						18423
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20629,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 18424,
			"name": "AdminPostOrdersOrderShipmentReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the shipment to create."
					}
				]
			},
			"children": [
				{
					"id": 18425,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18426,
							"name": "new AdminPostOrdersOrderShipmentReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the shipment to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 18424,
								"name": "AdminPostOrdersOrderShipmentReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 18427,
					"name": "fulfillment_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Fulfillment."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18428,
					"name": "tracking_numbers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tracking numbers for the shipment."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 18429,
					"name": "no_notification",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set to true no notification will be send related to this Shipment."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18425
					]
				},
				{
					"title": "Properties",
					"children": [
						18427,
						18428,
						18429
					]
				}
			]
		},
		{
			"id": 18430,
			"name": "AdminPostOrdersOrderShipmentParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 18431,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18432,
							"name": "new AdminPostOrdersOrderShipmentParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 18430,
								"name": "AdminPostOrdersOrderShipmentParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20631,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20630,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 18433,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20632,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 18434,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20633,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18431
					]
				},
				{
					"title": "Properties",
					"children": [
						18433,
						18434
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20629,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 18451,
			"name": "AdminPostOrdersOrderSwapsSwapShipmentsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 18452,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18453,
							"name": "new AdminPostOrdersOrderSwapsSwapShipmentsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 18451,
								"name": "AdminPostOrdersOrderSwapsSwapShipmentsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 18454,
					"name": "fulfillment_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Fulfillment."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18455,
					"name": "tracking_numbers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tracking numbers for the shipment."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"defaultValue": "[]"
				},
				{
					"id": 18456,
					"name": "no_notification",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set to true no notification will be sent related to this Claim."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18452
					]
				},
				{
					"title": "Properties",
					"children": [
						18454,
						18455,
						18456
					]
				}
			]
		},
		{
			"id": 18457,
			"name": "AdminPostOrdersOrderSwapsSwapShipmentsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 18458,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18459,
							"name": "new AdminPostOrdersOrderSwapsSwapShipmentsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 18457,
								"name": "AdminPostOrdersOrderSwapsSwapShipmentsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20631,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20630,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 18460,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20632,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 18461,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20633,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18458
					]
				},
				{
					"title": "Properties",
					"children": [
						18460,
						18461
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20629,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 21015,
			"name": "ReturnItem",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A return item represents a line item in an order that is to be returned. It includes details related to the return and the reason behind it."
					}
				]
			},
			"children": [
				{
					"id": 21016,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21017,
							"name": "new ReturnItem",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A return item represents a line item in an order that is to be returned. It includes details related to the return and the reason behind it."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21015,
								"name": "ReturnItem",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21018,
					"name": "item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Line Item that will be returned."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21019,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items that will be returned"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 21020,
					"name": "reason_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Return Reason to use."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21021,
					"name": "note",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional note with information about the Return."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21016
					]
				},
				{
					"title": "Properties",
					"children": [
						21018,
						21019,
						21020,
						21021
					]
				}
			]
		},
		{
			"id": 21022,
			"name": "ReturnShipping",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The return's shipping method details."
					}
				]
			},
			"children": [
				{
					"id": 21023,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21024,
							"name": "new ReturnShipping",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21022,
								"name": "ReturnShipping",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21025,
					"name": "option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the shipping option used for the return."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21026,
					"name": "price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The shipping method's price."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21023
					]
				},
				{
					"title": "Properties",
					"children": [
						21025,
						21026
					]
				}
			]
		},
		{
			"id": 21032,
			"name": "CustomShippingOption",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Custom Shipping Options are overridden Shipping Options. Admins can attach a Custom Shipping Option to a cart in order to set a custom price for a particular Shipping Option."
					}
				]
			},
			"children": [
				{
					"id": 21033,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21034,
							"name": "new CustomShippingOption",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Custom Shipping Options are overridden Shipping Options. Admins can attach a Custom Shipping Option to a cart in order to set a custom price for a particular Shipping Option."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21032,
								"name": "CustomShippingOption",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21035,
					"name": "option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Shipping Option."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21036,
					"name": "price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The custom price of the Shipping Option."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21033
					]
				},
				{
					"title": "Properties",
					"children": [
						21035,
						21036
					]
				}
			]
		},
		{
			"id": 21027,
			"name": "AdditionalItem",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 21028,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21029,
							"name": "new AdditionalItem",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21027,
								"name": "AdditionalItem",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21030,
					"name": "variant_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21031,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity of the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21028
					]
				},
				{
					"title": "Properties",
					"children": [
						21030,
						21031
					]
				}
			]
		},
		{
			"id": 18435,
			"name": "AdminPostOrdersOrderSwapsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the swap to create."
					}
				]
			},
			"children": [
				{
					"id": 18436,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18437,
							"name": "new AdminPostOrdersOrderSwapsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the swap to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 18435,
								"name": "AdminPostOrdersOrderSwapsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 18438,
					"name": "return_items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Line Items to associate with the swap's return."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 21015,
							"name": "ReturnItem",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 18439,
					"name": "return_shipping",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The shipping method associated with the swap's return."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 21022,
						"name": "ReturnShipping",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 18440,
					"name": "sales_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the sales channel associated with the swap."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18441,
					"name": "additional_items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The new items to send to the Customer."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 21027,
							"name": "AdditionalItem",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 18442,
					"name": "custom_shipping_options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of custom shipping options to potentially create a Shipping Method from to send the additional items."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 21032,
							"name": "CustomShippingOption",
							"package": "@medusajs/medusa"
						}
					},
					"defaultValue": "[]"
				},
				{
					"id": 18443,
					"name": "no_notification",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set to `true`, no notification will be sent to the customer related to this Swap."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 18444,
					"name": "return_location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the location used for the associated return."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18445,
					"name": "allow_backorder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set to `true`, swaps can be completed with items out of stock"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "true"
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18436
					]
				},
				{
					"title": "Properties",
					"children": [
						18438,
						18439,
						18440,
						18441,
						18442,
						18443,
						18444,
						18445
					]
				}
			]
		},
		{
			"id": 18446,
			"name": "AdminPostOrdersOrderSwapsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 18447,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18448,
							"name": "new AdminPostOrdersOrderSwapsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 18446,
								"name": "AdminPostOrdersOrderSwapsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20631,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20630,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 18449,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20632,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 18450,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20633,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18447
					]
				},
				{
					"title": "Properties",
					"children": [
						18449,
						18450
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20629,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 18462,
			"name": "AdminPostOrdersOrderClaimsClaimFulfillmentsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 18463,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18464,
							"name": "new AdminPostOrdersOrderClaimsClaimFulfillmentsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 18462,
								"name": "AdminPostOrdersOrderClaimsClaimFulfillmentsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 18465,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs to hold additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 18466,
					"name": "no_notification",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set to `true`, no notification will be sent to the customer related to this Claim."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 18467,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the fulfillment's location."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18463
					]
				},
				{
					"title": "Properties",
					"children": [
						18465,
						18466,
						18467
					]
				}
			]
		},
		{
			"id": 18468,
			"name": "AdminPostOrdersOrderClaimsClaimFulfillmentsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 18469,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18470,
							"name": "new AdminPostOrdersOrderClaimsClaimFulfillmentsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 18468,
								"name": "AdminPostOrdersOrderClaimsClaimFulfillmentsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20631,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20630,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 18471,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20632,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 18472,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20633,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18469
					]
				},
				{
					"title": "Properties",
					"children": [
						18471,
						18472
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20629,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 18473,
			"name": "AdminPostOrdersOrderSwapsSwapFulfillmentsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 18474,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18475,
							"name": "new AdminPostOrdersOrderSwapsSwapFulfillmentsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 18473,
								"name": "AdminPostOrdersOrderSwapsSwapFulfillmentsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 18476,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs to hold additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 18477,
					"name": "no_notification",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set to `true`, no notification will be sent to the customer related to this swap."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 18478,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the fulfillment's location."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18474
					]
				},
				{
					"title": "Properties",
					"children": [
						18476,
						18477,
						18478
					]
				}
			]
		},
		{
			"id": 18479,
			"name": "AdminPostOrdersOrderSwapsSwapFulfillmentsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 18480,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18481,
							"name": "new AdminPostOrdersOrderSwapsSwapFulfillmentsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 18479,
								"name": "AdminPostOrdersOrderSwapsSwapFulfillmentsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20631,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20630,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 18482,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20632,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 18483,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20633,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18480
					]
				},
				{
					"title": "Properties",
					"children": [
						18482,
						18483
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20629,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 18484,
			"name": "AdminGetOrdersOrderParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 18485,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18486,
							"name": "new AdminGetOrdersOrderParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 18484,
								"name": "AdminGetOrdersOrderParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20631,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20630,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 18487,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20632,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 18488,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20633,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18485
					]
				},
				{
					"title": "Properties",
					"children": [
						18487,
						18488
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20629,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 18304,
			"name": "AdminOrdersRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The order's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 18305,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 18306,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Order details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/order.ts",
									"qualifiedName": "Order"
								},
								"name": "Order",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								18306
							]
						}
					]
				}
			}
		},
		{
			"id": 18307,
			"name": "AdminOrdersListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of orders with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 20566,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 18308,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 18309,
									"name": "orders",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of order details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/order.ts",
												"qualifiedName": "Order"
											},
											"name": "Order",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										18309
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 18310,
			"name": "filterableAdminOrdersFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 18311,
			"name": "AvailableOrderIncludes",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 18312,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 18313,
							"name": "RETURNABLE_ITEMS",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"returnable_items\""
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								18313
							]
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 18314,
			"name": "allowedOrderIncludes",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 18489,
			"name": "AdminGetOrdersParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved orders."
					}
				]
			},
			"children": [
				{
					"id": 18490,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18491,
							"name": "new AdminGetOrdersParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 18489,
								"name": "AdminGetOrdersParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 21039,
								"name": "AdminListOrdersSelector.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 21038,
						"name": "AdminListOrdersSelector.constructor"
					}
				},
				{
					"id": 18492,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 18493,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n50\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "50"
				},
				{
					"id": 18494,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18495,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18496,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort retrieved orders by. By default, the sort order is ascending.\nTo change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18497,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search orders' shipping address, first name, email, and display ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21040,
						"name": "AdminListOrdersSelector.q"
					}
				},
				{
					"id": 18498,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ID to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21041,
						"name": "AdminListOrdersSelector.id"
					}
				},
				{
					"id": 18499,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Statuses to filter orders by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21042,
						"name": "AdminListOrdersSelector.status"
					}
				},
				{
					"id": 18500,
					"name": "fulfillment_status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Fulfillment statuses to filter orders by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21043,
						"name": "AdminListOrdersSelector.fulfillment_status"
					}
				},
				{
					"id": 18501,
					"name": "payment_status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Payment statuses to filter orders by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21044,
						"name": "AdminListOrdersSelector.payment_status"
					}
				},
				{
					"id": 18502,
					"name": "display_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Display ID to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21045,
						"name": "AdminListOrdersSelector.display_id"
					}
				},
				{
					"id": 18503,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Cart ID to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21046,
						"name": "AdminListOrdersSelector.cart_id"
					}
				},
				{
					"id": 18504,
					"name": "customer_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Customer ID to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21047,
						"name": "AdminListOrdersSelector.customer_id"
					}
				},
				{
					"id": 18505,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Email to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21048,
						"name": "AdminListOrdersSelector.email"
					}
				},
				{
					"id": 18506,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Regions to filter orders by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21049,
						"name": "AdminListOrdersSelector.region_id"
					}
				},
				{
					"id": 18507,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Currency code to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21050,
						"name": "AdminListOrdersSelector.currency_code"
					}
				},
				{
					"id": 18508,
					"name": "tax_rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Tax rate to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21051,
						"name": "AdminListOrdersSelector.tax_rate"
					}
				},
				{
					"id": 18509,
					"name": "sales_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sales channel IDs to filter orders by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21052,
						"name": "AdminListOrdersSelector.sales_channel_id"
					}
				},
				{
					"id": 18510,
					"name": "canceled_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the orders' "
							},
							{
								"kind": "code",
								"text": "`canceled_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21053,
						"name": "AdminListOrdersSelector.canceled_at"
					}
				},
				{
					"id": 18511,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the orders' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21054,
						"name": "AdminListOrdersSelector.created_at"
					}
				},
				{
					"id": 18512,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the orders' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21055,
						"name": "AdminListOrdersSelector.updated_at"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18490
					]
				},
				{
					"title": "Properties",
					"children": [
						18492,
						18493,
						18494,
						18495,
						18496,
						18497,
						18498,
						18499,
						18500,
						18501,
						18502,
						18503,
						18504,
						18505,
						18506,
						18507,
						18508,
						18509,
						18510,
						18511,
						18512
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 21037,
					"name": "AdminListOrdersSelector",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 18513,
			"name": "AdminPostOrdersOrderSwapsSwapProcessPaymentParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 18514,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18515,
							"name": "new AdminPostOrdersOrderSwapsSwapProcessPaymentParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 18513,
								"name": "AdminPostOrdersOrderSwapsSwapProcessPaymentParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20631,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20630,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 18516,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20632,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 18517,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20633,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18514
					]
				},
				{
					"title": "Properties",
					"children": [
						18516,
						18517
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20629,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 18518,
			"name": "AdminPostOrdersOrderRefundsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the order refund."
					}
				]
			},
			"children": [
				{
					"id": 18519,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18520,
							"name": "new AdminPostOrdersOrderRefundsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the order refund."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 18518,
								"name": "AdminPostOrdersOrderRefundsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 18521,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount to refund. It should be less than or equal the `refundable_amount` of the order."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 18522,
					"name": "reason",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The reason for the Refund."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18523,
					"name": "note",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A note with additional details about the Refund."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18524,
					"name": "no_notification",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set to `true`, no notification will be sent to the customer related to this Refund."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18519
					]
				},
				{
					"title": "Properties",
					"children": [
						18521,
						18522,
						18523,
						18524
					]
				}
			]
		},
		{
			"id": 18525,
			"name": "AdminPostOrdersOrderRefundsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 18526,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18527,
							"name": "new AdminPostOrdersOrderRefundsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 18525,
								"name": "AdminPostOrdersOrderRefundsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20631,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20630,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 18528,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20632,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 18529,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20633,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18526
					]
				},
				{
					"title": "Properties",
					"children": [
						18528,
						18529
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20629,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 21063,
			"name": "ReturnShipping",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The return's shipping method details."
					}
				]
			},
			"children": [
				{
					"id": 21064,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21065,
							"name": "new ReturnShipping",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21063,
								"name": "ReturnShipping",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21066,
					"name": "option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the shipping option used for the return."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21067,
					"name": "price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The shipping method's price."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21064
					]
				},
				{
					"title": "Properties",
					"children": [
						21066,
						21067
					]
				}
			]
		},
		{
			"id": 18530,
			"name": "AdminPostOrdersOrderReturnsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the requested return."
					}
				]
			},
			"children": [
				{
					"id": 18531,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18532,
							"name": "new AdminPostOrdersOrderReturnsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the requested return."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 18530,
								"name": "AdminPostOrdersOrderReturnsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 18533,
					"name": "items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The line items that will be returned."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 21056,
							"name": "OrdersReturnItem",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 18534,
					"name": "return_shipping",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Shipping Method to be used to handle the return shipment."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 21063,
						"name": "ReturnShipping",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 18535,
					"name": "note",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional note with information about the Return."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18536,
					"name": "receive_now",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A flag to indicate if the Return should be registerd as received immediately."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 18537,
					"name": "no_notification",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set to `true`, no notification will be sent to the customer related to this Return."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 18538,
					"name": "refund",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount to refund."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 18539,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the location used for the return."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18531
					]
				},
				{
					"title": "Properties",
					"children": [
						18533,
						18534,
						18535,
						18536,
						18537,
						18538,
						18539
					]
				}
			]
		},
		{
			"id": 18540,
			"name": "AdminPostOrdersOrderReturnsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 18541,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18542,
							"name": "new AdminPostOrdersOrderReturnsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 18540,
								"name": "AdminPostOrdersOrderReturnsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20631,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20630,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 18543,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20632,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 18544,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20633,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18541
					]
				},
				{
					"title": "Properties",
					"children": [
						18543,
						18544
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20629,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 18545,
			"name": "AdminPostOrdersOrderClaimsClaimReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 18546,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18547,
							"name": "new AdminPostOrdersOrderClaimsClaimReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 18545,
								"name": "AdminPostOrdersOrderClaimsClaimReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 18548,
					"name": "claim_items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Claim Items that the Claim will consist of."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 21068,
							"name": "Item",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 18549,
					"name": "shipping_methods",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Shipping Methods to send the additional Line Items with."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 21077,
							"name": "ShippingMethod",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 18550,
					"name": "no_notification",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set to true no notification will be send related to this Swap."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 18551,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs to hold additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18546
					]
				},
				{
					"title": "Properties",
					"children": [
						18548,
						18549,
						18550,
						18551
					]
				}
			]
		},
		{
			"id": 21077,
			"name": "ShippingMethod",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A Shipping Method represents a way in which an Order or Return can be shipped. Shipping Methods are created from a Shipping Option, but may contain additional details that can be necessary for the Fulfillment Provider to handle the shipment. If the shipping method is created for a return, it may be associated with a claim or a swap that the return is part of."
					}
				]
			},
			"children": [
				{
					"id": 21078,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21079,
							"name": "new ShippingMethod",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Shipping Method represents a way in which an Order or Return can be shipped. Shipping Methods are created from a Shipping Option, but may contain additional details that can be necessary for the Fulfillment Provider to handle the shipment. If the shipping method is created for a return, it may be associated with a claim or a swap that the return is part of."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21077,
								"name": "ShippingMethod",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21080,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of an existing Shipping Method"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21081,
					"name": "option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Shipping Option to create a Shipping Method from"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21082,
					"name": "price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price to charge for the Shipping Method"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 21083,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs to hold additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21078
					]
				},
				{
					"title": "Properties",
					"children": [
						21080,
						21081,
						21082,
						21083
					]
				}
			]
		},
		{
			"id": 21068,
			"name": "Item",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 21069,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21070,
							"name": "new Item",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21068,
								"name": "Item",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21071,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Claim Item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21072,
					"name": "note",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Short text describing the Claim Item in further detail."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21073,
					"name": "reason",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The reason for the Claim"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21074,
					"name": "images",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A list of image URL's that will be associated with the Claim"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 21493,
							"name": "Image",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 21075,
					"name": "tags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A list o tags to add to the Claim Item"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 21498,
							"name": "Tag",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 21076,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs to hold additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21069
					]
				},
				{
					"title": "Properties",
					"children": [
						21071,
						21072,
						21073,
						21074,
						21075,
						21076
					]
				}
			]
		},
		{
			"id": 21493,
			"name": "Image",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An Image is used to store details about uploaded images. Images are uploaded by the File Service, and the URL is provided by the File Service."
					}
				]
			},
			"children": [
				{
					"id": 21494,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21495,
							"name": "new Image",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An Image is used to store details about uploaded images. Images are uploaded by the File Service, and the URL is provided by the File Service."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21493,
								"name": "Image",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21496,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Image ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21497,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Image URL"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21494
					]
				},
				{
					"title": "Properties",
					"children": [
						21496,
						21497
					]
				}
			]
		},
		{
			"id": 21498,
			"name": "Tag",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 21499,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21500,
							"name": "new Tag",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21498,
								"name": "Tag",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21501,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Tag ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21502,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Tag value"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21499
					]
				},
				{
					"title": "Properties",
					"children": [
						21501,
						21502
					]
				}
			]
		},
		{
			"id": 18552,
			"name": "AdminPostOrdersOrderClaimsClaimParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 18553,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18554,
							"name": "new AdminPostOrdersOrderClaimsClaimParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 18552,
								"name": "AdminPostOrdersOrderClaimsClaimParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20631,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20630,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 18555,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20632,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 18556,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20633,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18553
					]
				},
				{
					"title": "Properties",
					"children": [
						18555,
						18556
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20629,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 21084,
			"name": "PaymentMethod",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in the order's payment method."
					}
				]
			},
			"children": [
				{
					"id": 21085,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21086,
							"name": "new PaymentMethod",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21084,
								"name": "PaymentMethod",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21087,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the payment provider used in the order."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21088,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The data to attach to the payment."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21085
					]
				},
				{
					"title": "Properties",
					"children": [
						21087,
						21088
					]
				}
			]
		},
		{
			"id": 21089,
			"name": "ShippingMethod",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in the order's shipping method."
					}
				]
			},
			"children": [
				{
					"id": 21090,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21091,
							"name": "new ShippingMethod",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Shipping Method represents a way in which an Order or Return can be shipped. Shipping Methods are created from a Shipping Option, but may contain additional details that can be necessary for the Fulfillment Provider to handle the shipment. If the shipping method is created for a return, it may be associated with a claim or a swap that the return is part of."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21089,
								"name": "ShippingMethod",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21092,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the shipping provider used in the order."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21093,
					"name": "profile_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the shipping profile used in the order."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21094,
					"name": "price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price of the shipping method."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 21095,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The data to attach to the shipping method."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 21096,
					"name": "items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The line items associated with this shipping methods."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Record"
							},
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "intrinsic",
									"name": "unknown"
								}
							],
							"name": "Record",
							"package": "typescript"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21090
					]
				},
				{
					"title": "Properties",
					"children": [
						21092,
						21093,
						21094,
						21095,
						21096
					]
				}
			]
		},
		{
			"id": 18557,
			"name": "AdminPostOrdersOrderReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the order."
					}
				]
			},
			"children": [
				{
					"id": 18558,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18559,
							"name": "new AdminPostOrdersOrderReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the order."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 18557,
								"name": "AdminPostOrdersOrderReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 18560,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The email associated with the order"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18561,
					"name": "billing_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The order's billing address"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20601,
						"name": "AddressPayload",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 18562,
					"name": "shipping_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The order's shipping address"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20601,
						"name": "AddressPayload",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 18563,
					"name": "items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The line items of the order"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Record"
							},
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "intrinsic",
									"name": "unknown"
								}
							],
							"name": "Record",
							"package": "typescript"
						}
					}
				},
				{
					"id": 18564,
					"name": "region",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ID of the region that the order is associated with."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18565,
					"name": "discounts",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discounts applied to the order"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Record"
							},
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "intrinsic",
									"name": "unknown"
								}
							],
							"name": "Record",
							"package": "typescript"
						}
					}
				},
				{
					"id": 18566,
					"name": "customer_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the customer associated with the order."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18567,
					"name": "payment_method",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment method chosen for the order."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 21084,
						"name": "PaymentMethod",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 18568,
					"name": "shipping_method",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Shipping Method used for shipping the order."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 21089,
							"name": "ShippingMethod",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 18569,
					"name": "no_notification",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set to `true`, no notification will be sent to the customer related to this order."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18558
					]
				},
				{
					"title": "Properties",
					"children": [
						18560,
						18561,
						18562,
						18563,
						18564,
						18565,
						18566,
						18567,
						18568,
						18569
					]
				}
			]
		},
		{
			"id": 18570,
			"name": "AdminPostOrdersOrderParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to configure the retrieved order."
					}
				]
			},
			"children": [
				{
					"id": 18571,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18572,
							"name": "new AdminPostOrdersOrderParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 18570,
								"name": "AdminPostOrdersOrderParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20631,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20630,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 18573,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20632,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 18574,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20633,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18571
					]
				},
				{
					"title": "Properties",
					"children": [
						18573,
						18574
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20629,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 18585,
			"name": "AdminGetPaymentCollectionsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 18586,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18587,
							"name": "new AdminGetPaymentCollectionsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 18585,
								"name": "AdminGetPaymentCollectionsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20631,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20630,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 18588,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20632,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 18589,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20633,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18586
					]
				},
				{
					"title": "Properties",
					"children": [
						18588,
						18589
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20629,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 18575,
			"name": "defaultPaymentCollectionFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 18576,
			"name": "defaulPaymentCollectionRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 18577,
			"name": "AdminPaymentCollectionsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The payment collection's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 18578,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 18579,
							"name": "payment_collection",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Payment Collection details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/payment-collection.ts",
									"qualifiedName": "PaymentCollection"
								},
								"name": "PaymentCollection",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								18579
							]
						}
					]
				}
			}
		},
		{
			"id": 18580,
			"name": "AdminPaymentCollectionDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of deleting a payment collection."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 18581,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 18582,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the deleted Payment Collection."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 18583,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the object that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "payment_collection"
							},
							"defaultValue": "payment_collection"
						},
						{
							"id": 18584,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether or not the Payment Collection was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": true
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								18582,
								18583,
								18584
							]
						}
					]
				}
			}
		},
		{
			"id": 18590,
			"name": "AdminUpdatePaymentCollectionsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the payment collection."
					}
				]
			},
			"children": [
				{
					"id": 18591,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18592,
							"name": "new AdminUpdatePaymentCollectionsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the payment collection."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 18590,
								"name": "AdminUpdatePaymentCollectionsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 18593,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A description to create or update the payment collection."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18594,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A set of key-value pairs to hold additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18591
					]
				},
				{
					"title": "Properties",
					"children": [
						18593,
						18594
					]
				}
			]
		},
		{
			"id": 18602,
			"name": "GetPaymentsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 18603,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18604,
							"name": "new GetPaymentsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 18602,
								"name": "GetPaymentsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20631,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20630,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 18605,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20632,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 18606,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20633,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18603
					]
				},
				{
					"title": "Properties",
					"children": [
						18605,
						18606
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20629,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 18595,
			"name": "defaultPaymentFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 18596,
			"name": "AdminPaymentRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The payment's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 18597,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 18598,
							"name": "payment",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Payment details"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/payment.ts",
									"qualifiedName": "Payment"
								},
								"name": "Payment",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								18598
							]
						}
					]
				}
			}
		},
		{
			"id": 18599,
			"name": "AdminRefundRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The refund's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 18600,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 18601,
							"name": "refund",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Refund details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/refund.ts",
									"qualifiedName": "Refund"
								},
								"name": "Refund",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								18601
							]
						}
					]
				}
			}
		},
		{
			"id": 18607,
			"name": "AdminPostPaymentRefundsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the refund to create."
					}
				]
			},
			"children": [
				{
					"id": 18608,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18609,
							"name": "new AdminPostPaymentRefundsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the refund to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 18607,
								"name": "AdminPostPaymentRefundsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 18610,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount to refund."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 18611,
					"name": "reason",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The reason for the Refund."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/refund.ts",
							"qualifiedName": "RefundReason"
						},
						"name": "RefundReason",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 18612,
					"name": "note",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A note with additional details about the Refund."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18608
					]
				},
				{
					"title": "Properties",
					"children": [
						18610,
						18611,
						18612
					]
				}
			]
		},
		{
			"id": 18632,
			"name": "AdminPostPriceListPricesPricesReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the prices to add."
					}
				]
			},
			"children": [
				{
					"id": 18633,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18634,
							"name": "new AdminPostPriceListPricesPricesReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the prices to add."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 18632,
								"name": "AdminPostPriceListPricesPricesReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 18635,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The prices to update or add."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 20733,
							"name": "AdminPriceListPricesUpdateReq",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 18636,
					"name": "override",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set to `true`, the prices will replace all existing prices associated with the Price List."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18633
					]
				},
				{
					"title": "Properties",
					"children": [
						18635,
						18636
					]
				}
			]
		},
		{
			"id": 21103,
			"name": "CustomerGroup",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A customer group that can be used to organize customers into groups of similar traits."
					}
				]
			},
			"children": [
				{
					"id": 21104,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21105,
							"name": "new CustomerGroup",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A customer group that can be used to organize customers into groups of similar traits."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21103,
								"name": "CustomerGroup",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21106,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of a customer group"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21104
					]
				},
				{
					"title": "Properties",
					"children": [
						21106
					]
				}
			]
		},
		{
			"id": 18637,
			"name": "AdminPostPriceListsPriceListReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the price list to create."
					}
				]
			},
			"children": [
				{
					"id": 18638,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18639,
							"name": "new AdminPostPriceListsPriceListReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the price list to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 18637,
								"name": "AdminPostPriceListsPriceListReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 18640,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the Price List."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18641,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the Price List."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18642,
					"name": "starts_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone that the Price List starts being valid."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 18643,
					"name": "ends_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone that the Price List ends being valid."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 18644,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The status of the Price List. If the status is set to `draft`, the prices created in the price list will not be available of the customer."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 21097,
						"name": "PriceListStatus",
						"package": "@medusajs/utils"
					}
				},
				{
					"id": 18645,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the Price List."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 21100,
						"name": "PriceListType",
						"package": "@medusajs/utils"
					}
				},
				{
					"id": 18646,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The prices of the Price List."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 20743,
							"name": "AdminPriceListPricesCreateReq",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 18647,
					"name": "customer_groups",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of customer groups that the Price List applies to."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 21103,
							"name": "CustomerGroup",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 18648,
					"name": "includes_tax",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Tax included in prices of price list"
							}
						],
						"blockTags": [
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "tax_inclusive_pricing",
										"tag": "@featureFlag"
									}
								]
							},
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "tax_inclusive_pricing",
										"tag": "@featureFlag"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18638
					]
				},
				{
					"title": "Properties",
					"children": [
						18640,
						18641,
						18642,
						18643,
						18644,
						18645,
						18646,
						18647,
						18648
					]
				}
			]
		},
		{
			"id": 18649,
			"name": "AdminDeletePriceListPricesPricesReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the prices to delete."
					}
				]
			},
			"children": [
				{
					"id": 18650,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18651,
							"name": "new AdminDeletePriceListPricesPricesReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the prices to delete."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 18649,
								"name": "AdminDeletePriceListPricesPricesReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 18652,
					"name": "price_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the prices to delete."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18650
					]
				},
				{
					"title": "Properties",
					"children": [
						18652
					]
				}
			]
		},
		{
			"id": 18653,
			"name": "AdminDeletePriceListsPriceListProductsPricesBatchReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the products' prices to delete."
					}
				]
			},
			"children": [
				{
					"id": 18654,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18655,
							"name": "new AdminDeletePriceListsPriceListProductsPricesBatchReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the products' prices to delete."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 18653,
								"name": "AdminDeletePriceListsPriceListProductsPricesBatchReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 18656,
					"name": "product_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the products to delete their associated prices."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18654
					]
				},
				{
					"title": "Properties",
					"children": [
						18656
					]
				}
			]
		},
		{
			"id": 18613,
			"name": "defaultAdminPriceListFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 18614,
			"name": "defaultAdminPriceListRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 18615,
			"name": "AdminPriceListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The price list's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 18616,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 18617,
							"name": "price_list",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Price List details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/price-list.ts",
									"qualifiedName": "PriceList"
								},
								"name": "PriceList",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								18617
							]
						}
					]
				}
			}
		},
		{
			"id": 18618,
			"name": "AdminPriceListDeleteBatchRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of deleting a price list."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 18619,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 18620,
							"name": "ids",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The IDs of the deleted prices."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 18621,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether or not the items were deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": true
						},
						{
							"id": 18622,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the object that was deleted. A price is also named `money-amount`."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "money-amount"
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								18620,
								18621,
								18622
							]
						}
					]
				}
			}
		},
		{
			"id": 18623,
			"name": "AdminPriceListDeleteProductPricesRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 18618,
				"name": "AdminPriceListDeleteBatchRes",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 18624,
			"name": "AdminPriceListDeleteVariantPricesRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 18618,
				"name": "AdminPriceListDeleteBatchRes",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 18625,
			"name": "AdminPriceListDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 20570,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 18626,
			"name": "AdminPriceListsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of price lists with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 20566,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 18627,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 18628,
									"name": "price_lists",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of price lists details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/price-list.ts",
												"qualifiedName": "PriceList"
											},
											"name": "PriceList",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										18628
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 18629,
			"name": "AdminPriceListsProductsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of products with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 20566,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 18630,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 18631,
									"name": "products",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of products details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/product.ts",
												"qualifiedName": "Product"
											},
											"name": "Product",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										18631
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 18657,
			"name": "AdminGetPriceListsPriceListProductsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved products associated with a price list."
					}
				]
			},
			"children": [
				{
					"id": 18661,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ID to filter products by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 18662,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search products' title, description, product variant's title and sku, and product collection's title."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18663,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Statuses to filter products by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../packages/medusa/src/models/product.ts",
								"qualifiedName": "ProductStatus"
							},
							"name": "ProductStatus",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 18664,
					"name": "collection_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by their associated collection ID."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 18665,
					"name": "tags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Tags to filter products by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 18666,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Title to filter products by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18667,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Description to filter products by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18668,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Handle to filter products by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18669,
					"name": "is_giftcard",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by whether they're gift cards."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 18670,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Type to filter products by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18671,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin(\n  { limit: 50 }\n).order"
					}
				},
				{
					"id": 18672,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the products' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 18673,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the products' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 18674,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the products' "
							},
							{
								"kind": "code",
								"text": "`deleted_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 18675,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin(\n  { limit: 50 }\n).expand"
					}
				},
				{
					"id": 18676,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin(\n  { limit: 50 }\n).fields"
					}
				},
				{
					"id": 18677,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin(\n  { limit: 50 }\n).offset"
					}
				},
				{
					"id": 18678,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of products returned in the list. Default is "
							},
							{
								"kind": "code",
								"text": "`50`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin(\n  { limit: 50 }\n).limit"
					}
				},
				{
					"id": 18658,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18659,
							"name": "new AdminGetPriceListsPriceListProductsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 18660,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 18657,
								"name": "AdminGetPriceListsPriceListProductsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "extendedFindParamsMixin(\n  { limit: 50 }\n).constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin(\n  { limit: 50 }\n).constructor"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18658
					]
				},
				{
					"title": "Properties",
					"children": [
						18661,
						18662,
						18663,
						18664,
						18665,
						18666,
						18667,
						18668,
						18669,
						18670,
						18671,
						18672,
						18673,
						18674,
						18675,
						18676,
						18677,
						18678
					]
				}
			],
			"extendedTypes": [
				{
					"type": "intersection",
					"types": [
						{
							"type": "reference",
							"target": 20629,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindParams",
							"package": "@medusajs/medusa"
						},
						{
							"type": "reference",
							"target": 20634,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindPaginationParams",
							"package": "@medusajs/medusa"
						}
					]
				}
			]
		},
		{
			"id": 18679,
			"name": "AdminGetPriceListPaginationParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved price lists."
					}
				]
			},
			"children": [
				{
					"id": 18680,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18681,
							"name": "new AdminGetPriceListPaginationParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 18679,
								"name": "AdminGetPriceListPaginationParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20722,
								"name": "FilterablePriceListProps.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20721,
						"name": "FilterablePriceListProps.constructor"
					}
				},
				{
					"id": 18682,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 18683,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n10\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "10"
				},
				{
					"id": 18684,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18685,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18686,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter price lists by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20723,
						"name": "FilterablePriceListProps.id"
					}
				},
				{
					"id": 18687,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search terms to search price lists' description, name, and customer group's name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20724,
						"name": "FilterablePriceListProps.q"
					}
				},
				{
					"id": 18688,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Statuses to filter price lists by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 20717,
							"name": "PriceListStatus",
							"package": "@medusajs/medusa"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20725,
						"name": "FilterablePriceListProps.status"
					}
				},
				{
					"id": 18689,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Name to filter price lists by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20726,
						"name": "FilterablePriceListProps.name"
					}
				},
				{
					"id": 18690,
					"name": "customer_groups",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter price lists by their associated customer groups."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20727,
						"name": "FilterablePriceListProps.customer_groups"
					}
				},
				{
					"id": 18691,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Description to filter price lists by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20728,
						"name": "FilterablePriceListProps.description"
					}
				},
				{
					"id": 18692,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Types to filter price lists by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 20714,
							"name": "PriceListType",
							"package": "@medusajs/medusa"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20729,
						"name": "FilterablePriceListProps.type"
					}
				},
				{
					"id": 18693,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the price lists' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20730,
						"name": "FilterablePriceListProps.created_at"
					}
				},
				{
					"id": 18694,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the price lists' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20731,
						"name": "FilterablePriceListProps.updated_at"
					}
				},
				{
					"id": 18695,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the price lists' "
							},
							{
								"kind": "code",
								"text": "`deleted_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20732,
						"name": "FilterablePriceListProps.deleted_at"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18680
					]
				},
				{
					"title": "Properties",
					"children": [
						18682,
						18683,
						18684,
						18685,
						18686,
						18687,
						18688,
						18689,
						18690,
						18691,
						18692,
						18693,
						18694,
						18695
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20720,
					"name": "FilterablePriceListProps",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 21107,
			"name": "CustomerGroup",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A customer group that can be used to organize customers into groups of similar traits."
					}
				]
			},
			"children": [
				{
					"id": 21108,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21109,
							"name": "new CustomerGroup",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A customer group that can be used to organize customers into groups of similar traits."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21107,
								"name": "CustomerGroup",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21110,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of a customer group"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21108
					]
				},
				{
					"title": "Properties",
					"children": [
						21110
					]
				}
			]
		},
		{
			"id": 18696,
			"name": "AdminPostPriceListsPriceListPriceListReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the payment collection."
					}
				]
			},
			"children": [
				{
					"id": 18697,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18698,
							"name": "new AdminPostPriceListsPriceListPriceListReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the payment collection."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 18696,
								"name": "AdminPostPriceListsPriceListPriceListReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 18699,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the Price List"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18700,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the Price List."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18701,
					"name": "starts_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone that the Price List starts being valid."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 18702,
					"name": "ends_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone that the Price List ends being valid."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 18703,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The status of the Price List. If the status is set to `draft`, the prices created in the price list will not be available of the customer."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 21097,
						"name": "PriceListStatus",
						"package": "@medusajs/utils"
					}
				},
				{
					"id": 18704,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the Price List."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 21100,
						"name": "PriceListType",
						"package": "@medusajs/utils"
					}
				},
				{
					"id": 18705,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The prices of the Price List."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 20733,
							"name": "AdminPriceListPricesUpdateReq",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 18706,
					"name": "customer_groups",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of customer groups that the Price List applies to."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 21107,
							"name": "CustomerGroup",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 18707,
					"name": "includes_tax",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Tax included in prices of price list"
							}
						],
						"blockTags": [
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "tax_inclusive_pricing",
										"tag": "@featureFlag"
									}
								]
							},
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "tax_inclusive_pricing",
										"tag": "@featureFlag"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18697
					]
				},
				{
					"title": "Properties",
					"children": [
						18699,
						18700,
						18701,
						18702,
						18703,
						18704,
						18705,
						18706,
						18707
					]
				}
			]
		},
		{
			"id": 18769,
			"name": "AdminPostProductCategoriesCategoryProductsBatchReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the products to add to the product category."
					}
				]
			},
			"children": [
				{
					"id": 18770,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18771,
							"name": "new AdminPostProductCategoriesCategoryProductsBatchReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the products to add to the product category."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 18769,
								"name": "AdminPostProductCategoriesCategoryProductsBatchReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 18772,
					"name": "product_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the products to add to the product category"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 21119,
							"name": "ProductBatchProductCategory",
							"package": "@medusajs/medusa"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18770
					]
				},
				{
					"title": "Properties",
					"children": [
						18772
					]
				}
			]
		},
		{
			"id": 18773,
			"name": "AdminPostProductCategoriesCategoryProductsBatchParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 18774,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18775,
							"name": "new AdminPostProductCategoriesCategoryProductsBatchParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 18773,
								"name": "AdminPostProductCategoriesCategoryProductsBatchParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20631,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20630,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 18776,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20632,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 18777,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20633,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18774
					]
				},
				{
					"title": "Properties",
					"children": [
						18776,
						18777
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20629,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 18738,
			"name": "AdminPostProductCategoriesReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the product category to create."
					}
				]
			},
			"children": [
				{
					"id": 18739,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18740,
							"name": "new AdminPostProductCategoriesReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the product category to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 18738,
								"name": "AdminPostProductCategoriesReq",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 21113,
								"name": "AdminProductCategoriesReqBase.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 21112,
						"name": "AdminProductCategoriesReqBase.constructor"
					}
				},
				{
					"id": 18741,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the product category"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18742,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs to hold additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 18743,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the product category."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21114,
						"name": "AdminProductCategoriesReqBase.description"
					}
				},
				{
					"id": 18744,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The handle of the product category. If none is provided, the kebab-case version of the name will be used. This field can be used as a slug in URLs."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21115,
						"name": "AdminProductCategoriesReqBase.handle"
					}
				},
				{
					"id": 18745,
					"name": "is_internal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set to `true`, the product category will only be available to admins."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21116,
						"name": "AdminProductCategoriesReqBase.is_internal"
					}
				},
				{
					"id": 18746,
					"name": "is_active",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set to `false`, the product category will not be available in the storefront."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21117,
						"name": "AdminProductCategoriesReqBase.is_active"
					}
				},
				{
					"id": 18747,
					"name": "parent_category_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the parent product category"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21118,
						"name": "AdminProductCategoriesReqBase.parent_category_id"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18739
					]
				},
				{
					"title": "Properties",
					"children": [
						18741,
						18742,
						18743,
						18744,
						18745,
						18746,
						18747
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 21111,
					"name": "AdminProductCategoriesReqBase",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 18748,
			"name": "AdminPostProductCategoriesParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 18749,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18750,
							"name": "new AdminPostProductCategoriesParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 18748,
								"name": "AdminPostProductCategoriesParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20631,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20630,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 18751,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20632,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 18752,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20633,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18749
					]
				},
				{
					"title": "Properties",
					"children": [
						18751,
						18752
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20629,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 18778,
			"name": "AdminDeleteProductCategoriesCategoryProductsBatchReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the products to delete from the product category."
					}
				]
			},
			"children": [
				{
					"id": 18779,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18780,
							"name": "new AdminDeleteProductCategoriesCategoryProductsBatchReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the products to delete from the product category."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 18778,
								"name": "AdminDeleteProductCategoriesCategoryProductsBatchReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 18781,
					"name": "product_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the products to delete from the product category."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 21119,
							"name": "ProductBatchProductCategory",
							"package": "@medusajs/medusa"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18779
					]
				},
				{
					"title": "Properties",
					"children": [
						18781
					]
				}
			]
		},
		{
			"id": 18782,
			"name": "AdminDeleteProductCategoriesCategoryProductsBatchParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 18783,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18784,
							"name": "new AdminDeleteProductCategoriesCategoryProductsBatchParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 18782,
								"name": "AdminDeleteProductCategoriesCategoryProductsBatchParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20631,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20630,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 18785,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20632,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 18786,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20633,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18783
					]
				},
				{
					"title": "Properties",
					"children": [
						18785,
						18786
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20629,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 18718,
			"name": "AdminGetProductCategoryParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 18719,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18720,
							"name": "new AdminGetProductCategoryParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 18718,
								"name": "AdminGetProductCategoryParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20631,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20630,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 18721,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20632,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 18722,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20633,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18719
					]
				},
				{
					"title": "Properties",
					"children": [
						18721,
						18722
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20629,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 18708,
			"name": "defaultAdminProductCategoryRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 18709,
			"name": "allowedAdminProductCategoryRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 18710,
			"name": "defaultProductCategoryFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 18711,
			"name": "AdminProductCategoriesCategoryRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The product category's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 18712,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 18713,
							"name": "product_category",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Product category details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/product-category.ts",
									"qualifiedName": "ProductCategory"
								},
								"name": "ProductCategory",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								18713
							]
						}
					]
				}
			}
		},
		{
			"id": 18714,
			"name": "AdminProductCategoriesCategoryDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 20570,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 18715,
			"name": "AdminProductCategoriesListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of product categories with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 20566,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 18716,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 18717,
									"name": "product_categories",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of product category details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/product-category.ts",
												"qualifiedName": "ProductCategory"
											},
											"name": "ProductCategory",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										18717
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 18723,
			"name": "AdminGetProductCategoriesParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved product categories."
					}
				]
			},
			"children": [
				{
					"id": 18727,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search product categories' names and handles."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18728,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Handle to filter product categories by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18729,
					"name": "include_descendants_tree",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether to include child product categories in the response."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 18730,
					"name": "is_internal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter product categories by whether they're internal."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 18731,
					"name": "is_active",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter product categories by whether they're active."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 18732,
					"name": "parent_category_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter product categories by their associated parent ID."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 18733,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).expand"
					}
				},
				{
					"id": 18734,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).fields"
					}
				},
				{
					"id": 18735,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).offset"
					}
				},
				{
					"id": 18736,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of product categories returned in the list. The default is "
							},
							{
								"kind": "code",
								"text": "`100`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).limit"
					}
				},
				{
					"id": 18737,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).order"
					}
				},
				{
					"id": 18724,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18725,
							"name": "new AdminGetProductCategoriesParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 18726,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 18723,
								"name": "AdminGetProductCategoriesParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).constructor"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18724
					]
				},
				{
					"title": "Properties",
					"children": [
						18727,
						18728,
						18729,
						18730,
						18731,
						18732,
						18733,
						18734,
						18735,
						18736,
						18737
					]
				}
			],
			"extendedTypes": [
				{
					"type": "intersection",
					"types": [
						{
							"type": "reference",
							"target": 20629,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindParams",
							"package": "@medusajs/medusa"
						},
						{
							"type": "reference",
							"target": 20634,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindPaginationParams",
							"package": "@medusajs/medusa"
						}
					]
				}
			]
		},
		{
			"id": 18753,
			"name": "AdminPostProductCategoriesCategoryReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the product category."
					}
				]
			},
			"children": [
				{
					"id": 18754,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18755,
							"name": "new AdminPostProductCategoriesCategoryReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the product category."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 18753,
								"name": "AdminPostProductCategoriesCategoryReq",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 21113,
								"name": "AdminProductCategoriesReqBase.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 21112,
						"name": "AdminProductCategoriesReqBase.constructor"
					}
				},
				{
					"id": 18756,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name to identify the Product Category by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18757,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A handle to be used in slugs."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": 21115,
						"name": "AdminProductCategoriesReqBase.handle"
					}
				},
				{
					"id": 18758,
					"name": "rank",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rank of the category in the tree node (starting from 0)"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 18759,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs to hold additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 18760,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional text field to describe the Product Category by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21114,
						"name": "AdminProductCategoriesReqBase.description"
					}
				},
				{
					"id": 18761,
					"name": "is_internal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A flag to make product category an internal category for admins"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21116,
						"name": "AdminProductCategoriesReqBase.is_internal"
					}
				},
				{
					"id": 18762,
					"name": "is_active",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A flag to make product category visible/hidden in the store front"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21117,
						"name": "AdminProductCategoriesReqBase.is_active"
					}
				},
				{
					"id": 18763,
					"name": "parent_category_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the parent product category"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21118,
						"name": "AdminProductCategoriesReqBase.parent_category_id"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18754
					]
				},
				{
					"title": "Properties",
					"children": [
						18756,
						18757,
						18758,
						18759,
						18760,
						18761,
						18762,
						18763
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 21111,
					"name": "AdminProductCategoriesReqBase",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 18764,
			"name": "AdminPostProductCategoriesCategoryParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 18765,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18766,
							"name": "new AdminPostProductCategoriesCategoryParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 18764,
								"name": "AdminPostProductCategoriesCategoryParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20631,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20630,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 18767,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20632,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 18768,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20633,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18765
					]
				},
				{
					"title": "Properties",
					"children": [
						18767,
						18768
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20629,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 18787,
			"name": "defaultAdminProductTagsFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 18788,
			"name": "defaultAdminProductTagsRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "never"
				}
			},
			"defaultValue": "[]"
		},
		{
			"id": 18789,
			"name": "AdminProductTagsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of product tags with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 20566,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 18790,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 18791,
									"name": "product_tags",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of product tag details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/product-tag.ts",
												"qualifiedName": "ProductTag"
											},
											"name": "ProductTag",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										18791
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 18792,
			"name": "AdminGetProductTagsPaginationParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how a list of data is paginated."
					}
				]
			},
			"children": [
				{
					"id": 18793,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18794,
							"name": "new AdminGetProductTagsPaginationParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 18792,
								"name": "AdminGetProductTagsPaginationParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 18795,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n10\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "10"
				},
				{
					"id": 18796,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18793
					]
				},
				{
					"title": "Properties",
					"children": [
						18795,
						18796
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 18797,
					"name": "AdminGetProductTagsParams"
				}
			]
		},
		{
			"id": 18797,
			"name": "AdminGetProductTagsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved product tags."
					}
				]
			},
			"children": [
				{
					"id": 18798,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18799,
							"name": "new AdminGetProductTagsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 18797,
								"name": "AdminGetProductTagsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 18794,
								"name": "AdminGetProductTagsPaginationParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 18793,
						"name": "AdminGetProductTagsPaginationParams.constructor"
					}
				},
				{
					"id": 18807,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n10\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "10",
					"inheritedFrom": {
						"type": "reference",
						"target": 18795,
						"name": "AdminGetProductTagsPaginationParams.limit"
					}
				},
				{
					"id": 18808,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": 18796,
						"name": "AdminGetProductTagsPaginationParams.offset"
					}
				},
				{
					"id": 18800,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter product tags by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 20584,
								"name": "StringComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 18801,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search product tags' value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18802,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Values to search product tags by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 20584,
								"name": "StringComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 18803,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the product tags' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 18804,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the product tags' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 18805,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18806,
					"name": "discount_condition_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter product tags by their associated discount condition's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18798
					]
				},
				{
					"title": "Properties",
					"children": [
						18807,
						18808,
						18800,
						18801,
						18802,
						18803,
						18804,
						18805,
						18806
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 18792,
					"name": "AdminGetProductTagsPaginationParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 18809,
			"name": "defaultAdminProductTypeFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 18810,
			"name": "defaultAdminProductTypeRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "never"
				}
			},
			"defaultValue": "[]"
		},
		{
			"id": 18811,
			"name": "AdminProductTypesListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of product types with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 20566,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 18812,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 18813,
									"name": "product_types",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of product types details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/product-type.ts",
												"qualifiedName": "ProductType"
											},
											"name": "ProductType",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										18813
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 18814,
			"name": "AdminGetProductTypesParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved product types."
					}
				]
			},
			"children": [
				{
					"id": 18815,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18816,
							"name": "new AdminGetProductTypesParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 18814,
								"name": "AdminGetProductTypesParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20636,
								"name": "FindPaginationParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20635,
						"name": "FindPaginationParams.constructor"
					}
				},
				{
					"id": 18817,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter product types by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 20584,
								"name": "StringComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 18818,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search terms to search product types' value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18819,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Values to filter product types by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 20584,
								"name": "StringComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 18820,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the product types' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 18821,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the product types' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 18822,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": 20639,
						"name": "FindPaginationParams.order"
					}
				},
				{
					"id": 18823,
					"name": "discount_condition_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter product types by their associated discount condition's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18824,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": 20637,
						"name": "FindPaginationParams.offset"
					}
				},
				{
					"id": 18825,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n20\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20",
					"inheritedFrom": {
						"type": "reference",
						"target": 20638,
						"name": "FindPaginationParams.limit"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18815
					]
				},
				{
					"title": "Properties",
					"children": [
						18817,
						18818,
						18819,
						18820,
						18821,
						18822,
						18823,
						18824,
						18825
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20634,
					"name": "FindPaginationParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 18900,
			"name": "AdminPostProductsProductOptionsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the product option to create."
					}
				]
			},
			"children": [
				{
					"id": 18901,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18902,
							"name": "new AdminPostProductsProductOptionsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the product option to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 18900,
								"name": "AdminPostProductsProductOptionsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 18903,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title the Product Option."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18901
					]
				},
				{
					"title": "Properties",
					"children": [
						18903
					]
				}
			]
		},
		{
			"id": 21503,
			"name": "ProductVariantOptionReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 21504,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21505,
							"name": "new ProductVariantOptionReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21503,
								"name": "ProductVariantOptionReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21506,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value to give for the Product Option at the same index in the Product's `options` field."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21504
					]
				},
				{
					"title": "Properties",
					"children": [
						21506
					]
				}
			]
		},
		{
			"id": 21144,
			"name": "ProductOptionReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 21145,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21146,
							"name": "new ProductOptionReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21144,
								"name": "ProductOptionReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21147,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the Product Option."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21145
					]
				},
				{
					"title": "Properties",
					"children": [
						21147
					]
				}
			]
		},
		{
			"id": 21148,
			"name": "ProductVariantReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 21149,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21150,
							"name": "new ProductVariantReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21148,
								"name": "ProductVariantReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21151,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21152,
					"name": "sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique SKU of the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21153,
					"name": "ean",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The EAN number of the item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21154,
					"name": "upc",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The UPC number of the item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21155,
					"name": "barcode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A generic GTIN field of the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21156,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Harmonized System code of the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21157,
					"name": "inventory_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of stock kept of the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 21158,
					"name": "allow_backorder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the Product Variant can be purchased when out of stock."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 21159,
					"name": "manage_inventory",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether Medusa should keep track of the inventory of this Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 21160,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The wieght of the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 21161,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 21162,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 21163,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 21164,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The country of origin of the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21165,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Manufacturer Identification code of the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21166,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material composition of the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21167,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs with additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 21168,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of product variant prices. A product variant can have different prices for each region or currency code."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 21170,
							"name": "ProductVariantPricesCreateReq",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 21169,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of Product Option values that the variant corresponds to. The option values should be added into the array in the same index as in the `options` field of the product."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 21503,
							"name": "ProductVariantOptionReq",
							"package": "@medusajs/medusa"
						}
					},
					"defaultValue": "[]"
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21149
					]
				},
				{
					"title": "Properties",
					"children": [
						21151,
						21152,
						21153,
						21154,
						21155,
						21156,
						21157,
						21158,
						21159,
						21160,
						21161,
						21162,
						21163,
						21164,
						21165,
						21166,
						21167,
						21168,
						21169
					]
				}
			]
		},
		{
			"id": 18904,
			"name": "AdminPostProductsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the product to create."
					}
				]
			},
			"children": [
				{
					"id": 18907,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the Product"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18908,
					"name": "subtitle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The subtitle of the Product"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18909,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the Product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18910,
					"name": "is_giftcard",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A flag to indicate if the Product represents a Gift Card. Purchasing Products with this flag set to `true` will result in a Gift Card being created."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 18911,
					"name": "discountable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A flag to indicate if discounts can be applied to the Line Items generated from this Product"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "true"
				},
				{
					"id": 18912,
					"name": "images",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of images of the Product. Each value in the array is a URL to the image. You can use the upload API Routes to upload the image and obtain a URL."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 18913,
					"name": "thumbnail",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The thumbnail to use for the Product. The value is a URL to the thumbnail. You can use the upload API Routes to upload the thumbnail and obtain a URL."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18914,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A unique handle to identify the Product by. If not provided, the kebab-case version of the product title will be used. This can be used as a slug in URLs."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18915,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The status of the product. The product is shown to the customer only if its status is `published`."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/product.ts",
							"qualifiedName": "ProductStatus"
						},
						"name": "ProductStatus",
						"package": "@medusajs/medusa"
					},
					"defaultValue": "ProductStatus.DRAFT"
				},
				{
					"id": 18916,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Product Type to associate the Product with."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 21126,
						"name": "ProductTypeReq",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 18917,
					"name": "collection_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Product Collection the Product belongs to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18918,
					"name": "tags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Product Tags to associate the Product with."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 21131,
							"name": "ProductTagReq",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 18919,
					"name": "sales_channels",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sales channels to associate the Product with."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 21136,
							"name": "ProductSalesChannelReq",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 18920,
					"name": "categories",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Product categories to add the Product to."
							}
						],
						"blockTags": [
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "product_categories",
										"tag": "@featureFlag"
									}
								]
							},
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "product_categories",
										"tag": "@featureFlag"
									}
								]
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 21140,
							"name": "ProductProductCategoryReq",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 18921,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Options that the Product should have. A new product option will be created for every item in the array."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 21144,
							"name": "ProductOptionReq",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 18922,
					"name": "variants",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of Product Variants to create with the Product. Each product variant must have a unique combination of Product Option values."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 21148,
							"name": "ProductVariantReq",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 18923,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight of the Product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 18924,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the Product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 18925,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the Product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 18926,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the Product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 18927,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Harmonized System code of the Product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18928,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The country of origin of the Product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18929,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Manufacturer Identification code of the Product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18930,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material composition of the Product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18931,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs with additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 18905,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18906,
							"name": "new AdminPostProductsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the product to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 18904,
								"name": "AdminPostProductsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18905
					]
				},
				{
					"title": "Properties",
					"children": [
						18907,
						18908,
						18909,
						18910,
						18911,
						18912,
						18913,
						18914,
						18915,
						18916,
						18917,
						18918,
						18919,
						18920,
						18921,
						18922,
						18923,
						18924,
						18925,
						18926,
						18927,
						18928,
						18929,
						18930,
						18931
					]
				}
			]
		},
		{
			"id": 21178,
			"name": "ProductVariantOptionReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 21179,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21180,
							"name": "new ProductVariantOptionReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21178,
								"name": "ProductVariantOptionReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21181,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A value to give to the Product Option."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21182,
					"name": "option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Product Option."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21179
					]
				},
				{
					"title": "Properties",
					"children": [
						21181,
						21182
					]
				}
			]
		},
		{
			"id": 18932,
			"name": "AdminPostProductsProductVariantsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the product variant to create."
					}
				]
			},
			"children": [
				{
					"id": 18933,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18934,
							"name": "new AdminPostProductsProductVariantsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the product variant to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 18932,
								"name": "AdminPostProductsProductVariantsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 18935,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18936,
					"name": "sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique SKU of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18937,
					"name": "ean",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The EAN number of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18938,
					"name": "upc",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The UPC number of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18939,
					"name": "barcode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A generic GTIN field of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18940,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Harmonized System code of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18941,
					"name": "inventory_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of stock kept of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 18942,
					"name": "allow_backorder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product variant can be purchased when out of stock."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 18943,
					"name": "manage_inventory",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether Medusa should keep track of the inventory of this product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "true"
				},
				{
					"id": 18944,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The wieght of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 18945,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 18946,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 18947,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 18948,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The country of origin of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18949,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Manufacturer Identification code of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18950,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material composition of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18951,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs with additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 18952,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of product variant prices. A product variant can have different prices for each region or currency code."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 21170,
							"name": "ProductVariantPricesCreateReq",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 18953,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of Product Option values that the variant corresponds to."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 21178,
							"name": "ProductVariantOptionReq",
							"package": "@medusajs/medusa"
						}
					},
					"defaultValue": "[]"
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18933
					]
				},
				{
					"title": "Properties",
					"children": [
						18935,
						18936,
						18937,
						18938,
						18939,
						18940,
						18941,
						18942,
						18943,
						18944,
						18945,
						18946,
						18947,
						18948,
						18949,
						18950,
						18951,
						18952,
						18953
					]
				}
			]
		},
		{
			"id": 18954,
			"name": "AdminGetProductParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 18955,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18956,
							"name": "new AdminGetProductParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 18954,
								"name": "AdminGetProductParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20631,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20630,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 18957,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20632,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 18958,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20633,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18955
					]
				},
				{
					"title": "Properties",
					"children": [
						18957,
						18958
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20629,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 18826,
			"name": "defaultAdminProductRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 18827,
			"name": "defaultAdminProductFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/product.ts",
							"qualifiedName": "Product"
						},
						"name": "Product",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 18828,
			"name": "defaultAdminGetProductsVariantsFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 18829,
			"name": "defaultAdminGetProductsVariantsRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 18830,
			"name": "defaultAdminProductRemoteQueryObject",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "This is temporary."
					}
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 18831,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 18832,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/product.ts",
											"qualifiedName": "Product"
										},
										"name": "Product",
										"package": "@medusajs/medusa"
									}
								}
							},
							"defaultValue": "defaultAdminProductFields"
						},
						{
							"id": 18833,
							"name": "images",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 18834,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 18835,
											"name": "fields",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												18835
											]
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 18836,
							"name": "tags",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 18837,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 18838,
											"name": "fields",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												18838
											]
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 18839,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 18840,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 18841,
											"name": "fields",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												18841
											]
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 18842,
							"name": "collection",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 18843,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 18844,
											"name": "fields",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												18844
											]
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 18845,
							"name": "categories",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 18846,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 18847,
											"name": "fields",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												18847
											]
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 18848,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 18849,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 18850,
											"name": "fields",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 18851,
											"name": "values",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 18852,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 18853,
															"name": "fields",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															"defaultValue": "..."
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																18853
															]
														}
													]
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												18850,
												18851
											]
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 18854,
							"name": "variants",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 18855,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 18856,
											"name": "fields",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 18857,
											"name": "options",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 18858,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 18859,
															"name": "fields",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															"defaultValue": "..."
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																18859
															]
														}
													]
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												18856,
												18857
											]
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 18860,
							"name": "profile",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 18861,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 18862,
											"name": "fields",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												18862
											]
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 18863,
							"name": "sales_channels",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 18864,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 18865,
											"name": "fields",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												18865
											]
										}
									]
								}
							},
							"defaultValue": "..."
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								18832,
								18833,
								18836,
								18839,
								18842,
								18845,
								18848,
								18854,
								18860,
								18863
							]
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 18866,
			"name": "AdminProductsDeleteOptionRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of deleting a product's option."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 18867,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 18868,
							"name": "option_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the deleted Product Option"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 18869,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the object that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "option"
							},
							"defaultValue": "option"
						},
						{
							"id": 18870,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether or not the items were deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": true
						},
						{
							"id": 18871,
							"name": "product",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Product details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/product.ts",
									"qualifiedName": "Product"
								},
								"name": "Product",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								18868,
								18869,
								18870,
								18871
							]
						}
					]
				}
			}
		},
		{
			"id": 18872,
			"name": "AdminProductsDeleteVariantRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of deleting a product's variant."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 18873,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 18874,
							"name": "variant_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the deleted Product Variant."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 18875,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the object that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "product-variant"
							},
							"defaultValue": "product-variant"
						},
						{
							"id": 18876,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether or not the items were deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": true
						},
						{
							"id": 18877,
							"name": "product",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Product details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/product.ts",
									"qualifiedName": "Product"
								},
								"name": "Product",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								18874,
								18875,
								18876,
								18877
							]
						}
					]
				}
			}
		},
		{
			"id": 18878,
			"name": "AdminProductsDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of deleting a product."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 18879,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 18880,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the deleted Product."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 18881,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the object that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "product"
							},
							"defaultValue": "product"
						},
						{
							"id": 18882,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether or not the items were deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": true
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								18880,
								18881,
								18882
							]
						}
					]
				}
			}
		},
		{
			"id": 18883,
			"name": "AdminProductsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of products with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 20566,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 18884,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 18885,
									"name": "products",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of products details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"target": 21123,
													"name": "PricedProduct",
													"package": "@medusajs/medusa"
												},
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../packages/medusa/src/models/product.ts",
														"qualifiedName": "Product"
													},
													"name": "Product",
													"package": "@medusajs/medusa"
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										18885
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 18886,
			"name": "AdminProductsListVariantsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 20566,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 18887,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 18888,
									"name": "variants",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of product variants details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/product-variant.ts",
												"qualifiedName": "ProductVariant"
											},
											"name": "ProductVariant",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										18888
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 18889,
			"name": "AdminProductsListTypesRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 18890,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 18891,
							"name": "types",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of product types details."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../packages/medusa/src/models/product-type.ts",
										"qualifiedName": "ProductType"
									},
									"name": "ProductType",
									"package": "@medusajs/medusa"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								18891
							]
						}
					]
				}
			}
		},
		{
			"id": 18892,
			"name": "AdminProductsListTagsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The usage details of product tags."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 18893,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 18894,
							"name": "tags",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of product tags details."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intersection",
									"types": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Pick"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../packages/medusa/src/models/product-tag.ts",
														"qualifiedName": "ProductTag"
													},
													"name": "ProductTag",
													"package": "@medusajs/medusa"
												},
												{
													"type": "union",
													"types": [
														{
															"type": "literal",
															"value": "id"
														},
														{
															"type": "literal",
															"value": "value"
														}
													]
												}
											],
											"name": "Pick",
											"package": "typescript"
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 18895,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 18896,
														"name": "usage_count",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"comment": {
															"summary": [
																{
																	"kind": "text",
																	"text": "The number of products that use this tag."
																}
															]
														},
														"type": {
															"type": "intrinsic",
															"name": "number"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															18896
														]
													}
												]
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								18894
							]
						}
					]
				}
			}
		},
		{
			"id": 18897,
			"name": "AdminProductsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The product's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 18898,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 18899,
							"name": "product",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Product details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/product.ts",
									"qualifiedName": "Product"
								},
								"name": "Product",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								18899
							]
						}
					]
				}
			}
		},
		{
			"id": 18959,
			"name": "AdminGetProductsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved products."
					}
				]
			},
			"children": [
				{
					"id": 18960,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18961,
							"name": "new AdminGetProductsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 18959,
								"name": "AdminGetProductsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 21185,
								"name": "FilterableProductProps.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 21184,
						"name": "FilterableProductProps.constructor"
					}
				},
				{
					"id": 18962,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 18963,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n50\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "50"
				},
				{
					"id": 18964,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18965,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18966,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18967,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter products by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21186,
						"name": "FilterableProductProps.id"
					}
				},
				{
					"id": 18968,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search products' title, description, variants' title and sku, and collections' title."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21187,
						"name": "FilterableProductProps.q"
					}
				},
				{
					"id": 18969,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Statuses to filter products by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../packages/medusa/src/models/product.ts",
								"qualifiedName": "ProductStatus"
							},
							"name": "ProductStatus",
							"package": "@medusajs/medusa"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21188,
						"name": "FilterableProductProps.status"
					}
				},
				{
					"id": 18970,
					"name": "price_list_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by their associated price lists' ID."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21189,
						"name": "FilterableProductProps.price_list_id"
					}
				},
				{
					"id": 18971,
					"name": "collection_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by their associated product collection's ID."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21190,
						"name": "FilterableProductProps.collection_id"
					}
				},
				{
					"id": 18972,
					"name": "tags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by their associated tags' value."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21191,
						"name": "FilterableProductProps.tags"
					}
				},
				{
					"id": 18973,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Title to filter products by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21192,
						"name": "FilterableProductProps.title"
					}
				},
				{
					"id": 18974,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Description to filter products by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21193,
						"name": "FilterableProductProps.description"
					}
				},
				{
					"id": 18975,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Handle to filter products by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21194,
						"name": "FilterableProductProps.handle"
					}
				},
				{
					"id": 18976,
					"name": "is_giftcard",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by whether they're gift cards."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21195,
						"name": "FilterableProductProps.is_giftcard"
					}
				},
				{
					"id": 18977,
					"name": "type_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by their associated product type's ID."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21196,
						"name": "FilterableProductProps.type_id"
					}
				},
				{
					"id": 18978,
					"name": "sales_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by their associated sales channels' ID."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21197,
						"name": "FilterableProductProps.sales_channel_id"
					}
				},
				{
					"id": 18979,
					"name": "discount_condition_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by their associated discount condition's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21198,
						"name": "FilterableProductProps.discount_condition_id"
					}
				},
				{
					"id": 18980,
					"name": "category_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by their associated product category's ID."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21199,
						"name": "FilterableProductProps.category_id"
					}
				},
				{
					"id": 18981,
					"name": "include_category_children",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether to include product category children in the response."
							}
						],
						"blockTags": [
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "text",
										"text": "product_categories"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21200,
						"name": "FilterableProductProps.include_category_children"
					}
				},
				{
					"id": 18982,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the products' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21201,
						"name": "FilterableProductProps.created_at"
					}
				},
				{
					"id": 18983,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the products' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21202,
						"name": "FilterableProductProps.updated_at"
					}
				},
				{
					"id": 18984,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the products' "
							},
							{
								"kind": "code",
								"text": "`deleted_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21203,
						"name": "FilterableProductProps.deleted_at"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18960
					]
				},
				{
					"title": "Properties",
					"children": [
						18962,
						18963,
						18964,
						18965,
						18966,
						18967,
						18968,
						18969,
						18970,
						18971,
						18972,
						18973,
						18974,
						18975,
						18976,
						18977,
						18978,
						18979,
						18980,
						18981,
						18982,
						18983,
						18984
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 21183,
					"name": "FilterableProductProps",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 18985,
			"name": "AdminGetProductsVariantsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 18986,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 18987,
							"name": "new AdminGetProductsVariantsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 18985,
								"name": "AdminGetProductsVariantsParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 18988,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter product variants by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 18989,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18990,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18991,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 18992,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n100\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "100"
				},
				{
					"id": 18993,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search product variants' title, sku, and products' title."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18994,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 18995,
					"name": "inventory_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Number filters to apply on product variants' "
							},
							{
								"kind": "code",
								"text": "`inventory_quantity`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"target": 20594,
								"name": "NumericalComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 18996,
					"name": "manage_inventory",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter product variants by whether their inventory is managed or not."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 18997,
					"name": "allow_backorder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter product variants by whether they are allowed to be backordered or not."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 18998,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the product variants' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 18999,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the product variants' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						18986
					]
				},
				{
					"title": "Properties",
					"children": [
						18988,
						18989,
						18990,
						18991,
						18992,
						18993,
						18994,
						18995,
						18996,
						18997,
						18998,
						18999
					]
				}
			]
		},
		{
			"id": 19000,
			"name": "AdminPostProductsProductMetadataReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 19001,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19002,
							"name": "new AdminPostProductsProductMetadataReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 19000,
								"name": "AdminPostProductsProductMetadataReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19003,
					"name": "key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The metadata key"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19004,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The metadata value"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19001
					]
				},
				{
					"title": "Properties",
					"children": [
						19003,
						19004
					]
				}
			]
		},
		{
			"id": 19005,
			"name": "AdminPostProductsProductOptionsOption",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 19006,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19007,
							"name": "new AdminPostProductsProductOptionsOption",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 19005,
								"name": "AdminPostProductsProductOptionsOption",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19008,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the Product Option"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19006
					]
				},
				{
					"title": "Properties",
					"children": [
						19008
					]
				}
			]
		},
		{
			"id": 21507,
			"name": "ProductVariantOptionReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 21508,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21509,
							"name": "new ProductVariantOptionReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21507,
								"name": "ProductVariantOptionReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21510,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the Product Option."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21511,
					"name": "option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Option."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21508
					]
				},
				{
					"title": "Properties",
					"children": [
						21510,
						21511
					]
				}
			]
		},
		{
			"id": 21204,
			"name": "ProductVariantReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 21205,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21206,
							"name": "new ProductVariantReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21204,
								"name": "ProductVariantReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21207,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The id of an existing product variant. If provided, the details of the product variant will be updated. If not, a new product variant will be created."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21208,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21209,
					"name": "sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique SKU of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21210,
					"name": "ean",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The EAN number of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21211,
					"name": "upc",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The UPC number of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21212,
					"name": "barcode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A generic GTIN field of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21213,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Harmonized System code of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21214,
					"name": "inventory_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of stock kept of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 21215,
					"name": "allow_backorder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product variant can be purchased when out of stock."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 21216,
					"name": "manage_inventory",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether Medusa should keep track of the inventory of this product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 21217,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 21218,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 21219,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 21220,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 21221,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The country of origin of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21222,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Manufacturer Identification code of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21223,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material composition of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21224,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs with additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 21225,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of product variant prices. A product variant can have different prices for each region or currency code."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 21227,
							"name": "ProductVariantPricesUpdateReq",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 21226,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of Product Option values that the variant corresponds to."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 21507,
							"name": "ProductVariantOptionReq",
							"package": "@medusajs/medusa"
						}
					},
					"defaultValue": "[]"
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21205
					]
				},
				{
					"title": "Properties",
					"children": [
						21207,
						21208,
						21209,
						21210,
						21211,
						21212,
						21213,
						21214,
						21215,
						21216,
						21217,
						21218,
						21219,
						21220,
						21221,
						21222,
						21223,
						21224,
						21225,
						21226
					]
				}
			]
		},
		{
			"id": 19009,
			"name": "AdminPostProductsProductReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the product."
					}
				]
			},
			"children": [
				{
					"id": 19010,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19011,
							"name": "new AdminPostProductsProductReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the product."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 19009,
								"name": "AdminPostProductsProductReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19012,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the Product"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19013,
					"name": "subtitle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The subtitle of the Product"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19014,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the Product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19015,
					"name": "discountable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A flag to indicate if discounts can be applied to the Line Items generated from this Product"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 19016,
					"name": "images",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of images of the Product. Each value in the array is a URL to the image. You can use the upload API Routes to upload the image and obtain a URL."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 19017,
					"name": "thumbnail",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The thumbnail to use for the Product. The value is a URL to the thumbnail. You can use the upload API Routes to upload the thumbnail and obtain a URL."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19018,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A unique handle to identify the Product by. If not provided, the kebab-case version of the product title will be used. This can be used as a slug in URLs."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19019,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The status of the product. The product is shown to the customer only if its status is `published`."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/product.ts",
							"qualifiedName": "ProductStatus"
						},
						"name": "ProductStatus",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 19020,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Product Type to associate the Product with."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 21126,
						"name": "ProductTypeReq",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 19021,
					"name": "collection_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Product Collection the Product belongs to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19022,
					"name": "tags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Product Tags to associate the Product with."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 21131,
							"name": "ProductTagReq",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 19023,
					"name": "sales_channels",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sales channels to associate the Product with."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 21136,
									"name": "ProductSalesChannelReq",
									"package": "@medusajs/medusa"
								}
							}
						]
					}
				},
				{
					"id": 19024,
					"name": "categories",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Product categories to add the Product to."
							}
						],
						"blockTags": [
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "product_categories",
										"tag": "@featureFlag"
									}
								]
							},
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "product_categories",
										"tag": "@featureFlag"
									}
								]
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 21140,
							"name": "ProductProductCategoryReq",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 19025,
					"name": "variants",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of Product Variants to create with the Product. Each product variant must have a unique combination of Product Option values."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 21204,
							"name": "ProductVariantReq",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 19026,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight of the Product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 19027,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the Product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 19028,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the Product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 19029,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the Product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 19030,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Harmonized System code of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19031,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The country of origin of the Product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19032,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Manufacturer Identification code of the Product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19033,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material composition of the Product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19034,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs with additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19010
					]
				},
				{
					"title": "Properties",
					"children": [
						19012,
						19013,
						19014,
						19015,
						19016,
						19017,
						19018,
						19019,
						19020,
						19021,
						19022,
						19023,
						19024,
						19025,
						19026,
						19027,
						19028,
						19029,
						19030,
						19031,
						19032,
						19033,
						19034
					]
				}
			]
		},
		{
			"id": 21236,
			"name": "ProductVariantOptionReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 21237,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21238,
							"name": "new ProductVariantOptionReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21236,
								"name": "ProductVariantOptionReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21239,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the Product Option."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21240,
					"name": "option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Product Option."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21237
					]
				},
				{
					"title": "Properties",
					"children": [
						21239,
						21240
					]
				}
			]
		},
		{
			"id": 19035,
			"name": "AdminPostProductsProductVariantsVariantReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 19036,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19037,
							"name": "new AdminPostProductsProductVariantsVariantReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 19035,
								"name": "AdminPostProductsProductVariantsVariantReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19038,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19039,
					"name": "sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique SKU of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19040,
					"name": "ean",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The EAN number of the item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19041,
					"name": "upc",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The UPC number of the item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19042,
					"name": "barcode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A generic GTIN field of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19043,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Harmonized System code of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19044,
					"name": "inventory_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of stock kept of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 19045,
					"name": "allow_backorder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product variant can be purchased when out of stock."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 19046,
					"name": "manage_inventory",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether Medusa should keep track of the inventory of this product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 19047,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 19048,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 19049,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 19050,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 19051,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The country of origin of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19052,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Manufacturer Identification code of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19053,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material composition of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19054,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs with additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 19055,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of product variant prices. A product variant can have different prices for each region or currency code."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 21227,
							"name": "ProductVariantPricesUpdateReq",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 19056,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of Product Option values that the variant corresponds to."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 21236,
							"name": "ProductVariantOptionReq",
							"package": "@medusajs/medusa"
						}
					},
					"defaultValue": "[]"
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19036
					]
				},
				{
					"title": "Properties",
					"children": [
						19038,
						19039,
						19040,
						19041,
						19042,
						19043,
						19044,
						19045,
						19046,
						19047,
						19048,
						19049,
						19050,
						19051,
						19052,
						19053,
						19054,
						19055,
						19056
					]
				}
			]
		},
		{
			"id": 19067,
			"name": "AdminPostPublishableApiKeySalesChannelsBatchReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the sales channels to add to the publishable API key."
					}
				]
			},
			"children": [
				{
					"id": 19068,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19069,
							"name": "new AdminPostPublishableApiKeySalesChannelsBatchReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the sales channels to add to the publishable API key."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 19067,
								"name": "AdminPostPublishableApiKeySalesChannelsBatchReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19070,
					"name": "sales_channel_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the sales channels to add to the publishable API key"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 21241,
							"name": "ProductBatchSalesChannel",
							"package": "@medusajs/medusa"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19068
					]
				},
				{
					"title": "Properties",
					"children": [
						19070
					]
				}
			]
		},
		{
			"id": 19071,
			"name": "AdminPostPublishableApiKeysReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the publishable API key to create."
					}
				]
			},
			"children": [
				{
					"id": 19072,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19073,
							"name": "new AdminPostPublishableApiKeysReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the publishable API key to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 19071,
								"name": "AdminPostPublishableApiKeysReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19074,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the publishable API key"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19072
					]
				},
				{
					"title": "Properties",
					"children": [
						19074
					]
				}
			]
		},
		{
			"id": 19075,
			"name": "AdminDeletePublishableApiKeySalesChannelsBatchReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the sales channels to remove from the publishable API key."
					}
				]
			},
			"children": [
				{
					"id": 19076,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19077,
							"name": "new AdminDeletePublishableApiKeySalesChannelsBatchReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the sales channels to remove from the publishable API key."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 19075,
								"name": "AdminDeletePublishableApiKeySalesChannelsBatchReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19078,
					"name": "sales_channel_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the sales channels to remove from the publishable API key"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 21241,
							"name": "ProductBatchSalesChannel",
							"package": "@medusajs/medusa"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19076
					]
				},
				{
					"title": "Properties",
					"children": [
						19078
					]
				}
			]
		},
		{
			"id": 19057,
			"name": "AdminPublishableApiKeysRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The publishable API key's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 19058,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 19059,
							"name": "publishable_api_key",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Publishable API key details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/publishable-api-key.ts",
									"qualifiedName": "PublishableApiKey"
								},
								"name": "PublishableApiKey",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								19059
							]
						}
					]
				}
			}
		},
		{
			"id": 19060,
			"name": "AdminPublishableApiKeysListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of publishable API keys with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 20566,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 19061,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 19062,
									"name": "publishable_api_keys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of publishable API keys details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/publishable-api-key.ts",
												"qualifiedName": "PublishableApiKey"
											},
											"name": "PublishableApiKey",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										19062
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 19063,
			"name": "AdminPublishableApiKeyDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 20570,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 19064,
			"name": "AdminPublishableApiKeysListSalesChannelsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of sales channel."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 19065,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 19066,
							"name": "sales_channels",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of sales channels details."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../packages/medusa/src/models/sales-channel.ts",
										"qualifiedName": "SalesChannel"
									},
									"name": "SalesChannel",
									"package": "@medusajs/medusa"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								19066
							]
						}
					]
				}
			}
		},
		{
			"id": 19079,
			"name": "GetPublishableApiKeySalesChannelsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter the sales channels."
					}
				]
			},
			"children": [
				{
					"id": 19080,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19081,
							"name": "new GetPublishableApiKeySalesChannelsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 19079,
								"name": "GetPublishableApiKeySalesChannelsParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19082,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search sales channels' names and descriptions."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19080
					]
				},
				{
					"title": "Properties",
					"children": [
						19082
					]
				}
			]
		},
		{
			"id": 19083,
			"name": "GetPublishableApiKeysParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved publishable API keys."
					}
				]
			},
			"children": [
				{
					"id": 19087,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search publishable API keys' titles."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19088,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A field to sort-order the retrieved publishable API keys by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).order"
					}
				},
				{
					"id": 19089,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the publishable API keys' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 19090,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the publishable API keys' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 19091,
					"name": "revoked_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the publishable API keys' "
							},
							{
								"kind": "code",
								"text": "`revoked_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 19092,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).expand"
					}
				},
				{
					"id": 19093,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).fields"
					}
				},
				{
					"id": 19094,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).offset"
					}
				},
				{
					"id": 19095,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n20\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).limit"
					}
				},
				{
					"id": 19084,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19085,
							"name": "new GetPublishableApiKeysParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 19086,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 19083,
								"name": "GetPublishableApiKeysParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).constructor"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19084
					]
				},
				{
					"title": "Properties",
					"children": [
						19087,
						19088,
						19089,
						19090,
						19091,
						19092,
						19093,
						19094,
						19095
					]
				}
			],
			"extendedTypes": [
				{
					"type": "intersection",
					"types": [
						{
							"type": "reference",
							"target": 20629,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindParams",
							"package": "@medusajs/medusa"
						},
						{
							"type": "reference",
							"target": 20634,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindPaginationParams",
							"package": "@medusajs/medusa"
						}
					]
				}
			]
		},
		{
			"id": 19096,
			"name": "AdminPostPublishableApiKeysPublishableApiKeyReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the publishable API key."
					}
				]
			},
			"children": [
				{
					"id": 19097,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19098,
							"name": "new AdminPostPublishableApiKeysPublishableApiKeyReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the publishable API key."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 19096,
								"name": "AdminPostPublishableApiKeysPublishableApiKeyReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19099,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the Publishable API Key."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19097
					]
				},
				{
					"title": "Properties",
					"children": [
						19099
					]
				}
			]
		},
		{
			"id": 19118,
			"name": "AdminPostRegionsRegionCountriesReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the country to add to the region."
					}
				]
			},
			"children": [
				{
					"id": 19119,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19120,
							"name": "new AdminPostRegionsRegionCountriesReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the country to add to the region."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 19118,
								"name": "AdminPostRegionsRegionCountriesReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19121,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The 2 character ISO code for the Country."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19119
					]
				},
				{
					"title": "Properties",
					"children": [
						19121
					]
				}
			]
		},
		{
			"id": 19122,
			"name": "AdminPostRegionsRegionFulfillmentProvidersReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the fulfillment provider to add to the region."
					}
				]
			},
			"children": [
				{
					"id": 19123,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19124,
							"name": "new AdminPostRegionsRegionFulfillmentProvidersReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the fulfillment provider to add to the region."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 19122,
								"name": "AdminPostRegionsRegionFulfillmentProvidersReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19125,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Fulfillment Provider."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19123
					]
				},
				{
					"title": "Properties",
					"children": [
						19125
					]
				}
			]
		},
		{
			"id": 19126,
			"name": "AdminPostRegionsRegionPaymentProvidersReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the payment provider to add to the region."
					}
				]
			},
			"children": [
				{
					"id": 19127,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19128,
							"name": "new AdminPostRegionsRegionPaymentProvidersReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the payment provider to add to the region."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 19126,
								"name": "AdminPostRegionsRegionPaymentProvidersReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19129,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Payment Provider."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19127
					]
				},
				{
					"title": "Properties",
					"children": [
						19129
					]
				}
			]
		},
		{
			"id": 19130,
			"name": "AdminPostRegionsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the region to create."
					}
				]
			},
			"children": [
				{
					"id": 19131,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19132,
							"name": "new AdminPostRegionsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the region to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 19130,
								"name": "AdminPostRegionsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19133,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the Region"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19134,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The 3 character ISO currency code to use in the Region."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19135,
					"name": "tax_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tax code of the Region."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19136,
					"name": "tax_rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tax rate to use in the Region."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 19137,
					"name": "payment_providers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A list of Payment Provider IDs that can be used in the Region"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 19138,
					"name": "fulfillment_providers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A list of Fulfillment Provider IDs that can be used in the Region"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 19139,
					"name": "countries",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A list of countries' 2 ISO characters that should be included in the Region."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 19140,
					"name": "includes_tax",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether taxes are included in the prices of the region."
							}
						],
						"blockTags": [
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "tax_inclusive_pricing",
										"tag": "@featureFlag"
									}
								]
							},
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "tax_inclusive_pricing",
										"tag": "@featureFlag"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 19141,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19131
					]
				},
				{
					"title": "Properties",
					"children": [
						19133,
						19134,
						19135,
						19136,
						19137,
						19138,
						19139,
						19140,
						19141
					]
				}
			]
		},
		{
			"id": 19100,
			"name": "defaultAdminRegionFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/region.ts",
							"qualifiedName": "Region"
						},
						"name": "Region",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 19101,
			"name": "defaultAdminRegionRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 19102,
			"name": "AdminRegionsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The region's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 19103,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 19104,
							"name": "region",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Region details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/region.ts",
									"qualifiedName": "Region"
								},
								"name": "Region",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								19104
							]
						}
					]
				}
			}
		},
		{
			"id": 19105,
			"name": "AdminRegionsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of regions with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 20566,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 19106,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 19107,
									"name": "regions",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of regions details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/region.ts",
												"qualifiedName": "Region"
											},
											"name": "Region",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										19107
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 19108,
			"name": "AdminRegionsDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 20570,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 19109,
			"name": "FulfillmentOption",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 19110,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19111,
							"name": "new FulfillmentOption",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 19109,
								"name": "FulfillmentOption",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19112,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ID of the fulfillment provider"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19113,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "fulfillment provider options"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "unknown"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19110
					]
				},
				{
					"title": "Properties",
					"children": [
						19112,
						19113
					]
				}
			]
		},
		{
			"id": 19114,
			"name": "AdminGetRegionsRegionFulfillmentOptionsRes",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of fulfillment options in a region."
					}
				]
			},
			"children": [
				{
					"id": 19115,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19116,
							"name": "new AdminGetRegionsRegionFulfillmentOptionsRes",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The list of fulfillment options in a region."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 19114,
								"name": "AdminGetRegionsRegionFulfillmentOptionsRes",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19117,
					"name": "fulfillment_options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Fulfillment providers details."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 19109,
							"name": "FulfillmentOption",
							"package": "@medusajs/medusa"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19115
					]
				},
				{
					"title": "Properties",
					"children": [
						19117
					]
				}
			]
		},
		{
			"id": 19142,
			"name": "AdminGetRegionsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved regions."
					}
				]
			},
			"children": [
				{
					"id": 19146,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search parameter for regions."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19147,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 50,\n  offset: 0,\n}).order"
					}
				},
				{
					"id": 19148,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the regions' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 19149,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the regions' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 19150,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the regions' "
							},
							{
								"kind": "code",
								"text": "`deleted_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 19151,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 50,\n  offset: 0,\n}).expand"
					}
				},
				{
					"id": 19152,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 50,\n  offset: 0,\n}).fields"
					}
				},
				{
					"id": 19153,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 50,\n  offset: 0,\n}).offset"
					}
				},
				{
					"id": 19154,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n20\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 50,\n  offset: 0,\n}).limit"
					}
				},
				{
					"id": 19143,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19144,
							"name": "new AdminGetRegionsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 19145,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 19142,
								"name": "AdminGetRegionsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "extendedFindParamsMixin({\n  limit: 50,\n  offset: 0,\n}).constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 50,\n  offset: 0,\n}).constructor"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19143
					]
				},
				{
					"title": "Properties",
					"children": [
						19146,
						19147,
						19148,
						19149,
						19150,
						19151,
						19152,
						19153,
						19154
					]
				}
			],
			"extendedTypes": [
				{
					"type": "intersection",
					"types": [
						{
							"type": "reference",
							"target": 20629,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindParams",
							"package": "@medusajs/medusa"
						},
						{
							"type": "reference",
							"target": 20634,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindPaginationParams",
							"package": "@medusajs/medusa"
						}
					]
				}
			]
		},
		{
			"id": 19155,
			"name": "AdminPostRegionsRegionReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the regions."
					}
				]
			},
			"children": [
				{
					"id": 19156,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19157,
							"name": "new AdminPostRegionsRegionReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the regions."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 19155,
								"name": "AdminPostRegionsRegionReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19158,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the Region"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19159,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The 3 character ISO currency code to use in the Region."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19160,
					"name": "tax_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tax code of the Region."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19161,
					"name": "tax_rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tax rate to use in the Region."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 19162,
					"name": "gift_cards_taxable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set to `true`, taxes will be applied on gift cards."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 19163,
					"name": "automatic_taxes",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set to `true`, the Medusa backend will automatically calculate taxes for carts in this region. If set to `false`, the taxes must be calculated manually."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 19164,
					"name": "tax_provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the tax provider to use. If none provided, the system tax provider is used."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 19165,
					"name": "payment_providers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A list of Payment Provider IDs that can be used in the Region"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 19166,
					"name": "fulfillment_providers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A list of Fulfillment Provider IDs that can be used in the Region"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 19167,
					"name": "countries",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A list of countries' 2 ISO characters that should be included in the Region."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 19168,
					"name": "includes_tax",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether taxes are included in the prices of the region."
							}
						],
						"blockTags": [
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "tax_inclusive_pricing",
										"tag": "@featureFlag"
									}
								]
							},
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "tax_inclusive_pricing",
										"tag": "@featureFlag"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 19169,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19156
					]
				},
				{
					"title": "Properties",
					"children": [
						19158,
						19159,
						19160,
						19161,
						19162,
						19163,
						19164,
						19165,
						19166,
						19167,
						19168,
						19169
					]
				}
			]
		},
		{
			"id": 19183,
			"name": "AdminPostReservationsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the reservation to create."
					}
				]
			},
			"children": [
				{
					"id": 19184,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19185,
							"name": "new AdminPostReservationsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the reservation to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 19183,
								"name": "AdminPostReservationsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19186,
					"name": "line_item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the line item of the reservation."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19187,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the location of the reservation."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19188,
					"name": "inventory_item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the inventory item the reservation is associated with."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19189,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity to reserve."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 19190,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The reservation's description."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19191,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs with additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19184
					]
				},
				{
					"title": "Properties",
					"children": [
						19186,
						19187,
						19188,
						19189,
						19190,
						19191
					]
				}
			]
		},
		{
			"id": 19170,
			"name": "AdminReservationsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The reservation's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 19171,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 19172,
							"name": "reservation",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Reservation details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21245,
								"name": "ReservationItemDTO",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								19172
							]
						}
					]
				}
			}
		},
		{
			"id": 19173,
			"name": "ExtendedReservationItem",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 21245,
						"name": "ReservationItemDTO",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 19174,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 19175,
									"name": "line_item",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The line item associated with the reservation."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/line-item.ts",
											"qualifiedName": "LineItem"
										},
										"name": "LineItem",
										"package": "@medusajs/medusa"
									}
								},
								{
									"id": 19176,
									"name": "inventory_item",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The inventory item associated with the reservation."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 20947,
										"name": "InventoryItemDTO",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										19175,
										19176
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 19177,
			"name": "AdminReservationsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of reservations with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 20566,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 19178,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 19179,
									"name": "reservations",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of reservations details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 21245,
											"name": "ReservationItemDTO",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										19179
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 19180,
			"name": "defaultAdminReservationRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "never"
				}
			},
			"defaultValue": "[]"
		},
		{
			"id": 19181,
			"name": "defaultReservationFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 19182,
			"name": "AdminReservationsDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 20570,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 19192,
			"name": "AdminGetReservationsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved reservations."
					}
				]
			},
			"children": [
				{
					"id": 19196,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Location IDs to filter reservations by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 19197,
					"name": "inventory_item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Inventory item IDs to filter reservations by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 19198,
					"name": "line_item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Line item IDs to filter reservations by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 19199,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "\"Create by\" user IDs to filter reservations by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 19200,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Numerical filters to apply on the reservations' "
							},
							{
								"kind": "code",
								"text": "`quantity`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20594,
						"name": "NumericalComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 19201,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the reservations' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 19202,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the reservations' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 19203,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "String filters to apply on the reservations' "
							},
							{
								"kind": "code",
								"text": "`description`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 20584,
								"name": "StringComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 19204,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).expand"
					}
				},
				{
					"id": 19205,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).fields"
					}
				},
				{
					"id": 19206,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).offset"
					}
				},
				{
					"id": 19207,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n20\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).limit"
					}
				},
				{
					"id": 19208,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).order"
					}
				},
				{
					"id": 19193,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19194,
							"name": "new AdminGetReservationsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 19195,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 19192,
								"name": "AdminGetReservationsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).constructor"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19193
					]
				},
				{
					"title": "Properties",
					"children": [
						19196,
						19197,
						19198,
						19199,
						19200,
						19201,
						19202,
						19203,
						19204,
						19205,
						19206,
						19207,
						19208
					]
				}
			],
			"extendedTypes": [
				{
					"type": "intersection",
					"types": [
						{
							"type": "reference",
							"target": 20629,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindParams",
							"package": "@medusajs/medusa"
						},
						{
							"type": "reference",
							"target": 20634,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindPaginationParams",
							"package": "@medusajs/medusa"
						}
					]
				}
			]
		},
		{
			"id": 19209,
			"name": "AdminPostReservationsReservationReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the reservation."
					}
				]
			},
			"children": [
				{
					"id": 19210,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19211,
							"name": "new AdminPostReservationsReservationReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the reservation."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 19209,
								"name": "AdminPostReservationsReservationReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19212,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity to reserve."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 19213,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the location associated with the reservation."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19214,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The reservation's description."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19215,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs with additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19210
					]
				},
				{
					"title": "Properties",
					"children": [
						19212,
						19213,
						19214,
						19215
					]
				}
			]
		},
		{
			"id": 19225,
			"name": "AdminPostReturnReasonsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the return reason to create."
					}
				]
			},
			"children": [
				{
					"id": 19226,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19227,
							"name": "new AdminPostReturnReasonsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the return reason to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 19225,
								"name": "AdminPostReturnReasonsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19228,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A unique value of the return reason."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19229,
					"name": "label",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The label to display to the Customer."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19230,
					"name": "parent_return_reason_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the parent return reason."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19231,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the Reason."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19232,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs with additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19226
					]
				},
				{
					"title": "Properties",
					"children": [
						19228,
						19229,
						19230,
						19231,
						19232
					]
				}
			]
		},
		{
			"id": 19216,
			"name": "defaultAdminReturnReasonsFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/return-reason.ts",
							"qualifiedName": "ReturnReason"
						},
						"name": "ReturnReason",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 19217,
			"name": "defaultAdminReturnReasonsRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/return-reason.ts",
							"qualifiedName": "ReturnReason"
						},
						"name": "ReturnReason",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 19218,
			"name": "AdminReturnReasonsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The return reason's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 19219,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 19220,
							"name": "return_reason",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The return reason's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/return-reason.ts",
									"qualifiedName": "ReturnReason"
								},
								"name": "ReturnReason",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								19220
							]
						}
					]
				}
			}
		},
		{
			"id": 19221,
			"name": "AdminReturnReasonsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of return reasons."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 19222,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 19223,
							"name": "return_reasons",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The list of return reasons."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../packages/medusa/src/models/return-reason.ts",
										"qualifiedName": "ReturnReason"
									},
									"name": "ReturnReason",
									"package": "@medusajs/medusa"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								19223
							]
						}
					]
				}
			}
		},
		{
			"id": 19224,
			"name": "AdminReturnReasonsDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 20570,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 19233,
			"name": "AdminPostReturnReasonsReasonReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the return reason."
					}
				]
			},
			"children": [
				{
					"id": 19234,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19235,
							"name": "new AdminPostReturnReasonsReasonReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the return reason."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 19233,
								"name": "AdminPostReturnReasonsReasonReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19236,
					"name": "label",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The label to display to the Customer."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19237,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A unique value of the return reason."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19238,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the Reason."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19239,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs with additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19234
					]
				},
				{
					"title": "Properties",
					"children": [
						19236,
						19237,
						19238,
						19239
					]
				}
			]
		},
		{
			"id": 19240,
			"name": "defaultRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 19241,
			"name": "defaultRelationsList",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 19242,
			"name": "defaultReturnCancelRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 19243,
			"name": "defaultReturnCancelFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/order.ts",
							"qualifiedName": "Order"
						},
						"name": "Order",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 19244,
			"name": "AdminReturnsCancelRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The associated order's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 19245,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 19246,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Order details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/order.ts",
									"qualifiedName": "Order"
								},
								"name": "Order",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								19246
							]
						}
					]
				}
			}
		},
		{
			"id": 19247,
			"name": "AdminReturnsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of returns with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 20566,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 19248,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 19249,
									"name": "returns",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of returns details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/return.ts",
												"qualifiedName": "Return"
											},
											"name": "Return",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										19249
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 19250,
			"name": "AdminReturnsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The return's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 19251,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 19252,
							"name": "return",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Return details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/return.ts",
									"qualifiedName": "Return"
								},
								"name": "Return",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								19252
							]
						}
					]
				}
			}
		},
		{
			"id": 19253,
			"name": "AdminGetReturnsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how a list of data is paginated."
					}
				]
			},
			"children": [
				{
					"id": 19254,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19255,
							"name": "new AdminGetReturnsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 19253,
								"name": "AdminGetReturnsParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19256,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n50\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "50"
				},
				{
					"id": 19257,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n50\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19254
					]
				},
				{
					"title": "Properties",
					"children": [
						19256,
						19257
					]
				}
			]
		},
		{
			"id": 21258,
			"name": "Item",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 21259,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21260,
							"name": "new Item",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21258,
								"name": "Item",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21261,
					"name": "item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Line Item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21262,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity of the Line Item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21259
					]
				},
				{
					"title": "Properties",
					"children": [
						21261,
						21262
					]
				}
			]
		},
		{
			"id": 19258,
			"name": "AdminPostReturnsReturnReceiveReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the received return."
					}
				]
			},
			"children": [
				{
					"id": 19259,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19260,
							"name": "new AdminPostReturnsReturnReceiveReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the received return."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 19258,
								"name": "AdminPostReturnsReturnReceiveReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19261,
					"name": "items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Line Items that have been received."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 21258,
							"name": "Item",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 19262,
					"name": "refund",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount to refund."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 19263,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the location to return items from."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19259
					]
				},
				{
					"title": "Properties",
					"children": [
						19261,
						19262,
						19263
					]
				}
			]
		},
		{
			"id": 19272,
			"name": "AdminPostSalesChannelsChannelProductsBatchReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the products to add to the sales channel."
					}
				]
			},
			"children": [
				{
					"id": 19273,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19274,
							"name": "new AdminPostSalesChannelsChannelProductsBatchReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the products to add to the sales channel."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 19272,
								"name": "AdminPostSalesChannelsChannelProductsBatchReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19275,
					"name": "product_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the products to add to the sales channel"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 21241,
							"name": "ProductBatchSalesChannel",
							"package": "@medusajs/medusa"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19273
					]
				},
				{
					"title": "Properties",
					"children": [
						19275
					]
				}
			]
		},
		{
			"id": 19308,
			"name": "AdminPostSalesChannelsChannelStockLocationsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 19309,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19310,
							"name": "new AdminPostSalesChannelsChannelStockLocationsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 19308,
								"name": "AdminPostSalesChannelsChannelStockLocationsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19311,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the stock location"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19309
					]
				},
				{
					"title": "Properties",
					"children": [
						19311
					]
				}
			]
		},
		{
			"id": 19276,
			"name": "AdminPostSalesChannelsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the sales channel to create."
					}
				]
			},
			"children": [
				{
					"id": 19277,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19278,
							"name": "new AdminPostSalesChannelsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the sales channel to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 19276,
								"name": "AdminPostSalesChannelsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19279,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the Sales Channel"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19280,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the Sales Channel"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19281,
					"name": "is_disabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the Sales Channel is disabled."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19277
					]
				},
				{
					"title": "Properties",
					"children": [
						19279,
						19280,
						19281
					]
				}
			]
		},
		{
			"id": 19282,
			"name": "AdminDeleteSalesChannelsChannelProductsBatchReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the products to delete from the sales channel."
					}
				]
			},
			"children": [
				{
					"id": 19283,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19284,
							"name": "new AdminDeleteSalesChannelsChannelProductsBatchReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the products to delete from the sales channel."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 19282,
								"name": "AdminDeleteSalesChannelsChannelProductsBatchReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19285,
					"name": "product_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the products to remove from the sales channel."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 21241,
							"name": "ProductBatchSalesChannel",
							"package": "@medusajs/medusa"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19283
					]
				},
				{
					"title": "Properties",
					"children": [
						19285
					]
				}
			]
		},
		{
			"id": 19264,
			"name": "AdminSalesChannelsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The sales channel's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 19265,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 19266,
							"name": "sales_channel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sales Channel's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/sales-channel.ts",
									"qualifiedName": "SalesChannel"
								},
								"name": "SalesChannel",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								19266
							]
						}
					]
				}
			}
		},
		{
			"id": 19267,
			"name": "AdminSalesChannelsDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 20570,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 19268,
			"name": "AdminSalesChannelsDeleteLocationRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 20570,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 19269,
			"name": "AdminSalesChannelsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of sales channels with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 20566,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 19270,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 19271,
									"name": "sales_channels",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of sales channels details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/sales-channel.ts",
												"qualifiedName": "SalesChannel"
											},
											"name": "SalesChannel",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										19271
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 19286,
			"name": "AdminGetSalesChannelsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved sales channels."
					}
				]
			},
			"children": [
				{
					"id": 19290,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ID to filter sales channels by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19291,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search sales channels' names and descriptions."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19292,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Name to filter sales channels by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19293,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Description to filter sales channels by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19294,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on sales channels' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 19295,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on sales channels' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 19296,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on sales channels' "
							},
							{
								"kind": "code",
								"text": "`deleted_at`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 19297,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin().order"
					}
				},
				{
					"id": 19298,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin().expand"
					}
				},
				{
					"id": 19299,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin().fields"
					}
				},
				{
					"id": 19300,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin().offset"
					}
				},
				{
					"id": 19301,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n20\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin().limit"
					}
				},
				{
					"id": 19287,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19288,
							"name": "new AdminGetSalesChannelsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 19289,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 19286,
								"name": "AdminGetSalesChannelsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "extendedFindParamsMixin().constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin().constructor"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19287
					]
				},
				{
					"title": "Properties",
					"children": [
						19290,
						19291,
						19292,
						19293,
						19294,
						19295,
						19296,
						19297,
						19298,
						19299,
						19300,
						19301
					]
				}
			],
			"extendedTypes": [
				{
					"type": "intersection",
					"types": [
						{
							"type": "reference",
							"target": 20629,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindParams",
							"package": "@medusajs/medusa"
						},
						{
							"type": "reference",
							"target": 20634,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindPaginationParams",
							"package": "@medusajs/medusa"
						}
					]
				}
			]
		},
		{
			"id": 19312,
			"name": "AdminDeleteSalesChannelsChannelStockLocationsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 19313,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19314,
							"name": "new AdminDeleteSalesChannelsChannelStockLocationsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 19312,
								"name": "AdminDeleteSalesChannelsChannelStockLocationsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19315,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the stock location"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19313
					]
				},
				{
					"title": "Properties",
					"children": [
						19315
					]
				}
			]
		},
		{
			"id": 19302,
			"name": "AdminPostSalesChannelsSalesChannelReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the sales channel."
					}
				]
			},
			"children": [
				{
					"id": 19303,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19304,
							"name": "new AdminPostSalesChannelsSalesChannelReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the sales channel."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 19302,
								"name": "AdminPostSalesChannelsSalesChannelReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19305,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the sales channel"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19306,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the sales channel."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19307,
					"name": "is_disabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the Sales Channel is disabled."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19303
					]
				},
				{
					"title": "Properties",
					"children": [
						19305,
						19306,
						19307
					]
				}
			]
		},
		{
			"id": 21263,
			"name": "OptionRequirement",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 21264,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21265,
							"name": "new OptionRequirement",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21263,
								"name": "OptionRequirement",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21266,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the requirement"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/shipping-option-requirement.ts",
							"qualifiedName": "RequirementType"
						},
						"name": "RequirementType",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 21267,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount to compare with."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21264
					]
				},
				{
					"title": "Properties",
					"children": [
						21266,
						21267
					]
				}
			]
		},
		{
			"id": 19325,
			"name": "AdminPostShippingOptionsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the shipping option to create."
					}
				]
			},
			"children": [
				{
					"id": 19326,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19327,
							"name": "new AdminPostShippingOptionsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the shipping option to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 19325,
								"name": "AdminPostShippingOptionsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19328,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the Shipping Option"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19329,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Region in which the Shipping Option will be available."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19330,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Fulfillment Provider that handles the Shipping Option."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19331,
					"name": "profile_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Shipping Profile to add the Shipping Option to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19332,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The data needed for the Fulfillment Provider to handle shipping with this Shipping Option."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 19333,
					"name": "price_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the Shipping Option price. `flat_rate` indicates fixed pricing, whereas `calculated` indicates that the price will be calculated each time by the fulfillment provider."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/shipping-option.ts",
							"qualifiedName": "ShippingOptionPriceType"
						},
						"name": "ShippingOptionPriceType",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 19334,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount to charge for the Shipping Option. If the `price_type` is set to `calculated`, this amount will not actually be used."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 19335,
					"name": "requirements",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The requirements that must be satisfied for the Shipping Option to be available."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 21263,
							"name": "OptionRequirement",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 19336,
					"name": "admin_only",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set to `true`, the shipping option can only be used when creating draft orders."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 19337,
					"name": "is_return",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the Shipping Option can be used for returns or during checkout."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 19338,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs with additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 19339,
					"name": "includes_tax",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Tax included in prices of shipping option"
							}
						],
						"blockTags": [
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "tax_inclusive_pricing",
										"tag": "@featureFlag"
									}
								]
							},
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "tax_inclusive_pricing",
										"tag": "@featureFlag"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19326
					]
				},
				{
					"title": "Properties",
					"children": [
						19328,
						19329,
						19330,
						19331,
						19332,
						19333,
						19334,
						19335,
						19336,
						19337,
						19338,
						19339
					]
				}
			]
		},
		{
			"id": 19316,
			"name": "shippingOptionsDefaultFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/shipping-option.ts",
							"qualifiedName": "ShippingOption"
						},
						"name": "ShippingOption",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 19317,
			"name": "shippingOptionsDefaultRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 19318,
			"name": "AdminShippingOptionsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of shipping options with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 20566,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 19319,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 19320,
									"name": "shipping_options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of shipping options details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/shipping-option.ts",
												"qualifiedName": "ShippingOption"
											},
											"name": "ShippingOption",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										19320
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 19321,
			"name": "AdminShippingOptionsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The shipping option's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 19322,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 19323,
							"name": "shipping_option",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Shipping option details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/shipping-option.ts",
									"qualifiedName": "ShippingOption"
								},
								"name": "ShippingOption",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								19323
							]
						}
					]
				}
			}
		},
		{
			"id": 19324,
			"name": "AdminShippingOptionsDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 20570,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 19340,
			"name": "AdminGetShippingOptionsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter the retrieved shipping options."
					}
				]
			},
			"children": [
				{
					"id": 19344,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter shipping options by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 19345,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Name to filter shipping options by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19346,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter by a region ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19347,
					"name": "is_return",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter by whether the shipping option is used for returns or orders."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 19348,
					"name": "admin_only",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter by whether the shipping options are available for admin users only."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 19349,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter shipping options by a search query."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19350,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 50,\n  offset: 0,\n}).order"
					}
				},
				{
					"id": 19351,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on shipping options' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 19352,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on shipping options' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 19353,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on shipping options' "
							},
							{
								"kind": "code",
								"text": "`deleted_at`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 19354,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned shipping options."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 50,\n  offset: 0,\n}).fields"
					}
				},
				{
					"id": 19355,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned shipping options."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 50,\n  offset: 0,\n}).expand"
					}
				},
				{
					"id": 19356,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 50,\n  offset: 0,\n}).offset"
					}
				},
				{
					"id": 19357,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n20\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 50,\n  offset: 0,\n}).limit"
					}
				},
				{
					"id": 19341,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19342,
							"name": "new AdminGetShippingOptionsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 19343,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 19340,
								"name": "AdminGetShippingOptionsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "extendedFindParamsMixin({\n  limit: 50,\n  offset: 0,\n}).constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 50,\n  offset: 0,\n}).constructor"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19341
					]
				},
				{
					"title": "Properties",
					"children": [
						19344,
						19345,
						19346,
						19347,
						19348,
						19349,
						19350,
						19351,
						19352,
						19353,
						19354,
						19355,
						19356,
						19357
					]
				}
			],
			"extendedTypes": [
				{
					"type": "intersection",
					"types": [
						{
							"type": "reference",
							"target": 20629,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindParams",
							"package": "@medusajs/medusa"
						},
						{
							"type": "reference",
							"target": 20634,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindPaginationParams",
							"package": "@medusajs/medusa"
						}
					]
				}
			]
		},
		{
			"id": 21268,
			"name": "OptionRequirement",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 21269,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21270,
							"name": "new OptionRequirement",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21268,
								"name": "OptionRequirement",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21271,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of an existing requirement. If an ID is passed, the existing requirement's details are updated. Otherwise, a new requirement is created."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21272,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the requirement"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21273,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount to compare with."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21269
					]
				},
				{
					"title": "Properties",
					"children": [
						21271,
						21272,
						21273
					]
				}
			]
		},
		{
			"id": 19358,
			"name": "AdminPostShippingOptionsOptionReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the shipping option."
					}
				]
			},
			"children": [
				{
					"id": 19359,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19360,
							"name": "new AdminPostShippingOptionsOptionReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the shipping option."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 19358,
								"name": "AdminPostShippingOptionsOptionReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19361,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the Shipping Option"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19362,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount to charge for the Shipping Option. If the `price_type` of the shipping option is `calculated`, this amount will not actually be used."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 19363,
					"name": "price_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/shipping-option.ts",
							"qualifiedName": "ShippingOptionPriceType"
						},
						"name": "ShippingOptionPriceType",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 19364,
					"name": "requirements",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The requirements that must be satisfied for the Shipping Option to be available."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 21268,
							"name": "OptionRequirement",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 19365,
					"name": "admin_only",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set to `true`, the shipping option can only be used when creating draft orders."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 19366,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs with additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 19367,
					"name": "includes_tax",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Tax included in prices of shipping option"
							}
						],
						"blockTags": [
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "tax_inclusive_pricing",
										"tag": "@featureFlag"
									}
								]
							},
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "tax_inclusive_pricing",
										"tag": "@featureFlag"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19359
					]
				},
				{
					"title": "Properties",
					"children": [
						19361,
						19362,
						19363,
						19364,
						19365,
						19366,
						19367
					]
				}
			]
		},
		{
			"id": 19377,
			"name": "AdminPostShippingProfilesReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the shipping profile to create."
					}
				]
			},
			"children": [
				{
					"id": 19378,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19379,
							"name": "new AdminPostShippingProfilesReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the shipping profile to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 19377,
								"name": "AdminPostShippingProfilesReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19380,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the Shipping Profile"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19381,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the Shipping Profile"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/shipping-profile.ts",
							"qualifiedName": "ShippingProfileType"
						},
						"name": "ShippingProfileType",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 19382,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs with additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19378
					]
				},
				{
					"title": "Properties",
					"children": [
						19380,
						19381,
						19382
					]
				}
			]
		},
		{
			"id": 19368,
			"name": "defaultAdminShippingProfilesFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/shipping-profile.ts",
							"qualifiedName": "ShippingProfile"
						},
						"name": "ShippingProfile",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 19369,
			"name": "defaultAdminShippingProfilesRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 19370,
			"name": "AdminDeleteShippingProfileRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 20570,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 19371,
			"name": "AdminShippingProfilesRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The shipping profile's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 19372,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 19373,
							"name": "shipping_profile",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Shipping profile details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/shipping-profile.ts",
									"qualifiedName": "ShippingProfile"
								},
								"name": "ShippingProfile",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								19373
							]
						}
					]
				}
			}
		},
		{
			"id": 19374,
			"name": "AdminShippingProfilesListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of shipping profiles."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 19375,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 19376,
							"name": "shipping_profiles",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of shipping profiles details."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../packages/medusa/src/models/shipping-profile.ts",
										"qualifiedName": "ShippingProfile"
									},
									"name": "ShippingProfile",
									"package": "@medusajs/medusa"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								19376
							]
						}
					]
				}
			}
		},
		{
			"id": 19383,
			"name": "AdminPostShippingProfilesProfileReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The detail to update of the shipping profile."
					}
				]
			},
			"children": [
				{
					"id": 19384,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19385,
							"name": "new AdminPostShippingProfilesProfileReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The detail to update of the shipping profile."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 19383,
								"name": "AdminPostShippingProfilesProfileReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19386,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the Shipping Profile"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19387,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs with additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 19388,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the Shipping Profile"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/shipping-profile.ts",
							"qualifiedName": "ShippingProfileType"
						},
						"name": "ShippingProfileType",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 19389,
					"name": "products",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "product IDs to associate with the Shipping Profile"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 19390,
					"name": "shipping_options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Shipping option IDs to associate with the Shipping Profile"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19384
					]
				},
				{
					"title": "Properties",
					"children": [
						19386,
						19387,
						19388,
						19389,
						19390
					]
				}
			]
		},
		{
			"id": 21292,
			"name": "StockLocationAddress",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 21293,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21294,
							"name": "new StockLocationAddress",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21292,
								"name": "StockLocationAddress",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21295,
					"name": "address_1",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Stock location address"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21296,
					"name": "address_2",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Stock location address' complement"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21297,
					"name": "company",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Stock location address' company"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21298,
					"name": "city",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Stock location address' city"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21299,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The two character ISO code for the country."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21300,
					"name": "phone",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Stock location address' phone number"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21301,
					"name": "postal_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Stock location address' postal code"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21302,
					"name": "province",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Stock location address' province"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21293
					]
				},
				{
					"title": "Properties",
					"children": [
						21295,
						21296,
						21297,
						21298,
						21299,
						21300,
						21301,
						21302
					]
				}
			]
		},
		{
			"id": 19400,
			"name": "AdminPostStockLocationsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the stock location to create."
					}
				]
			},
			"children": [
				{
					"id": 19401,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19402,
							"name": "new AdminPostStockLocationsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the stock location to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 19400,
								"name": "AdminPostStockLocationsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19403,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "the name of the stock location"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19404,
					"name": "address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A new stock location address to create and associate with the stock location. Only required if `address_id` is not provided."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 21292,
						"name": "StockLocationAddress",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 19405,
					"name": "address_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "the ID of an existing stock location address to associate with the stock location. Only required if `address` is not provided."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19406,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19401
					]
				},
				{
					"title": "Properties",
					"children": [
						19403,
						19404,
						19405,
						19406
					]
				}
			]
		},
		{
			"id": 19407,
			"name": "AdminPostStockLocationsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 19408,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19409,
							"name": "new AdminPostStockLocationsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 19407,
								"name": "AdminPostStockLocationsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20631,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20630,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 19410,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20632,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 19411,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20633,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19408
					]
				},
				{
					"title": "Properties",
					"children": [
						19410,
						19411
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20629,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 19412,
			"name": "AdminGetStockLocationsLocationParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 19413,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19414,
							"name": "new AdminGetStockLocationsLocationParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 19412,
								"name": "AdminGetStockLocationsLocationParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20631,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20630,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 19415,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20632,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 19416,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20633,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19413
					]
				},
				{
					"title": "Properties",
					"children": [
						19415,
						19416
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20629,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 19391,
			"name": "defaultAdminStockLocationFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": 21274,
						"name": "StockLocationTypes.StockLocationDTO",
						"package": "@medusajs/types",
						"qualifiedName": "StockLocationDTO"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 19392,
			"name": "defaultAdminStockLocationRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "never"
				}
			},
			"defaultValue": "[]"
		},
		{
			"id": 19393,
			"name": "AdminStockLocationsDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 21284,
				"name": "DeleteResponse",
				"package": "@medusajs/types"
			}
		},
		{
			"id": 19394,
			"name": "AdminStockLocationsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The stock location's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 19395,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 19396,
							"name": "stock_location",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Stock location details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21289,
								"name": "StockLocationTypes.StockLocationExpandedDTO",
								"package": "@medusajs/types",
								"qualifiedName": "StockLocationExpandedDTO"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								19396
							]
						}
					]
				}
			}
		},
		{
			"id": 19397,
			"name": "AdminStockLocationsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of stock locations with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 20979,
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 19398,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 19399,
									"name": "stock_locations",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The list of stock locations."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 21289,
											"name": "StockLocationTypes.StockLocationExpandedDTO",
											"package": "@medusajs/types",
											"qualifiedName": "StockLocationExpandedDTO"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										19399
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 19417,
			"name": "AdminGetStockLocationsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved stock locations."
					}
				]
			},
			"children": [
				{
					"id": 19421,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search stock location names."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19422,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter stock locations by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 19423,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Names to filter stock locations by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 19424,
					"name": "address_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter stock locations by the ID of their associated addresses."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 19425,
					"name": "sales_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter stock locations by the ID of their associated sales channels."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 19426,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).order"
					}
				},
				{
					"id": 19427,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).expand"
					}
				},
				{
					"id": 19428,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).fields"
					}
				},
				{
					"id": 19429,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).offset"
					}
				},
				{
					"id": 19430,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n20\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).limit"
					}
				},
				{
					"id": 19418,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19419,
							"name": "new AdminGetStockLocationsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 19420,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 19417,
								"name": "AdminGetStockLocationsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).constructor"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19418
					]
				},
				{
					"title": "Properties",
					"children": [
						19421,
						19422,
						19423,
						19424,
						19425,
						19426,
						19427,
						19428,
						19429,
						19430
					]
				}
			],
			"extendedTypes": [
				{
					"type": "intersection",
					"types": [
						{
							"type": "reference",
							"target": 20629,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindParams",
							"package": "@medusajs/medusa"
						},
						{
							"type": "reference",
							"target": 20634,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindPaginationParams",
							"package": "@medusajs/medusa"
						}
					]
				}
			]
		},
		{
			"id": 21303,
			"name": "StockLocationAddress",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes of a stock location address to create or update."
					}
				]
			},
			"children": [
				{
					"id": 21304,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21305,
							"name": "new StockLocationAddress",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21303,
								"name": "StockLocationAddress",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21306,
					"name": "address_1",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "First line address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21307,
					"name": "address_2",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Second line address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21308,
					"name": "company",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Company."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21309,
					"name": "city",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "City."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21310,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Country code."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21311,
					"name": "phone",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Phone."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21312,
					"name": "postal_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Postal code."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21313,
					"name": "province",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Province."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21304
					]
				},
				{
					"title": "Properties",
					"children": [
						21306,
						21307,
						21308,
						21309,
						21310,
						21311,
						21312,
						21313
					]
				}
			]
		},
		{
			"id": 19431,
			"name": "AdminPostStockLocationsLocationReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the stock location."
					}
				]
			},
			"children": [
				{
					"id": 19432,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19433,
							"name": "new AdminPostStockLocationsLocationReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the stock location."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 19431,
								"name": "AdminPostStockLocationsLocationReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19434,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "the name of the stock location"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19435,
					"name": "address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The data of an associated address to create or update."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 21303,
						"name": "StockLocationAddress",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 19436,
					"name": "address_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "the stock location address ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19437,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19432
					]
				},
				{
					"title": "Properties",
					"children": [
						19434,
						19435,
						19436,
						19437
					]
				}
			]
		},
		{
			"id": 19438,
			"name": "AdminPostStockLocationsLocationParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 19439,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19440,
							"name": "new AdminPostStockLocationsLocationParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 19438,
								"name": "AdminPostStockLocationsLocationParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20631,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20630,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 19441,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20632,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 19442,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20633,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19439
					]
				},
				{
					"title": "Properties",
					"children": [
						19441,
						19442
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20629,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 19443,
			"name": "defaultRelationsExtended",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 19444,
			"name": "AdminExtendedStoresRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The store's details with additional details like payment and tax providers."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 19445,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 19446,
							"name": "store",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Store details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21314,
								"name": "ExtendedStoreDTO",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								19446
							]
						}
					]
				}
			}
		},
		{
			"id": 19447,
			"name": "AdminStoresRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The store's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 19448,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 19449,
							"name": "store",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Store details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/store.ts",
									"qualifiedName": "Store"
								},
								"name": "Store",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								19449
							]
						}
					]
				}
			}
		},
		{
			"id": 19450,
			"name": "AdminTaxProvidersList",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of tax providers in a store."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 19451,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 19452,
							"name": "tax_providers",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of tax providers details."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../packages/medusa/src/models/tax-provider.ts",
										"qualifiedName": "TaxProvider"
									},
									"name": "TaxProvider",
									"package": "@medusajs/medusa"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								19452
							]
						}
					]
				}
			}
		},
		{
			"id": 19453,
			"name": "AdminPaymentProvidersList",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of payment providers in a store."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 19454,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 19455,
							"name": "payment_providers",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of payment providers details."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../packages/medusa/src/models/payment-provider.ts",
										"qualifiedName": "PaymentProvider"
									},
									"name": "PaymentProvider",
									"package": "@medusajs/medusa"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								19455
							]
						}
					]
				}
			}
		},
		{
			"id": 19456,
			"name": "AdminPostStoreReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the store."
					}
				]
			},
			"children": [
				{
					"id": 19457,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19458,
							"name": "new AdminPostStoreReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the store."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 19456,
								"name": "AdminPostStoreReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19459,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the Store"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19460,
					"name": "swap_link_template",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A template for Swap links - use `{{cart_id}}` to insert the Swap Cart ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19461,
					"name": "payment_link_template",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A template for payment links - use `{{cart_id}}` to insert the Cart ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19462,
					"name": "invite_link_template",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A template for invite links - use `{{invite_token}}` to insert the invite token"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19463,
					"name": "default_currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The default currency code of the Store."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19464,
					"name": "currencies",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Array of available currencies in the store. Each currency is in 3 character ISO code format."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 19465,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs with additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19457
					]
				},
				{
					"title": "Properties",
					"children": [
						19459,
						19460,
						19461,
						19462,
						19463,
						19464,
						19465
					]
				}
			]
		},
		{
			"id": 19466,
			"name": "defaultAdminSwapRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 19467,
			"name": "defaultAdminSwapFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 19468,
			"name": "AdminSwapsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of swaps with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 20566,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 19469,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 19470,
									"name": "swaps",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of swaps details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/swap.ts",
												"qualifiedName": "Swap"
											},
											"name": "Swap",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										19470
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 19471,
			"name": "AdminSwapsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The swap's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 19472,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 19473,
							"name": "swap",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Swap details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/swap.ts",
									"qualifiedName": "Swap"
								},
								"name": "Swap",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								19473
							]
						}
					]
				}
			}
		},
		{
			"id": 19474,
			"name": "AdminGetSwapsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how a list of data is paginated."
					}
				]
			},
			"children": [
				{
					"id": 19475,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19476,
							"name": "new AdminGetSwapsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 19474,
								"name": "AdminGetSwapsParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19477,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "50"
				},
				{
					"id": 19478,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19475
					]
				},
				{
					"title": "Properties",
					"children": [
						19477,
						19478
					]
				}
			]
		},
		{
			"id": 19536,
			"name": "AdminPostTaxRatesTaxRateProductTypesReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The product types to add to the tax rate."
					}
				]
			},
			"children": [
				{
					"id": 19537,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19538,
							"name": "new AdminPostTaxRatesTaxRateProductTypesReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The product types to add to the tax rate."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 19536,
								"name": "AdminPostTaxRatesTaxRateProductTypesReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19539,
					"name": "product_types",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the types of products to associate with this tax rate"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19537
					]
				},
				{
					"title": "Properties",
					"children": [
						19539
					]
				}
			]
		},
		{
			"id": 19540,
			"name": "AdminPostTaxRatesTaxRateProductTypesParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 19541,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19542,
							"name": "new AdminPostTaxRatesTaxRateProductTypesParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 19540,
								"name": "AdminPostTaxRatesTaxRateProductTypesParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19543,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 19544,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19541
					]
				},
				{
					"title": "Properties",
					"children": [
						19543,
						19544
					]
				}
			]
		},
		{
			"id": 19545,
			"name": "AdminPostTaxRatesTaxRateProductsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the products to associat with the tax rate."
					}
				]
			},
			"children": [
				{
					"id": 19546,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19547,
							"name": "new AdminPostTaxRatesTaxRateProductsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the products to associat with the tax rate."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 19545,
								"name": "AdminPostTaxRatesTaxRateProductsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19548,
					"name": "products",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the products to associate with this tax rate"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19546
					]
				},
				{
					"title": "Properties",
					"children": [
						19548
					]
				}
			]
		},
		{
			"id": 19549,
			"name": "AdminPostTaxRatesTaxRateProductsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 19550,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19551,
							"name": "new AdminPostTaxRatesTaxRateProductsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 19549,
								"name": "AdminPostTaxRatesTaxRateProductsParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19552,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 19553,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19550
					]
				},
				{
					"title": "Properties",
					"children": [
						19552,
						19553
					]
				}
			]
		},
		{
			"id": 19554,
			"name": "AdminPostTaxRatesTaxRateShippingOptionsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the shipping options to associate with the tax rate."
					}
				]
			},
			"children": [
				{
					"id": 19555,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19556,
							"name": "new AdminPostTaxRatesTaxRateShippingOptionsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the shipping options to associate with the tax rate."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 19554,
								"name": "AdminPostTaxRatesTaxRateShippingOptionsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19557,
					"name": "shipping_options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the shipping options to associate with this tax rate"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19555
					]
				},
				{
					"title": "Properties",
					"children": [
						19557
					]
				}
			]
		},
		{
			"id": 19558,
			"name": "AdminPostTaxRatesTaxRateShippingOptionsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 19559,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19560,
							"name": "new AdminPostTaxRatesTaxRateShippingOptionsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 19558,
								"name": "AdminPostTaxRatesTaxRateShippingOptionsParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19561,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 19562,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19559
					]
				},
				{
					"title": "Properties",
					"children": [
						19561,
						19562
					]
				}
			]
		},
		{
			"id": 19563,
			"name": "AdminPostTaxRatesReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the tax rate to create."
					}
				]
			},
			"children": [
				{
					"id": 19564,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19565,
							"name": "new AdminPostTaxRatesReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the tax rate to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 19563,
								"name": "AdminPostTaxRatesReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19566,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the tax rate."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19567,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the tax rate."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19568,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Region that the tax rate belongs to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19569,
					"name": "rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The numeric rate to charge."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 19570,
					"name": "products",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the products associated with this tax rate."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 19571,
					"name": "shipping_options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the shipping options associated with this tax rate"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 19572,
					"name": "product_types",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the types of products associated with this tax rate"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19564
					]
				},
				{
					"title": "Properties",
					"children": [
						19566,
						19567,
						19568,
						19569,
						19570,
						19571,
						19572
					]
				}
			]
		},
		{
			"id": 19573,
			"name": "AdminPostTaxRatesParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 19574,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19575,
							"name": "new AdminPostTaxRatesParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 19573,
								"name": "AdminPostTaxRatesParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19576,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 19577,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19574
					]
				},
				{
					"title": "Properties",
					"children": [
						19576,
						19577
					]
				}
			]
		},
		{
			"id": 19504,
			"name": "AdminGetTaxRatesTaxRateParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 19505,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19506,
							"name": "new AdminGetTaxRatesTaxRateParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 19504,
								"name": "AdminGetTaxRatesTaxRateParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19507,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 19508,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19505
					]
				},
				{
					"title": "Properties",
					"children": [
						19507,
						19508
					]
				}
			]
		},
		{
			"id": 19479,
			"name": "defaultAdminTaxRatesRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "never"
				}
			},
			"defaultValue": "[]"
		},
		{
			"id": 19480,
			"name": "defaultAdminTaxRatesFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/tax-rate.ts",
							"qualifiedName": "TaxRate"
						},
						"name": "TaxRate",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 19481,
			"name": "AdminTaxRatesDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 20570,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 19482,
			"name": "AdminTaxRatesListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of tax rates with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 20566,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 19483,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 19484,
									"name": "tax_rates",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of tax rate details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/tax-rate.ts",
												"qualifiedName": "TaxRate"
											},
											"name": "TaxRate",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										19484
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 19485,
			"name": "AdminTaxRatesRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The tax rate's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 19486,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 19487,
							"name": "tax_rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Tax rate details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/tax-rate.ts",
									"qualifiedName": "TaxRate"
								},
								"name": "TaxRate",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								19487
							]
						}
					]
				}
			}
		},
		{
			"id": 19488,
			"name": "AdminGetTaxRatesParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved tax rates."
					}
				]
			},
			"children": [
				{
					"id": 19489,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19490,
							"name": "new AdminGetTaxRatesParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 19488,
								"name": "AdminGetTaxRatesParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19491,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter tax rates by the IDs of their associates region."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 19492,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Name to filter tax rates by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19493,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Code to filter tax rates by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19494,
					"name": "rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Number filters to filter tax rates' "
							},
							{
								"kind": "code",
								"text": "`rate`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"target": 20594,
								"name": "NumericalComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 19495,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 19496,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n50\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "50"
				},
				{
					"id": 19497,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 19498,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 19499,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19500,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the tax rates' "
							},
							{
								"kind": "code",
								"text": "`update_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 19501,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the customer tax rates' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 19502,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the tax rates' "
							},
							{
								"kind": "code",
								"text": "`deleted_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 19503,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Term used to search tax rates by name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19489
					]
				},
				{
					"title": "Properties",
					"children": [
						19491,
						19492,
						19493,
						19494,
						19495,
						19496,
						19497,
						19498,
						19499,
						19500,
						19501,
						19502,
						19503
					]
				}
			]
		},
		{
			"id": 19509,
			"name": "AdminDeleteTaxRatesTaxRateProductTypesReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Product types to remove from the tax rates."
					}
				]
			},
			"children": [
				{
					"id": 19510,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19511,
							"name": "new AdminDeleteTaxRatesTaxRateProductTypesReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Product types to remove from the tax rates."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 19509,
								"name": "AdminDeleteTaxRatesTaxRateProductTypesReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19512,
					"name": "product_types",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the product types to remove their association with this tax rate."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19510
					]
				},
				{
					"title": "Properties",
					"children": [
						19512
					]
				}
			]
		},
		{
			"id": 19513,
			"name": "AdminDeleteTaxRatesTaxRateProductTypesParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 19514,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19515,
							"name": "new AdminDeleteTaxRatesTaxRateProductTypesParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 19513,
								"name": "AdminDeleteTaxRatesTaxRateProductTypesParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19516,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 19517,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19514
					]
				},
				{
					"title": "Properties",
					"children": [
						19516,
						19517
					]
				}
			]
		},
		{
			"id": 19518,
			"name": "AdminDeleteTaxRatesTaxRateProductsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the products to remove their associated with the tax rate."
					}
				]
			},
			"children": [
				{
					"id": 19519,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19520,
							"name": "new AdminDeleteTaxRatesTaxRateProductsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the products to remove their associated with the tax rate."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 19518,
								"name": "AdminDeleteTaxRatesTaxRateProductsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19521,
					"name": "products",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the products to remove their association with this tax rate."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19519
					]
				},
				{
					"title": "Properties",
					"children": [
						19521
					]
				}
			]
		},
		{
			"id": 19522,
			"name": "AdminDeleteTaxRatesTaxRateProductsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 19523,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19524,
							"name": "new AdminDeleteTaxRatesTaxRateProductsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 19522,
								"name": "AdminDeleteTaxRatesTaxRateProductsParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19525,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 19526,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19523
					]
				},
				{
					"title": "Properties",
					"children": [
						19525,
						19526
					]
				}
			]
		},
		{
			"id": 19527,
			"name": "AdminDeleteTaxRatesTaxRateShippingOptionsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the shipping options to remove their associate with the tax rate."
					}
				]
			},
			"children": [
				{
					"id": 19528,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19529,
							"name": "new AdminDeleteTaxRatesTaxRateShippingOptionsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the shipping options to remove their associate with the tax rate."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 19527,
								"name": "AdminDeleteTaxRatesTaxRateShippingOptionsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19530,
					"name": "shipping_options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the shipping options to remove their association with this tax rate."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19528
					]
				},
				{
					"title": "Properties",
					"children": [
						19530
					]
				}
			]
		},
		{
			"id": 19531,
			"name": "AdminDeleteTaxRatesTaxRateShippingOptionsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 19532,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19533,
							"name": "new AdminDeleteTaxRatesTaxRateShippingOptionsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 19531,
								"name": "AdminDeleteTaxRatesTaxRateShippingOptionsParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19534,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 19535,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19532
					]
				},
				{
					"title": "Properties",
					"children": [
						19534,
						19535
					]
				}
			]
		},
		{
			"id": 19578,
			"name": "AdminPostTaxRatesTaxRateReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the tax rate."
					}
				]
			},
			"children": [
				{
					"id": 19579,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19580,
							"name": "new AdminPostTaxRatesTaxRateReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the tax rate."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 19578,
								"name": "AdminPostTaxRatesTaxRateReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19581,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the tax rate."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19582,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the tax rate."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19583,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Region that the tax rate belongs to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19584,
					"name": "rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The numeric rate to charge."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 19585,
					"name": "products",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the products associated with this tax rate"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 19586,
					"name": "shipping_options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the shipping options associated with this tax rate"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 19587,
					"name": "product_types",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the types of product types associated with this tax rate"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19579
					]
				},
				{
					"title": "Properties",
					"children": [
						19581,
						19582,
						19583,
						19584,
						19585,
						19586,
						19587
					]
				}
			]
		},
		{
			"id": 19588,
			"name": "AdminPostTaxRatesTaxRateParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 19589,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19590,
							"name": "new AdminPostTaxRatesTaxRateParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 19588,
								"name": "AdminPostTaxRatesTaxRateParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19591,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 19592,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19589
					]
				},
				{
					"title": "Properties",
					"children": [
						19591,
						19592
					]
				}
			]
		},
		{
			"id": 19600,
			"name": "IAdminPostUploadsFileReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 19601,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19602,
							"name": "new IAdminPostUploadsFileReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 19600,
								"name": "IAdminPostUploadsFileReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19603,
					"name": "originalName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19604,
					"name": "path",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19601
					]
				},
				{
					"title": "Properties",
					"children": [
						19603,
						19604
					]
				}
			]
		},
		{
			"id": 19605,
			"name": "AdminDeleteUploadsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the file to delete."
					}
				]
			},
			"children": [
				{
					"id": 19606,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19607,
							"name": "new AdminDeleteUploadsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the file to delete."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 19605,
								"name": "AdminDeleteUploadsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19608,
					"name": "file_key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "key of the file to delete. This is obtained when you first uploaded the file, or by the file service if you used it directly."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19606
					]
				},
				{
					"title": "Properties",
					"children": [
						19608
					]
				}
			]
		},
		{
			"id": 19609,
			"name": "AdminPostUploadsDownloadUrlReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the file to retrieve its download URL."
					}
				]
			},
			"children": [
				{
					"id": 19610,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19611,
							"name": "new AdminPostUploadsDownloadUrlReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the file to retrieve its download URL."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 19609,
								"name": "AdminPostUploadsDownloadUrlReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19612,
					"name": "file_key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "key of the file to obtain the download link for. This is obtained when you first uploaded the file, or by the file service if you used it directly."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19610
					]
				},
				{
					"title": "Properties",
					"children": [
						19612
					]
				}
			]
		},
		{
			"id": 19593,
			"name": "AdminUploadsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of uploaded files."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 19594,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 19595,
							"name": "uploads",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Uploaded files details."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 21320,
									"name": "FileServiceUploadResult",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								19595
							]
						}
					]
				}
			}
		},
		{
			"id": 19596,
			"name": "AdminDeleteUploadsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 20570,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 19597,
			"name": "AdminUploadsDownloadUrlRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The download URL details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 19598,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 19599,
							"name": "download_url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The Download URL of the file"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								19599
							]
						}
					]
				}
			}
		},
		{
			"id": 19639,
			"name": "AdminCreateUserRequest",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 19640,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19641,
							"name": "new AdminCreateUserRequest",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 19639,
								"name": "AdminCreateUserRequest",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19642,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The User's email."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19643,
					"name": "first_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The first name of the User."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19644,
					"name": "last_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The last name of the User."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19645,
					"name": "role",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The role assigned to the user. These roles don't provide any different privileges."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/user.ts",
							"qualifiedName": "UserRoles"
						},
						"name": "UserRoles",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 19646,
					"name": "password",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The User's password."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19640
					]
				},
				{
					"title": "Properties",
					"children": [
						19642,
						19643,
						19644,
						19645,
						19646
					]
				}
			]
		},
		{
			"id": 19613,
			"name": "unauthenticatedUserRoutes",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 19614,
					"name": "unauthenticatedUserRoutes",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 19615,
							"name": "app",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			]
		},
		{
			"id": 19616,
			"name": "defaultAdminUserFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/user.ts",
							"qualifiedName": "User"
						},
						"name": "User",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 19617,
			"name": "AdminUserRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The user's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 19618,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 19619,
							"name": "user",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "User details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/user.ts",
											"qualifiedName": "User"
										},
										"name": "User",
										"package": "@medusajs/medusa"
									},
									{
										"type": "literal",
										"value": "password_hash"
									}
								],
								"name": "Omit",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								19619
							]
						}
					]
				}
			}
		},
		{
			"id": 19620,
			"name": "AdminUsersListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of users."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 20979,
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 19621,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 19622,
									"name": "users",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of users details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Omit"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../packages/medusa/src/models/user.ts",
														"qualifiedName": "User"
													},
													"name": "User",
													"package": "@medusajs/medusa"
												},
												{
													"type": "literal",
													"value": "password_hash"
												}
											],
											"name": "Omit",
											"package": "typescript"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										19622
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 19623,
			"name": "AdminDeleteUserRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 20570,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 19647,
			"name": "AdminGetUsersParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved users."
					}
				]
			},
			"children": [
				{
					"id": 19651,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter users by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 19652,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search terms to search users' first name, last name, and email."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19653,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 50,\n  offset: 0,\n}).order"
					}
				},
				{
					"id": 19654,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the users' "
							},
							{
								"kind": "code",
								"text": "`update_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 19655,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the customer users' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 19656,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the users' "
							},
							{
								"kind": "code",
								"text": "`deleted_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 19657,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter to apply on the users' "
							},
							{
								"kind": "code",
								"text": "`email`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19658,
					"name": "first_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter to apply on the users' "
							},
							{
								"kind": "code",
								"text": "`first_name`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19659,
					"name": "last_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter to apply on the users' "
							},
							{
								"kind": "code",
								"text": "`last_name`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19660,
					"name": "role",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter to apply on the users' "
							},
							{
								"kind": "code",
								"text": "`role`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 21323,
						"name": "UserRole",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 19661,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned users."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 50,\n  offset: 0,\n}).fields"
					}
				},
				{
					"id": 19662,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 50,\n  offset: 0,\n}).expand"
					}
				},
				{
					"id": 19663,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 50,\n  offset: 0,\n}).offset"
					}
				},
				{
					"id": 19664,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n20\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 50,\n  offset: 0,\n}).limit"
					}
				},
				{
					"id": 19648,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19649,
							"name": "new AdminGetUsersParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 19650,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 19647,
								"name": "AdminGetUsersParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "extendedFindParamsMixin({\n  limit: 50,\n  offset: 0,\n}).constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 50,\n  offset: 0,\n}).constructor"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19648
					]
				},
				{
					"title": "Properties",
					"children": [
						19651,
						19652,
						19653,
						19654,
						19655,
						19656,
						19657,
						19658,
						19659,
						19660,
						19661,
						19662,
						19663,
						19664
					]
				}
			],
			"extendedTypes": [
				{
					"type": "intersection",
					"types": [
						{
							"type": "reference",
							"target": 20629,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindParams",
							"package": "@medusajs/medusa"
						},
						{
							"type": "reference",
							"target": 20634,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindPaginationParams",
							"package": "@medusajs/medusa"
						}
					]
				}
			]
		},
		{
			"id": 19635,
			"name": "AdminResetPasswordTokenRequest",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the password reset token request."
					}
				]
			},
			"children": [
				{
					"id": 19636,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19637,
							"name": "new AdminResetPasswordTokenRequest",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the password reset token request."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 19635,
								"name": "AdminResetPasswordTokenRequest",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19638,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The User's email."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19636
					]
				},
				{
					"title": "Properties",
					"children": [
						19638
					]
				}
			]
		},
		{
			"id": 19624,
			"name": "payload",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 19625,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 19626,
							"name": "email",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 19627,
							"name": "user_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 19628,
							"name": "password",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								19626,
								19627,
								19628
							]
						}
					]
				}
			}
		},
		{
			"id": 19629,
			"name": "AdminResetPasswordRequest",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the password reset request."
					}
				]
			},
			"children": [
				{
					"id": 19630,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19631,
							"name": "new AdminResetPasswordRequest",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the password reset request."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 19629,
								"name": "AdminResetPasswordRequest",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19632,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The User's email."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19633,
					"name": "token",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The password-reset token generated when the password reset was requested."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19634,
					"name": "password",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The User's new password."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19630
					]
				},
				{
					"title": "Properties",
					"children": [
						19632,
						19633,
						19634
					]
				}
			]
		},
		{
			"id": 19665,
			"name": "AdminUpdateUserRequest",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 19666,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19667,
							"name": "new AdminUpdateUserRequest",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 19665,
								"name": "AdminUpdateUserRequest",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19668,
					"name": "first_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The first name of the User."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19669,
					"name": "last_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The last name of the User."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19670,
					"name": "role",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The role assigned to the user. These roles don't provide any different privileges."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/user.ts",
							"qualifiedName": "UserRoles"
						},
						"name": "UserRoles",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 19671,
					"name": "api_token",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The API token of the User."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19672,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs with additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19666
					]
				},
				{
					"title": "Properties",
					"children": [
						19668,
						19669,
						19670,
						19671,
						19672
					]
				}
			]
		},
		{
			"id": 19704,
			"name": "LevelWithAvailability",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 20967,
						"name": "InventoryLevelDTO",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 19705,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 19706,
									"name": "available_quantity",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										19706
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 19707,
			"name": "ResponseInventoryItem",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Partial"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 20947,
								"name": "InventoryItemDTO",
								"package": "@medusajs/types"
							}
						],
						"name": "Partial",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 19708,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 19709,
									"name": "location_levels",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The inventory's location levels."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 19704,
											"name": "LevelWithAvailability",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										19709
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 19710,
			"name": "VariantInventory",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 19711,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 19712,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the ID of the variant"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 19713,
							"name": "inventory",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The inventory details."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 19707,
									"name": "ResponseInventoryItem",
									"package": "@medusajs/medusa"
								}
							}
						},
						{
							"id": 19714,
							"name": "sales_channel_availability",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Details about the variant's inventory availability in sales channels."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 19715,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 19716,
												"name": "channel_name",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"comment": {
													"summary": [
														{
															"kind": "text",
															"text": "Sales channel's name"
														}
													]
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 19717,
												"name": "channel_id",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"comment": {
													"summary": [
														{
															"kind": "text",
															"text": "Sales channel's ID"
														}
													]
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 19718,
												"name": "available_quantity",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"comment": {
													"summary": [
														{
															"kind": "text",
															"text": "Available quantity in the sales channel"
														}
													]
												},
												"type": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													19716,
													19717,
													19718
												]
											}
										]
									}
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								19712,
								19713,
								19714
							]
						}
					]
				}
			}
		},
		{
			"id": 19719,
			"name": "AdminGetVariantsVariantInventoryRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The variant's inventory details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 19720,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 19721,
							"name": "variant",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The product variant's inventory details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 19710,
								"name": "VariantInventory",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								19721
							]
						}
					]
				}
			}
		},
		{
			"id": 19699,
			"name": "AdminGetVariantParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 19700,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19701,
							"name": "new AdminGetVariantParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 19699,
								"name": "AdminGetVariantParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20631,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20630,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 19702,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20632,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 19703,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20633,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19700
					]
				},
				{
					"title": "Properties",
					"children": [
						19702,
						19703
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20629,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 19673,
			"name": "defaultAdminVariantRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 19674,
			"name": "defaultAdminVariantFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/product-variant.ts",
							"qualifiedName": "ProductVariant"
						},
						"name": "ProductVariant",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 19675,
			"name": "AdminVariantsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of variants with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 20566,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 19676,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 19677,
									"name": "variants",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of product variant details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 21327,
											"name": "PricedVariant",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										19677
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 19678,
			"name": "AdminVariantsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The product variant's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 19679,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 19680,
							"name": "variant",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Product variant's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21327,
								"name": "PricedVariant",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								19680
							]
						}
					]
				}
			}
		},
		{
			"id": 19681,
			"name": "AdminGetVariantsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved product variants."
					}
				]
			},
			"children": [
				{
					"id": 19682,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19683,
							"name": "new AdminGetVariantsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 19681,
								"name": "AdminGetVariantsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 21330,
								"name": "AdminPriceSelectionParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 21329,
						"name": "AdminPriceSelectionParams.constructor"
					}
				},
				{
					"id": 19684,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search product variants' IDs."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19685,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n20\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20"
				},
				{
					"id": 19686,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 19687,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": 21335,
						"name": "AdminPriceSelectionParams.expand"
					}
				},
				{
					"id": 19688,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": 21336,
						"name": "AdminPriceSelectionParams.fields"
					}
				},
				{
					"id": 19689,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter product variants by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 19690,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Titles to filter product variants by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 19691,
					"name": "inventory_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Number filters to apply on product variants' "
							},
							{
								"kind": "code",
								"text": "`inventory_quantity`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"target": 20594,
								"name": "NumericalComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 19692,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19693,
					"name": "manage_inventory",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter product variants by whether their inventory is managed or not."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 19694,
					"name": "allow_backorder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter product variants by whether they are allowed to be backordered or not."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 19696,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a cart ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21332,
						"name": "AdminPriceSelectionParams.cart_id"
					}
				},
				{
					"id": 19697,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a region ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21333,
						"name": "AdminPriceSelectionParams.region_id"
					}
				},
				{
					"id": 19698,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a currency code."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21334,
						"name": "AdminPriceSelectionParams.currency_code"
					}
				},
				{
					"id": 19695,
					"name": "customer_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a customer ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21331,
						"name": "AdminPriceSelectionParams.customer_id"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19682
					]
				},
				{
					"title": "Properties",
					"children": [
						19684,
						19685,
						19686,
						19687,
						19688,
						19689,
						19690,
						19691,
						19692,
						19693,
						19694,
						19696,
						19697,
						19698,
						19695
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 21328,
					"name": "AdminPriceSelectionParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 19722,
			"name": "defaultAdminWorkflowExecutionsRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "never"
				}
			},
			"defaultValue": "[]"
		},
		{
			"id": 19723,
			"name": "allowedAdminWorkflowExecutionsRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "never"
				}
			},
			"defaultValue": "[]"
		},
		{
			"id": 19724,
			"name": "defaultAdminWorkflowExecutionsFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 19725,
			"name": "defaultAdminWorkflowExecutionDetailFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 19726,
			"name": "AdminGetWorkflowExecutionDetailsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 19727,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19728,
							"name": "new AdminGetWorkflowExecutionDetailsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 19726,
								"name": "AdminGetWorkflowExecutionDetailsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20631,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20630,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 19729,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20632,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 19730,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20633,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19727
					]
				},
				{
					"title": "Properties",
					"children": [
						19729,
						19730
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20629,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 19731,
			"name": "AdminGetWorkflowExecutionsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 19735,
					"name": "transaction_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "transaction id(s) to filter workflow executions by transaction_id."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 19736,
					"name": "workflow_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "workflow id(s) to filter workflow executions by workflow_id"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 19737,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).expand"
					}
				},
				{
					"id": 19738,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).fields"
					}
				},
				{
					"id": 19739,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).offset"
					}
				},
				{
					"id": 19740,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n20\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).limit"
					}
				},
				{
					"id": 19741,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).order"
					}
				},
				{
					"id": 19732,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19733,
							"name": "new AdminGetWorkflowExecutionsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 19734,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 19731,
								"name": "AdminGetWorkflowExecutionsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).constructor"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19732
					]
				},
				{
					"title": "Properties",
					"children": [
						19735,
						19736,
						19737,
						19738,
						19739,
						19740,
						19741
					]
				}
			],
			"extendedTypes": [
				{
					"type": "intersection",
					"types": [
						{
							"type": "reference",
							"target": 20629,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindParams",
							"package": "@medusajs/medusa"
						},
						{
							"type": "reference",
							"target": 20634,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindPaginationParams",
							"package": "@medusajs/medusa"
						}
					]
				}
			]
		},
		{
			"id": 19742,
			"name": "AdminPostWorkflowsRunReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 19743,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19744,
							"name": "new AdminPostWorkflowsRunReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 19742,
								"name": "AdminPostWorkflowsRunReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19745,
					"name": "input",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "unknown"
					}
				},
				{
					"id": 19746,
					"name": "transaction_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19743
					]
				},
				{
					"title": "Properties",
					"children": [
						19745,
						19746
					]
				}
			]
		},
		{
			"id": 19747,
			"name": "AdminPostWorkflowsAsyncResponseReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 19748,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19749,
							"name": "new AdminPostWorkflowsAsyncResponseReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 19747,
								"name": "AdminPostWorkflowsAsyncResponseReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19750,
					"name": "transaction_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19751,
					"name": "step_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19752,
					"name": "response",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "unknown"
					}
				},
				{
					"id": 19753,
					"name": "compensate_input",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "unknown"
					}
				},
				{
					"id": 19754,
					"name": "action",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 21337,
						"name": "TransactionHandlerType",
						"package": "@medusajs/utils"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19748
					]
				},
				{
					"title": "Properties",
					"children": [
						19750,
						19751,
						19752,
						19753,
						19754
					]
				}
			]
		},
		{
			"id": 19764,
			"name": "StorePostAuthReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 19765,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19766,
							"name": "new StorePostAuthReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 19764,
								"name": "StorePostAuthReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19767,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Customer's email."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19768,
					"name": "password",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Customer's password."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19765
					]
				},
				{
					"title": "Properties",
					"children": [
						19767,
						19768
					]
				}
			]
		},
		{
			"id": 19755,
			"name": "StoreAuthRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The customer's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 19756,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 19757,
							"name": "customer",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Customer's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/customer.ts",
									"qualifiedName": "Customer"
								},
								"name": "Customer",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								19757
							]
						}
					]
				}
			}
		},
		{
			"id": 19758,
			"name": "StoreBearerAuthRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The access token details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 19759,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 19760,
							"name": "access_token",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Access token that can be used to send authenticated requests."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								19760
							]
						}
					]
				}
			}
		},
		{
			"id": 19761,
			"name": "StoreGetAuthEmailRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Details on whether the email exists."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 19762,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 19763,
							"name": "exists",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether email exists or not."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								19763
							]
						}
					]
				}
			}
		},
		{
			"id": 19784,
			"name": "StorePostCartsCartShippingMethodReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the shipping method to add to the cart."
					}
				]
			},
			"children": [
				{
					"id": 19785,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19786,
							"name": "new StorePostCartsCartShippingMethodReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the shipping method to add to the cart."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 19784,
								"name": "StorePostCartsCartShippingMethodReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19787,
					"name": "option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ID of the shipping option to create the method from."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19788,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Used to hold any data that the shipping method may need to process the fulfillment of the order. This depends on the fulfillment provider you're using."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"defaultValue": "{}"
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19785
					]
				},
				{
					"title": "Properties",
					"children": [
						19787,
						19788
					]
				}
			]
		},
		{
			"id": 19789,
			"name": "Item",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 19790,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19791,
							"name": "new Item",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 19789,
								"name": "Item",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19792,
					"name": "variant_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19793,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity to add into the cart."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19790
					]
				},
				{
					"title": "Properties",
					"children": [
						19792,
						19793
					]
				}
			]
		},
		{
			"id": 19794,
			"name": "StorePostCartReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the cart to be created."
					}
				]
			},
			"children": [
				{
					"id": 19795,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19796,
							"name": "new StorePostCartReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the cart to be created."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 19794,
								"name": "StorePostCartReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19797,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Region to create the Cart in. Setting the cart's region can affect the pricing of the items in the cart as well as the used currency. If this parameter is not provided, the first region in the store is used by default."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19798,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The two character ISO country code to create the Cart in. Setting this parameter will set the country code of the shipping address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19799,
					"name": "items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of product variants to generate line items from."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 19789,
							"name": "Item",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 19800,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object to provide context to the Cart. The `context` field is automatically populated with `ip` and `user_agent`"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 19801,
					"name": "sales_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Sales channel to create the Cart in. The cart's sales channel affects which products can be added to the cart. If a product does not exist in the cart's sales channel, it cannot be added to the cart. If you add a publishable API key in the header of this request and specify a sales channel ID, the specified sales channel must be within the scope of the publishable API key's resources. If you add a publishable API key in the header of this request, you don't specify a sales channel ID, and the publishable API key is associated with one sales channel, that sales channel will be attached to the cart. If no sales channel is passed and no publishable API key header is passed or the publishable API key isn't associated with any sales channel, the cart will not be associated with any sales channel."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19795
					]
				},
				{
					"title": "Properties",
					"children": [
						19797,
						19798,
						19799,
						19800,
						19801
					]
				}
			]
		},
		{
			"id": 19802,
			"name": "StorePostCartsCartLineItemsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the line item to create."
					}
				]
			},
			"children": [
				{
					"id": 19803,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19804,
							"name": "new StorePostCartsCartLineItemsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the line item to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 19802,
								"name": "StorePostCartsCartLineItemsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19805,
					"name": "variant_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The id of the Product Variant to generate the Line Item from."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19806,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity of the Product Variant to add to the Line Item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 19807,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details about the Line Item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19803
					]
				},
				{
					"title": "Properties",
					"children": [
						19805,
						19806,
						19807
					]
				}
			]
		},
		{
			"id": 19769,
			"name": "defaultStoreCartFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
							"qualifiedName": "Cart"
						},
						"name": "Cart",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "[]"
		},
		{
			"id": 19770,
			"name": "defaultStoreCartRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 19771,
			"name": "StoreCartsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The cart's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 19772,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 19773,
							"name": "cart",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Cart details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
											"qualifiedName": "Cart"
										},
										"name": "Cart",
										"package": "@medusajs/medusa"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "refundable_amount"
											},
											{
												"type": "literal",
												"value": "refunded_total"
											}
										]
									}
								],
								"name": "Omit",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								19773
							]
						}
					]
				}
			}
		},
		{
			"id": 19774,
			"name": "StoreCompleteCartRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "If the cart is completed successfully, this will have the created order or the swap's details, based on the cart's type. Otherwise, it'll be the cart's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 19775,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 19776,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "cart"
									}
								},
								{
									"id": 19777,
									"name": "data",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A cart represents a virtual shopping bag. It can be used to complete an order, a swap, or a claim."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
											"qualifiedName": "Cart"
										},
										"name": "Cart",
										"package": "@medusajs/medusa"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										19776,
										19777
									]
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 19778,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 19779,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "order"
									}
								},
								{
									"id": 19780,
									"name": "data",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An order is a purchase made by a customer. It holds details about payment and fulfillment of the order. An order may also be created from a draft order, which is created by an admin user."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/order.ts",
											"qualifiedName": "Order"
										},
										"name": "Order",
										"package": "@medusajs/medusa"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										19779,
										19780
									]
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 19781,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 19782,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "swap"
									}
								},
								{
									"id": 19783,
									"name": "data",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A swap can be created when a Customer wishes to exchange Products that they have purchased with different Products. It consists of a Return of previously purchased Products and a Fulfillment of new Products. It also includes information on any additional payment or refund required based on the difference between the exchanged products."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/swap.ts",
											"qualifiedName": "Swap"
										},
										"name": "Swap",
										"package": "@medusajs/medusa"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										19782,
										19783
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 19808,
			"name": "StorePostCartsCartPaymentSessionReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the payment session to set."
					}
				]
			},
			"children": [
				{
					"id": 19809,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19810,
							"name": "new StorePostCartsCartPaymentSessionReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the payment session to set."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 19808,
								"name": "StorePostCartsCartPaymentSessionReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19811,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Payment Provider."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19809
					]
				},
				{
					"title": "Properties",
					"children": [
						19811
					]
				}
			]
		},
		{
			"id": 21340,
			"name": "GiftCard",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Gift Cards are redeemable and represent a value that can be used towards the payment of an Order."
					}
				]
			},
			"children": [
				{
					"id": 21341,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21342,
							"name": "new GiftCard",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Gift Cards are redeemable and represent a value that can be used towards the payment of an Order."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21340,
								"name": "GiftCard",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21343,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of a gift card."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21341
					]
				},
				{
					"title": "Properties",
					"children": [
						21343
					]
				}
			]
		},
		{
			"id": 21344,
			"name": "Discount",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A discount can be applied to a cart for promotional purposes."
					}
				]
			},
			"children": [
				{
					"id": 21345,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21346,
							"name": "new Discount",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A discount can be applied to a cart for promotional purposes."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21344,
								"name": "Discount",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21347,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the discount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21345
					]
				},
				{
					"title": "Properties",
					"children": [
						21347
					]
				}
			]
		},
		{
			"id": 19812,
			"name": "StorePostCartsCartReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the cart."
					}
				]
			},
			"children": [
				{
					"id": 19813,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19814,
							"name": "new StorePostCartsCartReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the cart."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 19812,
								"name": "StorePostCartsCartReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19815,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Region to create the Cart in. Setting the cart's region can affect the pricing of the items in the cart as well as the used currency."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19816,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The 2 character ISO country code to create the Cart in. Setting this parameter will set the country code of the shipping address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19817,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An email to be used on the Cart."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19818,
					"name": "billing_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Address to be used for billing purposes."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 20601,
								"name": "AddressPayload",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 19819,
					"name": "shipping_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Address to be used for shipping purposes."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 20601,
								"name": "AddressPayload",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 19820,
					"name": "gift_cards",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of Gift Card codes to add to the Cart."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 21340,
							"name": "GiftCard",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 19821,
					"name": "discounts",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of Discount codes to add to the Cart."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 21344,
							"name": "Discount",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 19822,
					"name": "customer_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Customer to associate the Cart with."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19823,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object to provide context to the Cart. The `context` field is automatically populated with `ip` and `user_agent`"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 19824,
					"name": "sales_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Sales channel to create the Cart in. The cart's sales channel affects which products can be added to the cart. If a product does not exist in the cart's sales channel, it cannot be added to the cart. If you add a publishable API key in the header of this request and specify a sales channel ID, the specified sales channel must be within the scope of the publishable API key's resources."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19813
					]
				},
				{
					"title": "Properties",
					"children": [
						19815,
						19816,
						19817,
						19818,
						19819,
						19820,
						19821,
						19822,
						19823,
						19824
					]
				}
			]
		},
		{
			"id": 19825,
			"name": "StorePostCartsCartLineItemsItemReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the line item."
					}
				]
			},
			"children": [
				{
					"id": 19826,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19827,
							"name": "new StorePostCartsCartLineItemsItemReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the line item."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 19825,
								"name": "StorePostCartsCartLineItemsItemReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19828,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity of the line item in the cart."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 19829,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details about the Line Item. If omitted, the metadata will remain unchanged.\""
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19826
					]
				},
				{
					"title": "Properties",
					"children": [
						19828,
						19829
					]
				}
			]
		},
		{
			"id": 19830,
			"name": "StorePostCartsCartPaymentSessionUpdateReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 19831,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19832,
							"name": "new StorePostCartsCartPaymentSessionUpdateReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 19830,
								"name": "StorePostCartsCartPaymentSessionUpdateReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19833,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The data to update the payment session with."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19831
					]
				},
				{
					"title": "Properties",
					"children": [
						19833
					]
				}
			]
		},
		{
			"id": 19834,
			"name": "defaultStoreCollectionRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "never"
				}
			},
			"defaultValue": "[]"
		},
		{
			"id": 19835,
			"name": "allowedFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 19836,
			"name": "StoreCollectionsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of product collections with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 20566,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 19837,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 19838,
									"name": "collections",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of product collections details"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/product-collection.ts",
												"qualifiedName": "ProductCollection"
											},
											"name": "ProductCollection",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										19838
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 19839,
			"name": "StoreCollectionsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the product collection."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 19840,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 19841,
							"name": "collection",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Product collection details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/product-collection.ts",
									"qualifiedName": "ProductCollection"
								},
								"name": "ProductCollection",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								19841
							]
						}
					]
				}
			}
		},
		{
			"id": 19842,
			"name": "StoreGetCollectionsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved product collections."
					}
				]
			},
			"children": [
				{
					"id": 19843,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19844,
							"name": "new StoreGetCollectionsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 19842,
								"name": "StoreGetCollectionsParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19845,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Handles to filter product collections by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 19846,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n10\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "10"
				},
				{
					"id": 19847,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 19848,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the product collections' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 19849,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the product collections' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19843
					]
				},
				{
					"title": "Properties",
					"children": [
						19845,
						19846,
						19847,
						19848,
						19849
					]
				}
			]
		},
		{
			"id": 19869,
			"name": "StorePostCustomersCustomerAddressesReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 19870,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19871,
							"name": "new StorePostCustomersCustomerAddressesReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 19869,
								"name": "StorePostCustomersCustomerAddressesReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19872,
					"name": "address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Address to add to the Customer's saved addresses."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20615,
						"name": "AddressCreatePayload",
						"package": "@medusajs/medusa"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19870
					]
				},
				{
					"title": "Properties",
					"children": [
						19872
					]
				}
			]
		},
		{
			"id": 19873,
			"name": "StorePostCustomersReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the customer to create."
					}
				]
			},
			"children": [
				{
					"id": 19874,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19875,
							"name": "new StorePostCustomersReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the customer to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 19873,
								"name": "StorePostCustomersReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19876,
					"name": "first_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's first name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19877,
					"name": "last_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's last name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19878,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's email."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19879,
					"name": "password",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's password."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19880,
					"name": "phone",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's phone number."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19874
					]
				},
				{
					"title": "Properties",
					"children": [
						19876,
						19877,
						19878,
						19879,
						19880
					]
				}
			]
		},
		{
			"id": 19850,
			"name": "defaultStoreCustomersRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 19851,
			"name": "defaultStoreCustomersFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/customer.ts",
							"qualifiedName": "Customer"
						},
						"name": "Customer",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 19852,
			"name": "allowedStoreCustomersRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 19853,
			"name": "allowedStoreCustomersFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 19854,
			"name": "StoreCustomersRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The customer's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 19855,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 19856,
							"name": "customer",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Customer details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/customer.ts",
											"qualifiedName": "Customer"
										},
										"name": "Customer",
										"package": "@medusajs/medusa"
									},
									{
										"type": "literal",
										"value": "password_hash"
									}
								],
								"name": "Omit",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								19856
							]
						}
					]
				}
			}
		},
		{
			"id": 19857,
			"name": "StoreCustomersResetPasswordRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 19858,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 19859,
							"name": "customer",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Customer details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/customer.ts",
											"qualifiedName": "Customer"
										},
										"name": "Customer",
										"package": "@medusajs/medusa"
									},
									{
										"type": "literal",
										"value": "password_hash"
									}
								],
								"name": "Omit",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								19859
							]
						}
					]
				}
			}
		},
		{
			"id": 19860,
			"name": "StoreCustomersListOrdersRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of the customer's orders with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 20566,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 19861,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 19862,
									"name": "orders",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of orders details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/order.ts",
												"qualifiedName": "Order"
											},
											"name": "Order",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										19862
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 19863,
			"name": "StoreCustomersListPaymentMethodsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The payment method's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 19864,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 19865,
							"name": "payment_methods",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the saved payment methods."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 19866,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 19867,
												"name": "provider_id",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"comment": {
													"summary": [
														{
															"kind": "text",
															"text": "The ID of the Payment Provider where the payment method is saved."
														}
													]
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 19868,
												"name": "data",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"comment": {
													"summary": [
														{
															"kind": "text",
															"text": "The data needed for the Payment Provider to use the saved payment method."
														}
													]
												},
												"type": {
													"type": "intrinsic",
													"name": "object"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													19867,
													19868
												]
											}
										]
									}
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								19865
							]
						}
					]
				}
			}
		},
		{
			"id": 19881,
			"name": "StoreGetCustomersCustomerOrdersPaginationParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how a list of data is paginated."
					}
				]
			},
			"children": [
				{
					"id": 19882,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19883,
							"name": "new StoreGetCustomersCustomerOrdersPaginationParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 19881,
								"name": "StoreGetCustomersCustomerOrdersPaginationParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19884,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n10\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "10"
				},
				{
					"id": 19885,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 19886,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19887,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19882
					]
				},
				{
					"title": "Properties",
					"children": [
						19884,
						19885,
						19886,
						19887
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 19888,
					"name": "StoreGetCustomersCustomerOrdersParams"
				}
			]
		},
		{
			"id": 19888,
			"name": "StoreGetCustomersCustomerOrdersParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved orders."
					}
				]
			},
			"children": [
				{
					"id": 19889,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19890,
							"name": "new StoreGetCustomersCustomerOrdersParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 19888,
								"name": "StoreGetCustomersCustomerOrdersParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 19883,
								"name": "StoreGetCustomersCustomerOrdersPaginationParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 19882,
						"name": "StoreGetCustomersCustomerOrdersPaginationParams.constructor"
					}
				},
				{
					"id": 19905,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n10\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "10",
					"inheritedFrom": {
						"type": "reference",
						"target": 19884,
						"name": "StoreGetCustomersCustomerOrdersPaginationParams.limit"
					}
				},
				{
					"id": 19906,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": 19885,
						"name": "StoreGetCustomersCustomerOrdersPaginationParams.offset"
					}
				},
				{
					"id": 19907,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 19886,
						"name": "StoreGetCustomersCustomerOrdersPaginationParams.fields"
					}
				},
				{
					"id": 19908,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 19887,
						"name": "StoreGetCustomersCustomerOrdersPaginationParams.expand"
					}
				},
				{
					"id": 19891,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ID to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19892,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search orders' display ID, email, shipping address's first name, customer's first name, customer's last name, and customer's phone number."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19893,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Statuses to filter orders by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../packages/medusa/src/models/order.ts",
								"qualifiedName": "OrderStatus"
							},
							"name": "OrderStatus",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 19894,
					"name": "fulfillment_status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Fulfillment statuses to filter orders by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../packages/medusa/src/models/order.ts",
								"qualifiedName": "FulfillmentStatus"
							},
							"name": "FulfillmentStatus",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 19895,
					"name": "payment_status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Payment statuses to filter orders by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../packages/medusa/src/models/order.ts",
								"qualifiedName": "PaymentStatus"
							},
							"name": "PaymentStatus",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 19896,
					"name": "display_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Display ID to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19897,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Cart ID to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19898,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Email to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19899,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Region ID to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19900,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Currency code to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19901,
					"name": "tax_rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Tax rate to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19902,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the orders' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 19903,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the orders' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 19904,
					"name": "canceled_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the orders' "
							},
							{
								"kind": "code",
								"text": "`canceled_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19889
					]
				},
				{
					"title": "Properties",
					"children": [
						19905,
						19906,
						19907,
						19908,
						19891,
						19892,
						19893,
						19894,
						19895,
						19896,
						19897,
						19898,
						19899,
						19900,
						19901,
						19902,
						19903,
						19904
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 19881,
					"name": "StoreGetCustomersCustomerOrdersPaginationParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 19915,
			"name": "StorePostCustomersCustomerPasswordTokenReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 19916,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19917,
							"name": "new StorePostCustomersCustomerPasswordTokenReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 19915,
								"name": "StorePostCustomersCustomerPasswordTokenReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19918,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's email."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19916
					]
				},
				{
					"title": "Properties",
					"children": [
						19918
					]
				}
			]
		},
		{
			"id": 19909,
			"name": "StorePostCustomersResetPasswordReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 19910,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19911,
							"name": "new StorePostCustomersResetPasswordReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 19909,
								"name": "StorePostCustomersResetPasswordReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19912,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's email."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19913,
					"name": "token",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The reset password token"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19914,
					"name": "password",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's password."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19910
					]
				},
				{
					"title": "Properties",
					"children": [
						19912,
						19913,
						19914
					]
				}
			]
		},
		{
			"id": 19919,
			"name": "StorePostCustomersCustomerAddressesAddressReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 19920,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19921,
							"name": "new StorePostCustomersCustomerAddressesAddressReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 19919,
								"name": "StorePostCustomersCustomerAddressesAddressReq",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20603,
								"name": "AddressPayload.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20602,
						"name": "AddressPayload.constructor"
					}
				},
				{
					"id": 19922,
					"name": "first_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "First name"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20604,
						"name": "AddressPayload.first_name"
					}
				},
				{
					"id": 19923,
					"name": "last_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Last name"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20605,
						"name": "AddressPayload.last_name"
					}
				},
				{
					"id": 19924,
					"name": "phone",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Phone Number"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20606,
						"name": "AddressPayload.phone"
					}
				},
				{
					"id": 19925,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20607,
						"name": "AddressPayload.metadata"
					}
				},
				{
					"id": 19926,
					"name": "company",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Company"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20608,
						"name": "AddressPayload.company"
					}
				},
				{
					"id": 19927,
					"name": "address_1",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Address line 1"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20609,
						"name": "AddressPayload.address_1"
					}
				},
				{
					"id": 19928,
					"name": "address_2",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Address line 2"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20610,
						"name": "AddressPayload.address_2"
					}
				},
				{
					"id": 19929,
					"name": "city",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "City"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20611,
						"name": "AddressPayload.city"
					}
				},
				{
					"id": 19930,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The 2 character ISO code of the country in lower case"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20612,
						"name": "AddressPayload.country_code"
					}
				},
				{
					"id": 19931,
					"name": "province",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Province"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20613,
						"name": "AddressPayload.province"
					}
				},
				{
					"id": 19932,
					"name": "postal_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Postal Code"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20614,
						"name": "AddressPayload.postal_code"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19920
					]
				},
				{
					"title": "Properties",
					"children": [
						19922,
						19923,
						19924,
						19925,
						19926,
						19927,
						19928,
						19929,
						19930,
						19931,
						19932
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20601,
					"name": "AddressPayload",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 19933,
			"name": "StorePostCustomersCustomerReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the customer."
					}
				]
			},
			"children": [
				{
					"id": 19934,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19935,
							"name": "new StorePostCustomersCustomerReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the customer."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 19933,
								"name": "StorePostCustomersCustomerReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19936,
					"name": "billing_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The address to be used for billing purposes."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 20601,
								"name": "AddressPayload",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 19937,
					"name": "first_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's first name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19938,
					"name": "last_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's last name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19939,
					"name": "password",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's password."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19940,
					"name": "phone",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's phone number."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19941,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's email."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19942,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Additional custom data about the customer."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19934
					]
				},
				{
					"title": "Properties",
					"children": [
						19936,
						19937,
						19938,
						19939,
						19940,
						19941,
						19942
					]
				}
			]
		},
		{
			"id": 19943,
			"name": "defaultStoreGiftCardRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 19944,
			"name": "defaultStoreGiftCardFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/gift-card.ts",
							"qualifiedName": "GiftCard"
						},
						"name": "GiftCard",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 19945,
			"name": "allowedStoreGiftCardRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 19946,
			"name": "allowedStoreGiftCardFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 19947,
			"name": "StoreGiftCardsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The gift card's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 19948,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 19949,
							"name": "gift_card",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Gift card details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/gift-card.ts",
									"qualifiedName": "GiftCard"
								},
								"name": "GiftCard",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								19949
							]
						}
					]
				}
			}
		},
		{
			"id": 19953,
			"name": "StorePostOrderEditsOrderEditDecline",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the order edit's decline."
					}
				]
			},
			"children": [
				{
					"id": 19954,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19955,
							"name": "new StorePostOrderEditsOrderEditDecline",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the order edit's decline."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 19953,
								"name": "StorePostOrderEditsOrderEditDecline",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19956,
					"name": "declined_reason",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The reason for declining the Order Edit."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19954
					]
				},
				{
					"title": "Properties",
					"children": [
						19956
					]
				}
			]
		},
		{
			"id": 19950,
			"name": "StoreOrderEditsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The order edit's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 19951,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 19952,
							"name": "order_edit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Order edit details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/order-edit.ts",
											"qualifiedName": "OrderEdit"
										},
										"name": "OrderEdit",
										"package": "@medusajs/medusa"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "internal_note"
											},
											{
												"type": "literal",
												"value": "created_by"
											},
											{
												"type": "literal",
												"value": "confirmed_by"
											},
											{
												"type": "literal",
												"value": "canceled_by"
											}
										]
									}
								],
								"name": "Omit",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								19952
							]
						}
					]
				}
			}
		},
		{
			"id": 19964,
			"name": "StorePostCustomersCustomerAcceptClaimReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details necessary to grant order access."
					}
				]
			},
			"children": [
				{
					"id": 19965,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19966,
							"name": "new StorePostCustomersCustomerAcceptClaimReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details necessary to grant order access."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 19964,
								"name": "StorePostCustomersCustomerAcceptClaimReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19967,
					"name": "token",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The claim token generated by previous request to the Claim Order API Route."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19965
					]
				},
				{
					"title": "Properties",
					"children": [
						19967
					]
				}
			]
		},
		{
			"id": 19957,
			"name": "defaultStoreOrdersRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 19958,
			"name": "allowedStoreOrdersRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 19959,
			"name": "defaultStoreOrdersFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/order.ts",
							"qualifiedName": "Order"
						},
						"name": "Order",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 19960,
			"name": "allowedStoreOrdersFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 19961,
			"name": "StoreOrdersRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The order's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 19962,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 19963,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Order details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/order.ts",
									"qualifiedName": "Order"
								},
								"name": "Order",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								19963
							]
						}
					]
				}
			}
		},
		{
			"id": 19968,
			"name": "ShippingAddressPayload",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply on the order's shipping address."
					}
				]
			},
			"children": [
				{
					"id": 19969,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19970,
							"name": "new ShippingAddressPayload",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 19968,
								"name": "ShippingAddressPayload",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19971,
					"name": "postal_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Postal code."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19969
					]
				},
				{
					"title": "Properties",
					"children": [
						19971
					]
				}
			]
		},
		{
			"id": 19972,
			"name": "StoreGetOrdersParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to narrow down the looked-up order, with configurations applied on the retrieved order."
					}
				]
			},
			"children": [
				{
					"id": 19973,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19974,
							"name": "new StoreGetOrdersParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 19972,
								"name": "StoreGetOrdersParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20631,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20630,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 19975,
					"name": "display_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Display ID of the order."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 19976,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Email of the order."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 19977,
					"name": "shipping_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the retrieved order by its shipping address details."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 19968,
						"name": "ShippingAddressPayload",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 19978,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20632,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 19979,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20633,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19973
					]
				},
				{
					"title": "Properties",
					"children": [
						19975,
						19976,
						19977,
						19978,
						19979
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20629,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 19980,
			"name": "StorePostCustomersCustomerOrderClaimReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the orders to claim."
					}
				]
			},
			"children": [
				{
					"id": 19981,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19982,
							"name": "new StorePostCustomersCustomerOrderClaimReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the orders to claim."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 19980,
								"name": "StorePostCustomersCustomerOrderClaimReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19983,
					"name": "order_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the orders to claim"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19981
					]
				},
				{
					"title": "Properties",
					"children": [
						19983
					]
				}
			]
		},
		{
			"id": 19991,
			"name": "StorePostPaymentCollectionsBatchSessionsAuthorizeReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the payment sessions to authorize."
					}
				]
			},
			"children": [
				{
					"id": 19992,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19993,
							"name": "new StorePostPaymentCollectionsBatchSessionsAuthorizeReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the payment sessions to authorize."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 19991,
								"name": "StorePostPaymentCollectionsBatchSessionsAuthorizeReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 19994,
					"name": "session_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "List of Payment Session IDs to authorize."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19992
					]
				},
				{
					"title": "Properties",
					"children": [
						19994
					]
				}
			]
		},
		{
			"id": 19995,
			"name": "StoreGetPaymentCollectionsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 19996,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 19997,
							"name": "new StoreGetPaymentCollectionsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 19995,
								"name": "StoreGetPaymentCollectionsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20631,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20630,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 19998,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20632,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 19999,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20633,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						19996
					]
				},
				{
					"title": "Properties",
					"children": [
						19998,
						19999
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20629,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 19984,
			"name": "defaultPaymentCollectionRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 19985,
			"name": "StorePaymentCollectionsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The payment collection's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 19986,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 19987,
							"name": "payment_collection",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Payment collection's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/payment-collection.ts",
									"qualifiedName": "PaymentCollection"
								},
								"name": "PaymentCollection",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								19987
							]
						}
					]
				}
			}
		},
		{
			"id": 19988,
			"name": "StorePaymentCollectionsSessionRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the payment session."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 19989,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 19990,
							"name": "payment_session",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Payment session's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/payment-session.ts",
									"qualifiedName": "PaymentSession"
								},
								"name": "PaymentSession",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								19990
							]
						}
					]
				}
			}
		},
		{
			"id": 20000,
			"name": "StorePostPaymentCollectionsSessionsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 20001,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20002,
							"name": "new StorePostPaymentCollectionsSessionsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20000,
								"name": "StorePostPaymentCollectionsSessionsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20003,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Payment Provider."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20004,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment amount"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 20005,
					"name": "session_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Payment Session to be updated. If no ID is provided, a new payment session is created."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20001
					]
				},
				{
					"title": "Properties",
					"children": [
						20003,
						20004,
						20005
					]
				}
			]
		},
		{
			"id": 20006,
			"name": "StorePostPaymentCollectionsBatchSessionsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the payment sessions to manage."
					}
				]
			},
			"children": [
				{
					"id": 20007,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20008,
							"name": "new StorePostPaymentCollectionsBatchSessionsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the payment sessions to manage."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 20006,
								"name": "StorePostPaymentCollectionsBatchSessionsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20009,
					"name": "sessions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Payment sessions related to the Payment Collection. Existing sessions that are not added in this array will be deleted."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 20000,
							"name": "StorePostPaymentCollectionsSessionsReq",
							"package": "@medusajs/medusa"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20007
					]
				},
				{
					"title": "Properties",
					"children": [
						20009
					]
				}
			]
		},
		{
			"id": 20010,
			"name": "StorePaymentCollectionSessionsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the payment session to manage."
					}
				]
			},
			"children": [
				{
					"id": 20011,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20012,
							"name": "new StorePaymentCollectionSessionsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the payment session to manage."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 20010,
								"name": "StorePaymentCollectionSessionsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20013,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Payment Provider."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20011
					]
				},
				{
					"title": "Properties",
					"children": [
						20013
					]
				}
			]
		},
		{
			"id": 20027,
			"name": "StoreGetProductCategoriesCategoryParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 20028,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20029,
							"name": "new StoreGetProductCategoriesCategoryParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20027,
								"name": "StoreGetProductCategoriesCategoryParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20631,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20630,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 20030,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20632,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 20031,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20633,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20028
					]
				},
				{
					"title": "Properties",
					"children": [
						20030,
						20031
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20629,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 20014,
			"name": "defaultStoreProductCategoryRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 20015,
			"name": "defaultStoreCategoryScope",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 20016,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 20017,
							"name": "is_internal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 20018,
							"name": "is_active",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								20017,
								20018
							]
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 20019,
			"name": "defaultStoreProductCategoryFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 20020,
			"name": "allowedStoreProductCategoryFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 20021,
			"name": "StoreGetProductCategoriesCategoryRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The product category's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 20022,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 20023,
							"name": "product_category",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Product category details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/product-category.ts",
									"qualifiedName": "ProductCategory"
								},
								"name": "ProductCategory",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								20023
							]
						}
					]
				}
			}
		},
		{
			"id": 20024,
			"name": "StoreGetProductCategoriesRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of product categories with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 20566,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 20025,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 20026,
									"name": "product_categories",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of product categories details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/product-category.ts",
												"qualifiedName": "ProductCategory"
											},
											"name": "ProductCategory",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										20026
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 20032,
			"name": "StoreGetProductCategoriesParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved product categories."
					}
				]
			},
			"children": [
				{
					"id": 20036,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search product categories' names and handles."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20037,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Handle to filter product categories by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20038,
					"name": "parent_category_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter product categories by the ID of their associated parent category."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 20039,
					"name": "include_descendants_tree",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether to include child categories in the retrieved categories."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 20040,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).expand"
					}
				},
				{
					"id": 20041,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).fields"
					}
				},
				{
					"id": 20042,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).offset"
					}
				},
				{
					"id": 20043,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of product categories returned in the list. Default is "
							},
							{
								"kind": "code",
								"text": "`100`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).limit"
					}
				},
				{
					"id": 20044,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).order"
					}
				},
				{
					"id": 20033,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20034,
							"name": "new StoreGetProductCategoriesParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 20035,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 20032,
								"name": "StoreGetProductCategoriesParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).constructor"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20033
					]
				},
				{
					"title": "Properties",
					"children": [
						20036,
						20037,
						20038,
						20039,
						20040,
						20041,
						20042,
						20043,
						20044
					]
				}
			],
			"extendedTypes": [
				{
					"type": "intersection",
					"types": [
						{
							"type": "reference",
							"target": 20629,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindParams",
							"package": "@medusajs/medusa"
						},
						{
							"type": "reference",
							"target": 20634,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindPaginationParams",
							"package": "@medusajs/medusa"
						}
					]
				}
			]
		},
		{
			"id": 20045,
			"name": "defaultStoreProductTagFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 20046,
			"name": "allowedStoreProductTagFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 20047,
			"name": "defaultStoreProductTagRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "never"
				}
			},
			"defaultValue": "[]"
		},
		{
			"id": 20048,
			"name": "StoreProductTagsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of product tags with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 20566,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 20049,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 20050,
									"name": "product_tags",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of product tags details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/product-tag.ts",
												"qualifiedName": "ProductTag"
											},
											"name": "ProductTag",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										20050
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 20051,
			"name": "StoreGetProductTagsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved product tags."
					}
				]
			},
			"children": [
				{
					"id": 20052,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20053,
							"name": "new StoreGetProductTagsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20051,
								"name": "StoreGetProductTagsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20636,
								"name": "FindPaginationParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20635,
						"name": "FindPaginationParams.constructor"
					}
				},
				{
					"id": 20054,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter product tags by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 20584,
								"name": "StringComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 20055,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search product tags' values."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20056,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Values to filter product tags by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 20584,
								"name": "StringComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 20057,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply to the product tags' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 20058,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply to the product tags' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 20059,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": 20639,
						"name": "FindPaginationParams.order"
					}
				},
				{
					"id": 20060,
					"name": "discount_condition_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter product tags by the ID of their associated discount condition."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20061,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": 20637,
						"name": "FindPaginationParams.offset"
					}
				},
				{
					"id": 20062,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n20\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20",
					"inheritedFrom": {
						"type": "reference",
						"target": 20638,
						"name": "FindPaginationParams.limit"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20052
					]
				},
				{
					"title": "Properties",
					"children": [
						20054,
						20055,
						20056,
						20057,
						20058,
						20059,
						20060,
						20061,
						20062
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20634,
					"name": "FindPaginationParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 20063,
			"name": "allowedStoreProductTypeFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 20064,
			"name": "defaultStoreProductTypeFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 20065,
			"name": "defaultStoreProductTypeRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "never"
				}
			},
			"defaultValue": "[]"
		},
		{
			"id": 20066,
			"name": "StoreProductTypesListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 20566,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 20067,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 20068,
									"name": "product_types",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of product types details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/product-type.ts",
												"qualifiedName": "ProductType"
											},
											"name": "ProductType",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										20068
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 20069,
			"name": "StoreGetProductTypesParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved product types."
					}
				]
			},
			"children": [
				{
					"id": 20070,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20071,
							"name": "new StoreGetProductTypesParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20069,
								"name": "StoreGetProductTypesParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20636,
								"name": "FindPaginationParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20635,
						"name": "FindPaginationParams.constructor"
					}
				},
				{
					"id": 20072,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter product types by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 20584,
								"name": "StringComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 20073,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search product types' values."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20074,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Values to filter product types by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 20584,
								"name": "StringComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 20075,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the product types' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 20076,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the product types' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 20077,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": 20639,
						"name": "FindPaginationParams.order"
					}
				},
				{
					"id": 20078,
					"name": "discount_condition_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter product types by the ID of their associated discount condition."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20079,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": 20637,
						"name": "FindPaginationParams.offset"
					}
				},
				{
					"id": 20080,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n20\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20",
					"inheritedFrom": {
						"type": "reference",
						"target": 20638,
						"name": "FindPaginationParams.limit"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20070
					]
				},
				{
					"title": "Properties",
					"children": [
						20072,
						20073,
						20074,
						20075,
						20076,
						20077,
						20078,
						20079,
						20080
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20634,
					"name": "FindPaginationParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 20081,
			"name": "defaultStoreProductsRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 20082,
			"name": "defaultStoreProductsFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/product.ts",
							"qualifiedName": "Product"
						},
						"name": "Product",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 20083,
			"name": "allowedStoreProductsFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 20084,
			"name": "allowedStoreProductsRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 20085,
			"name": "defaultStoreProductRemoteQueryObject",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "This is temporary."
					}
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 20086,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 20087,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/product.ts",
											"qualifiedName": "Product"
										},
										"name": "Product",
										"package": "@medusajs/medusa"
									}
								}
							},
							"defaultValue": "defaultStoreProductsFields"
						},
						{
							"id": 20088,
							"name": "images",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 20089,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 20090,
											"name": "fields",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												20090
											]
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 20091,
							"name": "tags",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 20092,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 20093,
											"name": "fields",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												20093
											]
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 20094,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 20095,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 20096,
											"name": "fields",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												20096
											]
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 20097,
							"name": "collection",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 20098,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 20099,
											"name": "fields",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												20099
											]
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 20100,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 20101,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 20102,
											"name": "fields",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 20103,
											"name": "values",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 20104,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 20105,
															"name": "fields",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															"defaultValue": "..."
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																20105
															]
														}
													]
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												20102,
												20103
											]
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 20106,
							"name": "variants",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 20107,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 20108,
											"name": "fields",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 20109,
											"name": "options",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 20110,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 20111,
															"name": "fields",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															"defaultValue": "..."
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																20111
															]
														}
													]
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												20108,
												20109
											]
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 20112,
							"name": "profile",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 20113,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 20114,
											"name": "fields",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												20114
											]
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 20115,
							"name": "sales_channels",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 20116,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 20117,
											"name": "fields",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												20117
											]
										}
									]
								}
							},
							"defaultValue": "..."
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								20087,
								20088,
								20091,
								20094,
								20097,
								20100,
								20106,
								20112,
								20115
							]
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 20118,
			"name": "StoreProductsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 20119,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 20120,
							"name": "product",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Product details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21123,
								"name": "PricedProduct",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								20120
							]
						}
					]
				}
			}
		},
		{
			"id": 20121,
			"name": "StorePostSearchRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of search results."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 20122,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 20123,
									"name": "hits",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Array of search results. The format of the items depends on the search engine installed on the Medusa backend."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										20123
									]
								}
							]
						}
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				]
			}
		},
		{
			"id": 20124,
			"name": "StoreProductsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of products with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 20566,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 20125,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 20126,
									"name": "products",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of products details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 21123,
											"name": "PricedProduct",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										20126
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 20127,
			"name": "StoreGetProductsPaginationParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how a list of data is paginated."
					}
				]
			},
			"children": [
				{
					"id": 20128,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20129,
							"name": "new StoreGetProductsPaginationParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20127,
								"name": "StoreGetProductsPaginationParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 21350,
								"name": "PriceSelectionParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 21349,
						"name": "PriceSelectionParams.constructor"
					}
				},
				{
					"id": 20130,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 20131,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n100\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "100"
				},
				{
					"id": 20132,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20136,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21354,
						"name": "PriceSelectionParams.expand"
					}
				},
				{
					"id": 20137,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21355,
						"name": "PriceSelectionParams.fields"
					}
				},
				{
					"id": 20133,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a cart ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21351,
						"name": "PriceSelectionParams.cart_id"
					}
				},
				{
					"id": 20134,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a region ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21352,
						"name": "PriceSelectionParams.region_id"
					}
				},
				{
					"id": 20135,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a currency code."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21353,
						"name": "PriceSelectionParams.currency_code"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20128
					]
				},
				{
					"title": "Properties",
					"children": [
						20130,
						20131,
						20132,
						20136,
						20137,
						20133,
						20134,
						20135
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 21348,
					"name": "PriceSelectionParams",
					"package": "@medusajs/medusa"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 20138,
					"name": "StoreGetProductsParams"
				}
			]
		},
		{
			"id": 20138,
			"name": "StoreGetProductsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved products."
					}
				]
			},
			"children": [
				{
					"id": 20139,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20140,
							"name": "new StoreGetProductsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20138,
								"name": "StoreGetProductsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20129,
								"name": "StoreGetProductsPaginationParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20128,
						"name": "StoreGetProductsPaginationParams.constructor"
					}
				},
				{
					"id": 20155,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": 20130,
						"name": "StoreGetProductsPaginationParams.offset"
					}
				},
				{
					"id": 20156,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n100\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "100",
					"inheritedFrom": {
						"type": "reference",
						"target": 20131,
						"name": "StoreGetProductsPaginationParams.limit"
					}
				},
				{
					"id": 20157,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20132,
						"name": "StoreGetProductsPaginationParams.order"
					}
				},
				{
					"id": 20141,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter products by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 20142,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search products' title, description, variants' title and sku, and collections' title."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20143,
					"name": "collection_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by their associated product collection's ID."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 20144,
					"name": "tags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by their associated tags' value."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 20145,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Title to filter products by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20146,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Description to filter products by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20147,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Handle to filter products by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20148,
					"name": "is_giftcard",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by whether they're gift cards."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 20149,
					"name": "type_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by their associated product type's ID."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 20150,
					"name": "sales_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by their associated sales channels' ID."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 20151,
					"name": "category_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by their associated product category's ID."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 20152,
					"name": "include_category_children",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether to include product category children in the response."
							}
						],
						"blockTags": [
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "text",
										"text": "product_categories"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 20153,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the products' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 20154,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the products' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 20161,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20136,
						"name": "StoreGetProductsPaginationParams.expand"
					}
				},
				{
					"id": 20162,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20137,
						"name": "StoreGetProductsPaginationParams.fields"
					}
				},
				{
					"id": 20158,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a cart ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20133,
						"name": "StoreGetProductsPaginationParams.cart_id"
					}
				},
				{
					"id": 20159,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a region ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20134,
						"name": "StoreGetProductsPaginationParams.region_id"
					}
				},
				{
					"id": 20160,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a currency code."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20135,
						"name": "StoreGetProductsPaginationParams.currency_code"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20139
					]
				},
				{
					"title": "Properties",
					"children": [
						20155,
						20156,
						20157,
						20141,
						20142,
						20143,
						20144,
						20145,
						20146,
						20147,
						20148,
						20149,
						20150,
						20151,
						20152,
						20153,
						20154,
						20161,
						20162,
						20158,
						20159,
						20160
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20127,
					"name": "StoreGetProductsPaginationParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 20163,
			"name": "StorePostSearchReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 20164,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20165,
							"name": "new StorePostSearchReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20163,
								"name": "StorePostSearchReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20166,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The search query."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20167,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of products to skip when retrieving the products."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 20168,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of products returned."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 20169,
					"name": "filter",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Pass filters based on the search service."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20164
					]
				},
				{
					"title": "Properties",
					"children": [
						20166,
						20167,
						20168,
						20169
					]
				}
			]
		},
		{
			"id": 20178,
			"name": "StoreGetRegionsRegionParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 20179,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20180,
							"name": "new StoreGetRegionsRegionParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20178,
								"name": "StoreGetRegionsRegionParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20631,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20630,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 20181,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20632,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 20182,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20633,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20179
					]
				},
				{
					"title": "Properties",
					"children": [
						20181,
						20182
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20629,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 20170,
			"name": "defaultStoreRegionRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 20171,
			"name": "defaultStoreRegionFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 20172,
			"name": "StoreRegionsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of regions with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 20979,
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 20173,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 20174,
									"name": "regions",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of regions details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/region.ts",
												"qualifiedName": "Region"
											},
											"name": "Region",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										20174
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 20175,
			"name": "StoreRegionsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The region's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 20176,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 20177,
							"name": "region",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Region details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/region.ts",
									"qualifiedName": "Region"
								},
								"name": "Region",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								20177
							]
						}
					]
				}
			}
		},
		{
			"id": 20183,
			"name": "StoreGetRegionsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 20187,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 20188,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 20189,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).expand"
					}
				},
				{
					"id": 20190,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).fields"
					}
				},
				{
					"id": 20191,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).offset"
					}
				},
				{
					"id": 20192,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n20\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).limit"
					}
				},
				{
					"id": 20193,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).order"
					}
				},
				{
					"id": 20184,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20185,
							"name": "new StoreGetRegionsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 20186,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 20183,
								"name": "StoreGetRegionsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).constructor"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20184
					]
				},
				{
					"title": "Properties",
					"children": [
						20187,
						20188,
						20189,
						20190,
						20191,
						20192,
						20193
					]
				}
			],
			"extendedTypes": [
				{
					"type": "intersection",
					"types": [
						{
							"type": "reference",
							"target": 20629,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindParams",
							"package": "@medusajs/medusa"
						},
						{
							"type": "reference",
							"target": 20634,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindPaginationParams",
							"package": "@medusajs/medusa"
						}
					]
				}
			]
		},
		{
			"id": 20194,
			"name": "defaultStoreReturnReasonFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/return-reason.ts",
							"qualifiedName": "ReturnReason"
						},
						"name": "ReturnReason",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 20195,
			"name": "defaultStoreReturnReasonRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/return-reason.ts",
							"qualifiedName": "ReturnReason"
						},
						"name": "ReturnReason",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 20196,
			"name": "StoreReturnReasonsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of return reasons."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 20197,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 20198,
							"name": "return_reasons",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of return reasons details."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../packages/medusa/src/models/return-reason.ts",
										"qualifiedName": "ReturnReason"
									},
									"name": "ReturnReason",
									"package": "@medusajs/medusa"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								20198
							]
						}
					]
				}
			}
		},
		{
			"id": 20199,
			"name": "StoreReturnReasonsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The return reason's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 20200,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 20201,
							"name": "return_reason",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Return reason details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/return-reason.ts",
									"qualifiedName": "ReturnReason"
								},
								"name": "ReturnReason",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								20201
							]
						}
					]
				}
			}
		},
		{
			"id": 21363,
			"name": "ReturnShipping",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 21364,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21365,
							"name": "new ReturnShipping",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21363,
								"name": "ReturnShipping",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21366,
					"name": "option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Shipping Option to create the Shipping Method from."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21364
					]
				},
				{
					"title": "Properties",
					"children": [
						21366
					]
				}
			]
		},
		{
			"id": 21356,
			"name": "Item",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 21357,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21358,
							"name": "new Item",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21356,
								"name": "Item",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21359,
					"name": "item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the line item to return."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21360,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity to return."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 21361,
					"name": "reason_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the return reason. Return reasons can be retrieved from the List Return Reasons API Route."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21362,
					"name": "note",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A note to add to the item returned."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21357
					]
				},
				{
					"title": "Properties",
					"children": [
						21359,
						21360,
						21361,
						21362
					]
				}
			]
		},
		{
			"id": 20205,
			"name": "StorePostReturnsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the return to create."
					}
				]
			},
			"children": [
				{
					"id": 20206,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20207,
							"name": "new StorePostReturnsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the return to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 20205,
								"name": "StorePostReturnsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20208,
					"name": "order_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Order to create the return for."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20209,
					"name": "items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The items to include in the return."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 21356,
							"name": "Item",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 20210,
					"name": "return_shipping",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The return shipping method used to return the items. If provided, a fulfillment is automatically created for the return."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 21363,
						"name": "ReturnShipping",
						"package": "@medusajs/medusa"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20206
					]
				},
				{
					"title": "Properties",
					"children": [
						20208,
						20209,
						20210
					]
				}
			]
		},
		{
			"id": 20202,
			"name": "StoreReturnsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The return's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 20203,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 20204,
							"name": "return",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Return details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/return.ts",
									"qualifiedName": "Return"
								},
								"name": "Return",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								20204
							]
						}
					]
				}
			}
		},
		{
			"id": 20211,
			"name": "StoreShippingOptionsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of shipping options."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 20212,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 20213,
							"name": "shipping_options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of shipping options details."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 21367,
									"name": "PricedShippingOption",
									"package": "@medusajs/medusa"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								20213
							]
						}
					]
				}
			}
		},
		{
			"id": 20214,
			"name": "StoreCartShippingOptionsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 20215,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 20216,
							"name": "shipping_options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of shipping options details."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 21367,
									"name": "PricedShippingOption",
									"package": "@medusajs/medusa"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								20216
							]
						}
					]
				}
			}
		},
		{
			"id": 20217,
			"name": "StoreGetShippingOptionsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply on the retrieved shipping options."
					}
				]
			},
			"children": [
				{
					"id": 20218,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20219,
							"name": "new StoreGetShippingOptionsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20217,
								"name": "StoreGetShippingOptionsParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20220,
					"name": "product_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Product ID that is used to filter shipping options by whether they can be used to ship that product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20221,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the shipping options by the ID of their associated region."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20222,
					"name": "is_return",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the shipping options by whether they're return shipping options."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20218
					]
				},
				{
					"title": "Properties",
					"children": [
						20220,
						20221,
						20222
					]
				}
			]
		},
		{
			"id": 21368,
			"name": "Item",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 21369,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21370,
							"name": "new Item",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21368,
								"name": "Item",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21371,
					"name": "item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the order's line item to return."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21372,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity to return."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 21373,
					"name": "reason_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the reason of this return. Return reasons can be retrieved from the List Return Reasons API Route."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21374,
					"name": "note",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The note to add to the item being swapped."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21369
					]
				},
				{
					"title": "Properties",
					"children": [
						21371,
						21372,
						21373,
						21374
					]
				}
			]
		},
		{
			"id": 21375,
			"name": "AdditionalItem",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 21376,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21377,
							"name": "new AdditionalItem",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21375,
								"name": "AdditionalItem",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21378,
					"name": "variant_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21379,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity of the variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21376
					]
				},
				{
					"title": "Properties",
					"children": [
						21378,
						21379
					]
				}
			]
		},
		{
			"id": 20228,
			"name": "StorePostSwapsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the swap to create."
					}
				]
			},
			"children": [
				{
					"id": 20229,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20230,
							"name": "new StorePostSwapsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the swap to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 20228,
								"name": "StorePostSwapsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20231,
					"name": "order_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Order to create the Swap for."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20232,
					"name": "return_items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The items to include in the Return."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 21368,
							"name": "Item",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 20233,
					"name": "additional_items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The items to exchange the returned items with."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 21375,
							"name": "AdditionalItem",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 20234,
					"name": "return_shipping_option",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Shipping Option to create the Shipping Method from."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20229
					]
				},
				{
					"title": "Properties",
					"children": [
						20231,
						20232,
						20233,
						20234
					]
				}
			]
		},
		{
			"id": 20223,
			"name": "defaultStoreSwapRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 20224,
			"name": "defaultStoreSwapFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "indexedAccess",
				"indexType": {
					"type": "literal",
					"value": "select"
				},
				"objectType": {
					"type": "reference",
					"target": 20511,
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../packages/medusa/src/models/swap.ts",
								"qualifiedName": "Swap"
							},
							"name": "Swap",
							"package": "@medusajs/medusa"
						}
					],
					"name": "FindConfig",
					"package": "@medusajs/medusa"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 20225,
			"name": "StoreSwapsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The swap's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 20226,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 20227,
							"name": "swap",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Swap details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/swap.ts",
									"qualifiedName": "Swap"
								},
								"name": "Swap",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								20227
							]
						}
					]
				}
			}
		},
		{
			"id": 20243,
			"name": "StoreGetVariantsVariantParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The context to apply on retrieved prices."
					}
				]
			},
			"children": [
				{
					"id": 20244,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20245,
							"name": "new StoreGetVariantsVariantParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20243,
								"name": "StoreGetVariantsVariantParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 21350,
								"name": "PriceSelectionParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 21349,
						"name": "PriceSelectionParams.constructor"
					}
				},
				{
					"id": 20246,
					"name": "sales_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20250,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21354,
						"name": "PriceSelectionParams.expand"
					}
				},
				{
					"id": 20251,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21355,
						"name": "PriceSelectionParams.fields"
					}
				},
				{
					"id": 20247,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a cart ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21351,
						"name": "PriceSelectionParams.cart_id"
					}
				},
				{
					"id": 20248,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a region ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21352,
						"name": "PriceSelectionParams.region_id"
					}
				},
				{
					"id": 20249,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a currency code."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21353,
						"name": "PriceSelectionParams.currency_code"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20244
					]
				},
				{
					"title": "Properties",
					"children": [
						20246,
						20250,
						20251,
						20247,
						20248,
						20249
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 21348,
					"name": "PriceSelectionParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 20235,
			"name": "defaultStoreVariantRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 20236,
			"name": "allowedStoreVariantRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 20237,
			"name": "StoreVariantsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The product variant's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 20238,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 20239,
							"name": "variant",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Product variant description."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21327,
								"name": "PricedVariant",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								20239
							]
						}
					]
				}
			}
		},
		{
			"id": 20240,
			"name": "StoreVariantsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of product variants."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 20241,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 20242,
							"name": "variants",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of product variant descriptions."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 21327,
									"name": "PricedVariant",
									"package": "@medusajs/medusa"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								20242
							]
						}
					]
				}
			}
		},
		{
			"id": 20252,
			"name": "StoreGetVariantsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved product variants."
					}
				]
			},
			"children": [
				{
					"id": 20253,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20254,
							"name": "new StoreGetVariantsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20252,
								"name": "StoreGetVariantsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 21350,
								"name": "PriceSelectionParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 21349,
						"name": "PriceSelectionParams.constructor"
					}
				},
				{
					"id": 20255,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n100\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "100"
				},
				{
					"id": 20256,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 20257,
					"name": "ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ID to filter the product variants by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20258,
					"name": "sales_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter product variants by the ID of their associated sales channel."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20259,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter product variants by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 20260,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Titles to filter product variants by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 20261,
					"name": "inventory_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Number filters to apply on the product variants' "
							},
							{
								"kind": "code",
								"text": "`inventory_quantity`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"target": 20594,
								"name": "NumericalComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 20265,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21354,
						"name": "PriceSelectionParams.expand"
					}
				},
				{
					"id": 20266,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21355,
						"name": "PriceSelectionParams.fields"
					}
				},
				{
					"id": 20262,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a cart ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21351,
						"name": "PriceSelectionParams.cart_id"
					}
				},
				{
					"id": 20263,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a region ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21352,
						"name": "PriceSelectionParams.region_id"
					}
				},
				{
					"id": 20264,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a currency code."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21353,
						"name": "PriceSelectionParams.currency_code"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20253
					]
				},
				{
					"title": "Properties",
					"children": [
						20255,
						20256,
						20257,
						20258,
						20259,
						20260,
						20261,
						20265,
						20266,
						20262,
						20263,
						20264
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 21348,
					"name": "PriceSelectionParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 20461,
			"name": "BatchJobStatus",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 20462,
					"name": "CREATED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "created"
					}
				},
				{
					"id": 20463,
					"name": "PRE_PROCESSED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "pre_processed"
					}
				},
				{
					"id": 20464,
					"name": "CONFIRMED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "confirmed"
					}
				},
				{
					"id": 20465,
					"name": "PROCESSING",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "processing"
					}
				},
				{
					"id": 20466,
					"name": "COMPLETED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "completed"
					}
				},
				{
					"id": 20467,
					"name": "CANCELED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "canceled"
					}
				},
				{
					"id": 20468,
					"name": "FAILED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "failed"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						20462,
						20463,
						20464,
						20465,
						20466,
						20467,
						20468
					]
				}
			]
		},
		{
			"id": 20469,
			"name": "BatchJobUpdateProps",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
					"qualifiedName": "Partial"
				},
				"typeArguments": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Pick"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/batch-job.ts",
									"qualifiedName": "BatchJob"
								},
								"name": "BatchJob",
								"package": "@medusajs/medusa"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "context"
									},
									{
										"type": "literal",
										"value": "result"
									}
								]
							}
						],
						"name": "Pick",
						"package": "typescript"
					}
				],
				"name": "Partial",
				"package": "typescript"
			}
		},
		{
			"id": 20470,
			"name": "CreateBatchJobInput",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 20471,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 20472,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 20473,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "context"
								},
								"objectType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../packages/medusa/src/models/batch-job.ts",
										"qualifiedName": "BatchJob"
									},
									"name": "BatchJob",
									"package": "@medusajs/medusa"
								}
							}
						},
						{
							"id": 20474,
							"name": "dry_run",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								20472,
								20473,
								20474
							]
						}
					]
				}
			}
		},
		{
			"id": 20475,
			"name": "BatchJobResultError",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 20476,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 20477,
							"name": "message",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 20478,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								20477,
								20478
							]
						}
					],
					"indexSignature": {
						"id": 20479,
						"name": "__index",
						"variant": "signature",
						"kind": 8192,
						"flags": {},
						"parameters": [
							{
								"id": 20480,
								"name": "key",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "unknown"
						}
					}
				}
			}
		},
		{
			"id": 20481,
			"name": "BatchJobResultStatDescriptor",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 20482,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 20483,
							"name": "key",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 20484,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 20485,
							"name": "message",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								20483,
								20484,
								20485
							]
						}
					]
				}
			}
		},
		{
			"id": 20486,
			"name": "FilterableBatchJobProps",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 20487,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20488,
							"name": "new FilterableBatchJobProps",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20486,
								"name": "FilterableBatchJobProps",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20489,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 20490,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 20461,
							"name": "BatchJobStatus",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 20491,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 20492,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 20493,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 20494,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20487
					]
				},
				{
					"title": "Properties",
					"children": [
						20489,
						20490,
						20491,
						20492,
						20493,
						20494
					]
				}
			]
		},
		{
			"id": 20495,
			"name": "BatchJobCreateProps",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
					"qualifiedName": "Pick"
				},
				"typeArguments": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/batch-job.ts",
							"qualifiedName": "BatchJob"
						},
						"name": "BatchJob",
						"package": "@medusajs/medusa"
					},
					{
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "context"
							},
							{
								"type": "literal",
								"value": "type"
							},
							{
								"type": "literal",
								"value": "created_by"
							},
							{
								"type": "literal",
								"value": "dry_run"
							}
						]
					}
				],
				"name": "Pick",
				"package": "typescript"
			}
		},
		{
			"id": 20503,
			"name": "WithRequiredProperty",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Utility type used to remove some optional attributes (coming from K) from a type T"
					}
				]
			},
			"typeParameters": [
				{
					"id": 20504,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 20505,
					"name": "K",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "reference",
							"target": 20504,
							"name": "T",
							"package": "@medusajs/medusa",
							"refersToTypeParameter": true
						}
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 20504,
						"name": "T",
						"package": "@medusajs/medusa",
						"refersToTypeParameter": true
					},
					{
						"type": "mapped",
						"parameter": "Property",
						"parameterType": {
							"type": "reference",
							"target": 20505,
							"name": "K",
							"package": "@medusajs/medusa",
							"refersToTypeParameter": true
						},
						"templateType": {
							"type": "indexedAccess",
							"indexType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/types/common.ts",
									"qualifiedName": "Property"
								},
								"name": "Property",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							},
							"objectType": {
								"type": "reference",
								"target": 20504,
								"name": "T",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							}
						},
						"optionalModifier": "-"
					}
				]
			}
		},
		{
			"id": 20506,
			"name": "PartialPick",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 20507,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 20508,
					"name": "K",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "reference",
							"target": 20507,
							"name": "T",
							"package": "@medusajs/medusa",
							"refersToTypeParameter": true
						}
					}
				}
			],
			"type": {
				"type": "mapped",
				"parameter": "P",
				"parameterType": {
					"type": "reference",
					"target": 20508,
					"name": "K",
					"package": "@medusajs/medusa",
					"refersToTypeParameter": true
				},
				"templateType": {
					"type": "indexedAccess",
					"indexType": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/types/common.ts",
							"qualifiedName": "P"
						},
						"name": "P",
						"package": "@medusajs/medusa",
						"refersToTypeParameter": true
					},
					"objectType": {
						"type": "reference",
						"target": 20507,
						"name": "T",
						"package": "@medusajs/medusa",
						"refersToTypeParameter": true
					}
				},
				"optionalModifier": "+"
			}
		},
		{
			"id": 20509,
			"name": "Writable",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 20510,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "mapped",
				"parameter": "key",
				"parameterType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": 20510,
						"name": "T",
						"package": "@medusajs/medusa",
						"refersToTypeParameter": true
					}
				},
				"templateType": {
					"type": "union",
					"types": [
						{
							"type": "indexedAccess",
							"indexType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/types/common.ts",
									"qualifiedName": "key"
								},
								"name": "key",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							},
							"objectType": {
								"type": "reference",
								"target": 20510,
								"name": "T",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							}
						},
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../node_modules/typeorm/find-options/FindOperator.d.ts",
								"qualifiedName": "FindOperator"
							},
							"typeArguments": [
								{
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/types/common.ts",
											"qualifiedName": "key"
										},
										"name": "key",
										"package": "@medusajs/medusa",
										"refersToTypeParameter": true
									},
									"objectType": {
										"type": "reference",
										"target": 20510,
										"name": "T",
										"package": "@medusajs/medusa",
										"refersToTypeParameter": true
									}
								}
							],
							"name": "FindOperator",
							"package": "typeorm"
						},
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../node_modules/typeorm/find-options/FindOperator.d.ts",
								"qualifiedName": "FindOperator"
							},
							"typeArguments": [
								{
									"type": "array",
									"elementType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/types/common.ts",
												"qualifiedName": "key"
											},
											"name": "key",
											"package": "@medusajs/medusa",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": 20510,
											"name": "T",
											"package": "@medusajs/medusa",
											"refersToTypeParameter": true
										}
									}
								}
							],
							"name": "FindOperator",
							"package": "typeorm"
						},
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../node_modules/typeorm/find-options/FindOperator.d.ts",
								"qualifiedName": "FindOperator"
							},
							"typeArguments": [
								{
									"type": "array",
									"elementType": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"name": "FindOperator",
							"package": "typeorm"
						}
					]
				},
				"readonlyModifier": "-"
			}
		},
		{
			"id": 20511,
			"name": "FindConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 20512,
					"name": "select",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "reference",
								"target": 20520,
								"name": "Entity",
								"package": "@medusajs/medusa",
								"qualifiedName": "FindConfig.Entity",
								"refersToTypeParameter": true
							}
						}
					}
				},
				{
					"id": 20513,
					"name": "skip",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 20514,
					"name": "take",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 20515,
					"name": "relations",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 20516,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 20517,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"indexSignature": {
								"id": 20518,
								"name": "__index",
								"variant": "signature",
								"kind": 8192,
								"flags": {},
								"parameters": [
									{
										"id": 20519,
										"name": "K",
										"variant": "param",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "ASC"
										},
										{
											"type": "literal",
											"value": "DESC"
										}
									]
								}
							}
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						20512,
						20513,
						20514,
						20515,
						20516
					]
				}
			],
			"typeParameters": [
				{
					"id": 20520,
					"name": "Entity",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 20521,
			"name": "ExtendedFindConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 20529,
					"name": "TEntity",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/typeorm/find-options/FindOneOptions.d.ts",
											"qualifiedName": "FindOneOptions"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 20529,
												"name": "TEntity",
												"package": "@medusajs/medusa",
												"refersToTypeParameter": true
											}
										],
										"name": "FindOneOptions",
										"package": "typeorm"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "where"
											},
											{
												"type": "literal",
												"value": "relations"
											},
											{
												"type": "literal",
												"value": "select"
											}
										]
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/typeorm/find-options/FindManyOptions.d.ts",
											"qualifiedName": "FindManyOptions"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 20529,
												"name": "TEntity",
												"package": "@medusajs/medusa",
												"refersToTypeParameter": true
											}
										],
										"name": "FindManyOptions",
										"package": "typeorm"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "where"
											},
											{
												"type": "literal",
												"value": "relations"
											},
											{
												"type": "literal",
												"value": "select"
											}
										]
									}
								],
								"name": "Omit",
								"package": "typescript"
							}
						]
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 20522,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 20523,
									"name": "select",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/typeorm/find-options/FindOptionsSelect.d.ts",
											"qualifiedName": "FindOptionsSelect"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 20529,
												"name": "TEntity",
												"package": "@medusajs/medusa",
												"refersToTypeParameter": true
											}
										],
										"name": "FindOptionsSelect",
										"package": "typeorm"
									}
								},
								{
									"id": 20524,
									"name": "relations",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/typeorm/find-options/FindOptionsRelations.d.ts",
											"qualifiedName": "FindOptionsRelations"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 20529,
												"name": "TEntity",
												"package": "@medusajs/medusa",
												"refersToTypeParameter": true
											}
										],
										"name": "FindOptionsRelations",
										"package": "typeorm"
									}
								},
								{
									"id": 20525,
									"name": "where",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/typeorm/find-options/FindOptionsWhere.d.ts",
													"qualifiedName": "FindOptionsWhere"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 20529,
														"name": "TEntity",
														"package": "@medusajs/medusa",
														"refersToTypeParameter": true
													}
												],
												"name": "FindOptionsWhere",
												"package": "typeorm"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../node_modules/typeorm/find-options/FindOptionsWhere.d.ts",
														"qualifiedName": "FindOptionsWhere"
													},
													"typeArguments": [
														{
															"type": "reference",
															"target": 20529,
															"name": "TEntity",
															"package": "@medusajs/medusa",
															"refersToTypeParameter": true
														}
													],
													"name": "FindOptionsWhere",
													"package": "typeorm"
												}
											}
										]
									}
								},
								{
									"id": 20526,
									"name": "order",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/typeorm/find-options/FindOptionsOrder.d.ts",
											"qualifiedName": "FindOptionsOrder"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 20529,
												"name": "TEntity",
												"package": "@medusajs/medusa",
												"refersToTypeParameter": true
											}
										],
										"name": "FindOptionsOrder",
										"package": "typeorm"
									}
								},
								{
									"id": 20527,
									"name": "skip",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 20528,
									"name": "take",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										20523,
										20524,
										20525,
										20526,
										20527,
										20528
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 20530,
			"name": "QuerySelector",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 20533,
					"name": "TEntity",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 20538,
						"typeArguments": [
							{
								"type": "reference",
								"target": 20533,
								"name": "TEntity",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							}
						],
						"name": "Selector",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 20531,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 20532,
									"name": "q",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										20532
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 20534,
			"name": "TreeQuerySelector",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 20537,
					"name": "TEntity",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 20530,
						"typeArguments": [
							{
								"type": "reference",
								"target": 20537,
								"name": "TEntity",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							}
						],
						"name": "QuerySelector",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 20535,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 20536,
									"name": "include_descendants_tree",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										20536
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 21453,
			"name": "InnerSelector",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 21454,
					"name": "TEntity",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "mapped",
				"parameter": "key",
				"parameterType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": 21454,
						"name": "TEntity",
						"package": "@medusajs/medusa",
						"refersToTypeParameter": true
					}
				},
				"templateType": {
					"type": "union",
					"types": [
						{
							"type": "indexedAccess",
							"indexType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/types/common.ts",
									"qualifiedName": "key"
								},
								"name": "key",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							},
							"objectType": {
								"type": "reference",
								"target": 21454,
								"name": "TEntity",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							}
						},
						{
							"type": "array",
							"elementType": {
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../packages/medusa/src/types/common.ts",
										"qualifiedName": "key"
									},
									"name": "key",
									"package": "@medusajs/medusa",
									"refersToTypeParameter": true
								},
								"objectType": {
									"type": "reference",
									"target": 21454,
									"name": "TEntity",
									"package": "@medusajs/medusa",
									"refersToTypeParameter": true
								}
							}
						},
						{
							"type": "reference",
							"target": 20577,
							"name": "DateComparisonOperator",
							"package": "@medusajs/medusa"
						},
						{
							"type": "reference",
							"target": 20584,
							"name": "StringComparisonOperator",
							"package": "@medusajs/medusa"
						},
						{
							"type": "reference",
							"target": 20594,
							"name": "NumericalComparisonOperator",
							"package": "@medusajs/medusa"
						},
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../node_modules/typeorm/find-options/FindOperator.d.ts",
								"qualifiedName": "FindOperator"
							},
							"typeArguments": [
								{
									"type": "union",
									"types": [
										{
											"type": "array",
											"elementType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../packages/medusa/src/types/common.ts",
														"qualifiedName": "key"
													},
													"name": "key",
													"package": "@medusajs/medusa",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 21454,
													"name": "TEntity",
													"package": "@medusajs/medusa",
													"refersToTypeParameter": true
												}
											}
										},
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							],
							"name": "FindOperator",
							"package": "typeorm"
						}
					]
				},
				"optionalModifier": "+"
			}
		},
		{
			"id": 20538,
			"name": "Selector",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 20539,
					"name": "TEntity",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 21453,
						"typeArguments": [
							{
								"type": "reference",
								"target": 20539,
								"name": "TEntity",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							}
						],
						"name": "InnerSelector",
						"package": "@medusajs/medusa"
					},
					{
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 21453,
							"typeArguments": [
								{
									"type": "reference",
									"target": 20539,
									"name": "TEntity",
									"package": "@medusajs/medusa",
									"refersToTypeParameter": true
								}
							],
							"name": "InnerSelector",
							"package": "@medusajs/medusa"
						}
					}
				]
			}
		},
		{
			"id": 20540,
			"name": "TotalField",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "shipping_total"
					},
					{
						"type": "literal",
						"value": "discount_total"
					},
					{
						"type": "literal",
						"value": "tax_total"
					},
					{
						"type": "literal",
						"value": "refunded_total"
					},
					{
						"type": "literal",
						"value": "total"
					},
					{
						"type": "literal",
						"value": "subtotal"
					},
					{
						"type": "literal",
						"value": "refundable_amount"
					},
					{
						"type": "literal",
						"value": "gift_card_total"
					},
					{
						"type": "literal",
						"value": "gift_card_tax_total"
					}
				]
			}
		},
		{
			"id": 20541,
			"name": "CustomFindOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 20542,
					"name": "select",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/typeorm/find-options/FindOptionsSelect.d.ts",
									"qualifiedName": "FindOptionsSelect"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 20547,
										"name": "TModel",
										"package": "@medusajs/medusa",
										"qualifiedName": "CustomFindOptions.TModel",
										"refersToTypeParameter": true
									}
								],
								"name": "FindOptionsSelect",
								"package": "typeorm"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/typeorm/find-options/FindOptionsSelect.d.ts",
									"qualifiedName": "FindOptionsSelectByString"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 20547,
										"name": "TModel",
										"package": "@medusajs/medusa",
										"qualifiedName": "CustomFindOptions.TModel",
										"refersToTypeParameter": true
									}
								],
								"name": "FindOptionsSelectByString",
								"package": "typeorm"
							}
						]
					}
				},
				{
					"id": 20543,
					"name": "where",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/typeorm/find-options/FindOptionsWhere.d.ts",
											"qualifiedName": "FindOptionsWhere"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 20547,
												"name": "TModel",
												"package": "@medusajs/medusa",
												"qualifiedName": "CustomFindOptions.TModel",
												"refersToTypeParameter": true
											}
										],
										"name": "FindOptionsWhere",
										"package": "typeorm"
									},
									{
										"type": "mapped",
										"parameter": "P",
										"parameterType": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "intrinsic",
													"name": "number"
												},
												{
													"type": "intrinsic",
													"name": "symbol"
												}
											]
										},
										"templateType": {
											"type": "array",
											"elementType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../packages/medusa/src/types/common.ts",
														"qualifiedName": "P"
													},
													"name": "P",
													"package": "@medusajs/medusa",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 20547,
													"name": "TModel",
													"package": "@medusajs/medusa",
													"qualifiedName": "CustomFindOptions.TModel",
													"refersToTypeParameter": true
												}
											}
										},
										"optionalModifier": "+"
									}
								]
							},
							{
								"type": "intersection",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../node_modules/typeorm/find-options/FindOptionsWhere.d.ts",
												"qualifiedName": "FindOptionsWhere"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": 20547,
													"name": "TModel",
													"package": "@medusajs/medusa",
													"qualifiedName": "CustomFindOptions.TModel",
													"refersToTypeParameter": true
												}
											],
											"name": "FindOptionsWhere",
											"package": "typeorm"
										}
									},
									{
										"type": "mapped",
										"parameter": "P",
										"parameterType": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "intrinsic",
													"name": "number"
												},
												{
													"type": "intrinsic",
													"name": "symbol"
												}
											]
										},
										"templateType": {
											"type": "array",
											"elementType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../packages/medusa/src/types/common.ts",
														"qualifiedName": "P"
													},
													"name": "P",
													"package": "@medusajs/medusa",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 20547,
													"name": "TModel",
													"package": "@medusajs/medusa",
													"qualifiedName": "CustomFindOptions.TModel",
													"refersToTypeParameter": true
												}
											}
										},
										"optionalModifier": "+"
									}
								]
							}
						]
					}
				},
				{
					"id": 20544,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/typeorm/find-options/OrderByCondition.d.ts",
							"qualifiedName": "OrderByCondition"
						},
						"name": "OrderByCondition",
						"package": "typeorm"
					}
				},
				{
					"id": 20545,
					"name": "skip",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 20546,
					"name": "take",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						20542,
						20543,
						20544,
						20545,
						20546
					]
				}
			],
			"typeParameters": [
				{
					"id": 20547,
					"name": "TModel",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 20548,
					"name": "InKeys",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "reference",
							"target": 20547,
							"name": "TModel",
							"package": "@medusajs/medusa",
							"qualifiedName": "CustomFindOptions.TModel",
							"refersToTypeParameter": true
						}
					}
				}
			]
		},
		{
			"id": 20549,
			"name": "QueryConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 20559,
					"name": "TEntity",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
							"qualifiedName": "BaseEntity"
						},
						"name": "BaseEntity",
						"package": "@medusajs/medusa"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 20550,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 20551,
							"name": "defaults",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Default fields and relations to return"
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"target": 20559,
												"name": "TEntity",
												"package": "@medusajs/medusa",
												"refersToTypeParameter": true
											}
										},
										{
											"type": "intrinsic",
											"name": "string"
										}
									]
								}
							}
						},
						{
							"id": 20552,
							"name": "defaultFields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "Use "
											},
											{
												"kind": "code",
												"text": "`defaults`"
											},
											{
												"kind": "text",
												"text": " instead"
											}
										]
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"target": 20559,
												"name": "TEntity",
												"package": "@medusajs/medusa",
												"refersToTypeParameter": true
											}
										},
										{
											"type": "intrinsic",
											"name": "string"
										}
									]
								}
							}
						},
						{
							"id": 20553,
							"name": "defaultRelations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "Use "
											},
											{
												"kind": "code",
												"text": "`defaultFields`"
											},
											{
												"kind": "text",
												"text": " instead and the relations will be inferred"
											}
										]
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 20554,
							"name": "allowed",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Fields and relations that are allowed to be requested"
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 20555,
							"name": "allowedFields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "Use "
											},
											{
												"kind": "code",
												"text": "`allowed`"
											},
											{
												"kind": "text",
												"text": " instead"
											}
										]
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 20556,
							"name": "allowedRelations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "Use "
											},
											{
												"kind": "code",
												"text": "`allowedFields`"
											},
											{
												"kind": "text",
												"text": " instead and the relations will be inferred"
											}
										]
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 20557,
							"name": "defaultLimit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 20558,
							"name": "isList",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								20551,
								20552,
								20553,
								20554,
								20555,
								20556,
								20557,
								20558
							]
						}
					]
				}
			}
		},
		{
			"id": 20560,
			"name": "RequestQueryFields",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Request parameters used to configure and paginate retrieved data."
					}
				]
			},
			"children": [
				{
					"id": 20561,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "Use "
									},
									{
										"kind": "code",
										"text": "`fields`"
									},
									{
										"kind": "text",
										"text": " instead and the relations will be inferred"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20562,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20563,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 20564,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 20565,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						20561,
						20562,
						20563,
						20564,
						20565
					]
				}
			]
		},
		{
			"id": 20566,
			"name": "PaginatedResponse",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Pagination fields returned in the response of an API route."
					}
				]
			},
			"children": [
				{
					"id": 20567,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum number of items that can be returned in the list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 20568,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items skipped before the returned items in the list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 20569,
					"name": "count",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total number of items available."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						20567,
						20568,
						20569
					]
				}
			]
		},
		{
			"id": 20570,
			"name": "DeleteResponse",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The response returned for a "
					},
					{
						"kind": "code",
						"text": "`DELETE`"
					},
					{
						"kind": "text",
						"text": " request."
					}
				]
			},
			"children": [
				{
					"id": 20571,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the deleted item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20572,
					"name": "object",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the deleted item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "product-collection"
				},
				{
					"id": 20573,
					"name": "deleted",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the item was deleted successfully."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": true
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						20571,
						20572,
						20573
					]
				}
			]
		},
		{
			"id": 20574,
			"name": "EmptyQueryParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 20575,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20576,
							"name": "new EmptyQueryParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20574,
								"name": "EmptyQueryParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20575
					]
				}
			]
		},
		{
			"id": 20577,
			"name": "DateComparisonOperator",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Fields used to apply flexible filters on dates."
					}
				]
			},
			"children": [
				{
					"id": 20578,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20579,
							"name": "new DateComparisonOperator",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20577,
								"name": "DateComparisonOperator",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20580,
					"name": "lt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered date must be less than this value."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 20581,
					"name": "gt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered date must be greater than this value."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 20582,
					"name": "gte",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered date must be greater than or equal to this value."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 20583,
					"name": "lte",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered date must be less than or equal to this value."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20578
					]
				},
				{
					"title": "Properties",
					"children": [
						20580,
						20581,
						20582,
						20583
					]
				}
			]
		},
		{
			"id": 20584,
			"name": "StringComparisonOperator",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Fields used to apply flexible filters on strings."
					}
				]
			},
			"children": [
				{
					"id": 20585,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20586,
							"name": "new StringComparisonOperator",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20584,
								"name": "StringComparisonOperator",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20587,
					"name": "lt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered string must be less than this value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20588,
					"name": "gt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered string must be greater than this value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20589,
					"name": "gte",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered string must be greater than or equal to this value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20590,
					"name": "lte",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered string must be less than or equal to this value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20591,
					"name": "contains",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered string must contain this value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20592,
					"name": "starts_with",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered string must start with this value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20593,
					"name": "ends_with",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered string must end with this value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20585
					]
				},
				{
					"title": "Properties",
					"children": [
						20587,
						20588,
						20589,
						20590,
						20591,
						20592,
						20593
					]
				}
			]
		},
		{
			"id": 20594,
			"name": "NumericalComparisonOperator",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Fields used to apply flexible filters on numbers."
					}
				]
			},
			"children": [
				{
					"id": 20595,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20596,
							"name": "new NumericalComparisonOperator",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20594,
								"name": "NumericalComparisonOperator",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20597,
					"name": "lt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered number must be less than this value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 20598,
					"name": "gt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered number must be greater than this value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 20599,
					"name": "gte",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered number must be greater than or equal to this value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 20600,
					"name": "lte",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered number must be less than or equal to this value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20595
					]
				},
				{
					"title": "Properties",
					"children": [
						20597,
						20598,
						20599,
						20600
					]
				}
			]
		},
		{
			"id": 20601,
			"name": "AddressPayload",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Address fields used when creating/updating an address."
					}
				]
			},
			"children": [
				{
					"id": 20602,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20603,
							"name": "new AddressPayload",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Address fields used when creating/updating an address."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 20601,
								"name": "AddressPayload",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20604,
					"name": "first_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "First name"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20605,
					"name": "last_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Last name"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20606,
					"name": "phone",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Phone Number"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20607,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 20608,
					"name": "company",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Company"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20609,
					"name": "address_1",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Address line 1"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20610,
					"name": "address_2",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Address line 2"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20611,
					"name": "city",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "City"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20612,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The 2 character ISO code of the country in lower case"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20613,
					"name": "province",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Province"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20614,
					"name": "postal_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Postal Code"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20602
					]
				},
				{
					"title": "Properties",
					"children": [
						20604,
						20605,
						20606,
						20607,
						20608,
						20609,
						20610,
						20611,
						20612,
						20613,
						20614
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 19919,
					"name": "StorePostCustomersCustomerAddressesAddressReq"
				}
			]
		},
		{
			"id": 20615,
			"name": "AddressCreatePayload",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Address fields used when creating an address."
					}
				]
			},
			"children": [
				{
					"id": 20616,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20617,
							"name": "new AddressCreatePayload",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Address fields used when creating an address."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 20615,
								"name": "AddressCreatePayload",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20618,
					"name": "first_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "First name"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20619,
					"name": "last_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Last name"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20620,
					"name": "phone",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Phone Number"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20621,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 20622,
					"name": "company",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20623,
					"name": "address_1",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Address line 1"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20624,
					"name": "address_2",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Address line 2"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20625,
					"name": "city",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "City"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20626,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The 2 character ISO code of the country in lower case"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20627,
					"name": "province",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Province"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20628,
					"name": "postal_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Postal Code"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20616
					]
				},
				{
					"title": "Properties",
					"children": [
						20618,
						20619,
						20620,
						20621,
						20622,
						20623,
						20624,
						20625,
						20626,
						20627,
						20628
					]
				}
			]
		},
		{
			"id": 20629,
			"name": "FindParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 20630,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20631,
							"name": "new FindParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20629,
								"name": "FindParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20632,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20633,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20630
					]
				},
				{
					"title": "Properties",
					"children": [
						20632,
						20633
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 17714,
					"name": "AdminGetCustomerGroupsGroupParams"
				},
				{
					"type": "reference",
					"target": 17803,
					"name": "AdminPostDiscountsDiscountConditionsParams"
				},
				{
					"type": "reference",
					"target": 17838,
					"name": "AdminPostDiscountsParams"
				},
				{
					"type": "reference",
					"target": 17849,
					"name": "AdminDeleteDiscountsDiscountConditionsConditionParams"
				},
				{
					"type": "reference",
					"target": 17854,
					"name": "AdminGetDiscountsDiscountConditionsConditionParams"
				},
				{
					"type": "reference",
					"target": 17859,
					"name": "AdminGetDiscountParams"
				},
				{
					"type": "reference",
					"target": 17864,
					"name": "AdminGetDiscountsDiscountCodeParams"
				},
				{
					"type": "reference",
					"target": 17892,
					"name": "AdminPostDiscountsDiscountConditionsConditionParams"
				},
				{
					"type": "reference",
					"target": 17927,
					"name": "AdminPostDiscountsDiscountParams"
				},
				{
					"type": "reference",
					"target": 17938,
					"name": "AdminPostDiscountsDiscountConditionsConditionBatchParams"
				},
				{
					"type": "reference",
					"target": 17943,
					"name": "AdminDeleteDiscountsDiscountConditionsConditionBatchParams"
				},
				{
					"type": "reference",
					"target": 18102,
					"name": "AdminPostInventoryItemsParams"
				},
				{
					"type": "reference",
					"target": 18113,
					"name": "AdminPostInventoryItemsItemLocationLevelsParams"
				},
				{
					"type": "reference",
					"target": 18118,
					"name": "AdminGetInventoryItemsItemParams"
				},
				{
					"type": "reference",
					"target": 18145,
					"name": "AdminGetInventoryItemsItemLocationLevelsParams"
				},
				{
					"type": "reference",
					"target": 18167,
					"name": "AdminPostInventoryItemsInventoryItemParams"
				},
				{
					"type": "reference",
					"target": 18177,
					"name": "AdminPostInventoryItemsItemLocationLevelsLevelParams"
				},
				{
					"type": "reference",
					"target": 18276,
					"name": "GetOrderEditsOrderEditParams"
				},
				{
					"type": "reference",
					"target": 18321,
					"name": "AdminPostOrdersOrderShippingMethodsParams"
				},
				{
					"type": "reference",
					"target": 18326,
					"name": "AdminPostOrdersOrderArchiveParams"
				},
				{
					"type": "reference",
					"target": 18331,
					"name": "AdminPostOrdersClaimCancel"
				},
				{
					"type": "reference",
					"target": 18342,
					"name": "AdminPostOrdersOrderFulfillementsCancelParams"
				},
				{
					"type": "reference",
					"target": 18347,
					"name": "AdminPostOrdersClaimFulfillmentsCancelParams"
				},
				{
					"type": "reference",
					"target": 18352,
					"name": "AdminPostOrdersOrderSwapFulfillementsCancelParams"
				},
				{
					"type": "reference",
					"target": 18357,
					"name": "AdminPostOrdersOrderCancel"
				},
				{
					"type": "reference",
					"target": 18362,
					"name": "AdminPostOrdersSwapCancelParams"
				},
				{
					"type": "reference",
					"target": 18367,
					"name": "AdminPostOrdersOrderCaptureParams"
				},
				{
					"type": "reference",
					"target": 18372,
					"name": "AdminPostOrdersOrderCompleteParams"
				},
				{
					"type": "reference",
					"target": 18390,
					"name": "AdminPostOrdersOrderClaimsParams"
				},
				{
					"type": "reference",
					"target": 18400,
					"name": "AdminPostOrdersOrderClaimsClaimShipmentsParams"
				},
				{
					"type": "reference",
					"target": 18419,
					"name": "AdminPostOrdersOrderFulfillmentsParams"
				},
				{
					"type": "reference",
					"target": 18430,
					"name": "AdminPostOrdersOrderShipmentParams"
				},
				{
					"type": "reference",
					"target": 18446,
					"name": "AdminPostOrdersOrderSwapsParams"
				},
				{
					"type": "reference",
					"target": 18457,
					"name": "AdminPostOrdersOrderSwapsSwapShipmentsParams"
				},
				{
					"type": "reference",
					"target": 18468,
					"name": "AdminPostOrdersOrderClaimsClaimFulfillmentsParams"
				},
				{
					"type": "reference",
					"target": 18479,
					"name": "AdminPostOrdersOrderSwapsSwapFulfillmentsParams"
				},
				{
					"type": "reference",
					"target": 18484,
					"name": "AdminGetOrdersOrderParams"
				},
				{
					"type": "reference",
					"target": 18513,
					"name": "AdminPostOrdersOrderSwapsSwapProcessPaymentParams"
				},
				{
					"type": "reference",
					"target": 18525,
					"name": "AdminPostOrdersOrderRefundsParams"
				},
				{
					"type": "reference",
					"target": 18540,
					"name": "AdminPostOrdersOrderReturnsParams"
				},
				{
					"type": "reference",
					"target": 18552,
					"name": "AdminPostOrdersOrderClaimsClaimParams"
				},
				{
					"type": "reference",
					"target": 18570,
					"name": "AdminPostOrdersOrderParams"
				},
				{
					"type": "reference",
					"target": 18585,
					"name": "AdminGetPaymentCollectionsParams"
				},
				{
					"type": "reference",
					"target": 18602,
					"name": "GetPaymentsParams"
				},
				{
					"type": "reference",
					"target": 18718,
					"name": "AdminGetProductCategoryParams"
				},
				{
					"type": "reference",
					"target": 18748,
					"name": "AdminPostProductCategoriesParams"
				},
				{
					"type": "reference",
					"target": 18764,
					"name": "AdminPostProductCategoriesCategoryParams"
				},
				{
					"type": "reference",
					"target": 18773,
					"name": "AdminPostProductCategoriesCategoryProductsBatchParams"
				},
				{
					"type": "reference",
					"target": 18782,
					"name": "AdminDeleteProductCategoriesCategoryProductsBatchParams"
				},
				{
					"type": "reference",
					"target": 18954,
					"name": "AdminGetProductParams"
				},
				{
					"type": "reference",
					"target": 19407,
					"name": "AdminPostStockLocationsParams"
				},
				{
					"type": "reference",
					"target": 19412,
					"name": "AdminGetStockLocationsLocationParams"
				},
				{
					"type": "reference",
					"target": 19438,
					"name": "AdminPostStockLocationsLocationParams"
				},
				{
					"type": "reference",
					"target": 19699,
					"name": "AdminGetVariantParams"
				},
				{
					"type": "reference",
					"target": 19726,
					"name": "AdminGetWorkflowExecutionDetailsParams"
				},
				{
					"type": "reference",
					"target": 19972,
					"name": "StoreGetOrdersParams"
				},
				{
					"type": "reference",
					"target": 19995,
					"name": "StoreGetPaymentCollectionsParams"
				},
				{
					"type": "reference",
					"target": 20027,
					"name": "StoreGetProductCategoriesCategoryParams"
				},
				{
					"type": "reference",
					"target": 20178,
					"name": "StoreGetRegionsRegionParams"
				},
				{
					"type": "reference",
					"target": 20270,
					"name": "AdminGetPromotionsPromotionParams"
				},
				{
					"type": "reference",
					"target": 21348,
					"name": "PriceSelectionParams"
				}
			]
		},
		{
			"id": 20634,
			"name": "FindPaginationParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how a list of data is paginated."
					}
				]
			},
			"children": [
				{
					"id": 20635,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20636,
							"name": "new FindPaginationParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20634,
								"name": "FindPaginationParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20637,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 20638,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n20\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20"
				},
				{
					"id": 20639,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20635
					]
				},
				{
					"title": "Properties",
					"children": [
						20637,
						20638,
						20639
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 17680,
					"name": "AdminGetCurrenciesParams"
				},
				{
					"type": "reference",
					"target": 18814,
					"name": "AdminGetProductTypesParams"
				},
				{
					"type": "reference",
					"target": 20051,
					"name": "StoreGetProductTagsParams"
				},
				{
					"type": "reference",
					"target": 20069,
					"name": "StoreGetProductTypesParams"
				}
			]
		},
		{
			"id": 20496,
			"name": "extendedFindParamsMixin",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 20497,
					"name": "extendedFindParamsMixin",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 20498,
							"name": "__namedParameters",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 20499,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 20500,
											"name": "limit",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 20501,
											"name": "offset",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 20502,
											"name": "order",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												20500,
												20501,
												20502
											]
										}
									]
								}
							},
							"defaultValue": "{}"
						}
					],
					"type": {
						"type": "reference",
						"target": 20644,
						"typeArguments": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": 20629,
										"name": "FindParams",
										"package": "@medusajs/medusa"
									},
									{
										"type": "reference",
										"target": 20634,
										"name": "FindPaginationParams",
										"package": "@medusajs/medusa"
									}
								]
							}
						],
						"name": "ClassConstructor",
						"package": "@medusajs/medusa"
					}
				}
			]
		},
		{
			"id": 20889,
			"name": "FilterableCustomerGroupProps",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply on the retrieved customer groups."
					}
				]
			},
			"children": [
				{
					"id": 20890,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20891,
							"name": "new FilterableCustomerGroupProps",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20889,
								"name": "FilterableCustomerGroupProps",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20892,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter customer groups by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 20584,
								"name": "StringComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 20893,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search customer groups by their name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20894,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Names to filter customer groups by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 20895,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the customer groups' "
							},
							{
								"kind": "code",
								"text": "`update_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 20896,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the customer groups' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 20897,
					"name": "discount_condition_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter customer groups by their associated discount condition's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20890
					]
				},
				{
					"title": "Properties",
					"children": [
						20892,
						20893,
						20894,
						20895,
						20896,
						20897
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 17719,
					"name": "AdminGetCustomerGroupsParams"
				}
			]
		},
		{
			"id": 20885,
			"name": "CustomerGroupsBatchCustomer",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 20886,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20887,
							"name": "new CustomerGroupsBatchCustomer",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20885,
								"name": "CustomerGroupsBatchCustomer",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20888,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ID of the customer"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20886
					]
				},
				{
					"title": "Properties",
					"children": [
						20888
					]
				}
			]
		},
		{
			"id": 20898,
			"name": "AdminListCustomerSelector",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters used to filter retrieved customers."
					}
				]
			},
			"children": [
				{
					"id": 20899,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20900,
							"name": "new AdminListCustomerSelector",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20898,
								"name": "AdminListCustomerSelector",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20901,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term used to search customers' email, first name, last name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20902,
					"name": "has_account",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter customers by whether they have an account."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 20903,
					"name": "groups",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter customers by the customer's customer groups."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 20904,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20905,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the customers' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 20906,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the customers' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20899
					]
				},
				{
					"title": "Properties",
					"children": [
						20901,
						20902,
						20903,
						20904,
						20905,
						20906
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 17754,
					"name": "AdminGetCustomersParams"
				}
			]
		},
		{
			"id": 20919,
			"name": "AdminGetDiscountsDiscountRuleParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply on discounts' rules."
					}
				]
			},
			"children": [
				{
					"id": 20920,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20921,
							"name": "new AdminGetDiscountsDiscountRuleParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20919,
								"name": "AdminGetDiscountsDiscountRuleParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20922,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Type to filter discount rules by."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/discount-rule.ts",
							"qualifiedName": "DiscountRuleType"
						},
						"name": "DiscountRuleType",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 20923,
					"name": "allocation",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Allocation to filter discount rules by."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/discount-rule.ts",
							"qualifiedName": "AllocationType"
						},
						"name": "AllocationType",
						"package": "@medusajs/medusa"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20920
					]
				},
				{
					"title": "Properties",
					"children": [
						20922,
						20923
					]
				}
			]
		},
		{
			"id": 20911,
			"name": "AdminUpsertConditionsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Fields to create or update a discount condition."
					}
				]
			},
			"children": [
				{
					"id": 20912,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20913,
							"name": "new AdminUpsertConditionsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20911,
								"name": "AdminUpsertConditionsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20914,
					"name": "products",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The products associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`products`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 20915,
					"name": "product_collections",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product collections associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`product_collections`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 20916,
					"name": "product_types",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product types associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`product_types`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 20917,
					"name": "product_tags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product tags associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`product_tags`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 20918,
					"name": "customer_groups",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer groups associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`customer_groups`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20912
					]
				},
				{
					"title": "Properties",
					"children": [
						20914,
						20915,
						20916,
						20917,
						20918
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 17794,
					"name": "AdminPostDiscountsDiscountConditions"
				},
				{
					"type": "reference",
					"target": 17829,
					"name": "AdminCreateCondition"
				},
				{
					"type": "reference",
					"target": 17884,
					"name": "AdminPostDiscountsDiscountConditionsCondition"
				},
				{
					"type": "reference",
					"target": 17917,
					"name": "AdminUpsertCondition"
				}
			]
		},
		{
			"id": 20942,
			"name": "DraftOrderStatusValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "open"
					},
					{
						"type": "literal",
						"value": "completed"
					}
				]
			}
		},
		{
			"id": 21527,
			"name": "FeatureFlagsResponse",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "reflection",
					"declaration": {
						"id": 21528,
						"name": "__type",
						"variant": "declaration",
						"kind": 65536,
						"flags": {},
						"children": [
							{
								"id": 21529,
								"name": "key",
								"variant": "declaration",
								"kind": 1024,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"id": 21530,
								"name": "value",
								"variant": "declaration",
								"kind": 1024,
								"flags": {},
								"type": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "boolean"
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Record"
											},
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "intrinsic",
													"name": "boolean"
												}
											],
											"name": "Record",
											"package": "typescript"
										}
									]
								}
							}
						],
						"groups": [
							{
								"title": "Properties",
								"children": [
									21529,
									21530
								]
							}
						]
					}
				}
			}
		},
		{
			"id": 20640,
			"name": "ExtendedRequest",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 20643,
					"name": "TEntity",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
							"qualifiedName": "e.Request"
						},
						"name": "Request",
						"package": "@types/express",
						"qualifiedName": "e.Request"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 20641,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 20642,
									"name": "resource",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 20643,
										"name": "TEntity",
										"package": "@medusajs/medusa",
										"refersToTypeParameter": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										20642
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 20644,
			"name": "ClassConstructor",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 20648,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 20645,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"signatures": [
						{
							"id": 20646,
							"name": "new ClassConstructor",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 20647,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 20648,
								"name": "T",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							}
						}
					]
				}
			}
		},
		{
			"id": 20649,
			"name": "MedusaContainer",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": 21455,
				"name": "coreMedusaContainer",
				"package": "medusa-core-utils",
				"qualifiedName": "MedusaContainer"
			}
		},
		{
			"id": 20650,
			"name": "Logger",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 20651,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 20652,
							"name": "panic",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 20653,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 20654,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 20655,
													"name": "data",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 20656,
							"name": "shouldLog",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 20657,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 20658,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 20659,
													"name": "level",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 20660,
							"name": "setLogLevel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 20661,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 20662,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 20663,
													"name": "level",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 20664,
							"name": "unsetLogLevel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 20665,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 20666,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 20667,
							"name": "activity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 20668,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 20669,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 20670,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 20671,
													"name": "config",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 20672,
							"name": "progress",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 20673,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 20674,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 20675,
													"name": "activityId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 20676,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 20677,
							"name": "error",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 20678,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 20679,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 20680,
													"name": "messageOrError",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 20681,
													"name": "error",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 20682,
							"name": "failure",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 20683,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 20684,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 20685,
													"name": "activityId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 20686,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 20687,
							"name": "success",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 20688,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 20689,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 20690,
													"name": "activityId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 20691,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 20692,
							"name": "debug",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 20693,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 20694,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 20695,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 20696,
							"name": "info",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 20697,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 20698,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 20699,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 20700,
							"name": "warn",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 20701,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 20702,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 20703,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 20704,
							"name": "log",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 20705,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 20706,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 20707,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isRest": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								20652,
								20656,
								20660,
								20664,
								20667,
								20672,
								20677,
								20682,
								20687,
								20692,
								20696,
								20700,
								20704
							]
						}
					]
				}
			}
		},
		{
			"id": 20708,
			"name": "Constructor",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 20712,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 20709,
					"name": "__type",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20710,
							"name": "__type",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 20711,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 20712,
								"name": "T",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							}
						}
					]
				}
			}
		},
		{
			"id": 20713,
			"name": "ConfigModule",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": 21466,
				"name": "CommonTypes.ConfigModule",
				"package": "@medusajs/types",
				"qualifiedName": "ConfigModule"
			}
		},
		{
			"id": 21037,
			"name": "AdminListOrdersSelector",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply on the retrieved orders."
					}
				]
			},
			"children": [
				{
					"id": 21038,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21039,
							"name": "new AdminListOrdersSelector",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21037,
								"name": "AdminListOrdersSelector",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21040,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search orders' shipping address, first name, email, and display ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21041,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ID to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21042,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Statuses to filter orders by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 21043,
					"name": "fulfillment_status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Fulfillment statuses to filter orders by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 21044,
					"name": "payment_status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Payment statuses to filter orders by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 21045,
					"name": "display_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Display ID to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21046,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Cart ID to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21047,
					"name": "customer_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Customer ID to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21048,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Email to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21049,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Regions to filter orders by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 21050,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Currency code to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21051,
					"name": "tax_rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Tax rate to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21052,
					"name": "sales_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sales channel IDs to filter orders by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 21053,
					"name": "canceled_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the orders' "
							},
							{
								"kind": "code",
								"text": "`canceled_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 21054,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the orders' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 21055,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the orders' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21038
					]
				},
				{
					"title": "Properties",
					"children": [
						21040,
						21041,
						21042,
						21043,
						21044,
						21045,
						21046,
						21047,
						21048,
						21049,
						21050,
						21051,
						21052,
						21053,
						21054,
						21055
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 18489,
					"name": "AdminGetOrdersParams"
				}
			]
		},
		{
			"id": 21056,
			"name": "OrdersReturnItem",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 21057,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21058,
							"name": "new OrdersReturnItem",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21056,
								"name": "OrdersReturnItem",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21059,
					"name": "item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Line Item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21060,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity of the Line Item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 21061,
					"name": "reason_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Return Reason to use."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21062,
					"name": "note",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional note with information about the Return."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21057
					]
				},
				{
					"title": "Properties",
					"children": [
						21059,
						21060,
						21061,
						21062
					]
				}
			]
		},
		{
			"id": 20714,
			"name": "PriceListType",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The type of price list."
					}
				]
			},
			"children": [
				{
					"id": 20715,
					"name": "SALE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list is used for a sale."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "sale"
					}
				},
				{
					"id": 20716,
					"name": "OVERRIDE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list is used to override original prices for specific conditions."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "override"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						20715,
						20716
					]
				}
			]
		},
		{
			"id": 20717,
			"name": "PriceListStatus",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The status of a price list."
					}
				]
			},
			"children": [
				{
					"id": 20718,
					"name": "ACTIVE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list is active, meaning its prices are applied to customers."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "active"
					}
				},
				{
					"id": 20719,
					"name": "DRAFT",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list is a draft, meaning its not yet applied to customers."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "draft"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						20718,
						20719
					]
				}
			]
		},
		{
			"id": 20720,
			"name": "FilterablePriceListProps",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply on the retrieved price lists."
					}
				]
			},
			"children": [
				{
					"id": 20721,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20722,
							"name": "new FilterablePriceListProps",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20720,
								"name": "FilterablePriceListProps",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20723,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter price lists by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20724,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search terms to search price lists' description, name, and customer group's name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20725,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Statuses to filter price lists by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 20717,
							"name": "PriceListStatus",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 20726,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Name to filter price lists by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20727,
					"name": "customer_groups",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter price lists by their associated customer groups."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 20728,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Description to filter price lists by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20729,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Types to filter price lists by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 20714,
							"name": "PriceListType",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 20730,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the price lists' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 20731,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the price lists' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 20732,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the price lists' "
							},
							{
								"kind": "code",
								"text": "`deleted_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20721
					]
				},
				{
					"title": "Properties",
					"children": [
						20723,
						20724,
						20725,
						20726,
						20727,
						20728,
						20729,
						20730,
						20731,
						20732
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 18679,
					"name": "AdminGetPriceListPaginationParams"
				}
			]
		},
		{
			"id": 20733,
			"name": "AdminPriceListPricesUpdateReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 20734,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20735,
							"name": "new AdminPriceListPricesUpdateReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20733,
								"name": "AdminPriceListPricesUpdateReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20736,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the price."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20737,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Region for which the price is used. This is only required if `currecny_code` is not provided."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20738,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The 3 character ISO currency code for which the price will be used. This is only required if `region_id` is not provided."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20739,
					"name": "variant_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Variant for which the price is used."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20740,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount to charge for the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 20741,
					"name": "min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The minimum quantity for which the price will be used."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 20742,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum quantity for which the price will be used."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20734
					]
				},
				{
					"title": "Properties",
					"children": [
						20736,
						20737,
						20738,
						20739,
						20740,
						20741,
						20742
					]
				}
			]
		},
		{
			"id": 20743,
			"name": "AdminPriceListPricesCreateReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 20744,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 20745,
							"name": "new AdminPriceListPricesCreateReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20743,
								"name": "AdminPriceListPricesCreateReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 20746,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Region for which the price is used. This is only required if `currecny_code` is not provided."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20747,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The 3 character ISO currency code for which the price will be used. This is only required if `region_id` is not provided."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20748,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount to charge for the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 20749,
					"name": "variant_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Variant for which the price is used."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 20750,
					"name": "min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The minimum quantity for which the price will be used."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 20751,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum quantity for which the price will be used."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						20744
					]
				},
				{
					"title": "Properties",
					"children": [
						20746,
						20747,
						20748,
						20749,
						20750,
						20751
					]
				}
			]
		},
		{
			"id": 20752,
			"name": "CreatePriceListInput",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 20753,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 20754,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 20755,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 20756,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20714,
								"name": "PriceListType",
								"package": "@medusajs/medusa"
							}
						},
						{
							"id": 20757,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 20717,
								"name": "PriceListStatus",
								"package": "@medusajs/medusa"
							}
						},
						{
							"id": 20758,
							"name": "prices",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 20743,
									"name": "AdminPriceListPricesCreateReq",
									"package": "@medusajs/medusa"
								}
							}
						},
						{
							"id": 20759,
							"name": "customer_groups",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 20760,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 20761,
												"name": "id",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													20761
												]
											}
										]
									}
								}
							}
						},
						{
							"id": 20762,
							"name": "starts_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 20763,
							"name": "ends_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 20764,
							"name": "includes_tax",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								20754,
								20755,
								20756,
								20757,
								20758,
								20759,
								20762,
								20763,
								20764
							]
						}
					]
				}
			}
		},
		{
			"id": 20765,
			"name": "UpdatePriceListInput",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Partial"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Pick"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/price-list.ts",
											"qualifiedName": "PriceList"
										},
										"name": "PriceList",
										"package": "@medusajs/medusa"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "name"
											},
											{
												"type": "literal",
												"value": "description"
											},
											{
												"type": "literal",
												"value": "starts_at"
											},
											{
												"type": "literal",
												"value": "ends_at"
											},
											{
												"type": "literal",
												"value": "status"
											},
											{
												"type": "literal",
												"value": "type"
											},
											{
												"type": "literal",
												"value": "includes_tax"
											}
										]
									}
								],
								"name": "Pick",
								"package": "typescript"
							}
						],
						"name": "Partial",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 20766,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 20767,
									"name": "prices",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 20733,
											"name": "AdminPriceListPricesUpdateReq",
											"package": "@medusajs/medusa"
										}
									}
								},
								{
									"id": 20768,
									"name": "customer_groups",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 20769,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 20770,
														"name": "id",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															20770
														]
													}
												]
											}
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										20767,
										20768
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 20771,
			"name": "PriceListPriceUpdateInput",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 20772,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 20773,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 20774,
							"name": "variant_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 20775,
							"name": "region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 20776,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 20777,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 20778,
							"name": "min_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 20779,
							"name": "max_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								20773,
								20774,
								20775,
								20776,
								20777,
								20778,
								20779
							]
						}
					]
				}
			}
		},
		{
			"id": 20780,
			"name": "PriceListPriceCreateInput",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 20781,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 20782,
							"name": "region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 20783,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 20784,
							"name": "variant_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 20785,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 20786,
							"name": "min_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 20787,
							"name": "max_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								20782,
								20783,
								20784,
								20785,
								20786,
								20787
							]
						}
					]
				}
			}
		},
		{
			"id": 20788,
			"name": "PriceListLoadConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 20789,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 20790,
							"name": "include_discount_prices",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 20791,
							"name": "customer_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 20792,
							"name": "cart_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 20793,
							"name": "region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 20794,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								20790,
								20791,
								20792,
								20793,
								20794
							]
						}
					]
				}
			}
		},
		{
			"id": 21348,
			"name": "PriceSelectionParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The context to apply on retrieved prices."
					}
				]
			},
			"children": [
				{
					"id": 21349,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21350,
							"name": "new PriceSelectionParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21348,
								"name": "PriceSelectionParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 20631,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 20630,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 21354,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20632,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 21355,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20633,
						"name": "FindParams.fields"
					}
				},
				{
					"id": 21351,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a cart ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21352,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a region ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21353,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a currency code."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21349
					]
				},
				{
					"title": "Properties",
					"children": [
						21354,
						21355,
						21351,
						21352,
						21353
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20629,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 20127,
					"name": "StoreGetProductsPaginationParams"
				},
				{
					"type": "reference",
					"target": 20243,
					"name": "StoreGetVariantsVariantParams"
				},
				{
					"type": "reference",
					"target": 20252,
					"name": "StoreGetVariantsParams"
				},
				{
					"type": "reference",
					"target": 21328,
					"name": "AdminPriceSelectionParams"
				}
			]
		},
		{
			"id": 21328,
			"name": "AdminPriceSelectionParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The context to apply on retrieved prices by a user admin."
					}
				]
			},
			"children": [
				{
					"id": 21329,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21330,
							"name": "new AdminPriceSelectionParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21328,
								"name": "AdminPriceSelectionParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 21350,
								"name": "PriceSelectionParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 21349,
						"name": "PriceSelectionParams.constructor"
					}
				},
				{
					"id": 21335,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21354,
						"name": "PriceSelectionParams.expand"
					}
				},
				{
					"id": 21336,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21355,
						"name": "PriceSelectionParams.fields"
					}
				},
				{
					"id": 21332,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a cart ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21351,
						"name": "PriceSelectionParams.cart_id"
					}
				},
				{
					"id": 21333,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a region ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21352,
						"name": "PriceSelectionParams.region_id"
					}
				},
				{
					"id": 21334,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a currency code."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 21353,
						"name": "PriceSelectionParams.currency_code"
					}
				},
				{
					"id": 21331,
					"name": "customer_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a customer ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21329
					]
				},
				{
					"title": "Properties",
					"children": [
						21335,
						21336,
						21332,
						21333,
						21334,
						21331
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 21348,
					"name": "PriceSelectionParams",
					"package": "@medusajs/medusa"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 19681,
					"name": "AdminGetVariantsParams"
				}
			]
		},
		{
			"id": 21532,
			"name": "ProductVariantPricing",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Pricing fields for product variants."
					}
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 21533,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 21534,
									"name": "prices",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The list of prices."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/money-amount.ts",
												"qualifiedName": "MoneyAmount"
											},
											"name": "MoneyAmount",
											"package": "@medusajs/medusa"
										}
									}
								},
								{
									"id": 21535,
									"name": "original_price",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The original price of the variant."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 21536,
									"name": "calculated_price",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The lowest price among the retrieved prices."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 21537,
									"name": "original_price_includes_tax",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Whether the "
											},
											{
												"kind": "code",
												"text": "`original_price`"
											},
											{
												"kind": "text",
												"text": " field includes taxes."
											}
										],
										"blockTags": [
											{
												"tag": "@featureFlag",
												"content": [
													{
														"kind": "text",
														"text": "tax_inclusive_pricing"
													}
												]
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 21538,
									"name": "calculated_price_includes_tax",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Whether the "
											},
											{
												"kind": "code",
												"text": "`calculated_price`"
											},
											{
												"kind": "text",
												"text": " field includes taxes."
											}
										],
										"blockTags": [
											{
												"tag": "@featureFlag",
												"content": [
													{
														"kind": "text",
														"text": "tax_inclusive_pricing"
													}
												]
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 21539,
									"name": "calculated_price_type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Either "
											},
											{
												"kind": "code",
												"text": "`default`"
											},
											{
												"kind": "text",
												"text": " if the "
											},
											{
												"kind": "code",
												"text": "`calculated_price`"
											},
											{
												"kind": "text",
												"text": " is the original price, or the type of the price list applied, if any."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										21534,
										21535,
										21536,
										21537,
										21538,
										21539
									]
								}
							]
						}
					},
					{
						"type": "reference",
						"target": 21638,
						"name": "TaxedPricing",
						"package": "@medusajs/medusa"
					}
				]
			}
		},
		{
			"id": 21638,
			"name": "TaxedPricing",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Pricing fields related to taxes."
					}
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 21639,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 21640,
							"name": "original_price_incl_tax",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The price after applying the tax amount on the original price."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 21641,
							"name": "calculated_price_incl_tax",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The price after applying the tax amount on the calculated price."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 21642,
							"name": "original_tax",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The tax amount applied to the original price."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 21643,
							"name": "calculated_tax",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The tax amount applied to the calculated price."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 21644,
							"name": "tax_rates",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The list of tax rates."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 21645,
											"name": "TaxServiceRate",
											"package": "@medusajs/medusa"
										}
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								21640,
								21641,
								21642,
								21643,
								21644
							]
						}
					]
				}
			}
		},
		{
			"id": 21540,
			"name": "ShippingOptionPricing",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 21541,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 21542,
							"name": "price_incl_tax",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Price including taxes"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 21543,
							"name": "tax_rates",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of applied tax rates"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 21645,
											"name": "TaxServiceRate",
											"package": "@medusajs/medusa"
										}
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 21544,
							"name": "tax_amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The taxes applied."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								21542,
								21543,
								21544
							]
						}
					]
				}
			}
		},
		{
			"id": 21367,
			"name": "PricedShippingOption",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Partial"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/shipping-option.ts",
									"qualifiedName": "ShippingOption"
								},
								"name": "ShippingOption",
								"package": "@medusajs/medusa"
							}
						],
						"name": "Partial",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": 21540,
						"name": "ShippingOptionPricing",
						"package": "@medusajs/medusa"
					}
				]
			}
		},
		{
			"id": 21327,
			"name": "PricedVariant",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Partial"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/product-variant.ts",
									"qualifiedName": "ProductVariant"
								},
								"name": "ProductVariant",
								"package": "@medusajs/medusa"
							}
						],
						"name": "Partial",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": 21532,
						"name": "ProductVariantPricing",
						"package": "@medusajs/medusa"
					}
				]
			}
		},
		{
			"id": 21123,
			"name": "PricedProduct",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Partial"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/product.ts",
											"qualifiedName": "Product"
										},
										"name": "Product",
										"package": "@medusajs/medusa"
									}
								],
								"name": "Partial",
								"package": "typescript"
							},
							{
								"type": "literal",
								"value": "variants"
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 21124,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 21125,
									"name": "variants",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The product variants and their prices."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 21327,
											"name": "PricedVariant",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										21125
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 21111,
			"name": "AdminProductCategoriesReqBase",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 21112,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21113,
							"name": "new AdminProductCategoriesReqBase",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21111,
								"name": "AdminProductCategoriesReqBase",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21114,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21115,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21116,
					"name": "is_internal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 21117,
					"name": "is_active",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 21118,
					"name": "parent_category_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21112
					]
				},
				{
					"title": "Properties",
					"children": [
						21114,
						21115,
						21116,
						21117,
						21118
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 18738,
					"name": "AdminPostProductCategoriesReq"
				},
				{
					"type": "reference",
					"target": 18753,
					"name": "AdminPostProductCategoriesCategoryReq"
				}
			]
		},
		{
			"id": 21119,
			"name": "ProductBatchProductCategory",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 21120,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21121,
							"name": "new ProductBatchProductCategory",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21119,
								"name": "ProductBatchProductCategory",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21122,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21120
					]
				},
				{
					"title": "Properties",
					"children": [
						21122
					]
				}
			]
		},
		{
			"id": 21227,
			"name": "ProductVariantPricesUpdateReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 21228,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21229,
							"name": "new ProductVariantPricesUpdateReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21227,
								"name": "ProductVariantPricesUpdateReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21230,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Price. If provided, the existing price will be updated. Otherwise, a new price will be created."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21231,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Region the price will be used in. This is only required if `currency_code` is not provided."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21232,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The 3 character ISO currency code the price will be used in. This is only required if `region_id` is not provided."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21233,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 21234,
					"name": "min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The minimum quantity required to be added to the cart for the price to be used."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 21235,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum quantity required to be added to the cart for the price to be used."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21228
					]
				},
				{
					"title": "Properties",
					"children": [
						21230,
						21231,
						21232,
						21233,
						21234,
						21235
					]
				}
			]
		},
		{
			"id": 21170,
			"name": "ProductVariantPricesCreateReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 21171,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21172,
							"name": "new ProductVariantPricesCreateReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21170,
								"name": "ProductVariantPricesCreateReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21173,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Region the price will be used in. This is only required if `currency_code` is not provided."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21174,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The 3 character ISO currency code the price will be used in. This is only required if `region_id` is not provided."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21175,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 21176,
					"name": "min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The minimum quantity required to be added to the cart for the price to be used."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 21177,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum quantity required to be added to the cart for the price to be used."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21171
					]
				},
				{
					"title": "Properties",
					"children": [
						21173,
						21174,
						21175,
						21176,
						21177
					]
				}
			]
		},
		{
			"id": 21183,
			"name": "FilterableProductProps",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply on retrieved products."
					}
				]
			},
			"children": [
				{
					"id": 21184,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21185,
							"name": "new FilterableProductProps",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21183,
								"name": "FilterableProductProps",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21186,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter products by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 21187,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search products' title, description, variants' title and sku, and collections' title."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21188,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Statuses to filter products by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../packages/medusa/src/models/product.ts",
								"qualifiedName": "ProductStatus"
							},
							"name": "ProductStatus",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 21189,
					"name": "price_list_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by their associated price lists' ID."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 21190,
					"name": "collection_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by their associated product collection's ID."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 21191,
					"name": "tags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by their associated tags' value."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 21192,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Title to filter products by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21193,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Description to filter products by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21194,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Handle to filter products by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21195,
					"name": "is_giftcard",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by whether they're gift cards."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 21196,
					"name": "type_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by their associated product type's ID."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 21197,
					"name": "sales_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by their associated sales channels' ID."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 21198,
					"name": "discount_condition_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by their associated discount condition's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21199,
					"name": "category_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by their associated product category's ID."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 21200,
					"name": "include_category_children",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether to include product category children in the response."
							}
						],
						"blockTags": [
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "text",
										"text": "product_categories"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 21201,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the products' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 21202,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the products' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 21203,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the products' "
							},
							{
								"kind": "code",
								"text": "`deleted_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20577,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21184
					]
				},
				{
					"title": "Properties",
					"children": [
						21186,
						21187,
						21188,
						21189,
						21190,
						21191,
						21192,
						21193,
						21194,
						21195,
						21196,
						21197,
						21198,
						21199,
						21200,
						21201,
						21202,
						21203
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 18959,
					"name": "AdminGetProductsParams"
				}
			]
		},
		{
			"id": 21136,
			"name": "ProductSalesChannelReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 21137,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21138,
							"name": "new ProductSalesChannelReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21136,
								"name": "ProductSalesChannelReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21139,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of an existing Sales channel."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21137
					]
				},
				{
					"title": "Properties",
					"children": [
						21139
					]
				}
			]
		},
		{
			"id": 21140,
			"name": "ProductProductCategoryReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 21141,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21142,
							"name": "new ProductProductCategoryReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21140,
								"name": "ProductProductCategoryReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21143,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of a Product Category."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21141
					]
				},
				{
					"title": "Properties",
					"children": [
						21143
					]
				}
			]
		},
		{
			"id": 21131,
			"name": "ProductTagReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 21132,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21133,
							"name": "new ProductTagReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21131,
								"name": "ProductTagReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21134,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of an existing Product Tag. If not provided, a new product tag will be created."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21135,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the Tag. If the `id` is provided, the value of the existing tag will be updated."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21132
					]
				},
				{
					"title": "Properties",
					"children": [
						21134,
						21135
					]
				}
			]
		},
		{
			"id": 21126,
			"name": "ProductTypeReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of a product type, used to create or update an existing product type."
					}
				]
			},
			"children": [
				{
					"id": 21127,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21128,
							"name": "new ProductTypeReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21126,
								"name": "ProductTypeReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21129,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product type. It's only required when referring to an existing product type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21130,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the product type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21127
					]
				},
				{
					"title": "Properties",
					"children": [
						21129,
						21130
					]
				}
			]
		},
		{
			"id": 20795,
			"name": "MedusaRequest",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 20818,
					"name": "user",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "unknown",
						"name": "(User | Customer) & { customer_id?: string | undefined; userId?: string | undefined; }"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Request.user"
					}
				},
				{
					"id": 20796,
					"name": "validatedBody",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 20819,
						"name": "Body",
						"package": "@medusajs/medusa",
						"qualifiedName": "MedusaRequest.Body",
						"refersToTypeParameter": true
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.validatedBody"
					}
				},
				{
					"id": 20797,
					"name": "validatedQuery",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 21474,
								"name": "RequestQueryFields",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.validatedQuery"
					}
				},
				{
					"id": 20798,
					"name": "allowedProperties",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "TODO: shouldn't this correspond to returnable fields instead of allowed fields? also it is used by the cleanResponseData util"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.allowedProperties"
					}
				},
				{
					"id": 20799,
					"name": "listConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing the select, relation, skip, take and order to be used with medusa internal services"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20511,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "FindConfig",
						"package": "@medusajs/medusa"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.listConfig"
					}
				},
				{
					"id": 20800,
					"name": "retrieveConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing the select, relation to be used with medusa internal services"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20511,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "FindConfig",
						"package": "@medusajs/medusa"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.retrieveConfig"
					}
				},
				{
					"id": 20801,
					"name": "remoteQueryConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing fields and variables to be used with the remoteQuery"
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 20802,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 20803,
									"name": "fields",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 20804,
									"name": "pagination",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 20805,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 20806,
													"name": "order",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												},
												{
													"id": 20807,
													"name": "skip",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 20808,
													"name": "take",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														20806,
														20807,
														20808
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										20803,
										20804
									]
								}
							]
						}
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.remoteQueryConfig"
					}
				},
				{
					"id": 20809,
					"name": "filterableFields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing the fields that are filterable e.g "
							},
							{
								"kind": "code",
								"text": "`{ id: Any<String> }`"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.filterableFields"
					}
				},
				{
					"id": 20810,
					"name": "includes",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.includes"
					}
				},
				{
					"id": 20811,
					"name": "allowedFields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of fields and relations that are allowed to be queried, this can be set by the\nconsumer as part of a middleware and it will take precedence over the defaultAllowedFields"
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "use "
									},
									{
										"kind": "code",
										"text": "`allowed`"
									},
									{
										"kind": "text",
										"text": " instead"
									}
								]
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.allowedFields"
					}
				},
				{
					"id": 20812,
					"name": "allowed",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of fields and relations that are allowed to be queried, this can be set by the\nconsumer as part of a middleware and it will take precedence over the defaultAllowedFields set\nby the api"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.allowed"
					}
				},
				{
					"id": 20813,
					"name": "errors",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.errors"
					}
				},
				{
					"id": 20814,
					"name": "scope",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 21480,
						"name": "MedusaContainer",
						"package": "@medusajs/types"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.scope"
					}
				},
				{
					"id": 20815,
					"name": "session",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 20816,
					"name": "rawBody",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 20817,
					"name": "requestId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.requestId"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						20818,
						20796,
						20797,
						20798,
						20799,
						20800,
						20801,
						20809,
						20810,
						20811,
						20812,
						20813,
						20814,
						20815,
						20816,
						20817
					]
				}
			],
			"typeParameters": [
				{
					"id": 20819,
					"name": "Body",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
						"qualifiedName": "e.Request"
					},
					"name": "Request",
					"package": "@types/express",
					"qualifiedName": "e.Request"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 20820,
					"name": "AuthenticatedMedusaRequest"
				}
			]
		},
		{
			"id": 20820,
			"name": "AuthenticatedMedusaRequest",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 20831,
					"name": "validatedBody",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 20853,
						"name": "Body",
						"package": "@medusajs/medusa",
						"qualifiedName": "AuthenticatedMedusaRequest.Body",
						"refersToTypeParameter": true
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20796,
						"name": "MedusaRequest.validatedBody"
					}
				},
				{
					"id": 20832,
					"name": "validatedQuery",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 21474,
								"name": "RequestQueryFields",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20797,
						"name": "MedusaRequest.validatedQuery"
					}
				},
				{
					"id": 20833,
					"name": "allowedProperties",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "TODO: shouldn't this correspond to returnable fields instead of allowed fields? also it is used by the cleanResponseData util"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20798,
						"name": "MedusaRequest.allowedProperties"
					}
				},
				{
					"id": 20834,
					"name": "listConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing the select, relation, skip, take and order to be used with medusa internal services"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20511,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "FindConfig",
						"package": "@medusajs/medusa"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20799,
						"name": "MedusaRequest.listConfig"
					}
				},
				{
					"id": 20835,
					"name": "retrieveConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing the select, relation to be used with medusa internal services"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 20511,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "FindConfig",
						"package": "@medusajs/medusa"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20800,
						"name": "MedusaRequest.retrieveConfig"
					}
				},
				{
					"id": 20836,
					"name": "remoteQueryConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing fields and variables to be used with the remoteQuery"
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 20837,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 20838,
									"name": "fields",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 20839,
									"name": "pagination",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 20840,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 20841,
													"name": "order",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												},
												{
													"id": 20842,
													"name": "skip",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 20843,
													"name": "take",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														20841,
														20842,
														20843
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										20838,
										20839
									]
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20801,
						"name": "MedusaRequest.remoteQueryConfig"
					}
				},
				{
					"id": 20844,
					"name": "filterableFields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing the fields that are filterable e.g "
							},
							{
								"kind": "code",
								"text": "`{ id: Any<String> }`"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20809,
						"name": "MedusaRequest.filterableFields"
					}
				},
				{
					"id": 20845,
					"name": "includes",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20810,
						"name": "MedusaRequest.includes"
					}
				},
				{
					"id": 20846,
					"name": "allowedFields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of fields and relations that are allowed to be queried, this can be set by the\nconsumer as part of a middleware and it will take precedence over the defaultAllowedFields"
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "use "
									},
									{
										"kind": "code",
										"text": "`allowed`"
									},
									{
										"kind": "text",
										"text": " instead"
									}
								]
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20811,
						"name": "MedusaRequest.allowedFields"
					}
				},
				{
					"id": 20847,
					"name": "allowed",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of fields and relations that are allowed to be queried, this can be set by the\nconsumer as part of a middleware and it will take precedence over the defaultAllowedFields set\nby the api"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20812,
						"name": "MedusaRequest.allowed"
					}
				},
				{
					"id": 20848,
					"name": "errors",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20813,
						"name": "MedusaRequest.errors"
					}
				},
				{
					"id": 20849,
					"name": "scope",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 21480,
						"name": "MedusaContainer",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20814,
						"name": "MedusaRequest.scope"
					}
				},
				{
					"id": 20850,
					"name": "session",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20815,
						"name": "MedusaRequest.session"
					}
				},
				{
					"id": 20851,
					"name": "rawBody",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20816,
						"name": "MedusaRequest.rawBody"
					}
				},
				{
					"id": 20852,
					"name": "requestId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 20817,
						"name": "MedusaRequest.requestId"
					}
				},
				{
					"id": 20821,
					"name": "user",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/user.ts",
											"qualifiedName": "User"
										},
										"name": "User",
										"package": "@medusajs/medusa"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/customer.ts",
											"qualifiedName": "Customer"
										},
										"name": "Customer",
										"package": "@medusajs/medusa"
									}
								]
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 20822,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 20823,
											"name": "customer_id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 20824,
											"name": "userId",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												20823,
												20824
											]
										}
									]
								}
							}
						]
					},
					"overwrites": {
						"type": "reference",
						"target": 20818,
						"name": "MedusaRequest.user"
					}
				},
				{
					"id": 20825,
					"name": "auth",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 20826,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 20827,
									"name": "actor_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 20828,
									"name": "auth_user_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 20829,
									"name": "app_metadata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 20830,
									"name": "scope",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										20827,
										20828,
										20829,
										20830
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						20831,
						20832,
						20833,
						20834,
						20835,
						20836,
						20844,
						20845,
						20846,
						20847,
						20848,
						20849,
						20850,
						20851,
						20852,
						20821,
						20825
					]
				}
			],
			"typeParameters": [
				{
					"id": 20853,
					"name": "Body",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "never"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 20795,
					"typeArguments": [
						{
							"type": "reference",
							"target": 20853,
							"name": "Body",
							"package": "@medusajs/medusa",
							"qualifiedName": "AuthenticatedMedusaRequest.Body",
							"refersToTypeParameter": true
						}
					],
					"name": "MedusaRequest",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 20854,
			"name": "MedusaResponse",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
					"qualifiedName": "e.Response"
				},
				"name": "Response",
				"package": "@types/express",
				"qualifiedName": "e.Response"
			}
		},
		{
			"id": 20855,
			"name": "MedusaNextFunction",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
					"qualifiedName": "e.NextFunction"
				},
				"name": "NextFunction",
				"package": "@types/express",
				"qualifiedName": "e.NextFunction"
			}
		},
		{
			"id": 20856,
			"name": "MedusaRequestHandler",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 20857,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"signatures": [
						{
							"id": 20858,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 20859,
									"name": "req",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 20795,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "MedusaRequest",
										"package": "@medusajs/medusa"
									}
								},
								{
									"id": 20860,
									"name": "res",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 20854,
										"name": "MedusaResponse",
										"package": "@medusajs/medusa"
									}
								},
								{
									"id": 20861,
									"name": "next",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 20855,
										"name": "MedusaNextFunction",
										"package": "@medusajs/medusa"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 21241,
			"name": "ProductBatchSalesChannel",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 21242,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21243,
							"name": "new ProductBatchSalesChannel",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21241,
								"name": "ProductBatchSalesChannel",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 21244,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the sales channel"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						21242
					]
				},
				{
					"title": "Properties",
					"children": [
						21244
					]
				}
			]
		},
		{
			"id": 20862,
			"name": "ScheduledJobConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 20867,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 20863,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 20864,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the job"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 20865,
							"name": "schedule",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The cron schedule of the job, e.g. "
									},
									{
										"kind": "code",
										"text": "`0 0 * * *`"
									},
									{
										"kind": "text",
										"text": " for running every day at midnight."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 20866,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An optional data object to pass to the job handler"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 20867,
								"name": "T",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								20864,
								20865,
								20866
							]
						}
					]
				}
			}
		},
		{
			"id": 20868,
			"name": "ScheduledJobArgs",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 20873,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 20869,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 20870,
							"name": "container",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21480,
								"name": "MedusaContainer",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 20871,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 20873,
								"name": "T",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 20872,
							"name": "pluginOptions",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								20870,
								20871,
								20872
							]
						}
					]
				}
			}
		},
		{
			"id": 21531,
			"name": "ModulesResponse",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 21634,
				"name": "sdkModulesResponse",
				"package": "@medusajs/types",
				"qualifiedName": "ModulesResponse"
			}
		},
		{
			"id": 21314,
			"name": "ExtendedStoreDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/store.ts",
							"qualifiedName": "Store"
						},
						"name": "Store",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 21315,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 21316,
									"name": "payment_providers",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The store's payment providers."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/payment-provider.ts",
												"qualifiedName": "PaymentProvider"
											},
											"name": "PaymentProvider",
											"package": "@medusajs/medusa"
										}
									}
								},
								{
									"id": 21317,
									"name": "fulfillment_providers",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The store's fulfillment providers."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/fulfillment-provider.ts",
												"qualifiedName": "FulfillmentProvider"
											},
											"name": "FulfillmentProvider",
											"package": "@medusajs/medusa"
										}
									}
								},
								{
									"id": 21318,
									"name": "feature_flags",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The feature flags enabled in the store's backend."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 21527,
										"name": "FeatureFlagsResponse",
										"package": "@medusajs/medusa"
									}
								},
								{
									"id": 21319,
									"name": "modules",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The modules installed in the store's backend."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 21531,
										"name": "ModulesResponse",
										"package": "@medusajs/medusa"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										21316,
										21317,
										21318,
										21319
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 21491,
			"name": "SubscriberContext",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 21492,
					"name": "subscriberId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						21492
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Record"
					},
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "string"
						},
						{
							"type": "intrinsic",
							"name": "unknown"
						}
					],
					"name": "Record",
					"package": "typescript"
				}
			]
		},
		{
			"id": 20874,
			"name": "SubscriberConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 20875,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 20876,
							"name": "event",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 20877,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 21491,
								"name": "SubscriberContext",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								20876,
								20877
							]
						}
					]
				}
			}
		},
		{
			"id": 20878,
			"name": "SubscriberArgs",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 20884,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 20879,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 20880,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 20884,
								"name": "T",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 20881,
							"name": "eventName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 20882,
							"name": "container",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21480,
								"name": "MedusaContainer",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 20883,
							"name": "pluginOptions",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								20880,
								20881,
								20882,
								20883
							]
						}
					]
				}
			}
		},
		{
			"id": 21645,
			"name": "TaxServiceRate",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The tax rate object as configured in Medusa. These may have an unspecified\nnumerical rate as they may be used for lookup purposes in the tax provider\nplugin."
					}
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 21646,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 21647,
							"name": "rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The tax rate."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 21648,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The tax rate's name."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 21649,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The tax rate's code."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								21647,
								21648,
								21649
							]
						}
					]
				}
			}
		},
		{
			"id": 21323,
			"name": "UserRole",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 21324,
					"name": "MEMBER",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "member"
					}
				},
				{
					"id": 21325,
					"name": "ADMIN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "admin"
					}
				},
				{
					"id": 21326,
					"name": "DEVELOPER",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "developer"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						21324,
						21325,
						21326
					]
				}
			]
		},
		{
			"id": 21474,
			"name": "RequestQueryFields",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Fields that can be passed in the query parameters of a request."
					}
				]
			},
			"children": [
				{
					"id": 21475,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21476,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21477,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 21478,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 21479,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Field to sort items in the list by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						21475,
						21476,
						21477,
						21478,
						21479
					]
				}
			]
		},
		{
			"id": 20979,
			"name": "PaginatedResponse",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Fields included in the response if it's paginated."
					}
				]
			},
			"children": [
				{
					"id": 20980,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The limit applied on the retrieved items."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 20981,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items skipped before retrieving the list of items."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 20982,
					"name": "count",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total count of items."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						20980,
						20981,
						20982
					]
				}
			],
			"typeParameters": [
				{
					"id": 20983,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			]
		},
		{
			"id": 21284,
			"name": "DeleteResponse",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The fields returned in the response of a DELETE request."
					}
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 21285,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 21286,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 21287,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "stock_location"
						},
						{
							"id": 21288,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": true
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								21286,
								21287,
								21288
							]
						}
					]
				}
			}
		},
		{
			"id": 21665,
			"name": "SessionOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Options to pass to "
					},
					{
						"kind": "code",
						"text": "`express-session`"
					},
					{
						"kind": "text",
						"text": "."
					}
				]
			},
			"children": [
				{
					"id": 21666,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the session ID cookie to set in the response (and read from in the request). The default value is "
							},
							{
								"kind": "code",
								"text": "`connect.sid`"
							},
							{
								"kind": "text",
								"text": ".\nRefer to [express-session’s documentation](https://www.npmjs.com/package/express-session#name) for more details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21667,
					"name": "resave",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the session should be saved back to the session store, even if the session was never modified during the request. The default value is "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": ".\nRefer to [express-session’s documentation](https://www.npmjs.com/package/express-session#resave) for more details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 21668,
					"name": "rolling",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the session identifier cookie should be force-set on every response. The default value is "
							},
							{
								"kind": "code",
								"text": "`false`"
							},
							{
								"kind": "text",
								"text": ".\nRefer to [express-session’s documentation](https://www.npmjs.com/package/express-session#rolling) for more details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 21669,
					"name": "saveUninitialized",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether a session that is \"uninitialized\" is forced to be saved to the store. The default value is "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": ".\nRefer to [express-session’s documentation](https://www.npmjs.com/package/express-session#saveUninitialized) for more details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 21670,
					"name": "secret",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The secret to sign the session ID cookie. By default, the value of "
							},
							{
								"kind": "code",
								"text": "`cookie_secret`"
							},
							{
								"kind": "text",
								"text": " is used.\nRefer to [express-session’s documentation](https://www.npmjs.com/package/express-session#secret) for details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21671,
					"name": "ttl",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Used when calculating the "
							},
							{
								"kind": "code",
								"text": "`Expires`"
							},
							{
								"kind": "text",
								"text": " "
							},
							{
								"kind": "code",
								"text": "`Set-Cookie`"
							},
							{
								"kind": "text",
								"text": " attribute of cookies. By default, its value is "
							},
							{
								"kind": "code",
								"text": "`10 * 60 * 60 * 1000`"
							},
							{
								"kind": "text",
								"text": ".\nRefer to [express-session’s documentation](https://www.npmjs.com/package/express-session#cookiemaxage) for details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						21666,
						21667,
						21668,
						21669,
						21670,
						21671
					]
				}
			]
		},
		{
			"id": 21672,
			"name": "HttpCompressionOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "HTTP compression configurations."
					}
				]
			},
			"children": [
				{
					"id": 21673,
					"name": "enabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether HTTP compression is enabled. By default, it's "
							},
							{
								"kind": "code",
								"text": "`false`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 21674,
					"name": "level",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The level of zlib compression to apply to responses. A higher level will result in better compression but will take longer to complete.\nA lower level will result in less compression but will be much faster. The default value is "
							},
							{
								"kind": "code",
								"text": "`6`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 21675,
					"name": "memLevel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "How much memory should be allocated to the internal compression state. It's an integer in the range of 1 (minimum level) and 9 (maximum level).\nThe default value is "
							},
							{
								"kind": "code",
								"text": "`8`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 21676,
					"name": "threshold",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The minimum response body size that compression is applied on. Its value can be the number of bytes or any string accepted by the\n[bytes](https://www.npmjs.com/package/bytes) module. The default value is "
							},
							{
								"kind": "code",
								"text": "`1024`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						21673,
						21674,
						21675,
						21676
					]
				}
			]
		},
		{
			"id": 21581,
			"name": "ProjectConfigOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Essential configurations related to the Medusa backend, such as database and CORS configurations."
					}
				]
			},
			"children": [
				{
					"id": 21582,
					"name": "store_cors",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Medusa backend’s API Routes are protected by Cross-Origin Resource Sharing (CORS). So, only allowed URLs or URLs matching a specified pattern can send requests to the backend’s API Routes.\n\n"
							},
							{
								"kind": "code",
								"text": "`store_cors`"
							},
							{
								"kind": "text",
								"text": " is a string used to specify the accepted URLs or patterns for store API Routes. It can either be one accepted origin, or a comma-separated list of accepted origins.\n\nEvery origin in that list must either be:\n\n1. A URL. For example, "
							},
							{
								"kind": "code",
								"text": "`http://localhost:8000`"
							},
							{
								"kind": "text",
								"text": ". The URL must not end with a backslash;\n2. Or a regular expression pattern that can match more than one origin. For example, "
							},
							{
								"kind": "code",
								"text": "`.example.com`"
							},
							{
								"kind": "text",
								"text": ". The regex pattern that the backend tests for is "
							},
							{
								"kind": "code",
								"text": "`^([/~@;%#'])(.*?)\\1([gimsuy]*)$`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "Some example values of common use cases:\n\n"
									},
									{
										"kind": "code",
										"text": "```bash\n# Allow different ports locally starting with 800\nSTORE_CORS=/http://localhost:800\\d+$/\n\n# Allow any origin ending with vercel.app. For example, storefront.vercel.app\nSTORE_CORS=/vercel\\.app$/\n\n# Allow all HTTP requests\nSTORE_CORS=/http://.+/\n```"
									},
									{
										"kind": "text",
										"text": "\n\nThen, set the configuration in "
									},
									{
										"kind": "code",
										"text": "`medusa-config.js`"
									},
									{
										"kind": "text",
										"text": ":\n\n"
									},
									{
										"kind": "code",
										"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    store_cors: process.env.STORE_CORS,\n    // ...\n  },\n  // ...\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\nIf you’re adding the value directly within "
									},
									{
										"kind": "code",
										"text": "`medusa-config.js`"
									},
									{
										"kind": "text",
										"text": ", make sure to add an extra escaping "
									},
									{
										"kind": "code",
										"text": "`/`"
									},
									{
										"kind": "text",
										"text": " for every backslash in the pattern. For example:\n\n"
									},
									{
										"kind": "code",
										"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    store_cors: \"/vercel\\\\.app$/\",\n    // ...\n  },\n  // ...\n}\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21583,
					"name": "admin_cors",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Medusa backend’s API Routes are protected by Cross-Origin Resource Sharing (CORS). So, only allowed URLs or URLs matching a specified pattern can send requests to the backend’s API Routes.\n\n"
							},
							{
								"kind": "code",
								"text": "`admin_cors`"
							},
							{
								"kind": "text",
								"text": " is a string used to specify the accepted URLs or patterns for admin API Routes. It can either be one accepted origin, or a comma-separated list of accepted origins.\n\nEvery origin in that list must either be:\n\n1. A URL. For example, "
							},
							{
								"kind": "code",
								"text": "`http://localhost:7001`"
							},
							{
								"kind": "text",
								"text": ". The URL must not end with a backslash;\n2. Or a regular expression pattern that can match more than one origin. For example, "
							},
							{
								"kind": "code",
								"text": "`.example.com`"
							},
							{
								"kind": "text",
								"text": ". The regex pattern that the backend tests for is "
							},
							{
								"kind": "code",
								"text": "`^([/~@;%#'])(.*?)\\1([gimsuy]*)$`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "Some example values of common use cases:\n\n"
									},
									{
										"kind": "code",
										"text": "```bash\n# Allow different ports locally starting with 700\nADMIN_CORS=/http://localhost:700\\d+$/\n\n# Allow any origin ending with vercel.app. For example, admin.vercel.app\nADMIN_CORS=/vercel\\.app$/\n\n# Allow all HTTP requests\nADMIN_CORS=/http://.+/\n```"
									},
									{
										"kind": "text",
										"text": "\n\nThen, set the configuration in "
									},
									{
										"kind": "code",
										"text": "`medusa-config.js`"
									},
									{
										"kind": "text",
										"text": ":\n\n"
									},
									{
										"kind": "code",
										"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    admin_cors: process.env.ADMIN_CORS,\n    // ...\n  },\n  // ...\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\nIf you’re adding the value directly within "
									},
									{
										"kind": "code",
										"text": "`medusa-config.js`"
									},
									{
										"kind": "text",
										"text": ", make sure to add an extra escaping "
									},
									{
										"kind": "code",
										"text": "`/`"
									},
									{
										"kind": "text",
										"text": " for every backslash in the pattern. For example:\n\n"
									},
									{
										"kind": "code",
										"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    admin_cors: \"/http:\\\\/\\\\/localhost:700\\\\d+$/\",\n    // ...\n  },\n  // ...\n}\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21584,
					"name": "auth_cors",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Medusa backend’s API Routes are protected by Cross-Origin Resource Sharing (CORS). So, only allowed URLs or URLs matching a specified pattern can send requests to the backend’s API Routes.\n\n"
							},
							{
								"kind": "code",
								"text": "`auth_cors`"
							},
							{
								"kind": "text",
								"text": " is a string used to specify the accepted URLs or patterns for API Routes starting with "
							},
							{
								"kind": "code",
								"text": "`/auth`"
							},
							{
								"kind": "text",
								"text": ". It can either be one accepted origin, or a comma-separated list of accepted origins.\n\nEvery origin in that list must either be:\n\n1. A URL. For example, "
							},
							{
								"kind": "code",
								"text": "`http://localhost:7001`"
							},
							{
								"kind": "text",
								"text": ". The URL must not end with a backslash;\n2. Or a regular expression pattern that can match more than one origin. For example, "
							},
							{
								"kind": "code",
								"text": "`.example.com`"
							},
							{
								"kind": "text",
								"text": ". The regex pattern that the backend tests for is "
							},
							{
								"kind": "code",
								"text": "`^([/~@;%#'])(.*?)\\1([gimsuy]*)$`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "Some example values of common use cases:\n\n"
									},
									{
										"kind": "code",
										"text": "```bash\n# Allow different ports locally starting with 700\nAUTH_CORS=/http://localhost:700\\d+$/\n\n# Allow any origin ending with vercel.app. For example, admin.vercel.app\nAUTH_CORS=/vercel\\.app$/\n\n# Allow all HTTP requests\nAUTH_CORS=/http://.+/\n```"
									},
									{
										"kind": "text",
										"text": "\n\nThen, set the configuration in "
									},
									{
										"kind": "code",
										"text": "`medusa-config.js`"
									},
									{
										"kind": "text",
										"text": ":\n\n"
									},
									{
										"kind": "code",
										"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    auth_cors: process.env.AUTH_CORS,\n    // ...\n  },\n  // ...\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\nIf you’re adding the value directly within "
									},
									{
										"kind": "code",
										"text": "`medusa-config.js`"
									},
									{
										"kind": "text",
										"text": ", make sure to add an extra escaping "
									},
									{
										"kind": "code",
										"text": "`/`"
									},
									{
										"kind": "text",
										"text": " for every backslash in the pattern. For example:\n\n"
									},
									{
										"kind": "code",
										"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    auth_cors: \"/http:\\\\/\\\\/localhost:700\\\\d+$/\",\n    // ...\n  },\n  // ...\n}\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21585,
					"name": "cookie_secret",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A random string used to create cookie tokens. Although this configuration option is not required, it’s highly recommended to set it for better security.\n\nIn a development environment, if this option is not set, the default secret is "
							},
							{
								"kind": "code",
								"text": "`supersecret`"
							},
							{
								"kind": "text",
								"text": " However, in production, if this configuration is not set, an error is thrown and\nthe backend crashes."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    cookie_secret: process.env.COOKIE_SECRET ||\n      \"supersecret\",\n    // ...\n  },\n  // ...\n}\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21586,
					"name": "jwt_secret",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A random string used to create authentication tokens. Although this configuration option is not required, it’s highly recommended to set it for better security.\n\nIn a development environment, if this option is not set the default secret is "
							},
							{
								"kind": "code",
								"text": "`supersecret`"
							},
							{
								"kind": "text",
								"text": " However, in production, if this configuration is not set an error, an\nerror is thrown and the backend crashes."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    jwt_secret: process.env.JWT_SECRET ||\n      \"supersecret\",\n    // ...\n  },\n  // ...\n}\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21587,
					"name": "database_database",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the database to connect to. If specified in "
							},
							{
								"kind": "code",
								"text": "`database_url`"
							},
							{
								"kind": "text",
								"text": ", then it’s not required to include it.\n\nMake sure to create the PostgreSQL database before using it. You can check how to create a database in\n[PostgreSQL's documentation](https://www.postgresql.org/docs/current/sql-createdatabase.html)."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    database_database: process.env.DATABASE_DATABASE ||\n      \"medusa-store\",\n    // ...\n  },\n  // ...\n}\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21588,
					"name": "database_url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The connection URL of the database. The format of the connection URL for PostgreSQL is:\n\n"
							},
							{
								"kind": "code",
								"text": "```bash\npostgres://[user][:password]@[host][:port]/[dbname]\n```"
							},
							{
								"kind": "text",
								"text": "\n\nWhere:\n\n- "
							},
							{
								"kind": "code",
								"text": "`[user]`"
							},
							{
								"kind": "text",
								"text": ": (required) your PostgreSQL username. If not specified, the system's username is used by default. The database user that you use must have create privileges. If you're using the "
							},
							{
								"kind": "code",
								"text": "`postgres`"
							},
							{
								"kind": "text",
								"text": " superuser, then it should have these privileges by default. Otherwise, make sure to grant your user create privileges. You can learn how to do that in [PostgreSQL's documentation](https://www.postgresql.org/docs/current/ddl-priv.html).\n- "
							},
							{
								"kind": "code",
								"text": "`[:password]`"
							},
							{
								"kind": "text",
								"text": ": an optional password for the user. When provided, make sure to put "
							},
							{
								"kind": "code",
								"text": "`:`"
							},
							{
								"kind": "text",
								"text": " before the password.\n- "
							},
							{
								"kind": "code",
								"text": "`[host]`"
							},
							{
								"kind": "text",
								"text": ": (required) your PostgreSQL host. When run locally, it should be "
							},
							{
								"kind": "code",
								"text": "`localhost`"
							},
							{
								"kind": "text",
								"text": ".\n- "
							},
							{
								"kind": "code",
								"text": "`[:port]`"
							},
							{
								"kind": "text",
								"text": ": an optional port that the PostgreSQL server is listening on. By default, it's "
							},
							{
								"kind": "code",
								"text": "`5432`"
							},
							{
								"kind": "text",
								"text": ". When provided, make sure to put "
							},
							{
								"kind": "code",
								"text": "`:`"
							},
							{
								"kind": "text",
								"text": " before the port.\n- "
							},
							{
								"kind": "code",
								"text": "`[dbname]`"
							},
							{
								"kind": "text",
								"text": ": (required) the name of the database.\n\nYou can learn more about the connection URL format in [PostgreSQL’s documentation](https://www.postgresql.org/docs/current/libpq-connect.html)."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "For example, set the following database URL in your environment variables:\n\n"
									},
									{
										"kind": "code",
										"text": "```bash\nDATABASE_URL=postgres://postgres@localhost/medusa-store\n```"
									},
									{
										"kind": "text",
										"text": "\n\nThen, use the value in "
									},
									{
										"kind": "code",
										"text": "`medusa-config.js`"
									},
									{
										"kind": "text",
										"text": ":\n\n"
									},
									{
										"kind": "code",
										"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    database_url: process.env.DATABASE_URL,\n    // ...\n  },\n  // ...\n}\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21589,
					"name": "database_schema",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The database schema to connect to. This is not required to provide if you’re using the default schema, which is "
							},
							{
								"kind": "code",
								"text": "`public`"
							},
							{
								"kind": "text",
								"text": ".\n\n"
							},
							{
								"kind": "code",
								"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    database_schema: process.env.DATABASE_SCHEMA ||\n      \"custom\",\n    // ...\n  },\n  // ...\n}\n```"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21590,
					"name": "database_logging",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This configuration specifies what database messages to log. Its value can be one of the following:\n\n- (default) A boolean value that indicates whether any messages should be logged.\n- The string value "
							},
							{
								"kind": "code",
								"text": "`all`"
							},
							{
								"kind": "text",
								"text": " that indicates all types of messages should be logged.\n- An array of log-level strings to indicate which type of messages to show in the logs. The strings can be "
							},
							{
								"kind": "code",
								"text": "`query`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`schema`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`error`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`warn`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`info`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`log`"
							},
							{
								"kind": "text",
								"text": ", or "
							},
							{
								"kind": "code",
								"text": "`migration`"
							},
							{
								"kind": "text",
								"text": ". Refer to [Typeorm’s documentation](https://typeorm.io/logging#logging-options) for more details on what each of these values means.\n\nIf this configuration isn't set, its default value is "
							},
							{
								"kind": "code",
								"text": "`false`"
							},
							{
								"kind": "text",
								"text": ", meaning no database messages are logged."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    database_logging: [\n      \"query\", \"error\",\n    ],\n    // ...\n  },\n  // ...\n}\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/typeorm/logger/LoggerOptions.d.ts",
							"qualifiedName": "LoggerOptions"
						},
						"name": "LoggerOptions",
						"package": "typeorm"
					}
				},
				{
					"id": 21592,
					"name": "database_extra",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object that includes additional configurations to pass to the database connection. You can pass any configuration. One defined configuration to pass is\n"
							},
							{
								"kind": "code",
								"text": "`ssl`"
							},
							{
								"kind": "text",
								"text": " which enables support for TLS/SSL connections.\n\nThis is useful for production databases, which can be supported by setting the "
							},
							{
								"kind": "code",
								"text": "`rejectUnauthorized`"
							},
							{
								"kind": "text",
								"text": " attribute of "
							},
							{
								"kind": "code",
								"text": "`ssl`"
							},
							{
								"kind": "text",
								"text": " object to "
							},
							{
								"kind": "code",
								"text": "`false`"
							},
							{
								"kind": "text",
								"text": ".\nDuring development, it’s recommended not to pass this option."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    database_extra:\n      process.env.NODE_ENV !== \"development\"\n        ? { ssl: { rejectUnauthorized: false } }\n        : {},\n    // ...\n  },\n  // ...\n}\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 21593,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 21594,
											"name": "ssl",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure support for TLS/SSL connection"
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 21595,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 21596,
															"name": "rejectUnauthorized",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Whether to fail connection if the server certificate is verified against the list of supplied CAs and the hostname and no match is found."
																	}
																]
															},
															"type": {
																"type": "literal",
																"value": false
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																21596
															]
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												21594
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 21597,
					"name": "database_driver_options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object that includes additional configurations to pass to the database connection for v2. You can pass any configuration. One defined configuration to pass is\n"
							},
							{
								"kind": "code",
								"text": "`ssl`"
							},
							{
								"kind": "text",
								"text": " which enables support for TLS/SSL connections.\n\nThis is useful for production databases, which can be supported by setting the "
							},
							{
								"kind": "code",
								"text": "`rejectUnauthorized`"
							},
							{
								"kind": "text",
								"text": " attribute of "
							},
							{
								"kind": "code",
								"text": "`ssl`"
							},
							{
								"kind": "text",
								"text": " object to "
							},
							{
								"kind": "code",
								"text": "`false`"
							},
							{
								"kind": "text",
								"text": ".\nDuring development, it’s recommended not to pass this option."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    database_driver_options:\n      process.env.NODE_ENV !== \"development\"\n        ? { connection: { ssl: { rejectUnauthorized: false } } }\n        : {},\n    // ...\n  },\n  // ...\n}\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 21598,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 21599,
											"name": "connection",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 21600,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 21601,
															"name": "ssl",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Configure support for TLS/SSL connection"
																	}
																]
															},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 21602,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 21603,
																			"name": "rejectUnauthorized",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "Whether to fail connection if the server certificate is verified against the list of supplied CAs and the hostname and no match is found."
																					}
																				]
																			},
																			"type": {
																				"type": "literal",
																				"value": false
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				21603
																			]
																		}
																	]
																}
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																21601
															]
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												21599
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 21604,
					"name": "redis_url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Used to specify the URL to connect to Redis. This is only used for scheduled jobs. If you omit this configuration, scheduled jobs won't work.\n\n:::note\n\nYou must first have Redis installed. You can refer to [Redis's installation guide](https://redis.io/docs/getting-started/installation/).\n\n:::\n\nThe Redis connection URL has the following format:\n\n"
							},
							{
								"kind": "code",
								"text": "```bash\nredis[s]://[[username][:password]@][host][:port][/db-number]\n```"
							},
							{
								"kind": "text",
								"text": "\n\nFor a local Redis installation, the connection URL should be "
							},
							{
								"kind": "code",
								"text": "`redis://localhost:6379`"
							},
							{
								"kind": "text",
								"text": " unless you’ve made any changes to the Redis configuration during installation."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    redis_url: process.env.REDIS_URL ||\n      \"redis://localhost:6379\",\n    // ...\n  },\n  // ...\n}\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21605,
					"name": "redis_prefix",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The prefix set on all keys stored in Redis. The default value is "
							},
							{
								"kind": "code",
								"text": "`sess:`"
							},
							{
								"kind": "text",
								"text": ".\n\nIf this configuration option is provided, it is prepended to "
							},
							{
								"kind": "code",
								"text": "`sess:`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    redis_prefix: process.env.REDIS_PREFIX ||\n      \"medusa:\",\n    // ...\n  },\n  // ...\n}\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21606,
					"name": "redis_options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object of options to pass ioredis. You can refer to [ioredis’s RedisOptions documentation](https://redis.github.io/ioredis/index.html#RedisOptions)\nfor the list of available options."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    redis_options: {\n      connectionName: process.env.REDIS_CONNECTION_NAME ||\n        \"medusa\",\n    },\n    // ...\n  },\n  // ...\n}\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/ioredis/built/redis/RedisOptions.d.ts",
							"qualifiedName": "RedisOptions"
						},
						"name": "RedisOptions",
						"package": "ioredis"
					}
				},
				{
					"id": 21607,
					"name": "session_options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object of options to pass to [express-session](https://www.npmjs.com/package/express-session)."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    session_options: {\n      name: process.env.SESSION_NAME ||\n        \"custom\",\n    },\n    // ...\n  },\n  // ...\n}\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 21665,
						"name": "SessionOptions",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 21608,
					"name": "http_compression",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Configure HTTP compression from the application layer. If you have access to the HTTP server, the recommended approach would be to enable it there.\nHowever, some platforms don't offer access to the HTTP layer and in those cases, this is a good alternative.\n\nIts value is an object that has the following properties:\n\nIf you enable HTTP compression and you want to disable it for specific API Routes, you can pass in the request header "
							},
							{
								"kind": "code",
								"text": "`\"x-no-compression\": true`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    http_compression: {\n      enabled: true,\n      level: 6,\n      memLevel: 8,\n      threshold: 1024,\n    },\n    // ...\n  },\n  // ...\n}\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 21672,
						"name": "HttpCompressionOptions",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 21609,
					"name": "jobs_batch_size",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Configure the number of staged jobs that are polled from the database. Default is "
							},
							{
								"kind": "code",
								"text": "`1000`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    jobs_batch_size: 100\n    // ...\n  },\n  // ...\n}\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 21610,
					"name": "worker_mode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Configure the application's worker mode. Default is "
							},
							{
								"kind": "code",
								"text": "`shared`"
							},
							{
								"kind": "text",
								"text": ".\n\n- Use "
							},
							{
								"kind": "code",
								"text": "`shared`"
							},
							{
								"kind": "text",
								"text": " to run the application in a single process.\n- Use "
							},
							{
								"kind": "code",
								"text": "`worker`"
							},
							{
								"kind": "text",
								"text": " to run the a worker process only.\n- Use "
							},
							{
								"kind": "code",
								"text": "`server`"
							},
							{
								"kind": "text",
								"text": " to run the application server only.\n\nLearn more in [this guide](https://docs.medusajs.com/development/medusa-worker)."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig: {\n    worker_mode: \"shared\"\n    // ...\n  },\n  // ...\n}\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "worker"
							},
							{
								"type": "literal",
								"value": "shared"
							},
							{
								"type": "literal",
								"value": "server"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						21582,
						21583,
						21584,
						21585,
						21586,
						21587,
						21588,
						21589,
						21590,
						21592,
						21597,
						21604,
						21605,
						21606,
						21607,
						21608,
						21609,
						21610
					]
				}
			]
		},
		{
			"id": 21466,
			"name": "ConfigModule",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The configurations for your Medusa backend are in "
					},
					{
						"kind": "code",
						"text": "`medusa-config.js`"
					},
					{
						"kind": "text",
						"text": " located in the root of your Medusa project. The configurations include database, modules, and plugin configurations, among other configurations.\n\n"
					},
					{
						"kind": "code",
						"text": "`medusa-config.js`"
					},
					{
						"kind": "text",
						"text": " exports an object having the following properties:\n\n- "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "projectConfig",
						"target": 21467,
						"tsLinkText": "projectConfig"
					},
					{
						"kind": "text",
						"text": ": (required): An object that holds general configurations related to the Medusa backend, such as database or CORS configurations.\n- "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "plugins",
						"target": 21468,
						"tsLinkText": "plugins"
					},
					{
						"kind": "text",
						"text": ": An array of plugin configurations that defines what plugins are installed and optionally specifies each of their configurations.\n- "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "modules",
						"target": 21472,
						"tsLinkText": "modules"
					},
					{
						"kind": "text",
						"text": ": An object that defines what modules are installed and optionally specifies each of their configurations.\n- "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "featureFlags",
						"target": 21473,
						"tsLinkText": "featureFlags"
					},
					{
						"kind": "text",
						"text": ": An object that enables or disables features guarded by a feature flag.\n\nFor example:\n\n"
					},
					{
						"kind": "code",
						"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  projectConfig,\n  plugins,\n  modules,\n  featureFlags,\n}\n```"
					},
					{
						"kind": "text",
						"text": "\n\n---\n\n## Environment Variables\n\nIt's highly recommended to store the values of configurations in environment variables, then reference them within "
					},
					{
						"kind": "code",
						"text": "`medusa-config.js`"
					},
					{
						"kind": "text",
						"text": ".\n\nDuring development, you can set your environment variables in the "
					},
					{
						"kind": "code",
						"text": "`.env`"
					},
					{
						"kind": "text",
						"text": " file at the root of your Medusa backend project. In production,\nsetting the environment variables depends on the hosting provider.\n\n---"
					}
				]
			},
			"children": [
				{
					"id": 21467,
					"name": "projectConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This property holds essential configurations related to the Medusa backend, such as database and CORS configurations."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 21581,
						"name": "ProjectConfigOptions",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 21468,
					"name": "plugins",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "On your Medusa backend, you can use [Plugins](https://docs.medusajs.com/development/plugins/overview) to add custom features or integrate third-party services.\nFor example, installing a plugin to use Stripe as a payment processor.\n\nAside from installing the plugin with NPM, you need to pass the plugin you installed into the "
							},
							{
								"kind": "code",
								"text": "`plugins`"
							},
							{
								"kind": "text",
								"text": " array defined in "
							},
							{
								"kind": "code",
								"text": "`medusa-config.js`"
							},
							{
								"kind": "text",
								"text": ".\n\nThe items in the array can either be:\n\n- A string, which is the name of the plugin to add. You can pass a plugin as a string if it doesn’t require any configurations.\n- An object having the following properties:\n    - "
							},
							{
								"kind": "code",
								"text": "`resolve`"
							},
							{
								"kind": "text",
								"text": ": The name of the plugin.\n    - "
							},
							{
								"kind": "code",
								"text": "`options`"
							},
							{
								"kind": "text",
								"text": ": An object that includes the plugin’s options. These options vary for each plugin, and you should refer to the plugin’s documentation for available options."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  plugins: [\n    `medusa-my-plugin-1`,\n    {\n      resolve: `medusa-my-plugin`,\n      options: {\n        apiKey: process.env.MY_API_KEY ||\n          `test`,\n      },\n    },\n    // ...\n  ],\n  // ...\n}\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "reflection",
									"declaration": {
										"id": 21469,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 21470,
												"name": "resolve",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 21471,
												"name": "options",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
														"qualifiedName": "Record"
													},
													"typeArguments": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "unknown"
														}
													],
													"name": "Record",
													"package": "typescript"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													21470,
													21471
												]
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 21472,
					"name": "modules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "In Medusa, commerce and core logic are modularized to allow developers to extend or replace certain [modules](https://docs.medusajs.com/development/modules/overview)\nwith custom implementations.\n\nAside from installing the module with NPM, you must add it to the exported object in "
							},
							{
								"kind": "code",
								"text": "`medusa-config.js`"
							},
							{
								"kind": "text",
								"text": ".\n\nThe keys of the "
							},
							{
								"kind": "code",
								"text": "`modules`"
							},
							{
								"kind": "text",
								"text": " configuration object refer to the type of module. Its value can be one of the following:\n\n1. A boolean value indicating whether the module type is enabled;\n2. Or a string value indicating the name of the module to be used for the module type. This can be used if the module does not require any options;\n3. Or an object having the following properties, but typically you would mainly use the "
							},
							{
								"kind": "code",
								"text": "`resolve`"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "`options`"
							},
							{
								"kind": "text",
								"text": " properties only:\n    1. "
							},
							{
								"kind": "code",
								"text": "`resolve`"
							},
							{
								"kind": "text",
								"text": ": a string indicating the name of the module.\n    2. "
							},
							{
								"kind": "code",
								"text": "`options`"
							},
							{
								"kind": "text",
								"text": ": an object indicating the options to pass to the module. These options vary for each module, and you should refer to the module’s documentation for details on them.\n    3. "
							},
							{
								"kind": "code",
								"text": "`resources`"
							},
							{
								"kind": "text",
								"text": ": a string indicating whether the module shares the dependency container with the Medusa core. Its value can either be "
							},
							{
								"kind": "code",
								"text": "`shared`"
							},
							{
								"kind": "text",
								"text": " or "
							},
							{
								"kind": "code",
								"text": "`isolated`"
							},
							{
								"kind": "text",
								"text": ". Refer to the [Modules documentation](https://docs.medusajs.com/development/modules/create#module-scope) for more details.\n    4. "
							},
							{
								"kind": "code",
								"text": "`alias`"
							},
							{
								"kind": "text",
								"text": ": a string indicating a unique alias to register the module under. Other modules can’t use the same alias.\n    5. "
							},
							{
								"kind": "code",
								"text": "`main`"
							},
							{
								"kind": "text",
								"text": ": a boolean value indicating whether this module is the main registered module. This is useful when an alias is used."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  modules: {\n    eventBus: {\n      resolve: \"@medusajs/event-bus-local\",\n    },\n    cacheService: {\n      resolve: \"@medusajs/cache-redis\",\n      options: {\n        redisUrl: process.env.CACHE_REDIS_URL,\n        ttl: 30,\n      },\n    },\n    // ...\n  },\n  // ...\n}\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 21611,
														"name": "InternalModuleDeclaration",
														"package": "@medusajs/types"
													},
													{
														"type": "reference",
														"target": 21622,
														"name": "ExternalModuleDeclaration",
														"package": "@medusajs/types"
													}
												]
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								]
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 21473,
					"name": "featureFlags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Some features in the Medusa backend are guarded by a feature flag. This ensures constant shipping of new features while maintaining the engine’s stability.\n\nYou can specify whether a feature should or shouldn’t be used in your backend by enabling its feature flag. Feature flags can be enabled through either environment\nvariables or through this configuration exported in "
							},
							{
								"kind": "code",
								"text": "`medusa-config.js`"
							},
							{
								"kind": "text",
								"text": ".\n\nIf you want to use the environment variables method, learn more about it in the [Feature Flags documentation](https://docs.medusajs.com/development/feature-flags/toggle#method-one-using-environment-variables).\n\nThe "
							},
							{
								"kind": "code",
								"text": "`featureFlags`"
							},
							{
								"kind": "text",
								"text": " configuration is an object. Its properties are the names of the feature flags. Each property’s value is a boolean indicating whether the feature flag is enabled.\n\nYou can find available feature flags and their key name [here](https://github.com/medusajs/medusa/tree/master/packages/medusa/src/loaders/feature-flags)."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```js title=\"medusa-config.js\"\nmodule.exports = {\n  featureFlags: {\n    product_categories: true,\n    // ...\n  },\n  // ...\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\n:::note\n\nAfter enabling a feature flag, make sure to [run migrations](https://docs.medusajs.com/development/entities/migrations/overview#migrate-command) as it may require making changes to the database.\n\n:::"
									}
								]
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								]
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						21467,
						21468,
						21472,
						21473
					]
				}
			]
		},
		{
			"id": 21480,
			"name": "MedusaContainer",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The Medusa Container extends [Awilix](https://github.com/jeffijoe/awilix) to\nprovide dependency injection functionalities."
					}
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/awilix/lib/container.d.ts",
							"qualifiedName": "AwilixContainer"
						},
						"name": "AwilixContainer",
						"package": "awilix"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 21481,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {}
						}
					}
				]
			}
		},
		{
			"id": 21320,
			"name": "FileServiceUploadResult",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Details of a file upload's result."
					}
				]
			},
			"children": [
				{
					"id": 21321,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The file's URL."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21322,
					"name": "key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The file's key. This key is used in other operations,\nsuch as deleting a file."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						21321,
						21322
					]
				}
			]
		},
		{
			"id": 20947,
			"name": "InventoryItemDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 20948,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 20949,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The inventory item's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 20950,
							"name": "sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The Stock Keeping Unit (SKU) code of the Inventory Item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 20951,
							"name": "origin_country",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The country in which the Inventory Item was produced. May be used by Fulfillment Providers to pass customs information to shipping carriers."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 20952,
							"name": "hs_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The Harmonized System code of the Inventory Item. May be used by Fulfillment Providers to pass customs information to shipping carriers."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 20953,
							"name": "requires_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item requires shipping."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 20954,
							"name": "mid_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The Manufacturers Identification code that identifies the manufacturer of the Inventory Item. May be used by Fulfillment Providers to pass customs information to shipping carriers."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 20955,
							"name": "material",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The material and composition that the Inventory Item is made of, May be used by Fulfillment Providers to pass customs information to shipping carriers."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 20956,
							"name": "weight",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The weight of the Inventory Item. May be used in shipping rate calculations."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 20957,
							"name": "length",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The length of the Inventory Item. May be used in shipping rate calculations."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 20958,
							"name": "height",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The height of the Inventory Item. May be used in shipping rate calculations."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 20959,
							"name": "width",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The width of the Inventory Item. May be used in shipping rate calculations."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 20960,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Title of the inventory item"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 20961,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Description of the inventory item"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 20962,
							"name": "thumbnail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Thumbnail for the inventory item"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 20963,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An optional key-value map with additional details"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 20964,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date with timezone at which the resource was created."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 20965,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date with timezone at which the resource was updated."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 20966,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date with timezone at which the resource was deleted."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								20949,
								20950,
								20951,
								20952,
								20953,
								20954,
								20955,
								20956,
								20957,
								20958,
								20959,
								20960,
								20961,
								20962,
								20963,
								20964,
								20965,
								20966
							]
						}
					]
				}
			}
		},
		{
			"id": 21245,
			"name": "ReservationItemDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents a reservation of an inventory item at a stock location"
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 21246,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 21247,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The id of the reservation item"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 21248,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The id of the location of the reservation"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 21249,
							"name": "inventory_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The id of the inventory item the reservation relates to"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 21250,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The id of the reservation item"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 21251,
							"name": "line_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 21252,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Description of the reservation item"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 21253,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "UserId of user who created the reservation item"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 21254,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An optional key-value map with additional details"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 21255,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date with timezone at which the resource was created."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 21256,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date with timezone at which the resource was updated."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 21257,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date with timezone at which the resource was deleted."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								21247,
								21248,
								21249,
								21250,
								21251,
								21252,
								21253,
								21254,
								21255,
								21256,
								21257
							]
						}
					]
				}
			}
		},
		{
			"id": 20967,
			"name": "InventoryLevelDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 20968,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 20969,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 20970,
							"name": "inventory_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 20971,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the item location ID"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 20972,
							"name": "stocked_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the total stock quantity of an inventory item at the given location ID"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 20973,
							"name": "reserved_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the reserved stock quantity of an inventory item at the given location ID"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 20974,
							"name": "incoming_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the incoming stock quantity of an inventory item at the given location ID"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 20975,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An optional key-value map with additional details"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 20976,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date with timezone at which the resource was created."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 20977,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date with timezone at which the resource was updated."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 20978,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date with timezone at which the resource was deleted."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								20969,
								20970,
								20971,
								20972,
								20973,
								20974,
								20975,
								20976,
								20977,
								20978
							]
						}
					]
				}
			}
		},
		{
			"id": 21725,
			"name": "Logger",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 21726,
					"name": "panic",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 21727,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 21728,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 21729,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 21730,
					"name": "shouldLog",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 21731,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 21732,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 21733,
											"name": "level",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 21734,
					"name": "setLogLevel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 21735,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 21736,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 21737,
											"name": "level",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 21738,
					"name": "unsetLogLevel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 21739,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 21740,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 21741,
					"name": "activity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 21742,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 21743,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 21744,
											"name": "message",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 21745,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 21746,
					"name": "progress",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 21747,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 21748,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 21749,
											"name": "activityId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 21750,
											"name": "message",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 21751,
					"name": "error",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 21752,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 21753,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 21754,
											"name": "messageOrError",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 21755,
											"name": "error",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 21756,
					"name": "failure",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 21757,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 21758,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 21759,
											"name": "activityId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 21760,
											"name": "message",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 21761,
					"name": "success",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 21762,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 21763,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 21764,
											"name": "activityId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 21765,
											"name": "message",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 21766,
					"name": "debug",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 21767,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 21768,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 21769,
											"name": "message",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 21770,
					"name": "info",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 21771,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 21772,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 21773,
											"name": "message",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 21774,
					"name": "warn",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 21775,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 21776,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 21777,
											"name": "message",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 21778,
					"name": "log",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 21779,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 21780,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 21781,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						21726,
						21730,
						21734,
						21738,
						21741,
						21746,
						21751,
						21756,
						21761,
						21766,
						21770,
						21774,
						21778
					]
				}
			]
		},
		{
			"id": 21708,
			"name": "Constructor",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 21712,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 21709,
					"name": "__type",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 21710,
							"name": "__type",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 21711,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 21712,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					]
				}
			}
		},
		{
			"id": 21677,
			"name": "INTERNAL",
			"variant": "declaration",
			"kind": 16,
			"flags": {},
			"type": {
				"type": "literal",
				"value": "internal"
			}
		},
		{
			"id": 21706,
			"name": "EXTERNAL",
			"variant": "declaration",
			"kind": 16,
			"flags": {},
			"type": {
				"type": "literal",
				"value": "external"
			}
		},
		{
			"id": 21678,
			"name": "MODULE_RESOURCE_TYPE",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 21679,
					"name": "SHARED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "shared"
					}
				},
				{
					"id": 21680,
					"name": "ISOLATED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "isolated"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						21679,
						21680
					]
				}
			]
		},
		{
			"id": 21611,
			"name": "InternalModuleDeclaration",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 21612,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 21613,
							"name": "scope",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21677,
								"name": "MODULE_SCOPE.INTERNAL",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 21614,
							"name": "resources",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21678,
								"name": "MODULE_RESOURCE_TYPE",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 21615,
							"name": "dependencies",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 21616,
							"name": "definition",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Partial"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 21681,
										"name": "ModuleDefinition",
										"package": "@medusajs/types"
									}
								],
								"name": "Partial",
								"package": "typescript"
							}
						},
						{
							"id": 21617,
							"name": "resolve",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 21692,
										"name": "ModuleExports",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 21618,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 21619,
							"name": "alias",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If multiple modules are registered with the same key, the alias can be used to differentiate them"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 21620,
							"name": "main",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If the module is the main module for the key when multiple ones are registered"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 21621,
							"name": "worker_mode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "shared"
									},
									{
										"type": "literal",
										"value": "worker"
									},
									{
										"type": "literal",
										"value": "server"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								21613,
								21614,
								21615,
								21616,
								21617,
								21618,
								21619,
								21620,
								21621
							]
						}
					]
				}
			}
		},
		{
			"id": 21622,
			"name": "ExternalModuleDeclaration",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 21623,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 21624,
							"name": "scope",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21706,
								"name": "MODULE_SCOPE.EXTERNAL",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 21625,
							"name": "definition",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Partial"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 21681,
										"name": "ModuleDefinition",
										"package": "@medusajs/types"
									}
								],
								"name": "Partial",
								"package": "typescript"
							}
						},
						{
							"id": 21626,
							"name": "server",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 21627,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 21628,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "literal",
												"value": "http"
											}
										},
										{
											"id": 21629,
											"name": "url",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 21630,
											"name": "keepAlive",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												21628,
												21629,
												21630
											]
										}
									]
								}
							}
						},
						{
							"id": 21631,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 21632,
							"name": "alias",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If multiple modules are registered with the same key, the alias can be used to differentiate them"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 21633,
							"name": "main",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If the module is the main module for the key when multiple ones are registered"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								21624,
								21625,
								21626,
								21631,
								21632,
								21633
							]
						}
					]
				}
			}
		},
		{
			"id": 21681,
			"name": "ModuleDefinition",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 21682,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 21683,
							"name": "key",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 21684,
							"name": "registrationName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 21685,
							"name": "defaultPackage",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": false
									}
								]
							}
						},
						{
							"id": 21686,
							"name": "label",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 21687,
							"name": "isRequired",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 21688,
							"name": "isQueryable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 21689,
							"name": "isLegacy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 21690,
							"name": "dependencies",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 21691,
							"name": "defaultModuleDeclaration",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 21611,
										"name": "InternalModuleDeclaration",
										"package": "@medusajs/types"
									},
									{
										"type": "reference",
										"target": 21622,
										"name": "ExternalModuleDeclaration",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								21683,
								21684,
								21685,
								21686,
								21687,
								21688,
								21689,
								21690,
								21691
							]
						}
					]
				}
			}
		},
		{
			"id": 21718,
			"name": "LoaderOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 21724,
					"name": "TOptions",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 21719,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 21720,
							"name": "container",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21480,
								"name": "MedusaContainer",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 21721,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 21724,
								"name": "TOptions",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 21722,
							"name": "logger",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 21725,
								"name": "Logger",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 21723,
							"name": "dataLoaderOnly",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								21720,
								21721,
								21722,
								21723
							]
						}
					]
				}
			}
		},
		{
			"id": 21713,
			"name": "ModuleLoaderFunction",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 21714,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"signatures": [
						{
							"id": 21715,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 21716,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 21718,
										"name": "LoaderOptions",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 21717,
									"name": "moduleDeclaration",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 21611,
										"name": "InternalModuleDeclaration",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			}
		},
		{
			"id": 21634,
			"name": "ModulesResponse",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "array",
				"elementType": {
					"type": "reflection",
					"declaration": {
						"id": 21635,
						"name": "__type",
						"variant": "declaration",
						"kind": 65536,
						"flags": {},
						"children": [
							{
								"id": 21636,
								"name": "module",
								"variant": "declaration",
								"kind": 1024,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"id": 21637,
								"name": "resolution",
								"variant": "declaration",
								"kind": 1024,
								"flags": {},
								"type": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "literal",
											"value": false
										}
									]
								}
							}
						],
						"groups": [
							{
								"title": "Properties",
								"children": [
									21636,
									21637
								]
							}
						]
					}
				}
			}
		},
		{
			"id": 21692,
			"name": "ModuleExports",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 21693,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 21694,
							"name": "service",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 21708,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Constructor",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 21695,
							"name": "loaders",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 21713,
									"name": "ModuleLoaderFunction",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 21696,
							"name": "migrations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "property will be removed in future versions"
											}
										]
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						},
						{
							"id": 21697,
							"name": "models",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "property will be removed in future versions"
											}
										]
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 21708,
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "any"
										}
									],
									"name": "Constructor",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 21698,
							"name": "runMigrations",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 21699,
									"name": "runMigrations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 21700,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 21718,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "LoaderOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 21701,
											"name": "moduleDeclaration",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 21611,
												"name": "InternalModuleDeclaration",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 21702,
							"name": "revertMigration",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 21703,
									"name": "revertMigration",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 21704,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 21718,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "LoaderOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 21705,
											"name": "moduleDeclaration",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 21611,
												"name": "InternalModuleDeclaration",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								21694,
								21695,
								21696,
								21697
							]
						},
						{
							"title": "Methods",
							"children": [
								21698,
								21702
							]
						}
					]
				}
			}
		},
		{
			"id": 21650,
			"name": "ApplicationMethodTypeValues",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The application method's possible types."
					}
				]
			}
		},
		{
			"id": 21651,
			"name": "ApplicationMethodTargetTypeValues",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The application method's possible target types."
					}
				]
			}
		},
		{
			"id": 21652,
			"name": "ApplicationMethodAllocationValues",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The application method's possible allocation values."
					}
				]
			}
		},
		{
			"id": 21545,
			"name": "ApplicationMethodDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The application method details."
					}
				]
			},
			"children": [
				{
					"id": 21546,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the application method."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21547,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the application method indicating how\nthe associated promotion is applied."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 21650,
						"name": "ApplicationMethodTypeValues",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 21548,
					"name": "target_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The target type of the application method indicating\nwhether the associated promotion is applied to the cart's items,\nshipping methods, or the whole order."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 21651,
						"name": "ApplicationMethodTargetTypeValues",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 21549,
					"name": "allocation",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The allocation value that indicates whether the associated promotion\nis applied on each item in a cart or split between the items in the cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 21652,
						"name": "ApplicationMethodAllocationValues",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 21550,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discounted amount applied by the associated promotion based on the "
							},
							{
								"kind": "code",
								"text": "`type`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 21551,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The max quantity allowed in the cart for the associated promotion to be applied."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 21552,
					"name": "buy_rules_min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The minimum quantity required for a "
							},
							{
								"kind": "code",
								"text": "`buyget`"
							},
							{
								"kind": "text",
								"text": " promotion to be applied.\nFor example, if the promotion is a \"Buy 2 shirts get 1 free\", the\nvalue of this attribute is "
							},
							{
								"kind": "code",
								"text": "`2`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 21553,
					"name": "apply_to_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity that results from matching the "
							},
							{
								"kind": "code",
								"text": "`buyget`"
							},
							{
								"kind": "text",
								"text": " promotion's condition.\nFor example, if the promotion is a \"Buy 2 shirts get 1 free\", the value\nof this attribute is "
							},
							{
								"kind": "code",
								"text": "`1`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 21554,
					"name": "promotion",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The promotion of the application method."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 21380,
								"name": "PromotionDTO",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 21555,
					"name": "target_rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The target rules of the application method."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 21557,
							"name": "PromotionRuleDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 21556,
					"name": "buy_rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The buy rules of the application method."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 21557,
							"name": "PromotionRuleDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						21546,
						21547,
						21548,
						21549,
						21550,
						21551,
						21552,
						21553,
						21554,
						21555,
						21556
					]
				}
			]
		},
		{
			"id": 21707,
			"name": "CampaignBudgetTypeValues",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The campaign budget's possible types."
					}
				]
			}
		},
		{
			"id": 21657,
			"name": "CampaignBudgetDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The campaign budget details."
					}
				]
			},
			"children": [
				{
					"id": 21658,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the campaign budget."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21659,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the campaign budget:\n\n- "
							},
							{
								"kind": "code",
								"text": "`spend`"
							},
							{
								"kind": "text",
								"text": " indicates that the budget is limited by the amount discounted by the promotions in the associated campaign.\n- "
							},
							{
								"kind": "code",
								"text": "`usage`"
							},
							{
								"kind": "text",
								"text": " indicates that the budget is limited by the number of times the promotions of the associated campaign have been used."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 21707,
						"name": "CampaignBudgetTypeValues",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 21660,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The limit of the campaign budget."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 21661,
					"name": "used",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The usage from the campaign budget's limit:\n\n- If the budget's type is "
							},
							{
								"kind": "code",
								"text": "`spend`"
							},
							{
								"kind": "text",
								"text": ", the value of this attribute is the amount discounted so far by the promotions in the associated campaign.\n- If the budget's type is "
							},
							{
								"kind": "code",
								"text": "`usage`"
							},
							{
								"kind": "text",
								"text": ", the value of this attribute is the number of times the promotions of the associated campaign have been used so far."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						21658,
						21659,
						21660,
						21661
					]
				}
			]
		},
		{
			"id": 21563,
			"name": "CampaignDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The campaign details."
					}
				]
			},
			"children": [
				{
					"id": 21564,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the campaign."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21565,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the campaign."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21566,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the campaign."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21567,
					"name": "currency",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The currency of the campaign."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21568,
					"name": "campaign_identifier",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The campaign identifier of the campaign."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21569,
					"name": "starts_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The start date of the campaign."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 21570,
					"name": "ends_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The end date of the campaign."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 21571,
					"name": "budget",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated campaign budget."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 21657,
						"name": "CampaignBudgetDTO",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						21564,
						21565,
						21566,
						21567,
						21568,
						21569,
						21570,
						21571
					]
				}
			]
		},
		{
			"id": 21654,
			"name": "PromotionRuleValueDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The promotion rule value details."
					}
				]
			},
			"children": [
				{
					"id": 21655,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the promotion rule value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21656,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the promotion rule value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						21655,
						21656
					]
				}
			]
		},
		{
			"id": 21653,
			"name": "PromotionRuleOperatorValues",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The possible operators to use in a promotion rule."
					}
				]
			}
		},
		{
			"id": 21557,
			"name": "PromotionRuleDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The promotion rule details."
					}
				]
			},
			"children": [
				{
					"id": 21558,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the promotion rule."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21559,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the promotion rule."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 21560,
					"name": "attribute",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The attribute of the promotion rule."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21561,
					"name": "operator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The operator of the promotion rule."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 21653,
						"name": "PromotionRuleOperatorValues",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 21562,
					"name": "values",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The values of the promotion rule."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 21654,
							"name": "PromotionRuleValueDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						21558,
						21559,
						21560,
						21561,
						21562
					]
				}
			]
		},
		{
			"id": 21396,
			"name": "PromotionTypeValues",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The promotion's possible types."
					}
				]
			}
		},
		{
			"id": 21380,
			"name": "PromotionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The promotion details."
					}
				]
			},
			"children": [
				{
					"id": 21381,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the promotion."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21382,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the promotion."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 21383,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the promotion:\n\n- "
							},
							{
								"kind": "code",
								"text": "`standard`"
							},
							{
								"kind": "text",
								"text": " indicates that a promotion is a standard one applied with conditions.\n- "
							},
							{
								"kind": "code",
								"text": "`buyget`"
							},
							{
								"kind": "text",
								"text": " indicates that a promotion is a \"Buy X get Y\" promotion."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 21396,
						"name": "PromotionTypeValues",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 21384,
					"name": "is_automatic",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the promotion is applied automatically."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 21385,
					"name": "application_method",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated application method."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 21545,
						"name": "ApplicationMethodDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 21386,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rules of the promotion."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 21557,
							"name": "PromotionRuleDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 21387,
					"name": "campaign",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated campaign."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 21563,
						"name": "CampaignDTO",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						21381,
						21382,
						21383,
						21384,
						21385,
						21386,
						21387
					]
				}
			]
		},
		{
			"id": 21512,
			"name": "StockLocationAddressDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents a Stock Location Address"
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 21513,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 21514,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the stock location address."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 21515,
							"name": "address_1",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The address 1 of the stock location address."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 21516,
							"name": "address_2",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The address 2 of the stock location address."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 21517,
							"name": "company",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The company of the stock location address."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 21518,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The country code of the stock location address."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 21519,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The city of the stock location address."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 21520,
							"name": "phone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The phone of the stock location address."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 21521,
							"name": "postal_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The postal code of the stock location address."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 21522,
							"name": "province",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The province of the stock location address."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 21523,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 21524,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The creation date of the stock location address."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 21525,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The update date of the stock location address."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 21526,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The deletion date of the stock location address."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								21514,
								21515,
								21516,
								21517,
								21518,
								21519,
								21520,
								21521,
								21522,
								21523,
								21524,
								21525,
								21526
							]
						}
					]
				}
			}
		},
		{
			"id": 21274,
			"name": "StockLocationDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents a Stock Location"
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 21275,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 21276,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the stock location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 21277,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the stock location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 21278,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 21279,
							"name": "address_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated address's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 21280,
							"name": "address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The address of the stock location."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21512,
								"name": "StockLocationAddressDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 21281,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The creation date of the stock location."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 21282,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The update date of the stock location."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 21283,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The deletion date of the stock location."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								21276,
								21277,
								21278,
								21279,
								21280,
								21281,
								21282,
								21283
							]
						}
					]
				}
			}
		},
		{
			"id": 21289,
			"name": "StockLocationExpandedDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 21274,
						"name": "StockLocationDTO",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 21290,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 21291,
									"name": "sales_channels",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The list of sales channels."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										21291
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 21337,
			"name": "TransactionHandlerType",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 21338,
					"name": "INVOKE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "invoke"
					}
				},
				{
					"id": 21339,
					"name": "COMPENSATE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "compensate"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						21338,
						21339
					]
				}
			]
		},
		{
			"id": 21097,
			"name": "PriceListStatus",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 21098,
					"name": "ACTIVE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "active"
					}
				},
				{
					"id": 21099,
					"name": "DRAFT",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "draft"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						21098,
						21099
					]
				}
			]
		},
		{
			"id": 21100,
			"name": "PriceListType",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 21101,
					"name": "SALE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "sale"
					}
				},
				{
					"id": 21102,
					"name": "OVERRIDE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "override"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						21101,
						21102
					]
				}
			]
		},
		{
			"id": 21418,
			"name": "PromotionType",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 21419,
					"name": "STANDARD",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "standard"
					}
				},
				{
					"id": 21420,
					"name": "BUYGET",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "buyget"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						21419,
						21420
					]
				}
			]
		},
		{
			"id": 21408,
			"name": "ApplicationMethodType",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 21409,
					"name": "FIXED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "fixed"
					}
				},
				{
					"id": 21410,
					"name": "PERCENTAGE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "percentage"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						21409,
						21410
					]
				}
			]
		},
		{
			"id": 21411,
			"name": "ApplicationMethodTargetType",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 21412,
					"name": "ORDER",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "order"
					}
				},
				{
					"id": 21413,
					"name": "SHIPPING_METHODS",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "shipping_methods"
					}
				},
				{
					"id": 21414,
					"name": "ITEMS",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "items"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						21412,
						21413,
						21414
					]
				}
			]
		},
		{
			"id": 21415,
			"name": "ApplicationMethodAllocation",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 21416,
					"name": "EACH",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "each"
					}
				},
				{
					"id": 21417,
					"name": "ACROSS",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "across"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						21416,
						21417
					]
				}
			]
		},
		{
			"id": 21388,
			"name": "PromotionRuleOperator",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 21389,
					"name": "GTE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "gte"
					}
				},
				{
					"id": 21390,
					"name": "LTE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "lte"
					}
				},
				{
					"id": 21391,
					"name": "GT",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "gt"
					}
				},
				{
					"id": 21392,
					"name": "LT",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "lt"
					}
				},
				{
					"id": 21393,
					"name": "EQ",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "eq"
					}
				},
				{
					"id": 21394,
					"name": "NE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "ne"
					}
				},
				{
					"id": 21395,
					"name": "IN",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "in"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						21389,
						21390,
						21391,
						21392,
						21393,
						21394,
						21395
					]
				}
			]
		},
		{
			"id": 21662,
			"name": "CampaignBudgetType",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 21663,
					"name": "SPEND",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "spend"
					}
				},
				{
					"id": 21664,
					"name": "USAGE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "usage"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						21663,
						21664
					]
				}
			]
		}
	],
	"groups": [
		{
			"title": "Enumerations",
			"children": [
				20461,
				20714,
				20717,
				21323,
				21678,
				21337,
				21097,
				21100,
				21418,
				21408,
				21411,
				21415,
				21388,
				21662
			]
		},
		{
			"title": "Enumeration Members",
			"children": [
				21677,
				21706
			]
		},
		{
			"title": "Classes",
			"children": [
				21426,
				21397,
				21577,
				21572,
				20270,
				20275,
				20285,
				20298,
				20305,
				20315,
				20328,
				20341,
				20351,
				20355,
				20359,
				20363,
				17563,
				17568,
				17579,
				17591,
				17597,
				17605,
				17636,
				17640,
				17646,
				17651,
				17664,
				17668,
				17680,
				17689,
				17701,
				17705,
				17710,
				17714,
				17719,
				17733,
				17745,
				17754,
				20907,
				17767,
				17932,
				17938,
				17794,
				17803,
				17808,
				17816,
				17829,
				17838,
				17843,
				17849,
				17943,
				17948,
				17854,
				17864,
				17859,
				17869,
				17884,
				17892,
				17897,
				17905,
				17917,
				17927,
				17968,
				20936,
				20932,
				20924,
				17982,
				17990,
				18010,
				20943,
				18021,
				18037,
				18045,
				18052,
				18085,
				18102,
				18107,
				18113,
				18118,
				18123,
				18145,
				18151,
				18167,
				18172,
				18177,
				18189,
				18195,
				18200,
				18212,
				18218,
				18224,
				18236,
				18248,
				18264,
				18270,
				18276,
				18281,
				18292,
				18300,
				18296,
				18315,
				18321,
				18326,
				18331,
				18347,
				18352,
				18342,
				18357,
				18362,
				18367,
				18372,
				18395,
				18400,
				20993,
				21003,
				20984,
				20998,
				18377,
				18390,
				18412,
				21010,
				18419,
				18424,
				18430,
				18451,
				18457,
				21015,
				21022,
				21032,
				21027,
				18435,
				18446,
				18462,
				18468,
				18473,
				18479,
				18484,
				18489,
				18513,
				18518,
				18525,
				21063,
				18530,
				18540,
				18545,
				21077,
				21068,
				21493,
				21498,
				18552,
				21084,
				21089,
				18557,
				18570,
				18585,
				18590,
				18602,
				18607,
				18632,
				21103,
				18637,
				18649,
				18653,
				18657,
				18679,
				21107,
				18696,
				18769,
				18773,
				18738,
				18748,
				18778,
				18782,
				18718,
				18723,
				18753,
				18764,
				18792,
				18797,
				18814,
				18900,
				21503,
				21144,
				21148,
				18904,
				21178,
				18932,
				18954,
				18959,
				18985,
				19000,
				19005,
				21507,
				21204,
				19009,
				21236,
				19035,
				19067,
				19071,
				19075,
				19079,
				19083,
				19096,
				19118,
				19122,
				19126,
				19130,
				19109,
				19114,
				19142,
				19155,
				19183,
				19192,
				19209,
				19225,
				19233,
				19253,
				21258,
				19258,
				19272,
				19308,
				19276,
				19282,
				19286,
				19312,
				19302,
				21263,
				19325,
				19340,
				21268,
				19358,
				19377,
				19383,
				21292,
				19400,
				19407,
				19412,
				19417,
				21303,
				19431,
				19438,
				19456,
				19474,
				19536,
				19540,
				19545,
				19549,
				19554,
				19558,
				19563,
				19573,
				19504,
				19488,
				19509,
				19513,
				19518,
				19522,
				19527,
				19531,
				19578,
				19588,
				19600,
				19605,
				19609,
				19639,
				19647,
				19635,
				19629,
				19665,
				19699,
				19681,
				19726,
				19731,
				19742,
				19747,
				19764,
				19784,
				19789,
				19794,
				19802,
				19808,
				21340,
				21344,
				19812,
				19825,
				19830,
				19842,
				19869,
				19873,
				19881,
				19888,
				19915,
				19909,
				19919,
				19933,
				19953,
				19964,
				19968,
				19972,
				19980,
				19991,
				19995,
				20000,
				20006,
				20010,
				20027,
				20032,
				20051,
				20069,
				20127,
				20138,
				20163,
				20178,
				20183,
				21363,
				21356,
				20205,
				20217,
				21368,
				21375,
				20228,
				20243,
				20252,
				20486,
				20574,
				20577,
				20584,
				20594,
				20601,
				20615,
				20629,
				20634,
				20889,
				20885,
				20898,
				20919,
				20911,
				21037,
				21056,
				20720,
				20733,
				20743,
				21348,
				21328,
				21111,
				21119,
				21227,
				21170,
				21183,
				21136,
				21140,
				21131,
				21126,
				21241
			]
		},
		{
			"title": "Interfaces",
			"children": [
				20511,
				20541,
				20560,
				20566,
				20570,
				20795,
				20820,
				21491,
				21474,
				20979,
				21665,
				21672,
				21581,
				21466,
				21320,
				21725,
				21650,
				21651,
				21652,
				21545,
				21707,
				21657,
				21563,
				21654,
				21653,
				21557,
				21396,
				21380
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				21455,
				20267,
				21421,
				17559,
				17562,
				17573,
				17576,
				17584,
				17587,
				17624,
				17627,
				17628,
				17633,
				17674,
				17677,
				17693,
				17696,
				17697,
				17738,
				17741,
				17781,
				17784,
				17787,
				17788,
				17791,
				17958,
				17961,
				17964,
				17965,
				18030,
				18033,
				18034,
				18063,
				18066,
				18067,
				18070,
				18076,
				18079,
				18185,
				18186,
				18205,
				18208,
				18209,
				18230,
				18233,
				18252,
				18255,
				18258,
				18259,
				18304,
				18307,
				18577,
				18580,
				18596,
				18599,
				18615,
				18618,
				18623,
				18624,
				18625,
				18626,
				18629,
				18711,
				18714,
				18715,
				18789,
				18811,
				18866,
				18872,
				18878,
				18883,
				18886,
				18889,
				18892,
				18897,
				19057,
				19060,
				19063,
				19064,
				19102,
				19105,
				19108,
				19170,
				19173,
				19177,
				19182,
				19218,
				19221,
				19224,
				19244,
				19247,
				19250,
				19264,
				19267,
				19268,
				19269,
				19318,
				19321,
				19324,
				19370,
				19371,
				19374,
				19393,
				19394,
				19397,
				19444,
				19447,
				19450,
				19453,
				19468,
				19471,
				19481,
				19482,
				19485,
				19593,
				19596,
				19597,
				19617,
				19620,
				19623,
				19624,
				19704,
				19707,
				19710,
				19719,
				19675,
				19678,
				19755,
				19758,
				19761,
				19771,
				19774,
				19836,
				19839,
				19854,
				19857,
				19860,
				19863,
				19947,
				19950,
				19961,
				19985,
				19988,
				20021,
				20024,
				20048,
				20066,
				20118,
				20121,
				20124,
				20172,
				20175,
				20196,
				20199,
				20202,
				20211,
				20214,
				20225,
				20237,
				20240,
				20469,
				20470,
				20475,
				20481,
				20495,
				20503,
				20506,
				20509,
				20521,
				20530,
				20534,
				21453,
				20538,
				20540,
				20549,
				20942,
				21527,
				20640,
				20644,
				20649,
				20650,
				20708,
				20713,
				20752,
				20765,
				20771,
				20780,
				20788,
				21532,
				21638,
				21540,
				21367,
				21327,
				21123,
				20854,
				20855,
				20856,
				20862,
				20868,
				21531,
				21314,
				20874,
				20878,
				21645,
				21284,
				21480,
				20947,
				21245,
				20967,
				21708,
				21611,
				21622,
				21681,
				21718,
				21713,
				21634,
				21692,
				21512,
				21274,
				21289
			]
		},
		{
			"title": "Variables",
			"children": [
				17590,
				17622,
				17623,
				17700,
				17744,
				17777,
				17778,
				17779,
				17780,
				17954,
				17955,
				17956,
				17957,
				18028,
				18029,
				18060,
				18061,
				18062,
				18228,
				18229,
				18310,
				18311,
				18314,
				18575,
				18576,
				18595,
				18613,
				18614,
				18708,
				18709,
				18710,
				18787,
				18788,
				18809,
				18810,
				18826,
				18827,
				18828,
				18829,
				18830,
				19100,
				19101,
				19180,
				19181,
				19216,
				19217,
				19240,
				19241,
				19242,
				19243,
				19316,
				19317,
				19368,
				19369,
				19391,
				19392,
				19443,
				19466,
				19467,
				19479,
				19480,
				19616,
				19673,
				19674,
				19722,
				19723,
				19724,
				19725,
				19769,
				19770,
				19834,
				19835,
				19850,
				19851,
				19852,
				19853,
				19943,
				19944,
				19945,
				19946,
				19957,
				19958,
				19959,
				19960,
				19984,
				20014,
				20015,
				20019,
				20020,
				20045,
				20046,
				20047,
				20063,
				20064,
				20065,
				20081,
				20082,
				20083,
				20084,
				20085,
				20170,
				20171,
				20194,
				20195,
				20223,
				20224,
				20235,
				20236
			]
		},
		{
			"title": "Functions",
			"children": [
				20373,
				20371,
				20375,
				20378,
				20383,
				20388,
				20393,
				20401,
				20409,
				20416,
				20418,
				20428,
				20437,
				20449,
				18003,
				18182,
				18336,
				18405,
				19613,
				20496
			]
		}
	],
	"packageName": "@medusajs/medusa",
	"symbolIdMap": {
		"17558": {
			"sourceFileName": "../../../packages/medusa/src/index.js",
			"qualifiedName": ""
		},
		"17559": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/analytics-configs/index.ts",
			"qualifiedName": "AdminAnalyticsConfigRes"
		},
		"17560": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/analytics-configs/index.ts",
			"qualifiedName": "__type"
		},
		"17561": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/analytics-configs/index.ts",
			"qualifiedName": "__type.analytics_config"
		},
		"17562": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/analytics-configs/index.ts",
			"qualifiedName": "AdminAnalyticsConfigDeleteRes"
		},
		"17563": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/analytics-configs/create-analytics-config.ts",
			"qualifiedName": "AdminPostAnalyticsConfigReq"
		},
		"17566": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/analytics-configs/create-analytics-config.ts",
			"qualifiedName": "AdminPostAnalyticsConfigReq.opt_out"
		},
		"17567": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/analytics-configs/create-analytics-config.ts",
			"qualifiedName": "AdminPostAnalyticsConfigReq.anonymize"
		},
		"17568": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/analytics-configs/update-analytics-config.ts",
			"qualifiedName": "AdminPostAnalyticsConfigAnalyticsConfigReq"
		},
		"17571": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/analytics-configs/update-analytics-config.ts",
			"qualifiedName": "AdminPostAnalyticsConfigAnalyticsConfigReq.opt_out"
		},
		"17572": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/analytics-configs/update-analytics-config.ts",
			"qualifiedName": "AdminPostAnalyticsConfigAnalyticsConfigReq.anonymize"
		},
		"17573": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/auth/index.ts",
			"qualifiedName": "AdminAuthRes"
		},
		"17574": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/auth/index.ts",
			"qualifiedName": "__type"
		},
		"17575": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/auth/index.ts",
			"qualifiedName": "__type.user"
		},
		"17576": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/auth/index.ts",
			"qualifiedName": "AdminBearerAuthRes"
		},
		"17577": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/auth/index.ts",
			"qualifiedName": "__type"
		},
		"17578": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/auth/index.ts",
			"qualifiedName": "__type.access_token"
		},
		"17579": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/auth/create-session.ts",
			"qualifiedName": "AdminPostAuthReq"
		},
		"17582": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/auth/create-session.ts",
			"qualifiedName": "AdminPostAuthReq.email"
		},
		"17583": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/auth/create-session.ts",
			"qualifiedName": "AdminPostAuthReq.password"
		},
		"17584": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/index.ts",
			"qualifiedName": "AdminBatchJobRes"
		},
		"17585": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/index.ts",
			"qualifiedName": "__type"
		},
		"17586": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/index.ts",
			"qualifiedName": "__type.batch_job"
		},
		"17587": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/index.ts",
			"qualifiedName": "AdminBatchJobListRes"
		},
		"17588": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/index.ts",
			"qualifiedName": "__type"
		},
		"17589": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/index.ts",
			"qualifiedName": "__type.batch_jobs"
		},
		"17590": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/index.ts",
			"qualifiedName": "defaultAdminBatchFields"
		},
		"17591": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/create-batch-job.ts",
			"qualifiedName": "AdminPostBatchesReq"
		},
		"17594": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/create-batch-job.ts",
			"qualifiedName": "AdminPostBatchesReq.type"
		},
		"17595": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/create-batch-job.ts",
			"qualifiedName": "AdminPostBatchesReq.context"
		},
		"17596": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/create-batch-job.ts",
			"qualifiedName": "AdminPostBatchesReq.dry_run"
		},
		"17597": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchPaginationParams"
		},
		"17600": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchPaginationParams.limit"
		},
		"17601": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchPaginationParams.offset"
		},
		"17602": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchPaginationParams.expand"
		},
		"17603": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchPaginationParams.fields"
		},
		"17604": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchPaginationParams.order"
		},
		"17605": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchParams"
		},
		"17608": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchParams.id"
		},
		"17609": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchParams.type"
		},
		"17610": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchParams.confirmed_at"
		},
		"17611": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchParams.pre_processed_at"
		},
		"17612": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchParams.completed_at"
		},
		"17613": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchParams.failed_at"
		},
		"17614": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchParams.canceled_at"
		},
		"17615": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchParams.created_at"
		},
		"17616": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchParams.updated_at"
		},
		"17617": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchPaginationParams.limit"
		},
		"17618": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchPaginationParams.offset"
		},
		"17619": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchPaginationParams.expand"
		},
		"17620": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchPaginationParams.fields"
		},
		"17621": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchPaginationParams.order"
		},
		"17622": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/index.ts",
			"qualifiedName": "defaultAdminCollectionsFields"
		},
		"17623": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/index.ts",
			"qualifiedName": "defaultAdminCollectionsRelations"
		},
		"17624": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/index.ts",
			"qualifiedName": "AdminCollectionsListRes"
		},
		"17625": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/index.ts",
			"qualifiedName": "__type"
		},
		"17626": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/index.ts",
			"qualifiedName": "__type.collections"
		},
		"17627": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/index.ts",
			"qualifiedName": "AdminCollectionsDeleteRes"
		},
		"17628": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/index.ts",
			"qualifiedName": "AdminDeleteProductsFromCollectionRes"
		},
		"17629": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/index.ts",
			"qualifiedName": "__type"
		},
		"17630": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/index.ts",
			"qualifiedName": "__type.id"
		},
		"17631": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/index.ts",
			"qualifiedName": "__type.object"
		},
		"17632": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/index.ts",
			"qualifiedName": "__type.removed_products"
		},
		"17633": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/index.ts",
			"qualifiedName": "AdminCollectionsRes"
		},
		"17634": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/index.ts",
			"qualifiedName": "__type"
		},
		"17635": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/index.ts",
			"qualifiedName": "__type.collection"
		},
		"17636": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/add-products.ts",
			"qualifiedName": "AdminPostProductsToCollectionReq"
		},
		"17639": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/add-products.ts",
			"qualifiedName": "AdminPostProductsToCollectionReq.product_ids"
		},
		"17640": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/create-collection.ts",
			"qualifiedName": "AdminPostCollectionsReq"
		},
		"17643": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/create-collection.ts",
			"qualifiedName": "AdminPostCollectionsReq.title"
		},
		"17644": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/create-collection.ts",
			"qualifiedName": "AdminPostCollectionsReq.handle"
		},
		"17645": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/create-collection.ts",
			"qualifiedName": "AdminPostCollectionsReq.metadata"
		},
		"17646": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/list-collections.ts",
			"qualifiedName": "AdminGetCollectionsPaginationParams"
		},
		"17649": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/list-collections.ts",
			"qualifiedName": "AdminGetCollectionsPaginationParams.limit"
		},
		"17650": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/list-collections.ts",
			"qualifiedName": "AdminGetCollectionsPaginationParams.offset"
		},
		"17651": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/list-collections.ts",
			"qualifiedName": "AdminGetCollectionsParams"
		},
		"17654": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/list-collections.ts",
			"qualifiedName": "AdminGetCollectionsParams.title"
		},
		"17655": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/list-collections.ts",
			"qualifiedName": "AdminGetCollectionsParams.handle"
		},
		"17656": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/list-collections.ts",
			"qualifiedName": "AdminGetCollectionsParams.created_at"
		},
		"17657": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/list-collections.ts",
			"qualifiedName": "AdminGetCollectionsParams.updated_at"
		},
		"17658": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/list-collections.ts",
			"qualifiedName": "AdminGetCollectionsParams.deleted_at"
		},
		"17659": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/list-collections.ts",
			"qualifiedName": "AdminGetCollectionsParams.q"
		},
		"17660": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/list-collections.ts",
			"qualifiedName": "AdminGetCollectionsParams.order"
		},
		"17661": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/list-collections.ts",
			"qualifiedName": "AdminGetCollectionsParams.discount_condition_id"
		},
		"17662": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/list-collections.ts",
			"qualifiedName": "AdminGetCollectionsPaginationParams.limit"
		},
		"17663": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/list-collections.ts",
			"qualifiedName": "AdminGetCollectionsPaginationParams.offset"
		},
		"17664": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/remove-products.ts",
			"qualifiedName": "AdminDeleteProductsFromCollectionReq"
		},
		"17667": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/remove-products.ts",
			"qualifiedName": "AdminDeleteProductsFromCollectionReq.product_ids"
		},
		"17668": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/update-collection.ts",
			"qualifiedName": "AdminPostCollectionsCollectionReq"
		},
		"17671": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/update-collection.ts",
			"qualifiedName": "AdminPostCollectionsCollectionReq.title"
		},
		"17672": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/update-collection.ts",
			"qualifiedName": "AdminPostCollectionsCollectionReq.handle"
		},
		"17673": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/update-collection.ts",
			"qualifiedName": "AdminPostCollectionsCollectionReq.metadata"
		},
		"17674": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/currencies/index.ts",
			"qualifiedName": "AdminCurrenciesListRes"
		},
		"17675": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/currencies/index.ts",
			"qualifiedName": "__type"
		},
		"17676": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/currencies/index.ts",
			"qualifiedName": "__type.currencies"
		},
		"17677": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/currencies/index.ts",
			"qualifiedName": "AdminCurrenciesRes"
		},
		"17678": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/currencies/index.ts",
			"qualifiedName": "__type"
		},
		"17679": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/currencies/index.ts",
			"qualifiedName": "__type.currency"
		},
		"17680": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/currencies/list-currencies.ts",
			"qualifiedName": "AdminGetCurrenciesParams"
		},
		"17683": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/currencies/list-currencies.ts",
			"qualifiedName": "AdminGetCurrenciesParams.code"
		},
		"17684": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/currencies/list-currencies.ts",
			"qualifiedName": "AdminGetCurrenciesParams.q"
		},
		"17685": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/currencies/list-currencies.ts",
			"qualifiedName": "AdminGetCurrenciesParams.includes_tax"
		},
		"17686": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/currencies/list-currencies.ts",
			"qualifiedName": "AdminGetCurrenciesParams.order"
		},
		"17687": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"17688": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"17689": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/currencies/update-currency.ts",
			"qualifiedName": "AdminPostCurrenciesCurrencyReq"
		},
		"17692": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/currencies/update-currency.ts",
			"qualifiedName": "AdminPostCurrenciesCurrencyReq.includes_tax"
		},
		"17693": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/index.ts",
			"qualifiedName": "AdminCustomerGroupsRes"
		},
		"17694": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/index.ts",
			"qualifiedName": "__type"
		},
		"17695": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/index.ts",
			"qualifiedName": "__type.customer_group"
		},
		"17696": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/index.ts",
			"qualifiedName": "AdminCustomerGroupsDeleteRes"
		},
		"17697": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/index.ts",
			"qualifiedName": "AdminCustomerGroupsListRes"
		},
		"17698": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/index.ts",
			"qualifiedName": "__type"
		},
		"17699": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/index.ts",
			"qualifiedName": "__type.customer_groups"
		},
		"17700": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/index.ts",
			"qualifiedName": "defaultAdminCustomerGroupsRelations"
		},
		"17701": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/add-customers-batch.ts",
			"qualifiedName": "AdminPostCustomerGroupsGroupCustomersBatchReq"
		},
		"17704": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/add-customers-batch.ts",
			"qualifiedName": "AdminPostCustomerGroupsGroupCustomersBatchReq.customer_ids"
		},
		"17705": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/create-customer-group.ts",
			"qualifiedName": "AdminPostCustomerGroupsReq"
		},
		"17708": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/create-customer-group.ts",
			"qualifiedName": "AdminPostCustomerGroupsReq.name"
		},
		"17709": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/create-customer-group.ts",
			"qualifiedName": "AdminPostCustomerGroupsReq.metadata"
		},
		"17710": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/delete-customers-batch.ts",
			"qualifiedName": "AdminDeleteCustomerGroupsGroupCustomerBatchReq"
		},
		"17713": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/delete-customers-batch.ts",
			"qualifiedName": "AdminDeleteCustomerGroupsGroupCustomerBatchReq.customer_ids"
		},
		"17714": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/get-customer-group.ts",
			"qualifiedName": "AdminGetCustomerGroupsGroupParams"
		},
		"17717": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"17718": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"17719": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/list-customer-groups.ts",
			"qualifiedName": "AdminGetCustomerGroupsParams"
		},
		"17722": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/list-customer-groups.ts",
			"qualifiedName": "AdminGetCustomerGroupsParams.order"
		},
		"17723": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/list-customer-groups.ts",
			"qualifiedName": "AdminGetCustomerGroupsParams.offset"
		},
		"17724": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/list-customer-groups.ts",
			"qualifiedName": "AdminGetCustomerGroupsParams.limit"
		},
		"17725": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/list-customer-groups.ts",
			"qualifiedName": "AdminGetCustomerGroupsParams.expand"
		},
		"17726": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/list-customer-groups.ts",
			"qualifiedName": "AdminGetCustomerGroupsParams.fields"
		},
		"17727": {
			"sourceFileName": "../../../packages/medusa/src/types/customer-groups.ts",
			"qualifiedName": "FilterableCustomerGroupProps.id"
		},
		"17728": {
			"sourceFileName": "../../../packages/medusa/src/types/customer-groups.ts",
			"qualifiedName": "FilterableCustomerGroupProps.q"
		},
		"17729": {
			"sourceFileName": "../../../packages/medusa/src/types/customer-groups.ts",
			"qualifiedName": "FilterableCustomerGroupProps.name"
		},
		"17730": {
			"sourceFileName": "../../../packages/medusa/src/types/customer-groups.ts",
			"qualifiedName": "FilterableCustomerGroupProps.updated_at"
		},
		"17731": {
			"sourceFileName": "../../../packages/medusa/src/types/customer-groups.ts",
			"qualifiedName": "FilterableCustomerGroupProps.created_at"
		},
		"17732": {
			"sourceFileName": "../../../packages/medusa/src/types/customer-groups.ts",
			"qualifiedName": "FilterableCustomerGroupProps.discount_condition_id"
		},
		"17733": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/update-customer-group.ts",
			"qualifiedName": "AdminPostCustomerGroupsGroupReq"
		},
		"17736": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/update-customer-group.ts",
			"qualifiedName": "AdminPostCustomerGroupsGroupReq.name"
		},
		"17737": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/update-customer-group.ts",
			"qualifiedName": "AdminPostCustomerGroupsGroupReq.metadata"
		},
		"17738": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/index.ts",
			"qualifiedName": "AdminCustomersRes"
		},
		"17739": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/index.ts",
			"qualifiedName": "__type"
		},
		"17740": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/index.ts",
			"qualifiedName": "__type.customer"
		},
		"17741": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/index.ts",
			"qualifiedName": "AdminCustomersListRes"
		},
		"17742": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/index.ts",
			"qualifiedName": "__type"
		},
		"17743": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/index.ts",
			"qualifiedName": "__type.customers"
		},
		"17744": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/index.ts",
			"qualifiedName": "defaultAdminCustomersRelations"
		},
		"17745": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/create-customer.ts",
			"qualifiedName": "AdminPostCustomersReq"
		},
		"17748": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/create-customer.ts",
			"qualifiedName": "AdminPostCustomersReq.email"
		},
		"17749": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/create-customer.ts",
			"qualifiedName": "AdminPostCustomersReq.first_name"
		},
		"17750": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/create-customer.ts",
			"qualifiedName": "AdminPostCustomersReq.last_name"
		},
		"17751": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/create-customer.ts",
			"qualifiedName": "AdminPostCustomersReq.password"
		},
		"17752": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/create-customer.ts",
			"qualifiedName": "AdminPostCustomersReq.phone"
		},
		"17753": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/create-customer.ts",
			"qualifiedName": "AdminPostCustomersReq.metadata"
		},
		"17754": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/list-customers.ts",
			"qualifiedName": "AdminGetCustomersParams"
		},
		"17757": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/list-customers.ts",
			"qualifiedName": "AdminGetCustomersParams.limit"
		},
		"17758": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/list-customers.ts",
			"qualifiedName": "AdminGetCustomersParams.offset"
		},
		"17759": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/list-customers.ts",
			"qualifiedName": "AdminGetCustomersParams.expand"
		},
		"17760": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/list-customers.ts",
			"qualifiedName": "AdminGetCustomersParams.fields"
		},
		"17761": {
			"sourceFileName": "../../../packages/medusa/src/types/customers.ts",
			"qualifiedName": "AdminListCustomerSelector.q"
		},
		"17762": {
			"sourceFileName": "../../../packages/medusa/src/types/customers.ts",
			"qualifiedName": "AdminListCustomerSelector.has_account"
		},
		"17763": {
			"sourceFileName": "../../../packages/medusa/src/types/customers.ts",
			"qualifiedName": "AdminListCustomerSelector.groups"
		},
		"17764": {
			"sourceFileName": "../../../packages/medusa/src/types/customers.ts",
			"qualifiedName": "AdminListCustomerSelector.order"
		},
		"17765": {
			"sourceFileName": "../../../packages/medusa/src/types/customers.ts",
			"qualifiedName": "AdminListCustomerSelector.created_at"
		},
		"17766": {
			"sourceFileName": "../../../packages/medusa/src/types/customers.ts",
			"qualifiedName": "AdminListCustomerSelector.updated_at"
		},
		"17767": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/update-customer.ts",
			"qualifiedName": "AdminPostCustomersCustomerReq"
		},
		"17770": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/update-customer.ts",
			"qualifiedName": "AdminPostCustomersCustomerReq.email"
		},
		"17771": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/update-customer.ts",
			"qualifiedName": "AdminPostCustomersCustomerReq.first_name"
		},
		"17772": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/update-customer.ts",
			"qualifiedName": "AdminPostCustomersCustomerReq.last_name"
		},
		"17773": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/update-customer.ts",
			"qualifiedName": "AdminPostCustomersCustomerReq.password"
		},
		"17774": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/update-customer.ts",
			"qualifiedName": "AdminPostCustomersCustomerReq.phone"
		},
		"17775": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/update-customer.ts",
			"qualifiedName": "AdminPostCustomersCustomerReq.metadata"
		},
		"17776": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/update-customer.ts",
			"qualifiedName": "AdminPostCustomersCustomerReq.groups"
		},
		"17777": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/index.ts",
			"qualifiedName": "defaultAdminDiscountsFields"
		},
		"17778": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/index.ts",
			"qualifiedName": "defaultAdminDiscountsRelations"
		},
		"17779": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/index.ts",
			"qualifiedName": "defaultAdminDiscountConditionFields"
		},
		"17780": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/index.ts",
			"qualifiedName": "defaultAdminDiscountConditionRelations"
		},
		"17781": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/index.ts",
			"qualifiedName": "AdminDiscountsRes"
		},
		"17782": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/index.ts",
			"qualifiedName": "__type"
		},
		"17783": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/index.ts",
			"qualifiedName": "__type.discount"
		},
		"17784": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/index.ts",
			"qualifiedName": "AdminDiscountConditionsRes"
		},
		"17785": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/index.ts",
			"qualifiedName": "__type"
		},
		"17786": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/index.ts",
			"qualifiedName": "__type.discount_condition"
		},
		"17787": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/index.ts",
			"qualifiedName": "AdminDiscountsDeleteRes"
		},
		"17788": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/index.ts",
			"qualifiedName": "AdminDiscountConditionsDeleteRes"
		},
		"17789": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/index.ts",
			"qualifiedName": "__type"
		},
		"17790": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/index.ts",
			"qualifiedName": "__type.discount"
		},
		"17791": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/index.ts",
			"qualifiedName": "AdminDiscountsListRes"
		},
		"17792": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/index.ts",
			"qualifiedName": "__type"
		},
		"17793": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/index.ts",
			"qualifiedName": "__type.discounts"
		},
		"17794": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-condition.ts",
			"qualifiedName": "AdminPostDiscountsDiscountConditions"
		},
		"17797": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-condition.ts",
			"qualifiedName": "AdminPostDiscountsDiscountConditions.operator"
		},
		"17798": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.products"
		},
		"17799": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.product_collections"
		},
		"17800": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.product_types"
		},
		"17801": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.product_tags"
		},
		"17802": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.customer_groups"
		},
		"17803": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-condition.ts",
			"qualifiedName": "AdminPostDiscountsDiscountConditionsParams"
		},
		"17806": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"17807": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"17808": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-discount.ts",
			"qualifiedName": "AdminPostDiscountsDiscountRule"
		},
		"17811": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-discount.ts",
			"qualifiedName": "AdminPostDiscountsDiscountRule.description"
		},
		"17812": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-discount.ts",
			"qualifiedName": "AdminPostDiscountsDiscountRule.type"
		},
		"17813": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-discount.ts",
			"qualifiedName": "AdminPostDiscountsDiscountRule.value"
		},
		"17814": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-discount.ts",
			"qualifiedName": "AdminPostDiscountsDiscountRule.allocation"
		},
		"17815": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-discount.ts",
			"qualifiedName": "AdminPostDiscountsDiscountRule.conditions"
		},
		"17816": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-discount.ts",
			"qualifiedName": "AdminPostDiscountsReq"
		},
		"17819": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-discount.ts",
			"qualifiedName": "AdminPostDiscountsReq.code"
		},
		"17820": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-discount.ts",
			"qualifiedName": "AdminPostDiscountsReq.rule"
		},
		"17821": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-discount.ts",
			"qualifiedName": "AdminPostDiscountsReq.is_dynamic"
		},
		"17822": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-discount.ts",
			"qualifiedName": "AdminPostDiscountsReq.is_disabled"
		},
		"17823": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-discount.ts",
			"qualifiedName": "AdminPostDiscountsReq.starts_at"
		},
		"17824": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-discount.ts",
			"qualifiedName": "AdminPostDiscountsReq.ends_at"
		},
		"17825": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-discount.ts",
			"qualifiedName": "AdminPostDiscountsReq.valid_duration"
		},
		"17826": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-discount.ts",
			"qualifiedName": "AdminPostDiscountsReq.usage_limit"
		},
		"17827": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-discount.ts",
			"qualifiedName": "AdminPostDiscountsReq.regions"
		},
		"17828": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-discount.ts",
			"qualifiedName": "AdminPostDiscountsReq.metadata"
		},
		"17829": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-discount.ts",
			"qualifiedName": "AdminCreateCondition"
		},
		"17832": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-discount.ts",
			"qualifiedName": "AdminCreateCondition.operator"
		},
		"17833": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.products"
		},
		"17834": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.product_collections"
		},
		"17835": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.product_types"
		},
		"17836": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.product_tags"
		},
		"17837": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.customer_groups"
		},
		"17838": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-discount.ts",
			"qualifiedName": "AdminPostDiscountsParams"
		},
		"17841": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"17842": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"17843": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-dynamic-code.ts",
			"qualifiedName": "AdminPostDiscountsDiscountDynamicCodesReq"
		},
		"17846": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-dynamic-code.ts",
			"qualifiedName": "AdminPostDiscountsDiscountDynamicCodesReq.code"
		},
		"17847": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-dynamic-code.ts",
			"qualifiedName": "AdminPostDiscountsDiscountDynamicCodesReq.usage_limit"
		},
		"17848": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-dynamic-code.ts",
			"qualifiedName": "AdminPostDiscountsDiscountDynamicCodesReq.metadata"
		},
		"17849": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/delete-condition.ts",
			"qualifiedName": "AdminDeleteDiscountsDiscountConditionsConditionParams"
		},
		"17852": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"17853": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"17854": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/get-condition.ts",
			"qualifiedName": "AdminGetDiscountsDiscountConditionsConditionParams"
		},
		"17857": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"17858": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"17859": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/get-discount.ts",
			"qualifiedName": "AdminGetDiscountParams"
		},
		"17862": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"17863": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"17864": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/get-discount-by-code.ts",
			"qualifiedName": "AdminGetDiscountsDiscountCodeParams"
		},
		"17867": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"17868": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"17869": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/list-discounts.ts",
			"qualifiedName": "AdminGetDiscountsParams"
		},
		"17870": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.__new"
		},
		"17871": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "AdminGetDiscountsParams"
		},
		"17872": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"17873": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/list-discounts.ts",
			"qualifiedName": "AdminGetDiscountsParams.rule"
		},
		"17874": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/list-discounts.ts",
			"qualifiedName": "AdminGetDiscountsParams.q"
		},
		"17875": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/list-discounts.ts",
			"qualifiedName": "AdminGetDiscountsParams.is_dynamic"
		},
		"17876": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/list-discounts.ts",
			"qualifiedName": "AdminGetDiscountsParams.is_disabled"
		},
		"17877": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/list-discounts.ts",
			"qualifiedName": "AdminGetDiscountsParams.created_at"
		},
		"17878": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/list-discounts.ts",
			"qualifiedName": "AdminGetDiscountsParams.updated_at"
		},
		"17879": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/list-discounts.ts",
			"qualifiedName": "AdminGetDiscountsParams.order"
		},
		"17880": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"17881": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"17882": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"17883": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"17884": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-condition.ts",
			"qualifiedName": "AdminPostDiscountsDiscountConditionsCondition"
		},
		"17887": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.products"
		},
		"17888": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.product_collections"
		},
		"17889": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.product_types"
		},
		"17890": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.product_tags"
		},
		"17891": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.customer_groups"
		},
		"17892": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-condition.ts",
			"qualifiedName": "AdminPostDiscountsDiscountConditionsConditionParams"
		},
		"17895": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"17896": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"17897": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-discount.ts",
			"qualifiedName": "AdminUpdateDiscountRule"
		},
		"17900": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-discount.ts",
			"qualifiedName": "AdminUpdateDiscountRule.id"
		},
		"17901": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-discount.ts",
			"qualifiedName": "AdminUpdateDiscountRule.description"
		},
		"17902": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-discount.ts",
			"qualifiedName": "AdminUpdateDiscountRule.value"
		},
		"17903": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-discount.ts",
			"qualifiedName": "AdminUpdateDiscountRule.allocation"
		},
		"17904": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-discount.ts",
			"qualifiedName": "AdminUpdateDiscountRule.conditions"
		},
		"17905": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-discount.ts",
			"qualifiedName": "AdminPostDiscountsDiscountReq"
		},
		"17908": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-discount.ts",
			"qualifiedName": "AdminPostDiscountsDiscountReq.code"
		},
		"17909": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-discount.ts",
			"qualifiedName": "AdminPostDiscountsDiscountReq.rule"
		},
		"17910": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-discount.ts",
			"qualifiedName": "AdminPostDiscountsDiscountReq.is_disabled"
		},
		"17911": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-discount.ts",
			"qualifiedName": "AdminPostDiscountsDiscountReq.starts_at"
		},
		"17912": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-discount.ts",
			"qualifiedName": "AdminPostDiscountsDiscountReq.ends_at"
		},
		"17913": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-discount.ts",
			"qualifiedName": "AdminPostDiscountsDiscountReq.valid_duration"
		},
		"17914": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-discount.ts",
			"qualifiedName": "AdminPostDiscountsDiscountReq.usage_limit"
		},
		"17915": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-discount.ts",
			"qualifiedName": "AdminPostDiscountsDiscountReq.regions"
		},
		"17916": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-discount.ts",
			"qualifiedName": "AdminPostDiscountsDiscountReq.metadata"
		},
		"17917": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-discount.ts",
			"qualifiedName": "AdminUpsertCondition"
		},
		"17920": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-discount.ts",
			"qualifiedName": "AdminUpsertCondition.id"
		},
		"17921": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-discount.ts",
			"qualifiedName": "AdminUpsertCondition.operator"
		},
		"17922": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.products"
		},
		"17923": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.product_collections"
		},
		"17924": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.product_types"
		},
		"17925": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.product_tags"
		},
		"17926": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.customer_groups"
		},
		"17927": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-discount.ts",
			"qualifiedName": "AdminPostDiscountsDiscountParams"
		},
		"17930": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"17931": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"17932": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/add-resources-to-condition-batch.ts",
			"qualifiedName": "AdminPostDiscountsDiscountConditionsConditionBatchReq"
		},
		"17935": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/add-resources-to-condition-batch.ts",
			"qualifiedName": "AdminPostDiscountsDiscountConditionsConditionBatchReq.resources"
		},
		"17936": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/add-resources-to-condition-batch.ts",
			"qualifiedName": "__type"
		},
		"17937": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/add-resources-to-condition-batch.ts",
			"qualifiedName": "__type.id"
		},
		"17938": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/add-resources-to-condition-batch.ts",
			"qualifiedName": "AdminPostDiscountsDiscountConditionsConditionBatchParams"
		},
		"17941": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"17942": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"17943": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/delete-resources-from-condition-batch.ts",
			"qualifiedName": "AdminDeleteDiscountsDiscountConditionsConditionBatchParams"
		},
		"17946": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"17947": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"17948": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/delete-resources-from-condition-batch.ts",
			"qualifiedName": "AdminDeleteDiscountsDiscountConditionsConditionBatchReq"
		},
		"17951": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/delete-resources-from-condition-batch.ts",
			"qualifiedName": "AdminDeleteDiscountsDiscountConditionsConditionBatchReq.resources"
		},
		"17952": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/delete-resources-from-condition-batch.ts",
			"qualifiedName": "__type"
		},
		"17953": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/delete-resources-from-condition-batch.ts",
			"qualifiedName": "__type.id"
		},
		"17954": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/index.ts",
			"qualifiedName": "defaultAdminDraftOrdersRelations"
		},
		"17955": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/index.ts",
			"qualifiedName": "defaultAdminDraftOrdersCartRelations"
		},
		"17956": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/index.ts",
			"qualifiedName": "defaultAdminDraftOrdersCartFields"
		},
		"17957": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/index.ts",
			"qualifiedName": "defaultAdminDraftOrdersFields"
		},
		"17958": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/index.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderRegisterPaymentRes"
		},
		"17959": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/index.ts",
			"qualifiedName": "__type"
		},
		"17960": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/index.ts",
			"qualifiedName": "__type.order"
		},
		"17961": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/index.ts",
			"qualifiedName": "AdminDraftOrdersRes"
		},
		"17962": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/index.ts",
			"qualifiedName": "__type"
		},
		"17963": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/index.ts",
			"qualifiedName": "__type.draft_order"
		},
		"17964": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/index.ts",
			"qualifiedName": "AdminDraftOrdersDeleteRes"
		},
		"17965": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/index.ts",
			"qualifiedName": "AdminDraftOrdersListRes"
		},
		"17966": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/index.ts",
			"qualifiedName": "__type"
		},
		"17967": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/index.ts",
			"qualifiedName": "__type.draft_orders"
		},
		"17968": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersReq"
		},
		"17971": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersReq.status"
		},
		"17972": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersReq.email"
		},
		"17973": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersReq.billing_address"
		},
		"17974": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersReq.shipping_address"
		},
		"17975": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersReq.items"
		},
		"17976": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersReq.region_id"
		},
		"17977": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersReq.discounts"
		},
		"17978": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersReq.customer_id"
		},
		"17979": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersReq.no_notification_order"
		},
		"17980": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersReq.shipping_methods"
		},
		"17981": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersReq.metadata"
		},
		"17982": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-line-item.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderLineItemsReq"
		},
		"17985": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-line-item.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderLineItemsReq.title"
		},
		"17986": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-line-item.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderLineItemsReq.unit_price"
		},
		"17987": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-line-item.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderLineItemsReq.variant_id"
		},
		"17988": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-line-item.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderLineItemsReq.quantity"
		},
		"17989": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-line-item.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderLineItemsReq.metadata"
		},
		"17990": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/list-draft-orders.ts",
			"qualifiedName": "AdminGetDraftOrdersParams"
		},
		"17991": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.__new"
		},
		"17992": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "AdminGetDraftOrdersParams"
		},
		"17993": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"17994": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/list-draft-orders.ts",
			"qualifiedName": "AdminGetDraftOrdersParams.q"
		},
		"17995": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/list-draft-orders.ts",
			"qualifiedName": "AdminGetDraftOrdersParams.expand"
		},
		"17996": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/list-draft-orders.ts",
			"qualifiedName": "AdminGetDraftOrdersParams.fields"
		},
		"17997": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/list-draft-orders.ts",
			"qualifiedName": "AdminGetDraftOrdersParams.status"
		},
		"17998": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/list-draft-orders.ts",
			"qualifiedName": "AdminGetDraftOrdersParams.created_at"
		},
		"17999": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/list-draft-orders.ts",
			"qualifiedName": "AdminGetDraftOrdersParams.updated_at"
		},
		"18000": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"18001": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"18002": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.order"
		},
		"18003": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/register-payment.ts",
			"qualifiedName": "reserveQuantityForDraftOrder"
		},
		"18004": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/register-payment.ts",
			"qualifiedName": "reserveQuantityForDraftOrder"
		},
		"18005": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/register-payment.ts",
			"qualifiedName": "order"
		},
		"18006": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/register-payment.ts",
			"qualifiedName": "context"
		},
		"18007": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/register-payment.ts",
			"qualifiedName": "__type"
		},
		"18008": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/register-payment.ts",
			"qualifiedName": "__type.productVariantInventoryService"
		},
		"18009": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/register-payment.ts",
			"qualifiedName": "__type.locationId"
		},
		"18010": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/update-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderReq"
		},
		"18013": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/update-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderReq.region_id"
		},
		"18014": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/update-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderReq.country_code"
		},
		"18015": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/update-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderReq.email"
		},
		"18016": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/update-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderReq.billing_address"
		},
		"18017": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/update-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderReq.shipping_address"
		},
		"18018": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/update-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderReq.discounts"
		},
		"18019": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/update-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderReq.customer_id"
		},
		"18020": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/update-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderReq.no_notification_order"
		},
		"18021": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/update-line-item.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderLineItemsItemReq"
		},
		"18024": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/update-line-item.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderLineItemsItemReq.title"
		},
		"18025": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/update-line-item.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderLineItemsItemReq.unit_price"
		},
		"18026": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/update-line-item.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderLineItemsItemReq.quantity"
		},
		"18027": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/update-line-item.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderLineItemsItemReq.metadata"
		},
		"18028": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/index.ts",
			"qualifiedName": "defaultAdminGiftCardFields"
		},
		"18029": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/index.ts",
			"qualifiedName": "defaultAdminGiftCardRelations"
		},
		"18030": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/index.ts",
			"qualifiedName": "AdminGiftCardsRes"
		},
		"18031": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/index.ts",
			"qualifiedName": "__type"
		},
		"18032": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/index.ts",
			"qualifiedName": "__type.gift_card"
		},
		"18033": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/index.ts",
			"qualifiedName": "AdminGiftCardsDeleteRes"
		},
		"18034": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/index.ts",
			"qualifiedName": "AdminGiftCardsListRes"
		},
		"18035": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/index.ts",
			"qualifiedName": "__type"
		},
		"18036": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/index.ts",
			"qualifiedName": "__type.gift_cards"
		},
		"18037": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/create-gift-card.ts",
			"qualifiedName": "AdminPostGiftCardsReq"
		},
		"18040": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/create-gift-card.ts",
			"qualifiedName": "AdminPostGiftCardsReq.value"
		},
		"18041": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/create-gift-card.ts",
			"qualifiedName": "AdminPostGiftCardsReq.ends_at"
		},
		"18042": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/create-gift-card.ts",
			"qualifiedName": "AdminPostGiftCardsReq.is_disabled"
		},
		"18043": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/create-gift-card.ts",
			"qualifiedName": "AdminPostGiftCardsReq.region_id"
		},
		"18044": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/create-gift-card.ts",
			"qualifiedName": "AdminPostGiftCardsReq.metadata"
		},
		"18045": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/list-gift-cards.ts",
			"qualifiedName": "AdminGetGiftCardsParams"
		},
		"18048": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/list-gift-cards.ts",
			"qualifiedName": "AdminGetGiftCardsParams.limit"
		},
		"18049": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/list-gift-cards.ts",
			"qualifiedName": "AdminGetGiftCardsParams.offset"
		},
		"18050": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/list-gift-cards.ts",
			"qualifiedName": "AdminGetGiftCardsParams.q"
		},
		"18051": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/list-gift-cards.ts",
			"qualifiedName": "AdminGetGiftCardsParams.order"
		},
		"18052": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/update-gift-card.ts",
			"qualifiedName": "AdminPostGiftCardsGiftCardReq"
		},
		"18055": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/update-gift-card.ts",
			"qualifiedName": "AdminPostGiftCardsGiftCardReq.balance"
		},
		"18056": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/update-gift-card.ts",
			"qualifiedName": "AdminPostGiftCardsGiftCardReq.is_disabled"
		},
		"18057": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/update-gift-card.ts",
			"qualifiedName": "AdminPostGiftCardsGiftCardReq.ends_at"
		},
		"18058": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/update-gift-card.ts",
			"qualifiedName": "AdminPostGiftCardsGiftCardReq.region_id"
		},
		"18059": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/update-gift-card.ts",
			"qualifiedName": "AdminPostGiftCardsGiftCardReq.metadata"
		},
		"18060": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "defaultAdminInventoryItemFields"
		},
		"18061": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "defaultAdminLocationLevelFields"
		},
		"18062": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "defaultAdminInventoryItemRelations"
		},
		"18063": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "AdminInventoryItemsRes"
		},
		"18064": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "__type"
		},
		"18065": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "__type.inventory_item"
		},
		"18066": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "AdminInventoryItemsDeleteRes"
		},
		"18067": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "AdminInventoryItemsListRes"
		},
		"18068": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "__type"
		},
		"18069": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "__type.inventory_items"
		},
		"18070": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "DecoratedInventoryItemDTO"
		},
		"18071": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "__type"
		},
		"18072": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "__type.location_levels"
		},
		"18073": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "__type.variants"
		},
		"18074": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "__type.stocked_quantity"
		},
		"18075": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "__type.reserved_quantity"
		},
		"18076": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "AdminInventoryItemsListWithVariantsAndLocationLevelsRes"
		},
		"18077": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "__type"
		},
		"18078": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "__type.inventory_items"
		},
		"18079": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "AdminInventoryItemsLocationLevelsRes"
		},
		"18080": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "__type"
		},
		"18081": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "__type.inventory_item"
		},
		"18082": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "__type"
		},
		"18083": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "__type.id"
		},
		"18084": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "__type.location_levels"
		},
		"18085": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsReq"
		},
		"18088": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsReq.variant_id"
		},
		"18089": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsReq.sku"
		},
		"18090": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsReq.hs_code"
		},
		"18091": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsReq.weight"
		},
		"18092": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsReq.length"
		},
		"18093": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsReq.height"
		},
		"18094": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsReq.width"
		},
		"18095": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsReq.origin_country"
		},
		"18096": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsReq.mid_code"
		},
		"18097": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsReq.material"
		},
		"18098": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsReq.title"
		},
		"18099": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsReq.description"
		},
		"18100": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsReq.thumbnail"
		},
		"18101": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsReq.metadata"
		},
		"18102": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsParams"
		},
		"18105": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"18106": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"18107": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-location-level.ts",
			"qualifiedName": "AdminPostInventoryItemsItemLocationLevelsReq"
		},
		"18110": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-location-level.ts",
			"qualifiedName": "AdminPostInventoryItemsItemLocationLevelsReq.location_id"
		},
		"18111": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-location-level.ts",
			"qualifiedName": "AdminPostInventoryItemsItemLocationLevelsReq.stocked_quantity"
		},
		"18112": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-location-level.ts",
			"qualifiedName": "AdminPostInventoryItemsItemLocationLevelsReq.incoming_quantity"
		},
		"18113": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-location-level.ts",
			"qualifiedName": "AdminPostInventoryItemsItemLocationLevelsParams"
		},
		"18116": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"18117": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"18118": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/get-inventory-item.ts",
			"qualifiedName": "AdminGetInventoryItemsItemParams"
		},
		"18121": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"18122": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"18123": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/list-inventory-items.ts",
			"qualifiedName": "AdminGetInventoryItemsParams"
		},
		"18124": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.__new"
		},
		"18125": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "AdminGetInventoryItemsParams"
		},
		"18126": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"18127": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/list-inventory-items.ts",
			"qualifiedName": "AdminGetInventoryItemsParams.id"
		},
		"18128": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/list-inventory-items.ts",
			"qualifiedName": "AdminGetInventoryItemsParams.q"
		},
		"18129": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/list-inventory-items.ts",
			"qualifiedName": "AdminGetInventoryItemsParams.location_id"
		},
		"18130": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/list-inventory-items.ts",
			"qualifiedName": "AdminGetInventoryItemsParams.sku"
		},
		"18131": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/list-inventory-items.ts",
			"qualifiedName": "AdminGetInventoryItemsParams.origin_country"
		},
		"18132": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/list-inventory-items.ts",
			"qualifiedName": "AdminGetInventoryItemsParams.mid_code"
		},
		"18133": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/list-inventory-items.ts",
			"qualifiedName": "AdminGetInventoryItemsParams.material"
		},
		"18134": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/list-inventory-items.ts",
			"qualifiedName": "AdminGetInventoryItemsParams.hs_code"
		},
		"18135": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/list-inventory-items.ts",
			"qualifiedName": "AdminGetInventoryItemsParams.weight"
		},
		"18136": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/list-inventory-items.ts",
			"qualifiedName": "AdminGetInventoryItemsParams.length"
		},
		"18137": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/list-inventory-items.ts",
			"qualifiedName": "AdminGetInventoryItemsParams.height"
		},
		"18138": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/list-inventory-items.ts",
			"qualifiedName": "AdminGetInventoryItemsParams.width"
		},
		"18139": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/list-inventory-items.ts",
			"qualifiedName": "AdminGetInventoryItemsParams.requires_shipping"
		},
		"18140": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"18141": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"18142": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"18143": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"18144": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.order"
		},
		"18145": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/list-location-levels.ts",
			"qualifiedName": "AdminGetInventoryItemsItemLocationLevelsParams"
		},
		"18148": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/list-location-levels.ts",
			"qualifiedName": "AdminGetInventoryItemsItemLocationLevelsParams.location_id"
		},
		"18149": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"18150": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"18151": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/update-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsInventoryItemReq"
		},
		"18154": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/update-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsInventoryItemReq.sku"
		},
		"18155": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/update-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsInventoryItemReq.origin_country"
		},
		"18156": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/update-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsInventoryItemReq.hs_code"
		},
		"18157": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/update-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsInventoryItemReq.mid_code"
		},
		"18158": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/update-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsInventoryItemReq.material"
		},
		"18159": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/update-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsInventoryItemReq.weight"
		},
		"18160": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/update-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsInventoryItemReq.height"
		},
		"18161": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/update-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsInventoryItemReq.length"
		},
		"18162": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/update-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsInventoryItemReq.width"
		},
		"18163": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/update-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsInventoryItemReq.title"
		},
		"18164": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/update-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsInventoryItemReq.description"
		},
		"18165": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/update-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsInventoryItemReq.thumbnail"
		},
		"18166": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/update-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsInventoryItemReq.requires_shipping"
		},
		"18167": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/update-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsInventoryItemParams"
		},
		"18170": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"18171": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"18172": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/update-location-level.ts",
			"qualifiedName": "AdminPostInventoryItemsItemLocationLevelsLevelReq"
		},
		"18175": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/update-location-level.ts",
			"qualifiedName": "AdminPostInventoryItemsItemLocationLevelsLevelReq.incoming_quantity"
		},
		"18176": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/update-location-level.ts",
			"qualifiedName": "AdminPostInventoryItemsItemLocationLevelsLevelReq.stocked_quantity"
		},
		"18177": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/update-location-level.ts",
			"qualifiedName": "AdminPostInventoryItemsItemLocationLevelsLevelParams"
		},
		"18180": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"18181": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"18182": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/invites/index.ts",
			"qualifiedName": "unauthenticatedInviteRoutes"
		},
		"18183": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/invites/index.ts",
			"qualifiedName": "unauthenticatedInviteRoutes"
		},
		"18184": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/invites/index.ts",
			"qualifiedName": "app"
		},
		"18185": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/invites/index.ts",
			"qualifiedName": "AdminInviteDeleteRes"
		},
		"18186": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/invites/index.ts",
			"qualifiedName": "AdminListInvitesRes"
		},
		"18187": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/invites/index.ts",
			"qualifiedName": "__type"
		},
		"18188": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/invites/index.ts",
			"qualifiedName": "__type.invites"
		},
		"18189": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/invites/accept-invite.ts",
			"qualifiedName": "AdminPostInvitesInviteAcceptUserReq"
		},
		"18192": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/invites/accept-invite.ts",
			"qualifiedName": "AdminPostInvitesInviteAcceptUserReq.first_name"
		},
		"18193": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/invites/accept-invite.ts",
			"qualifiedName": "AdminPostInvitesInviteAcceptUserReq.last_name"
		},
		"18194": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/invites/accept-invite.ts",
			"qualifiedName": "AdminPostInvitesInviteAcceptUserReq.password"
		},
		"18195": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/invites/accept-invite.ts",
			"qualifiedName": "AdminPostInvitesInviteAcceptReq"
		},
		"18198": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/invites/accept-invite.ts",
			"qualifiedName": "AdminPostInvitesInviteAcceptReq.token"
		},
		"18199": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/invites/accept-invite.ts",
			"qualifiedName": "AdminPostInvitesInviteAcceptReq.user"
		},
		"18200": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/invites/create-invite.ts",
			"qualifiedName": "AdminPostInvitesReq"
		},
		"18203": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/invites/create-invite.ts",
			"qualifiedName": "AdminPostInvitesReq.user"
		},
		"18204": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/invites/create-invite.ts",
			"qualifiedName": "AdminPostInvitesReq.role"
		},
		"18205": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notes/index.ts",
			"qualifiedName": "AdminNotesRes"
		},
		"18206": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notes/index.ts",
			"qualifiedName": "__type"
		},
		"18207": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notes/index.ts",
			"qualifiedName": "__type.note"
		},
		"18208": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notes/index.ts",
			"qualifiedName": "AdminNotesDeleteRes"
		},
		"18209": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notes/index.ts",
			"qualifiedName": "AdminNotesListRes"
		},
		"18210": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notes/index.ts",
			"qualifiedName": "__type"
		},
		"18211": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notes/index.ts",
			"qualifiedName": "__type.notes"
		},
		"18212": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notes/create-note.ts",
			"qualifiedName": "AdminPostNotesReq"
		},
		"18215": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notes/create-note.ts",
			"qualifiedName": "AdminPostNotesReq.resource_id"
		},
		"18216": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notes/create-note.ts",
			"qualifiedName": "AdminPostNotesReq.resource_type"
		},
		"18217": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notes/create-note.ts",
			"qualifiedName": "AdminPostNotesReq.value"
		},
		"18218": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notes/list-notes.ts",
			"qualifiedName": "AdminGetNotesParams"
		},
		"18221": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notes/list-notes.ts",
			"qualifiedName": "AdminGetNotesParams.resource_id"
		},
		"18222": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notes/list-notes.ts",
			"qualifiedName": "AdminGetNotesParams.limit"
		},
		"18223": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notes/list-notes.ts",
			"qualifiedName": "AdminGetNotesParams.offset"
		},
		"18224": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notes/update-note.ts",
			"qualifiedName": "AdminPostNotesNoteReq"
		},
		"18227": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notes/update-note.ts",
			"qualifiedName": "AdminPostNotesNoteReq.value"
		},
		"18228": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notifications/index.ts",
			"qualifiedName": "defaultAdminNotificationsRelations"
		},
		"18229": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notifications/index.ts",
			"qualifiedName": "defaultAdminNotificationsFields"
		},
		"18230": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notifications/index.ts",
			"qualifiedName": "AdminNotificationsListRes"
		},
		"18231": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notifications/index.ts",
			"qualifiedName": "__type"
		},
		"18232": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notifications/index.ts",
			"qualifiedName": "__type.notifications"
		},
		"18233": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notifications/index.ts",
			"qualifiedName": "AdminNotificationsRes"
		},
		"18234": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notifications/index.ts",
			"qualifiedName": "__type"
		},
		"18235": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notifications/index.ts",
			"qualifiedName": "__type.notification"
		},
		"18236": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notifications/list-notifications.ts",
			"qualifiedName": "AdminGetNotificationsParams"
		},
		"18239": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notifications/list-notifications.ts",
			"qualifiedName": "AdminGetNotificationsParams.limit"
		},
		"18240": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notifications/list-notifications.ts",
			"qualifiedName": "AdminGetNotificationsParams.offset"
		},
		"18241": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notifications/list-notifications.ts",
			"qualifiedName": "AdminGetNotificationsParams.fields"
		},
		"18242": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notifications/list-notifications.ts",
			"qualifiedName": "AdminGetNotificationsParams.expand"
		},
		"18243": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notifications/list-notifications.ts",
			"qualifiedName": "AdminGetNotificationsParams.event_name"
		},
		"18244": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notifications/list-notifications.ts",
			"qualifiedName": "AdminGetNotificationsParams.resource_type"
		},
		"18245": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notifications/list-notifications.ts",
			"qualifiedName": "AdminGetNotificationsParams.resource_id"
		},
		"18246": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notifications/list-notifications.ts",
			"qualifiedName": "AdminGetNotificationsParams.to"
		},
		"18247": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notifications/list-notifications.ts",
			"qualifiedName": "AdminGetNotificationsParams.include_resends"
		},
		"18248": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notifications/resend-notification.ts",
			"qualifiedName": "AdminPostNotificationsNotificationResendReq"
		},
		"18251": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notifications/resend-notification.ts",
			"qualifiedName": "AdminPostNotificationsNotificationResendReq.to"
		},
		"18252": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/index.ts",
			"qualifiedName": "AdminOrderEditsRes"
		},
		"18253": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/index.ts",
			"qualifiedName": "__type"
		},
		"18254": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/index.ts",
			"qualifiedName": "__type.order_edit"
		},
		"18255": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/index.ts",
			"qualifiedName": "AdminOrderEditsListRes"
		},
		"18256": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/index.ts",
			"qualifiedName": "__type"
		},
		"18257": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/index.ts",
			"qualifiedName": "__type.order_edits"
		},
		"18258": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/index.ts",
			"qualifiedName": "AdminOrderEditDeleteRes"
		},
		"18259": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/index.ts",
			"qualifiedName": "AdminOrderEditItemChangeDeleteRes"
		},
		"18260": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/index.ts",
			"qualifiedName": "__type"
		},
		"18261": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/index.ts",
			"qualifiedName": "__type.id"
		},
		"18262": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/index.ts",
			"qualifiedName": "__type.object"
		},
		"18263": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/index.ts",
			"qualifiedName": "__type.deleted"
		},
		"18264": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/add-line-item.ts",
			"qualifiedName": "AdminPostOrderEditsEditLineItemsReq"
		},
		"18267": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/add-line-item.ts",
			"qualifiedName": "AdminPostOrderEditsEditLineItemsReq.variant_id"
		},
		"18268": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/add-line-item.ts",
			"qualifiedName": "AdminPostOrderEditsEditLineItemsReq.quantity"
		},
		"18269": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/add-line-item.ts",
			"qualifiedName": "AdminPostOrderEditsEditLineItemsReq.metadata"
		},
		"18270": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/create-order-edit.ts",
			"qualifiedName": "AdminPostOrderEditsReq"
		},
		"18273": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/create-order-edit.ts",
			"qualifiedName": "AdminPostOrderEditsReq.order_id"
		},
		"18274": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/create-order-edit.ts",
			"qualifiedName": "AdminPostOrderEditsReq.internal_note"
		},
		"18275": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/create-order-edit.ts",
			"qualifiedName": "AdminPostOrderEditsReq.created_by"
		},
		"18276": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/get-order-edit.ts",
			"qualifiedName": "GetOrderEditsOrderEditParams"
		},
		"18279": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"18280": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"18281": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/list-order-edit.ts",
			"qualifiedName": "GetOrderEditsParams"
		},
		"18282": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.__new"
		},
		"18283": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "GetOrderEditsParams"
		},
		"18284": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"18285": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/list-order-edit.ts",
			"qualifiedName": "GetOrderEditsParams.q"
		},
		"18286": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/list-order-edit.ts",
			"qualifiedName": "GetOrderEditsParams.order_id"
		},
		"18287": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"18288": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"18289": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"18290": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"18291": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.order"
		},
		"18292": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/request-confirmation.ts",
			"qualifiedName": "AdminPostOrderEditsRequestConfirmationReq"
		},
		"18295": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/request-confirmation.ts",
			"qualifiedName": "AdminPostOrderEditsRequestConfirmationReq.payment_collection_description"
		},
		"18296": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/update-order-edit.ts",
			"qualifiedName": "AdminPostOrderEditsOrderEditReq"
		},
		"18299": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/update-order-edit.ts",
			"qualifiedName": "AdminPostOrderEditsOrderEditReq.internal_note"
		},
		"18300": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/update-order-edit-line-item.ts",
			"qualifiedName": "AdminPostOrderEditsEditLineItemsLineItemReq"
		},
		"18303": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/update-order-edit-line-item.ts",
			"qualifiedName": "AdminPostOrderEditsEditLineItemsLineItemReq.quantity"
		},
		"18304": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/index.ts",
			"qualifiedName": "AdminOrdersRes"
		},
		"18305": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/index.ts",
			"qualifiedName": "__type"
		},
		"18306": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/index.ts",
			"qualifiedName": "__type.order"
		},
		"18307": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/index.ts",
			"qualifiedName": "AdminOrdersListRes"
		},
		"18308": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/index.ts",
			"qualifiedName": "__type"
		},
		"18309": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/index.ts",
			"qualifiedName": "__type.orders"
		},
		"18310": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/index.ts",
			"qualifiedName": "filterableAdminOrdersFields"
		},
		"18311": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/index.ts",
			"qualifiedName": "AvailableOrderIncludes"
		},
		"18312": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/index.ts",
			"qualifiedName": "__object"
		},
		"18313": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/index.ts",
			"qualifiedName": "__object.RETURNABLE_ITEMS"
		},
		"18314": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/index.ts",
			"qualifiedName": "allowedOrderIncludes"
		},
		"18315": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/add-shipping-method.ts",
			"qualifiedName": "AdminPostOrdersOrderShippingMethodsReq"
		},
		"18318": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/add-shipping-method.ts",
			"qualifiedName": "AdminPostOrdersOrderShippingMethodsReq.price"
		},
		"18319": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/add-shipping-method.ts",
			"qualifiedName": "AdminPostOrdersOrderShippingMethodsReq.option_id"
		},
		"18320": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/add-shipping-method.ts",
			"qualifiedName": "AdminPostOrdersOrderShippingMethodsReq.data"
		},
		"18321": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/add-shipping-method.ts",
			"qualifiedName": "AdminPostOrdersOrderShippingMethodsParams"
		},
		"18324": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"18325": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"18326": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/archive-order.ts",
			"qualifiedName": "AdminPostOrdersOrderArchiveParams"
		},
		"18329": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"18330": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"18331": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/cancel-claim.ts",
			"qualifiedName": "AdminPostOrdersClaimCancel"
		},
		"18334": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"18335": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"18336": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/cancel-fulfillment.ts",
			"qualifiedName": "adjustInventoryForCancelledFulfillment"
		},
		"18337": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/cancel-fulfillment.ts",
			"qualifiedName": "adjustInventoryForCancelledFulfillment"
		},
		"18338": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/cancel-fulfillment.ts",
			"qualifiedName": "fulfillment"
		},
		"18339": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/cancel-fulfillment.ts",
			"qualifiedName": "context"
		},
		"18340": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/cancel-fulfillment.ts",
			"qualifiedName": "__type"
		},
		"18341": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/cancel-fulfillment.ts",
			"qualifiedName": "__type.productVariantInventoryService"
		},
		"18342": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/cancel-fulfillment.ts",
			"qualifiedName": "AdminPostOrdersOrderFulfillementsCancelParams"
		},
		"18345": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"18346": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"18347": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/cancel-fulfillment-claim.ts",
			"qualifiedName": "AdminPostOrdersClaimFulfillmentsCancelParams"
		},
		"18350": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"18351": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"18352": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/cancel-fulfillment-swap.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapFulfillementsCancelParams"
		},
		"18355": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"18356": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"18357": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/cancel-order.ts",
			"qualifiedName": "AdminPostOrdersOrderCancel"
		},
		"18360": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"18361": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"18362": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/cancel-swap.ts",
			"qualifiedName": "AdminPostOrdersSwapCancelParams"
		},
		"18365": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"18366": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"18367": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/capture-payment.ts",
			"qualifiedName": "AdminPostOrdersOrderCaptureParams"
		},
		"18370": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"18371": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"18372": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/complete-order.ts",
			"qualifiedName": "AdminPostOrdersOrderCompleteParams"
		},
		"18375": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"18376": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"18377": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsReq"
		},
		"18380": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsReq.type"
		},
		"18381": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsReq.claim_items"
		},
		"18382": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsReq.return_shipping"
		},
		"18383": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsReq.additional_items"
		},
		"18384": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsReq.shipping_methods"
		},
		"18385": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsReq.refund_amount"
		},
		"18386": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsReq.shipping_address"
		},
		"18387": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsReq.no_notification"
		},
		"18388": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsReq.return_location_id"
		},
		"18389": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsReq.metadata"
		},
		"18390": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsParams"
		},
		"18393": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"18394": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"18395": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim-shipment.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsClaimShipmentsReq"
		},
		"18398": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim-shipment.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsClaimShipmentsReq.fulfillment_id"
		},
		"18399": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim-shipment.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsClaimShipmentsReq.tracking_numbers"
		},
		"18400": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim-shipment.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsClaimShipmentsParams"
		},
		"18403": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"18404": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"18405": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-fulfillment.ts",
			"qualifiedName": "updateInventoryAndReservations"
		},
		"18406": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-fulfillment.ts",
			"qualifiedName": "updateInventoryAndReservations"
		},
		"18407": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-fulfillment.ts",
			"qualifiedName": "fulfillments"
		},
		"18408": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-fulfillment.ts",
			"qualifiedName": "context"
		},
		"18409": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-fulfillment.ts",
			"qualifiedName": "__type"
		},
		"18410": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-fulfillment.ts",
			"qualifiedName": "__type.inventoryService"
		},
		"18411": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-fulfillment.ts",
			"qualifiedName": "__type.locationId"
		},
		"18412": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-fulfillment.ts",
			"qualifiedName": "AdminPostOrdersOrderFulfillmentsReq"
		},
		"18415": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-fulfillment.ts",
			"qualifiedName": "AdminPostOrdersOrderFulfillmentsReq.items"
		},
		"18416": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-fulfillment.ts",
			"qualifiedName": "AdminPostOrdersOrderFulfillmentsReq.location_id"
		},
		"18417": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-fulfillment.ts",
			"qualifiedName": "AdminPostOrdersOrderFulfillmentsReq.no_notification"
		},
		"18418": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-fulfillment.ts",
			"qualifiedName": "AdminPostOrdersOrderFulfillmentsReq.metadata"
		},
		"18419": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-fulfillment.ts",
			"qualifiedName": "AdminPostOrdersOrderFulfillmentsParams"
		},
		"18422": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"18423": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"18424": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-shipment.ts",
			"qualifiedName": "AdminPostOrdersOrderShipmentReq"
		},
		"18427": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-shipment.ts",
			"qualifiedName": "AdminPostOrdersOrderShipmentReq.fulfillment_id"
		},
		"18428": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-shipment.ts",
			"qualifiedName": "AdminPostOrdersOrderShipmentReq.tracking_numbers"
		},
		"18429": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-shipment.ts",
			"qualifiedName": "AdminPostOrdersOrderShipmentReq.no_notification"
		},
		"18430": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-shipment.ts",
			"qualifiedName": "AdminPostOrdersOrderShipmentParams"
		},
		"18433": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"18434": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"18435": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsReq"
		},
		"18438": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsReq.return_items"
		},
		"18439": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsReq.return_shipping"
		},
		"18440": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsReq.sales_channel_id"
		},
		"18441": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsReq.additional_items"
		},
		"18442": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsReq.custom_shipping_options"
		},
		"18443": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsReq.no_notification"
		},
		"18444": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsReq.return_location_id"
		},
		"18445": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsReq.allow_backorder"
		},
		"18446": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsParams"
		},
		"18449": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"18450": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"18451": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap-shipment.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsSwapShipmentsReq"
		},
		"18454": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap-shipment.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsSwapShipmentsReq.fulfillment_id"
		},
		"18455": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap-shipment.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsSwapShipmentsReq.tracking_numbers"
		},
		"18456": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap-shipment.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsSwapShipmentsReq.no_notification"
		},
		"18457": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap-shipment.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsSwapShipmentsParams"
		},
		"18460": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"18461": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"18462": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/fulfill-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsClaimFulfillmentsReq"
		},
		"18465": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/fulfill-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsClaimFulfillmentsReq.metadata"
		},
		"18466": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/fulfill-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsClaimFulfillmentsReq.no_notification"
		},
		"18467": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/fulfill-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsClaimFulfillmentsReq.location_id"
		},
		"18468": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/fulfill-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsClaimFulfillmentsParams"
		},
		"18471": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"18472": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"18473": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/fulfill-swap.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsSwapFulfillmentsReq"
		},
		"18476": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/fulfill-swap.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsSwapFulfillmentsReq.metadata"
		},
		"18477": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/fulfill-swap.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsSwapFulfillmentsReq.no_notification"
		},
		"18478": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/fulfill-swap.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsSwapFulfillmentsReq.location_id"
		},
		"18479": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/fulfill-swap.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsSwapFulfillmentsParams"
		},
		"18482": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"18483": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"18484": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/get-order.ts",
			"qualifiedName": "AdminGetOrdersOrderParams"
		},
		"18487": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"18488": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"18489": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/list-orders.ts",
			"qualifiedName": "AdminGetOrdersParams"
		},
		"18492": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/list-orders.ts",
			"qualifiedName": "AdminGetOrdersParams.offset"
		},
		"18493": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/list-orders.ts",
			"qualifiedName": "AdminGetOrdersParams.limit"
		},
		"18494": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/list-orders.ts",
			"qualifiedName": "AdminGetOrdersParams.expand"
		},
		"18495": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/list-orders.ts",
			"qualifiedName": "AdminGetOrdersParams.fields"
		},
		"18496": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/list-orders.ts",
			"qualifiedName": "AdminGetOrdersParams.order"
		},
		"18497": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.q"
		},
		"18498": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.id"
		},
		"18499": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.status"
		},
		"18500": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.fulfillment_status"
		},
		"18501": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.payment_status"
		},
		"18502": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.display_id"
		},
		"18503": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.cart_id"
		},
		"18504": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.customer_id"
		},
		"18505": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.email"
		},
		"18506": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.region_id"
		},
		"18507": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.currency_code"
		},
		"18508": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.tax_rate"
		},
		"18509": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.sales_channel_id"
		},
		"18510": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.canceled_at"
		},
		"18511": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.created_at"
		},
		"18512": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.updated_at"
		},
		"18513": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/process-swap-payment.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsSwapProcessPaymentParams"
		},
		"18516": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"18517": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"18518": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/refund-payment.ts",
			"qualifiedName": "AdminPostOrdersOrderRefundsReq"
		},
		"18521": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/refund-payment.ts",
			"qualifiedName": "AdminPostOrdersOrderRefundsReq.amount"
		},
		"18522": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/refund-payment.ts",
			"qualifiedName": "AdminPostOrdersOrderRefundsReq.reason"
		},
		"18523": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/refund-payment.ts",
			"qualifiedName": "AdminPostOrdersOrderRefundsReq.note"
		},
		"18524": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/refund-payment.ts",
			"qualifiedName": "AdminPostOrdersOrderRefundsReq.no_notification"
		},
		"18525": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/refund-payment.ts",
			"qualifiedName": "AdminPostOrdersOrderRefundsParams"
		},
		"18528": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"18529": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"18530": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/request-return.ts",
			"qualifiedName": "AdminPostOrdersOrderReturnsReq"
		},
		"18533": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/request-return.ts",
			"qualifiedName": "AdminPostOrdersOrderReturnsReq.items"
		},
		"18534": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/request-return.ts",
			"qualifiedName": "AdminPostOrdersOrderReturnsReq.return_shipping"
		},
		"18535": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/request-return.ts",
			"qualifiedName": "AdminPostOrdersOrderReturnsReq.note"
		},
		"18536": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/request-return.ts",
			"qualifiedName": "AdminPostOrdersOrderReturnsReq.receive_now"
		},
		"18537": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/request-return.ts",
			"qualifiedName": "AdminPostOrdersOrderReturnsReq.no_notification"
		},
		"18538": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/request-return.ts",
			"qualifiedName": "AdminPostOrdersOrderReturnsReq.refund"
		},
		"18539": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/request-return.ts",
			"qualifiedName": "AdminPostOrdersOrderReturnsReq.location_id"
		},
		"18540": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/request-return.ts",
			"qualifiedName": "AdminPostOrdersOrderReturnsParams"
		},
		"18543": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"18544": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"18545": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsClaimReq"
		},
		"18548": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsClaimReq.claim_items"
		},
		"18549": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsClaimReq.shipping_methods"
		},
		"18550": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsClaimReq.no_notification"
		},
		"18551": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsClaimReq.metadata"
		},
		"18552": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsClaimParams"
		},
		"18555": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"18556": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"18557": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "AdminPostOrdersOrderReq"
		},
		"18560": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "AdminPostOrdersOrderReq.email"
		},
		"18561": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "AdminPostOrdersOrderReq.billing_address"
		},
		"18562": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "AdminPostOrdersOrderReq.shipping_address"
		},
		"18563": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "AdminPostOrdersOrderReq.items"
		},
		"18564": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "AdminPostOrdersOrderReq.region"
		},
		"18565": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "AdminPostOrdersOrderReq.discounts"
		},
		"18566": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "AdminPostOrdersOrderReq.customer_id"
		},
		"18567": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "AdminPostOrdersOrderReq.payment_method"
		},
		"18568": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "AdminPostOrdersOrderReq.shipping_method"
		},
		"18569": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "AdminPostOrdersOrderReq.no_notification"
		},
		"18570": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "AdminPostOrdersOrderParams"
		},
		"18573": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"18574": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"18575": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payment-collections/index.ts",
			"qualifiedName": "defaultPaymentCollectionFields"
		},
		"18576": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payment-collections/index.ts",
			"qualifiedName": "defaulPaymentCollectionRelations"
		},
		"18577": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payment-collections/index.ts",
			"qualifiedName": "AdminPaymentCollectionsRes"
		},
		"18578": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payment-collections/index.ts",
			"qualifiedName": "__type"
		},
		"18579": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payment-collections/index.ts",
			"qualifiedName": "__type.payment_collection"
		},
		"18580": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payment-collections/index.ts",
			"qualifiedName": "AdminPaymentCollectionDeleteRes"
		},
		"18581": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payment-collections/index.ts",
			"qualifiedName": "__type"
		},
		"18582": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payment-collections/index.ts",
			"qualifiedName": "__type.id"
		},
		"18583": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payment-collections/index.ts",
			"qualifiedName": "__type.object"
		},
		"18584": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payment-collections/index.ts",
			"qualifiedName": "__type.deleted"
		},
		"18585": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payment-collections/get-payment-collection.ts",
			"qualifiedName": "AdminGetPaymentCollectionsParams"
		},
		"18588": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"18589": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"18590": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payment-collections/update-payment-collection.ts",
			"qualifiedName": "AdminUpdatePaymentCollectionsReq"
		},
		"18593": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payment-collections/update-payment-collection.ts",
			"qualifiedName": "AdminUpdatePaymentCollectionsReq.description"
		},
		"18594": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payment-collections/update-payment-collection.ts",
			"qualifiedName": "AdminUpdatePaymentCollectionsReq.metadata"
		},
		"18595": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payments/index.ts",
			"qualifiedName": "defaultPaymentFields"
		},
		"18596": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payments/index.ts",
			"qualifiedName": "AdminPaymentRes"
		},
		"18597": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payments/index.ts",
			"qualifiedName": "__type"
		},
		"18598": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payments/index.ts",
			"qualifiedName": "__type.payment"
		},
		"18599": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payments/index.ts",
			"qualifiedName": "AdminRefundRes"
		},
		"18600": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payments/index.ts",
			"qualifiedName": "__type"
		},
		"18601": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payments/index.ts",
			"qualifiedName": "__type.refund"
		},
		"18602": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payments/get-payment.ts",
			"qualifiedName": "GetPaymentsParams"
		},
		"18605": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"18606": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"18607": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payments/refund-payment.ts",
			"qualifiedName": "AdminPostPaymentRefundsReq"
		},
		"18610": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payments/refund-payment.ts",
			"qualifiedName": "AdminPostPaymentRefundsReq.amount"
		},
		"18611": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payments/refund-payment.ts",
			"qualifiedName": "AdminPostPaymentRefundsReq.reason"
		},
		"18612": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payments/refund-payment.ts",
			"qualifiedName": "AdminPostPaymentRefundsReq.note"
		},
		"18613": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "defaultAdminPriceListFields"
		},
		"18614": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "defaultAdminPriceListRelations"
		},
		"18615": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "AdminPriceListRes"
		},
		"18616": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "__type"
		},
		"18617": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "__type.price_list"
		},
		"18618": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "AdminPriceListDeleteBatchRes"
		},
		"18619": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "__type"
		},
		"18620": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "__type.ids"
		},
		"18621": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "__type.deleted"
		},
		"18622": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "__type.object"
		},
		"18623": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "AdminPriceListDeleteProductPricesRes"
		},
		"18624": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "AdminPriceListDeleteVariantPricesRes"
		},
		"18625": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "AdminPriceListDeleteRes"
		},
		"18626": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "AdminPriceListsListRes"
		},
		"18627": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "__type"
		},
		"18628": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "__type.price_lists"
		},
		"18629": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "AdminPriceListsProductsListRes"
		},
		"18630": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "__type"
		},
		"18631": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "__type.products"
		},
		"18632": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/add-prices-batch.ts",
			"qualifiedName": "AdminPostPriceListPricesPricesReq"
		},
		"18635": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/add-prices-batch.ts",
			"qualifiedName": "AdminPostPriceListPricesPricesReq.prices"
		},
		"18636": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/add-prices-batch.ts",
			"qualifiedName": "AdminPostPriceListPricesPricesReq.override"
		},
		"18637": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/create-price-list.ts",
			"qualifiedName": "AdminPostPriceListsPriceListReq"
		},
		"18640": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/create-price-list.ts",
			"qualifiedName": "AdminPostPriceListsPriceListReq.name"
		},
		"18641": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/create-price-list.ts",
			"qualifiedName": "AdminPostPriceListsPriceListReq.description"
		},
		"18642": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/create-price-list.ts",
			"qualifiedName": "AdminPostPriceListsPriceListReq.starts_at"
		},
		"18643": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/create-price-list.ts",
			"qualifiedName": "AdminPostPriceListsPriceListReq.ends_at"
		},
		"18644": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/create-price-list.ts",
			"qualifiedName": "AdminPostPriceListsPriceListReq.status"
		},
		"18645": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/create-price-list.ts",
			"qualifiedName": "AdminPostPriceListsPriceListReq.type"
		},
		"18646": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/create-price-list.ts",
			"qualifiedName": "AdminPostPriceListsPriceListReq.prices"
		},
		"18647": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/create-price-list.ts",
			"qualifiedName": "AdminPostPriceListsPriceListReq.customer_groups"
		},
		"18648": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/create-price-list.ts",
			"qualifiedName": "AdminPostPriceListsPriceListReq.includes_tax"
		},
		"18649": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/delete-prices-batch.ts",
			"qualifiedName": "AdminDeletePriceListPricesPricesReq"
		},
		"18652": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/delete-prices-batch.ts",
			"qualifiedName": "AdminDeletePriceListPricesPricesReq.price_ids"
		},
		"18653": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/delete-products-prices-batch.ts",
			"qualifiedName": "AdminDeletePriceListsPriceListProductsPricesBatchReq"
		},
		"18656": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/delete-products-prices-batch.ts",
			"qualifiedName": "AdminDeletePriceListsPriceListProductsPricesBatchReq.product_ids"
		},
		"18657": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/list-price-list-products.ts",
			"qualifiedName": "AdminGetPriceListsPriceListProductsParams"
		},
		"18658": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.__new"
		},
		"18659": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "AdminGetPriceListsPriceListProductsParams"
		},
		"18660": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"18661": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/list-price-list-products.ts",
			"qualifiedName": "AdminGetPriceListsPriceListProductsParams.id"
		},
		"18662": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/list-price-list-products.ts",
			"qualifiedName": "AdminGetPriceListsPriceListProductsParams.q"
		},
		"18663": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/list-price-list-products.ts",
			"qualifiedName": "AdminGetPriceListsPriceListProductsParams.status"
		},
		"18664": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/list-price-list-products.ts",
			"qualifiedName": "AdminGetPriceListsPriceListProductsParams.collection_id"
		},
		"18665": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/list-price-list-products.ts",
			"qualifiedName": "AdminGetPriceListsPriceListProductsParams.tags"
		},
		"18666": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/list-price-list-products.ts",
			"qualifiedName": "AdminGetPriceListsPriceListProductsParams.title"
		},
		"18667": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/list-price-list-products.ts",
			"qualifiedName": "AdminGetPriceListsPriceListProductsParams.description"
		},
		"18668": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/list-price-list-products.ts",
			"qualifiedName": "AdminGetPriceListsPriceListProductsParams.handle"
		},
		"18669": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/list-price-list-products.ts",
			"qualifiedName": "AdminGetPriceListsPriceListProductsParams.is_giftcard"
		},
		"18670": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/list-price-list-products.ts",
			"qualifiedName": "AdminGetPriceListsPriceListProductsParams.type"
		},
		"18671": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/list-price-list-products.ts",
			"qualifiedName": "AdminGetPriceListsPriceListProductsParams.order"
		},
		"18672": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/list-price-list-products.ts",
			"qualifiedName": "AdminGetPriceListsPriceListProductsParams.created_at"
		},
		"18673": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/list-price-list-products.ts",
			"qualifiedName": "AdminGetPriceListsPriceListProductsParams.updated_at"
		},
		"18674": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/list-price-list-products.ts",
			"qualifiedName": "AdminGetPriceListsPriceListProductsParams.deleted_at"
		},
		"18675": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"18676": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"18677": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"18678": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"18679": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/list-price-lists.ts",
			"qualifiedName": "AdminGetPriceListPaginationParams"
		},
		"18682": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/list-price-lists.ts",
			"qualifiedName": "AdminGetPriceListPaginationParams.offset"
		},
		"18683": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/list-price-lists.ts",
			"qualifiedName": "AdminGetPriceListPaginationParams.limit"
		},
		"18684": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/list-price-lists.ts",
			"qualifiedName": "AdminGetPriceListPaginationParams.expand"
		},
		"18685": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/list-price-lists.ts",
			"qualifiedName": "AdminGetPriceListPaginationParams.order"
		},
		"18686": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.id"
		},
		"18687": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.q"
		},
		"18688": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.status"
		},
		"18689": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.name"
		},
		"18690": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.customer_groups"
		},
		"18691": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.description"
		},
		"18692": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.type"
		},
		"18693": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.created_at"
		},
		"18694": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.updated_at"
		},
		"18695": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.deleted_at"
		},
		"18696": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/update-price-list.ts",
			"qualifiedName": "AdminPostPriceListsPriceListPriceListReq"
		},
		"18699": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/update-price-list.ts",
			"qualifiedName": "AdminPostPriceListsPriceListPriceListReq.name"
		},
		"18700": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/update-price-list.ts",
			"qualifiedName": "AdminPostPriceListsPriceListPriceListReq.description"
		},
		"18701": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/update-price-list.ts",
			"qualifiedName": "AdminPostPriceListsPriceListPriceListReq.starts_at"
		},
		"18702": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/update-price-list.ts",
			"qualifiedName": "AdminPostPriceListsPriceListPriceListReq.ends_at"
		},
		"18703": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/update-price-list.ts",
			"qualifiedName": "AdminPostPriceListsPriceListPriceListReq.status"
		},
		"18704": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/update-price-list.ts",
			"qualifiedName": "AdminPostPriceListsPriceListPriceListReq.type"
		},
		"18705": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/update-price-list.ts",
			"qualifiedName": "AdminPostPriceListsPriceListPriceListReq.prices"
		},
		"18706": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/update-price-list.ts",
			"qualifiedName": "AdminPostPriceListsPriceListPriceListReq.customer_groups"
		},
		"18707": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/update-price-list.ts",
			"qualifiedName": "AdminPostPriceListsPriceListPriceListReq.includes_tax"
		},
		"18708": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/index.ts",
			"qualifiedName": "defaultAdminProductCategoryRelations"
		},
		"18709": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/index.ts",
			"qualifiedName": "allowedAdminProductCategoryRelations"
		},
		"18710": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/index.ts",
			"qualifiedName": "defaultProductCategoryFields"
		},
		"18711": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/index.ts",
			"qualifiedName": "AdminProductCategoriesCategoryRes"
		},
		"18712": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/index.ts",
			"qualifiedName": "__type"
		},
		"18713": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/index.ts",
			"qualifiedName": "__type.product_category"
		},
		"18714": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/index.ts",
			"qualifiedName": "AdminProductCategoriesCategoryDeleteRes"
		},
		"18715": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/index.ts",
			"qualifiedName": "AdminProductCategoriesListRes"
		},
		"18716": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/index.ts",
			"qualifiedName": "__type"
		},
		"18717": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/index.ts",
			"qualifiedName": "__type.product_categories"
		},
		"18718": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/get-product-category.ts",
			"qualifiedName": "AdminGetProductCategoryParams"
		},
		"18721": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"18722": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"18723": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/list-product-categories.ts",
			"qualifiedName": "AdminGetProductCategoriesParams"
		},
		"18724": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.__new"
		},
		"18725": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "AdminGetProductCategoriesParams"
		},
		"18726": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"18727": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/list-product-categories.ts",
			"qualifiedName": "AdminGetProductCategoriesParams.q"
		},
		"18728": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/list-product-categories.ts",
			"qualifiedName": "AdminGetProductCategoriesParams.handle"
		},
		"18729": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/list-product-categories.ts",
			"qualifiedName": "AdminGetProductCategoriesParams.include_descendants_tree"
		},
		"18730": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/list-product-categories.ts",
			"qualifiedName": "AdminGetProductCategoriesParams.is_internal"
		},
		"18731": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/list-product-categories.ts",
			"qualifiedName": "AdminGetProductCategoriesParams.is_active"
		},
		"18732": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/list-product-categories.ts",
			"qualifiedName": "AdminGetProductCategoriesParams.parent_category_id"
		},
		"18733": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"18734": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"18735": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"18736": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"18737": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.order"
		},
		"18738": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/create-product-category.ts",
			"qualifiedName": "AdminPostProductCategoriesReq"
		},
		"18741": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/create-product-category.ts",
			"qualifiedName": "AdminPostProductCategoriesReq.name"
		},
		"18742": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/create-product-category.ts",
			"qualifiedName": "AdminPostProductCategoriesReq.metadata"
		},
		"18743": {
			"sourceFileName": "../../../packages/medusa/src/types/product-category.ts",
			"qualifiedName": "AdminProductCategoriesReqBase.description"
		},
		"18744": {
			"sourceFileName": "../../../packages/medusa/src/types/product-category.ts",
			"qualifiedName": "AdminProductCategoriesReqBase.handle"
		},
		"18745": {
			"sourceFileName": "../../../packages/medusa/src/types/product-category.ts",
			"qualifiedName": "AdminProductCategoriesReqBase.is_internal"
		},
		"18746": {
			"sourceFileName": "../../../packages/medusa/src/types/product-category.ts",
			"qualifiedName": "AdminProductCategoriesReqBase.is_active"
		},
		"18747": {
			"sourceFileName": "../../../packages/medusa/src/types/product-category.ts",
			"qualifiedName": "AdminProductCategoriesReqBase.parent_category_id"
		},
		"18748": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/create-product-category.ts",
			"qualifiedName": "AdminPostProductCategoriesParams"
		},
		"18751": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"18752": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"18753": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/update-product-category.ts",
			"qualifiedName": "AdminPostProductCategoriesCategoryReq"
		},
		"18756": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/update-product-category.ts",
			"qualifiedName": "AdminPostProductCategoriesCategoryReq.name"
		},
		"18757": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/update-product-category.ts",
			"qualifiedName": "AdminPostProductCategoriesCategoryReq.handle"
		},
		"18758": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/update-product-category.ts",
			"qualifiedName": "AdminPostProductCategoriesCategoryReq.rank"
		},
		"18759": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/update-product-category.ts",
			"qualifiedName": "AdminPostProductCategoriesCategoryReq.metadata"
		},
		"18760": {
			"sourceFileName": "../../../packages/medusa/src/types/product-category.ts",
			"qualifiedName": "AdminProductCategoriesReqBase.description"
		},
		"18761": {
			"sourceFileName": "../../../packages/medusa/src/types/product-category.ts",
			"qualifiedName": "AdminProductCategoriesReqBase.is_internal"
		},
		"18762": {
			"sourceFileName": "../../../packages/medusa/src/types/product-category.ts",
			"qualifiedName": "AdminProductCategoriesReqBase.is_active"
		},
		"18763": {
			"sourceFileName": "../../../packages/medusa/src/types/product-category.ts",
			"qualifiedName": "AdminProductCategoriesReqBase.parent_category_id"
		},
		"18764": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/update-product-category.ts",
			"qualifiedName": "AdminPostProductCategoriesCategoryParams"
		},
		"18767": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"18768": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"18769": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/add-products-batch.ts",
			"qualifiedName": "AdminPostProductCategoriesCategoryProductsBatchReq"
		},
		"18772": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/add-products-batch.ts",
			"qualifiedName": "AdminPostProductCategoriesCategoryProductsBatchReq.product_ids"
		},
		"18773": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/add-products-batch.ts",
			"qualifiedName": "AdminPostProductCategoriesCategoryProductsBatchParams"
		},
		"18776": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"18777": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"18778": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/delete-products-batch.ts",
			"qualifiedName": "AdminDeleteProductCategoriesCategoryProductsBatchReq"
		},
		"18781": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/delete-products-batch.ts",
			"qualifiedName": "AdminDeleteProductCategoriesCategoryProductsBatchReq.product_ids"
		},
		"18782": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/delete-products-batch.ts",
			"qualifiedName": "AdminDeleteProductCategoriesCategoryProductsBatchParams"
		},
		"18785": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"18786": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"18787": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-tags/index.ts",
			"qualifiedName": "defaultAdminProductTagsFields"
		},
		"18788": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-tags/index.ts",
			"qualifiedName": "defaultAdminProductTagsRelations"
		},
		"18789": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-tags/index.ts",
			"qualifiedName": "AdminProductTagsListRes"
		},
		"18790": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-tags/index.ts",
			"qualifiedName": "__type"
		},
		"18791": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-tags/index.ts",
			"qualifiedName": "__type.product_tags"
		},
		"18792": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-tags/list-product-tags.ts",
			"qualifiedName": "AdminGetProductTagsPaginationParams"
		},
		"18795": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-tags/list-product-tags.ts",
			"qualifiedName": "AdminGetProductTagsPaginationParams.limit"
		},
		"18796": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-tags/list-product-tags.ts",
			"qualifiedName": "AdminGetProductTagsPaginationParams.offset"
		},
		"18797": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-tags/list-product-tags.ts",
			"qualifiedName": "AdminGetProductTagsParams"
		},
		"18800": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-tags/list-product-tags.ts",
			"qualifiedName": "AdminGetProductTagsParams.id"
		},
		"18801": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-tags/list-product-tags.ts",
			"qualifiedName": "AdminGetProductTagsParams.q"
		},
		"18802": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-tags/list-product-tags.ts",
			"qualifiedName": "AdminGetProductTagsParams.value"
		},
		"18803": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-tags/list-product-tags.ts",
			"qualifiedName": "AdminGetProductTagsParams.created_at"
		},
		"18804": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-tags/list-product-tags.ts",
			"qualifiedName": "AdminGetProductTagsParams.updated_at"
		},
		"18805": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-tags/list-product-tags.ts",
			"qualifiedName": "AdminGetProductTagsParams.order"
		},
		"18806": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-tags/list-product-tags.ts",
			"qualifiedName": "AdminGetProductTagsParams.discount_condition_id"
		},
		"18807": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-tags/list-product-tags.ts",
			"qualifiedName": "AdminGetProductTagsPaginationParams.limit"
		},
		"18808": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-tags/list-product-tags.ts",
			"qualifiedName": "AdminGetProductTagsPaginationParams.offset"
		},
		"18809": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-types/index.ts",
			"qualifiedName": "defaultAdminProductTypeFields"
		},
		"18810": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-types/index.ts",
			"qualifiedName": "defaultAdminProductTypeRelations"
		},
		"18811": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-types/index.ts",
			"qualifiedName": "AdminProductTypesListRes"
		},
		"18812": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-types/index.ts",
			"qualifiedName": "__type"
		},
		"18813": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-types/index.ts",
			"qualifiedName": "__type.product_types"
		},
		"18814": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-types/list-product-types.ts",
			"qualifiedName": "AdminGetProductTypesParams"
		},
		"18817": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-types/list-product-types.ts",
			"qualifiedName": "AdminGetProductTypesParams.id"
		},
		"18818": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-types/list-product-types.ts",
			"qualifiedName": "AdminGetProductTypesParams.q"
		},
		"18819": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-types/list-product-types.ts",
			"qualifiedName": "AdminGetProductTypesParams.value"
		},
		"18820": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-types/list-product-types.ts",
			"qualifiedName": "AdminGetProductTypesParams.created_at"
		},
		"18821": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-types/list-product-types.ts",
			"qualifiedName": "AdminGetProductTypesParams.updated_at"
		},
		"18822": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-types/list-product-types.ts",
			"qualifiedName": "AdminGetProductTypesParams.order"
		},
		"18823": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-types/list-product-types.ts",
			"qualifiedName": "AdminGetProductTypesParams.discount_condition_id"
		},
		"18824": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"18825": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"18826": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "defaultAdminProductRelations"
		},
		"18827": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "defaultAdminProductFields"
		},
		"18828": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "defaultAdminGetProductsVariantsFields"
		},
		"18829": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "defaultAdminGetProductsVariantsRelations"
		},
		"18830": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "defaultAdminProductRemoteQueryObject"
		},
		"18831": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object"
		},
		"18832": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"18833": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.images"
		},
		"18834": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object"
		},
		"18835": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"18836": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.tags"
		},
		"18837": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object"
		},
		"18838": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"18839": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.type"
		},
		"18840": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object"
		},
		"18841": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"18842": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.collection"
		},
		"18843": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object"
		},
		"18844": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"18845": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.categories"
		},
		"18846": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object"
		},
		"18847": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"18848": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.options"
		},
		"18849": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object"
		},
		"18850": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"18851": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.values"
		},
		"18852": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object"
		},
		"18853": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"18854": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.variants"
		},
		"18855": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object"
		},
		"18856": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"18857": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.options"
		},
		"18858": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object"
		},
		"18859": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"18860": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.profile"
		},
		"18861": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object"
		},
		"18862": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"18863": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.sales_channels"
		},
		"18864": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object"
		},
		"18865": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"18866": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "AdminProductsDeleteOptionRes"
		},
		"18867": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type"
		},
		"18868": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type.option_id"
		},
		"18869": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type.object"
		},
		"18870": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type.deleted"
		},
		"18871": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type.product"
		},
		"18872": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "AdminProductsDeleteVariantRes"
		},
		"18873": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type"
		},
		"18874": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type.variant_id"
		},
		"18875": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type.object"
		},
		"18876": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type.deleted"
		},
		"18877": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type.product"
		},
		"18878": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "AdminProductsDeleteRes"
		},
		"18879": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type"
		},
		"18880": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type.id"
		},
		"18881": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type.object"
		},
		"18882": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type.deleted"
		},
		"18883": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "AdminProductsListRes"
		},
		"18884": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type"
		},
		"18885": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type.products"
		},
		"18886": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "AdminProductsListVariantsRes"
		},
		"18887": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type"
		},
		"18888": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type.variants"
		},
		"18889": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "AdminProductsListTypesRes"
		},
		"18890": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type"
		},
		"18891": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type.types"
		},
		"18892": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "AdminProductsListTagsRes"
		},
		"18893": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type"
		},
		"18894": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type.tags"
		},
		"18895": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type"
		},
		"18896": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type.usage_count"
		},
		"18897": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "AdminProductsRes"
		},
		"18898": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type"
		},
		"18899": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type.product"
		},
		"18900": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/add-option.ts",
			"qualifiedName": "AdminPostProductsProductOptionsReq"
		},
		"18903": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/add-option.ts",
			"qualifiedName": "AdminPostProductsProductOptionsReq.title"
		},
		"18904": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq"
		},
		"18905": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.__constructor"
		},
		"18906": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq"
		},
		"18907": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.title"
		},
		"18908": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.subtitle"
		},
		"18909": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.description"
		},
		"18910": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.is_giftcard"
		},
		"18911": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.discountable"
		},
		"18912": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.images"
		},
		"18913": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.thumbnail"
		},
		"18914": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.handle"
		},
		"18915": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.status"
		},
		"18916": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.type"
		},
		"18917": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.collection_id"
		},
		"18918": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.tags"
		},
		"18919": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.sales_channels"
		},
		"18920": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.categories"
		},
		"18921": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.options"
		},
		"18922": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.variants"
		},
		"18923": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.weight"
		},
		"18924": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.length"
		},
		"18925": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.height"
		},
		"18926": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.width"
		},
		"18927": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.hs_code"
		},
		"18928": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.origin_country"
		},
		"18929": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.mid_code"
		},
		"18930": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.material"
		},
		"18931": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.metadata"
		},
		"18932": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsReq"
		},
		"18935": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsReq.title"
		},
		"18936": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsReq.sku"
		},
		"18937": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsReq.ean"
		},
		"18938": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsReq.upc"
		},
		"18939": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsReq.barcode"
		},
		"18940": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsReq.hs_code"
		},
		"18941": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsReq.inventory_quantity"
		},
		"18942": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsReq.allow_backorder"
		},
		"18943": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsReq.manage_inventory"
		},
		"18944": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsReq.weight"
		},
		"18945": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsReq.length"
		},
		"18946": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsReq.height"
		},
		"18947": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsReq.width"
		},
		"18948": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsReq.origin_country"
		},
		"18949": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsReq.mid_code"
		},
		"18950": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsReq.material"
		},
		"18951": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsReq.metadata"
		},
		"18952": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsReq.prices"
		},
		"18953": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsReq.options"
		},
		"18954": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/get-product.ts",
			"qualifiedName": "AdminGetProductParams"
		},
		"18957": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"18958": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"18959": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/list-products.ts",
			"qualifiedName": "AdminGetProductsParams"
		},
		"18962": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/list-products.ts",
			"qualifiedName": "AdminGetProductsParams.offset"
		},
		"18963": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/list-products.ts",
			"qualifiedName": "AdminGetProductsParams.limit"
		},
		"18964": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/list-products.ts",
			"qualifiedName": "AdminGetProductsParams.expand"
		},
		"18965": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/list-products.ts",
			"qualifiedName": "AdminGetProductsParams.fields"
		},
		"18966": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/list-products.ts",
			"qualifiedName": "AdminGetProductsParams.order"
		},
		"18967": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.id"
		},
		"18968": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.q"
		},
		"18969": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.status"
		},
		"18970": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.price_list_id"
		},
		"18971": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.collection_id"
		},
		"18972": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.tags"
		},
		"18973": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.title"
		},
		"18974": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.description"
		},
		"18975": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.handle"
		},
		"18976": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.is_giftcard"
		},
		"18977": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.type_id"
		},
		"18978": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.sales_channel_id"
		},
		"18979": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.discount_condition_id"
		},
		"18980": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.category_id"
		},
		"18981": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.include_category_children"
		},
		"18982": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.created_at"
		},
		"18983": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.updated_at"
		},
		"18984": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.deleted_at"
		},
		"18985": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/list-variants.ts",
			"qualifiedName": "AdminGetProductsVariantsParams"
		},
		"18988": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/list-variants.ts",
			"qualifiedName": "AdminGetProductsVariantsParams.id"
		},
		"18989": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/list-variants.ts",
			"qualifiedName": "AdminGetProductsVariantsParams.fields"
		},
		"18990": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/list-variants.ts",
			"qualifiedName": "AdminGetProductsVariantsParams.expand"
		},
		"18991": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/list-variants.ts",
			"qualifiedName": "AdminGetProductsVariantsParams.offset"
		},
		"18992": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/list-variants.ts",
			"qualifiedName": "AdminGetProductsVariantsParams.limit"
		},
		"18993": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/list-variants.ts",
			"qualifiedName": "AdminGetProductsVariantsParams.q"
		},
		"18994": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/list-variants.ts",
			"qualifiedName": "AdminGetProductsVariantsParams.order"
		},
		"18995": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/list-variants.ts",
			"qualifiedName": "AdminGetProductsVariantsParams.inventory_quantity"
		},
		"18996": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/list-variants.ts",
			"qualifiedName": "AdminGetProductsVariantsParams.manage_inventory"
		},
		"18997": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/list-variants.ts",
			"qualifiedName": "AdminGetProductsVariantsParams.allow_backorder"
		},
		"18998": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/list-variants.ts",
			"qualifiedName": "AdminGetProductsVariantsParams.created_at"
		},
		"18999": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/list-variants.ts",
			"qualifiedName": "AdminGetProductsVariantsParams.updated_at"
		},
		"19000": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/set-metadata.ts",
			"qualifiedName": "AdminPostProductsProductMetadataReq"
		},
		"19003": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/set-metadata.ts",
			"qualifiedName": "AdminPostProductsProductMetadataReq.key"
		},
		"19004": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/set-metadata.ts",
			"qualifiedName": "AdminPostProductsProductMetadataReq.value"
		},
		"19005": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-option.ts",
			"qualifiedName": "AdminPostProductsProductOptionsOption"
		},
		"19008": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-option.ts",
			"qualifiedName": "AdminPostProductsProductOptionsOption.title"
		},
		"19009": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq"
		},
		"19012": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.title"
		},
		"19013": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.subtitle"
		},
		"19014": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.description"
		},
		"19015": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.discountable"
		},
		"19016": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.images"
		},
		"19017": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.thumbnail"
		},
		"19018": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.handle"
		},
		"19019": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.status"
		},
		"19020": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.type"
		},
		"19021": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.collection_id"
		},
		"19022": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.tags"
		},
		"19023": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.sales_channels"
		},
		"19024": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.categories"
		},
		"19025": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.variants"
		},
		"19026": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.weight"
		},
		"19027": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.length"
		},
		"19028": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.height"
		},
		"19029": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.width"
		},
		"19030": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.hs_code"
		},
		"19031": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.origin_country"
		},
		"19032": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.mid_code"
		},
		"19033": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.material"
		},
		"19034": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.metadata"
		},
		"19035": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsVariantReq"
		},
		"19038": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsVariantReq.title"
		},
		"19039": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsVariantReq.sku"
		},
		"19040": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsVariantReq.ean"
		},
		"19041": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsVariantReq.upc"
		},
		"19042": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsVariantReq.barcode"
		},
		"19043": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsVariantReq.hs_code"
		},
		"19044": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsVariantReq.inventory_quantity"
		},
		"19045": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsVariantReq.allow_backorder"
		},
		"19046": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsVariantReq.manage_inventory"
		},
		"19047": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsVariantReq.weight"
		},
		"19048": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsVariantReq.length"
		},
		"19049": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsVariantReq.height"
		},
		"19050": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsVariantReq.width"
		},
		"19051": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsVariantReq.origin_country"
		},
		"19052": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsVariantReq.mid_code"
		},
		"19053": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsVariantReq.material"
		},
		"19054": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsVariantReq.metadata"
		},
		"19055": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsVariantReq.prices"
		},
		"19056": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsVariantReq.options"
		},
		"19057": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/index.ts",
			"qualifiedName": "AdminPublishableApiKeysRes"
		},
		"19058": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/index.ts",
			"qualifiedName": "__type"
		},
		"19059": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/index.ts",
			"qualifiedName": "__type.publishable_api_key"
		},
		"19060": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/index.ts",
			"qualifiedName": "AdminPublishableApiKeysListRes"
		},
		"19061": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/index.ts",
			"qualifiedName": "__type"
		},
		"19062": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/index.ts",
			"qualifiedName": "__type.publishable_api_keys"
		},
		"19063": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/index.ts",
			"qualifiedName": "AdminPublishableApiKeyDeleteRes"
		},
		"19064": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/index.ts",
			"qualifiedName": "AdminPublishableApiKeysListSalesChannelsRes"
		},
		"19065": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/index.ts",
			"qualifiedName": "__type"
		},
		"19066": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/index.ts",
			"qualifiedName": "__type.sales_channels"
		},
		"19067": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/add-channels-batch.ts",
			"qualifiedName": "AdminPostPublishableApiKeySalesChannelsBatchReq"
		},
		"19070": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/add-channels-batch.ts",
			"qualifiedName": "AdminPostPublishableApiKeySalesChannelsBatchReq.sales_channel_ids"
		},
		"19071": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/create-publishable-api-key.ts",
			"qualifiedName": "AdminPostPublishableApiKeysReq"
		},
		"19074": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/create-publishable-api-key.ts",
			"qualifiedName": "AdminPostPublishableApiKeysReq.title"
		},
		"19075": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/delete-channels-batch.ts",
			"qualifiedName": "AdminDeletePublishableApiKeySalesChannelsBatchReq"
		},
		"19078": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/delete-channels-batch.ts",
			"qualifiedName": "AdminDeletePublishableApiKeySalesChannelsBatchReq.sales_channel_ids"
		},
		"19079": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/list-publishable-api-key-sales-channels.ts",
			"qualifiedName": "GetPublishableApiKeySalesChannelsParams"
		},
		"19082": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/list-publishable-api-key-sales-channels.ts",
			"qualifiedName": "GetPublishableApiKeySalesChannelsParams.q"
		},
		"19083": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/list-publishable-api-keys.ts",
			"qualifiedName": "GetPublishableApiKeysParams"
		},
		"19084": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.__new"
		},
		"19085": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "GetPublishableApiKeysParams"
		},
		"19086": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"19087": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/list-publishable-api-keys.ts",
			"qualifiedName": "GetPublishableApiKeysParams.q"
		},
		"19088": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/list-publishable-api-keys.ts",
			"qualifiedName": "GetPublishableApiKeysParams.order"
		},
		"19089": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/list-publishable-api-keys.ts",
			"qualifiedName": "GetPublishableApiKeysParams.created_at"
		},
		"19090": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/list-publishable-api-keys.ts",
			"qualifiedName": "GetPublishableApiKeysParams.updated_at"
		},
		"19091": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/list-publishable-api-keys.ts",
			"qualifiedName": "GetPublishableApiKeysParams.revoked_at"
		},
		"19092": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"19093": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"19094": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"19095": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"19096": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/update-publishable-api-key.ts",
			"qualifiedName": "AdminPostPublishableApiKeysPublishableApiKeyReq"
		},
		"19099": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/update-publishable-api-key.ts",
			"qualifiedName": "AdminPostPublishableApiKeysPublishableApiKeyReq.title"
		},
		"19100": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/index.ts",
			"qualifiedName": "defaultAdminRegionFields"
		},
		"19101": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/index.ts",
			"qualifiedName": "defaultAdminRegionRelations"
		},
		"19102": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/index.ts",
			"qualifiedName": "AdminRegionsRes"
		},
		"19103": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/index.ts",
			"qualifiedName": "__type"
		},
		"19104": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/index.ts",
			"qualifiedName": "__type.region"
		},
		"19105": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/index.ts",
			"qualifiedName": "AdminRegionsListRes"
		},
		"19106": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/index.ts",
			"qualifiedName": "__type"
		},
		"19107": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/index.ts",
			"qualifiedName": "__type.regions"
		},
		"19108": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/index.ts",
			"qualifiedName": "AdminRegionsDeleteRes"
		},
		"19109": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/index.ts",
			"qualifiedName": "FulfillmentOption"
		},
		"19112": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/index.ts",
			"qualifiedName": "FulfillmentOption.provider_id"
		},
		"19113": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/index.ts",
			"qualifiedName": "FulfillmentOption.options"
		},
		"19114": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/index.ts",
			"qualifiedName": "AdminGetRegionsRegionFulfillmentOptionsRes"
		},
		"19117": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/index.ts",
			"qualifiedName": "AdminGetRegionsRegionFulfillmentOptionsRes.fulfillment_options"
		},
		"19118": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/add-country.ts",
			"qualifiedName": "AdminPostRegionsRegionCountriesReq"
		},
		"19121": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/add-country.ts",
			"qualifiedName": "AdminPostRegionsRegionCountriesReq.country_code"
		},
		"19122": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/add-fulfillment-provider.ts",
			"qualifiedName": "AdminPostRegionsRegionFulfillmentProvidersReq"
		},
		"19125": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/add-fulfillment-provider.ts",
			"qualifiedName": "AdminPostRegionsRegionFulfillmentProvidersReq.provider_id"
		},
		"19126": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/add-payment-provider.ts",
			"qualifiedName": "AdminPostRegionsRegionPaymentProvidersReq"
		},
		"19129": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/add-payment-provider.ts",
			"qualifiedName": "AdminPostRegionsRegionPaymentProvidersReq.provider_id"
		},
		"19130": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/create-region.ts",
			"qualifiedName": "AdminPostRegionsReq"
		},
		"19133": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/create-region.ts",
			"qualifiedName": "AdminPostRegionsReq.name"
		},
		"19134": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/create-region.ts",
			"qualifiedName": "AdminPostRegionsReq.currency_code"
		},
		"19135": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/create-region.ts",
			"qualifiedName": "AdminPostRegionsReq.tax_code"
		},
		"19136": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/create-region.ts",
			"qualifiedName": "AdminPostRegionsReq.tax_rate"
		},
		"19137": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/create-region.ts",
			"qualifiedName": "AdminPostRegionsReq.payment_providers"
		},
		"19138": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/create-region.ts",
			"qualifiedName": "AdminPostRegionsReq.fulfillment_providers"
		},
		"19139": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/create-region.ts",
			"qualifiedName": "AdminPostRegionsReq.countries"
		},
		"19140": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/create-region.ts",
			"qualifiedName": "AdminPostRegionsReq.includes_tax"
		},
		"19141": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/create-region.ts",
			"qualifiedName": "AdminPostRegionsReq.metadata"
		},
		"19142": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/list-regions.ts",
			"qualifiedName": "AdminGetRegionsParams"
		},
		"19143": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.__new"
		},
		"19144": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "AdminGetRegionsParams"
		},
		"19145": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"19146": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/list-regions.ts",
			"qualifiedName": "AdminGetRegionsParams.q"
		},
		"19147": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/list-regions.ts",
			"qualifiedName": "AdminGetRegionsParams.order"
		},
		"19148": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/list-regions.ts",
			"qualifiedName": "AdminGetRegionsParams.created_at"
		},
		"19149": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/list-regions.ts",
			"qualifiedName": "AdminGetRegionsParams.updated_at"
		},
		"19150": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/list-regions.ts",
			"qualifiedName": "AdminGetRegionsParams.deleted_at"
		},
		"19151": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"19152": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"19153": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"19154": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"19155": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/update-region.ts",
			"qualifiedName": "AdminPostRegionsRegionReq"
		},
		"19158": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/update-region.ts",
			"qualifiedName": "AdminPostRegionsRegionReq.name"
		},
		"19159": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/update-region.ts",
			"qualifiedName": "AdminPostRegionsRegionReq.currency_code"
		},
		"19160": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/update-region.ts",
			"qualifiedName": "AdminPostRegionsRegionReq.tax_code"
		},
		"19161": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/update-region.ts",
			"qualifiedName": "AdminPostRegionsRegionReq.tax_rate"
		},
		"19162": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/update-region.ts",
			"qualifiedName": "AdminPostRegionsRegionReq.gift_cards_taxable"
		},
		"19163": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/update-region.ts",
			"qualifiedName": "AdminPostRegionsRegionReq.automatic_taxes"
		},
		"19164": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/update-region.ts",
			"qualifiedName": "AdminPostRegionsRegionReq.tax_provider_id"
		},
		"19165": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/update-region.ts",
			"qualifiedName": "AdminPostRegionsRegionReq.payment_providers"
		},
		"19166": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/update-region.ts",
			"qualifiedName": "AdminPostRegionsRegionReq.fulfillment_providers"
		},
		"19167": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/update-region.ts",
			"qualifiedName": "AdminPostRegionsRegionReq.countries"
		},
		"19168": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/update-region.ts",
			"qualifiedName": "AdminPostRegionsRegionReq.includes_tax"
		},
		"19169": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/update-region.ts",
			"qualifiedName": "AdminPostRegionsRegionReq.metadata"
		},
		"19170": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/index.ts",
			"qualifiedName": "AdminReservationsRes"
		},
		"19171": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/index.ts",
			"qualifiedName": "__type"
		},
		"19172": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/index.ts",
			"qualifiedName": "__type.reservation"
		},
		"19173": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/index.ts",
			"qualifiedName": "ExtendedReservationItem"
		},
		"19174": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/index.ts",
			"qualifiedName": "__type"
		},
		"19175": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/index.ts",
			"qualifiedName": "__type.line_item"
		},
		"19176": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/index.ts",
			"qualifiedName": "__type.inventory_item"
		},
		"19177": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/index.ts",
			"qualifiedName": "AdminReservationsListRes"
		},
		"19178": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/index.ts",
			"qualifiedName": "__type"
		},
		"19179": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/index.ts",
			"qualifiedName": "__type.reservations"
		},
		"19180": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/index.ts",
			"qualifiedName": "defaultAdminReservationRelations"
		},
		"19181": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/index.ts",
			"qualifiedName": "defaultReservationFields"
		},
		"19182": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/index.ts",
			"qualifiedName": "AdminReservationsDeleteRes"
		},
		"19183": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/create-reservation.ts",
			"qualifiedName": "AdminPostReservationsReq"
		},
		"19186": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/create-reservation.ts",
			"qualifiedName": "AdminPostReservationsReq.line_item_id"
		},
		"19187": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/create-reservation.ts",
			"qualifiedName": "AdminPostReservationsReq.location_id"
		},
		"19188": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/create-reservation.ts",
			"qualifiedName": "AdminPostReservationsReq.inventory_item_id"
		},
		"19189": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/create-reservation.ts",
			"qualifiedName": "AdminPostReservationsReq.quantity"
		},
		"19190": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/create-reservation.ts",
			"qualifiedName": "AdminPostReservationsReq.description"
		},
		"19191": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/create-reservation.ts",
			"qualifiedName": "AdminPostReservationsReq.metadata"
		},
		"19192": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/list-reservations.ts",
			"qualifiedName": "AdminGetReservationsParams"
		},
		"19193": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.__new"
		},
		"19194": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "AdminGetReservationsParams"
		},
		"19195": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"19196": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/list-reservations.ts",
			"qualifiedName": "AdminGetReservationsParams.location_id"
		},
		"19197": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/list-reservations.ts",
			"qualifiedName": "AdminGetReservationsParams.inventory_item_id"
		},
		"19198": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/list-reservations.ts",
			"qualifiedName": "AdminGetReservationsParams.line_item_id"
		},
		"19199": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/list-reservations.ts",
			"qualifiedName": "AdminGetReservationsParams.created_by"
		},
		"19200": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/list-reservations.ts",
			"qualifiedName": "AdminGetReservationsParams.quantity"
		},
		"19201": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/list-reservations.ts",
			"qualifiedName": "AdminGetReservationsParams.created_at"
		},
		"19202": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/list-reservations.ts",
			"qualifiedName": "AdminGetReservationsParams.updated_at"
		},
		"19203": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/list-reservations.ts",
			"qualifiedName": "AdminGetReservationsParams.description"
		},
		"19204": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"19205": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"19206": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"19207": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"19208": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.order"
		},
		"19209": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/update-reservation.ts",
			"qualifiedName": "AdminPostReservationsReservationReq"
		},
		"19212": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/update-reservation.ts",
			"qualifiedName": "AdminPostReservationsReservationReq.quantity"
		},
		"19213": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/update-reservation.ts",
			"qualifiedName": "AdminPostReservationsReservationReq.location_id"
		},
		"19214": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/update-reservation.ts",
			"qualifiedName": "AdminPostReservationsReservationReq.description"
		},
		"19215": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/update-reservation.ts",
			"qualifiedName": "AdminPostReservationsReservationReq.metadata"
		},
		"19216": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/return-reasons/index.ts",
			"qualifiedName": "defaultAdminReturnReasonsFields"
		},
		"19217": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/return-reasons/index.ts",
			"qualifiedName": "defaultAdminReturnReasonsRelations"
		},
		"19218": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/return-reasons/index.ts",
			"qualifiedName": "AdminReturnReasonsRes"
		},
		"19219": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/return-reasons/index.ts",
			"qualifiedName": "__type"
		},
		"19220": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/return-reasons/index.ts",
			"qualifiedName": "__type.return_reason"
		},
		"19221": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/return-reasons/index.ts",
			"qualifiedName": "AdminReturnReasonsListRes"
		},
		"19222": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/return-reasons/index.ts",
			"qualifiedName": "__type"
		},
		"19223": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/return-reasons/index.ts",
			"qualifiedName": "__type.return_reasons"
		},
		"19224": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/return-reasons/index.ts",
			"qualifiedName": "AdminReturnReasonsDeleteRes"
		},
		"19225": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/return-reasons/create-reason.ts",
			"qualifiedName": "AdminPostReturnReasonsReq"
		},
		"19228": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/return-reasons/create-reason.ts",
			"qualifiedName": "AdminPostReturnReasonsReq.value"
		},
		"19229": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/return-reasons/create-reason.ts",
			"qualifiedName": "AdminPostReturnReasonsReq.label"
		},
		"19230": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/return-reasons/create-reason.ts",
			"qualifiedName": "AdminPostReturnReasonsReq.parent_return_reason_id"
		},
		"19231": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/return-reasons/create-reason.ts",
			"qualifiedName": "AdminPostReturnReasonsReq.description"
		},
		"19232": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/return-reasons/create-reason.ts",
			"qualifiedName": "AdminPostReturnReasonsReq.metadata"
		},
		"19233": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/return-reasons/update-reason.ts",
			"qualifiedName": "AdminPostReturnReasonsReasonReq"
		},
		"19236": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/return-reasons/update-reason.ts",
			"qualifiedName": "AdminPostReturnReasonsReasonReq.label"
		},
		"19237": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/return-reasons/update-reason.ts",
			"qualifiedName": "AdminPostReturnReasonsReasonReq.value"
		},
		"19238": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/return-reasons/update-reason.ts",
			"qualifiedName": "AdminPostReturnReasonsReasonReq.description"
		},
		"19239": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/return-reasons/update-reason.ts",
			"qualifiedName": "AdminPostReturnReasonsReasonReq.metadata"
		},
		"19240": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/index.ts",
			"qualifiedName": "defaultRelations"
		},
		"19241": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/index.ts",
			"qualifiedName": "defaultRelationsList"
		},
		"19242": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/index.ts",
			"qualifiedName": "defaultReturnCancelRelations"
		},
		"19243": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/index.ts",
			"qualifiedName": "defaultReturnCancelFields"
		},
		"19244": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/index.ts",
			"qualifiedName": "AdminReturnsCancelRes"
		},
		"19245": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/index.ts",
			"qualifiedName": "__type"
		},
		"19246": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/index.ts",
			"qualifiedName": "__type.order"
		},
		"19247": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/index.ts",
			"qualifiedName": "AdminReturnsListRes"
		},
		"19248": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/index.ts",
			"qualifiedName": "__type"
		},
		"19249": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/index.ts",
			"qualifiedName": "__type.returns"
		},
		"19250": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/index.ts",
			"qualifiedName": "AdminReturnsRes"
		},
		"19251": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/index.ts",
			"qualifiedName": "__type"
		},
		"19252": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/index.ts",
			"qualifiedName": "__type.return"
		},
		"19253": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/list-returns.ts",
			"qualifiedName": "AdminGetReturnsParams"
		},
		"19256": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/list-returns.ts",
			"qualifiedName": "AdminGetReturnsParams.limit"
		},
		"19257": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/list-returns.ts",
			"qualifiedName": "AdminGetReturnsParams.offset"
		},
		"19258": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/receive-return.ts",
			"qualifiedName": "AdminPostReturnsReturnReceiveReq"
		},
		"19261": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/receive-return.ts",
			"qualifiedName": "AdminPostReturnsReturnReceiveReq.items"
		},
		"19262": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/receive-return.ts",
			"qualifiedName": "AdminPostReturnsReturnReceiveReq.refund"
		},
		"19263": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/receive-return.ts",
			"qualifiedName": "AdminPostReturnsReturnReceiveReq.location_id"
		},
		"19264": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/index.ts",
			"qualifiedName": "AdminSalesChannelsRes"
		},
		"19265": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/index.ts",
			"qualifiedName": "__type"
		},
		"19266": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/index.ts",
			"qualifiedName": "__type.sales_channel"
		},
		"19267": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/index.ts",
			"qualifiedName": "AdminSalesChannelsDeleteRes"
		},
		"19268": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/index.ts",
			"qualifiedName": "AdminSalesChannelsDeleteLocationRes"
		},
		"19269": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/index.ts",
			"qualifiedName": "AdminSalesChannelsListRes"
		},
		"19270": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/index.ts",
			"qualifiedName": "__type"
		},
		"19271": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/index.ts",
			"qualifiedName": "__type.sales_channels"
		},
		"19272": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/add-product-batch.ts",
			"qualifiedName": "AdminPostSalesChannelsChannelProductsBatchReq"
		},
		"19275": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/add-product-batch.ts",
			"qualifiedName": "AdminPostSalesChannelsChannelProductsBatchReq.product_ids"
		},
		"19276": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/create-sales-channel.ts",
			"qualifiedName": "AdminPostSalesChannelsReq"
		},
		"19279": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/create-sales-channel.ts",
			"qualifiedName": "AdminPostSalesChannelsReq.name"
		},
		"19280": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/create-sales-channel.ts",
			"qualifiedName": "AdminPostSalesChannelsReq.description"
		},
		"19281": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/create-sales-channel.ts",
			"qualifiedName": "AdminPostSalesChannelsReq.is_disabled"
		},
		"19282": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/delete-products-batch.ts",
			"qualifiedName": "AdminDeleteSalesChannelsChannelProductsBatchReq"
		},
		"19285": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/delete-products-batch.ts",
			"qualifiedName": "AdminDeleteSalesChannelsChannelProductsBatchReq.product_ids"
		},
		"19286": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/list-sales-channels.ts",
			"qualifiedName": "AdminGetSalesChannelsParams"
		},
		"19287": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.__new"
		},
		"19288": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "AdminGetSalesChannelsParams"
		},
		"19289": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"19290": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/list-sales-channels.ts",
			"qualifiedName": "AdminGetSalesChannelsParams.id"
		},
		"19291": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/list-sales-channels.ts",
			"qualifiedName": "AdminGetSalesChannelsParams.q"
		},
		"19292": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/list-sales-channels.ts",
			"qualifiedName": "AdminGetSalesChannelsParams.name"
		},
		"19293": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/list-sales-channels.ts",
			"qualifiedName": "AdminGetSalesChannelsParams.description"
		},
		"19294": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/list-sales-channels.ts",
			"qualifiedName": "AdminGetSalesChannelsParams.created_at"
		},
		"19295": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/list-sales-channels.ts",
			"qualifiedName": "AdminGetSalesChannelsParams.updated_at"
		},
		"19296": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/list-sales-channels.ts",
			"qualifiedName": "AdminGetSalesChannelsParams.deleted_at"
		},
		"19297": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/list-sales-channels.ts",
			"qualifiedName": "AdminGetSalesChannelsParams.order"
		},
		"19298": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"19299": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"19300": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"19301": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"19302": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/update-sales-channel.ts",
			"qualifiedName": "AdminPostSalesChannelsSalesChannelReq"
		},
		"19305": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/update-sales-channel.ts",
			"qualifiedName": "AdminPostSalesChannelsSalesChannelReq.name"
		},
		"19306": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/update-sales-channel.ts",
			"qualifiedName": "AdminPostSalesChannelsSalesChannelReq.description"
		},
		"19307": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/update-sales-channel.ts",
			"qualifiedName": "AdminPostSalesChannelsSalesChannelReq.is_disabled"
		},
		"19308": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/associate-stock-location.ts",
			"qualifiedName": "AdminPostSalesChannelsChannelStockLocationsReq"
		},
		"19311": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/associate-stock-location.ts",
			"qualifiedName": "AdminPostSalesChannelsChannelStockLocationsReq.location_id"
		},
		"19312": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/remove-stock-location.ts",
			"qualifiedName": "AdminDeleteSalesChannelsChannelStockLocationsReq"
		},
		"19315": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/remove-stock-location.ts",
			"qualifiedName": "AdminDeleteSalesChannelsChannelStockLocationsReq.location_id"
		},
		"19316": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/index.ts",
			"qualifiedName": "shippingOptionsDefaultFields"
		},
		"19317": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/index.ts",
			"qualifiedName": "shippingOptionsDefaultRelations"
		},
		"19318": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/index.ts",
			"qualifiedName": "AdminShippingOptionsListRes"
		},
		"19319": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/index.ts",
			"qualifiedName": "__type"
		},
		"19320": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/index.ts",
			"qualifiedName": "__type.shipping_options"
		},
		"19321": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/index.ts",
			"qualifiedName": "AdminShippingOptionsRes"
		},
		"19322": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/index.ts",
			"qualifiedName": "__type"
		},
		"19323": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/index.ts",
			"qualifiedName": "__type.shipping_option"
		},
		"19324": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/index.ts",
			"qualifiedName": "AdminShippingOptionsDeleteRes"
		},
		"19325": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/create-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsReq"
		},
		"19328": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/create-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsReq.name"
		},
		"19329": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/create-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsReq.region_id"
		},
		"19330": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/create-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsReq.provider_id"
		},
		"19331": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/create-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsReq.profile_id"
		},
		"19332": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/create-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsReq.data"
		},
		"19333": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/create-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsReq.price_type"
		},
		"19334": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/create-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsReq.amount"
		},
		"19335": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/create-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsReq.requirements"
		},
		"19336": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/create-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsReq.admin_only"
		},
		"19337": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/create-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsReq.is_return"
		},
		"19338": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/create-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsReq.metadata"
		},
		"19339": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/create-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsReq.includes_tax"
		},
		"19340": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/list-shipping-options.ts",
			"qualifiedName": "AdminGetShippingOptionsParams"
		},
		"19341": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.__new"
		},
		"19342": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "AdminGetShippingOptionsParams"
		},
		"19343": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"19344": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/list-shipping-options.ts",
			"qualifiedName": "AdminGetShippingOptionsParams.id"
		},
		"19345": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/list-shipping-options.ts",
			"qualifiedName": "AdminGetShippingOptionsParams.name"
		},
		"19346": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/list-shipping-options.ts",
			"qualifiedName": "AdminGetShippingOptionsParams.region_id"
		},
		"19347": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/list-shipping-options.ts",
			"qualifiedName": "AdminGetShippingOptionsParams.is_return"
		},
		"19348": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/list-shipping-options.ts",
			"qualifiedName": "AdminGetShippingOptionsParams.admin_only"
		},
		"19349": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/list-shipping-options.ts",
			"qualifiedName": "AdminGetShippingOptionsParams.q"
		},
		"19350": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/list-shipping-options.ts",
			"qualifiedName": "AdminGetShippingOptionsParams.order"
		},
		"19351": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/list-shipping-options.ts",
			"qualifiedName": "AdminGetShippingOptionsParams.created_at"
		},
		"19352": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/list-shipping-options.ts",
			"qualifiedName": "AdminGetShippingOptionsParams.updated_at"
		},
		"19353": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/list-shipping-options.ts",
			"qualifiedName": "AdminGetShippingOptionsParams.deleted_at"
		},
		"19354": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/list-shipping-options.ts",
			"qualifiedName": "AdminGetShippingOptionsParams.fields"
		},
		"19355": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/list-shipping-options.ts",
			"qualifiedName": "AdminGetShippingOptionsParams.expand"
		},
		"19356": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"19357": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"19358": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/update-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsOptionReq"
		},
		"19361": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/update-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsOptionReq.name"
		},
		"19362": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/update-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsOptionReq.amount"
		},
		"19363": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/update-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsOptionReq.price_type"
		},
		"19364": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/update-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsOptionReq.requirements"
		},
		"19365": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/update-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsOptionReq.admin_only"
		},
		"19366": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/update-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsOptionReq.metadata"
		},
		"19367": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/update-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsOptionReq.includes_tax"
		},
		"19368": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-profiles/index.ts",
			"qualifiedName": "defaultAdminShippingProfilesFields"
		},
		"19369": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-profiles/index.ts",
			"qualifiedName": "defaultAdminShippingProfilesRelations"
		},
		"19370": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-profiles/index.ts",
			"qualifiedName": "AdminDeleteShippingProfileRes"
		},
		"19371": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-profiles/index.ts",
			"qualifiedName": "AdminShippingProfilesRes"
		},
		"19372": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-profiles/index.ts",
			"qualifiedName": "__type"
		},
		"19373": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-profiles/index.ts",
			"qualifiedName": "__type.shipping_profile"
		},
		"19374": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-profiles/index.ts",
			"qualifiedName": "AdminShippingProfilesListRes"
		},
		"19375": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-profiles/index.ts",
			"qualifiedName": "__type"
		},
		"19376": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-profiles/index.ts",
			"qualifiedName": "__type.shipping_profiles"
		},
		"19377": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-profiles/create-shipping-profile.ts",
			"qualifiedName": "AdminPostShippingProfilesReq"
		},
		"19380": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-profiles/create-shipping-profile.ts",
			"qualifiedName": "AdminPostShippingProfilesReq.name"
		},
		"19381": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-profiles/create-shipping-profile.ts",
			"qualifiedName": "AdminPostShippingProfilesReq.type"
		},
		"19382": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-profiles/create-shipping-profile.ts",
			"qualifiedName": "AdminPostShippingProfilesReq.metadata"
		},
		"19383": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-profiles/update-shipping-profile.ts",
			"qualifiedName": "AdminPostShippingProfilesProfileReq"
		},
		"19386": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-profiles/update-shipping-profile.ts",
			"qualifiedName": "AdminPostShippingProfilesProfileReq.name"
		},
		"19387": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-profiles/update-shipping-profile.ts",
			"qualifiedName": "AdminPostShippingProfilesProfileReq.metadata"
		},
		"19388": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-profiles/update-shipping-profile.ts",
			"qualifiedName": "AdminPostShippingProfilesProfileReq.type"
		},
		"19389": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-profiles/update-shipping-profile.ts",
			"qualifiedName": "AdminPostShippingProfilesProfileReq.products"
		},
		"19390": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-profiles/update-shipping-profile.ts",
			"qualifiedName": "AdminPostShippingProfilesProfileReq.shipping_options"
		},
		"19391": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/index.ts",
			"qualifiedName": "defaultAdminStockLocationFields"
		},
		"19392": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/index.ts",
			"qualifiedName": "defaultAdminStockLocationRelations"
		},
		"19393": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/index.ts",
			"qualifiedName": "AdminStockLocationsDeleteRes"
		},
		"19394": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/index.ts",
			"qualifiedName": "AdminStockLocationsRes"
		},
		"19395": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/index.ts",
			"qualifiedName": "__type"
		},
		"19396": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/index.ts",
			"qualifiedName": "__type.stock_location"
		},
		"19397": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/index.ts",
			"qualifiedName": "AdminStockLocationsListRes"
		},
		"19398": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/index.ts",
			"qualifiedName": "__type"
		},
		"19399": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/index.ts",
			"qualifiedName": "__type.stock_locations"
		},
		"19400": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/create-stock-location.ts",
			"qualifiedName": "AdminPostStockLocationsReq"
		},
		"19403": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/create-stock-location.ts",
			"qualifiedName": "AdminPostStockLocationsReq.name"
		},
		"19404": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/create-stock-location.ts",
			"qualifiedName": "AdminPostStockLocationsReq.address"
		},
		"19405": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/create-stock-location.ts",
			"qualifiedName": "AdminPostStockLocationsReq.address_id"
		},
		"19406": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/create-stock-location.ts",
			"qualifiedName": "AdminPostStockLocationsReq.metadata"
		},
		"19407": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/create-stock-location.ts",
			"qualifiedName": "AdminPostStockLocationsParams"
		},
		"19410": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"19411": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"19412": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/get-stock-location.ts",
			"qualifiedName": "AdminGetStockLocationsLocationParams"
		},
		"19415": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"19416": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"19417": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/list-stock-locations.ts",
			"qualifiedName": "AdminGetStockLocationsParams"
		},
		"19418": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.__new"
		},
		"19419": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "AdminGetStockLocationsParams"
		},
		"19420": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"19421": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/list-stock-locations.ts",
			"qualifiedName": "AdminGetStockLocationsParams.q"
		},
		"19422": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/list-stock-locations.ts",
			"qualifiedName": "AdminGetStockLocationsParams.id"
		},
		"19423": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/list-stock-locations.ts",
			"qualifiedName": "AdminGetStockLocationsParams.name"
		},
		"19424": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/list-stock-locations.ts",
			"qualifiedName": "AdminGetStockLocationsParams.address_id"
		},
		"19425": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/list-stock-locations.ts",
			"qualifiedName": "AdminGetStockLocationsParams.sales_channel_id"
		},
		"19426": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/list-stock-locations.ts",
			"qualifiedName": "AdminGetStockLocationsParams.order"
		},
		"19427": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"19428": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"19429": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"19430": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"19431": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/update-stock-location.ts",
			"qualifiedName": "AdminPostStockLocationsLocationReq"
		},
		"19434": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/update-stock-location.ts",
			"qualifiedName": "AdminPostStockLocationsLocationReq.name"
		},
		"19435": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/update-stock-location.ts",
			"qualifiedName": "AdminPostStockLocationsLocationReq.address"
		},
		"19436": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/update-stock-location.ts",
			"qualifiedName": "AdminPostStockLocationsLocationReq.address_id"
		},
		"19437": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/update-stock-location.ts",
			"qualifiedName": "AdminPostStockLocationsLocationReq.metadata"
		},
		"19438": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/update-stock-location.ts",
			"qualifiedName": "AdminPostStockLocationsLocationParams"
		},
		"19441": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"19442": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"19443": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/index.ts",
			"qualifiedName": "defaultRelationsExtended"
		},
		"19444": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/index.ts",
			"qualifiedName": "AdminExtendedStoresRes"
		},
		"19445": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/index.ts",
			"qualifiedName": "__type"
		},
		"19446": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/index.ts",
			"qualifiedName": "__type.store"
		},
		"19447": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/index.ts",
			"qualifiedName": "AdminStoresRes"
		},
		"19448": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/index.ts",
			"qualifiedName": "__type"
		},
		"19449": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/index.ts",
			"qualifiedName": "__type.store"
		},
		"19450": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/index.ts",
			"qualifiedName": "AdminTaxProvidersList"
		},
		"19451": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/index.ts",
			"qualifiedName": "__type"
		},
		"19452": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/index.ts",
			"qualifiedName": "__type.tax_providers"
		},
		"19453": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/index.ts",
			"qualifiedName": "AdminPaymentProvidersList"
		},
		"19454": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/index.ts",
			"qualifiedName": "__type"
		},
		"19455": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/index.ts",
			"qualifiedName": "__type.payment_providers"
		},
		"19456": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/update-store.ts",
			"qualifiedName": "AdminPostStoreReq"
		},
		"19459": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/update-store.ts",
			"qualifiedName": "AdminPostStoreReq.name"
		},
		"19460": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/update-store.ts",
			"qualifiedName": "AdminPostStoreReq.swap_link_template"
		},
		"19461": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/update-store.ts",
			"qualifiedName": "AdminPostStoreReq.payment_link_template"
		},
		"19462": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/update-store.ts",
			"qualifiedName": "AdminPostStoreReq.invite_link_template"
		},
		"19463": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/update-store.ts",
			"qualifiedName": "AdminPostStoreReq.default_currency_code"
		},
		"19464": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/update-store.ts",
			"qualifiedName": "AdminPostStoreReq.currencies"
		},
		"19465": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/update-store.ts",
			"qualifiedName": "AdminPostStoreReq.metadata"
		},
		"19466": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/swaps/index.ts",
			"qualifiedName": "defaultAdminSwapRelations"
		},
		"19467": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/swaps/index.ts",
			"qualifiedName": "defaultAdminSwapFields"
		},
		"19468": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/swaps/index.ts",
			"qualifiedName": "AdminSwapsListRes"
		},
		"19469": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/swaps/index.ts",
			"qualifiedName": "__type"
		},
		"19470": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/swaps/index.ts",
			"qualifiedName": "__type.swaps"
		},
		"19471": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/swaps/index.ts",
			"qualifiedName": "AdminSwapsRes"
		},
		"19472": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/swaps/index.ts",
			"qualifiedName": "__type"
		},
		"19473": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/swaps/index.ts",
			"qualifiedName": "__type.swap"
		},
		"19474": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/swaps/list-swaps.ts",
			"qualifiedName": "AdminGetSwapsParams"
		},
		"19477": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/swaps/list-swaps.ts",
			"qualifiedName": "AdminGetSwapsParams.limit"
		},
		"19478": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/swaps/list-swaps.ts",
			"qualifiedName": "AdminGetSwapsParams.offset"
		},
		"19479": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/index.ts",
			"qualifiedName": "defaultAdminTaxRatesRelations"
		},
		"19480": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/index.ts",
			"qualifiedName": "defaultAdminTaxRatesFields"
		},
		"19481": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/index.ts",
			"qualifiedName": "AdminTaxRatesDeleteRes"
		},
		"19482": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/index.ts",
			"qualifiedName": "AdminTaxRatesListRes"
		},
		"19483": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/index.ts",
			"qualifiedName": "__type"
		},
		"19484": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/index.ts",
			"qualifiedName": "__type.tax_rates"
		},
		"19485": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/index.ts",
			"qualifiedName": "AdminTaxRatesRes"
		},
		"19486": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/index.ts",
			"qualifiedName": "__type"
		},
		"19487": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/index.ts",
			"qualifiedName": "__type.tax_rate"
		},
		"19488": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/list-tax-rates.ts",
			"qualifiedName": "AdminGetTaxRatesParams"
		},
		"19491": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/list-tax-rates.ts",
			"qualifiedName": "AdminGetTaxRatesParams.region_id"
		},
		"19492": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/list-tax-rates.ts",
			"qualifiedName": "AdminGetTaxRatesParams.name"
		},
		"19493": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/list-tax-rates.ts",
			"qualifiedName": "AdminGetTaxRatesParams.code"
		},
		"19494": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/list-tax-rates.ts",
			"qualifiedName": "AdminGetTaxRatesParams.rate"
		},
		"19495": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/list-tax-rates.ts",
			"qualifiedName": "AdminGetTaxRatesParams.offset"
		},
		"19496": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/list-tax-rates.ts",
			"qualifiedName": "AdminGetTaxRatesParams.limit"
		},
		"19497": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/list-tax-rates.ts",
			"qualifiedName": "AdminGetTaxRatesParams.expand"
		},
		"19498": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/list-tax-rates.ts",
			"qualifiedName": "AdminGetTaxRatesParams.fields"
		},
		"19499": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/list-tax-rates.ts",
			"qualifiedName": "AdminGetTaxRatesParams.order"
		},
		"19500": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/list-tax-rates.ts",
			"qualifiedName": "AdminGetTaxRatesParams.updated_at"
		},
		"19501": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/list-tax-rates.ts",
			"qualifiedName": "AdminGetTaxRatesParams.created_at"
		},
		"19502": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/list-tax-rates.ts",
			"qualifiedName": "AdminGetTaxRatesParams.deleted_at"
		},
		"19503": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/list-tax-rates.ts",
			"qualifiedName": "AdminGetTaxRatesParams.q"
		},
		"19504": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/get-tax-rate.ts",
			"qualifiedName": "AdminGetTaxRatesTaxRateParams"
		},
		"19507": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/get-tax-rate.ts",
			"qualifiedName": "AdminGetTaxRatesTaxRateParams.expand"
		},
		"19508": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/get-tax-rate.ts",
			"qualifiedName": "AdminGetTaxRatesTaxRateParams.fields"
		},
		"19509": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/remove-from-product-types.ts",
			"qualifiedName": "AdminDeleteTaxRatesTaxRateProductTypesReq"
		},
		"19512": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/remove-from-product-types.ts",
			"qualifiedName": "AdminDeleteTaxRatesTaxRateProductTypesReq.product_types"
		},
		"19513": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/remove-from-product-types.ts",
			"qualifiedName": "AdminDeleteTaxRatesTaxRateProductTypesParams"
		},
		"19516": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/remove-from-product-types.ts",
			"qualifiedName": "AdminDeleteTaxRatesTaxRateProductTypesParams.expand"
		},
		"19517": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/remove-from-product-types.ts",
			"qualifiedName": "AdminDeleteTaxRatesTaxRateProductTypesParams.fields"
		},
		"19518": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/remove-from-products.ts",
			"qualifiedName": "AdminDeleteTaxRatesTaxRateProductsReq"
		},
		"19521": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/remove-from-products.ts",
			"qualifiedName": "AdminDeleteTaxRatesTaxRateProductsReq.products"
		},
		"19522": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/remove-from-products.ts",
			"qualifiedName": "AdminDeleteTaxRatesTaxRateProductsParams"
		},
		"19525": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/remove-from-products.ts",
			"qualifiedName": "AdminDeleteTaxRatesTaxRateProductsParams.expand"
		},
		"19526": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/remove-from-products.ts",
			"qualifiedName": "AdminDeleteTaxRatesTaxRateProductsParams.fields"
		},
		"19527": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/remove-from-shipping-options.ts",
			"qualifiedName": "AdminDeleteTaxRatesTaxRateShippingOptionsReq"
		},
		"19530": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/remove-from-shipping-options.ts",
			"qualifiedName": "AdminDeleteTaxRatesTaxRateShippingOptionsReq.shipping_options"
		},
		"19531": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/remove-from-shipping-options.ts",
			"qualifiedName": "AdminDeleteTaxRatesTaxRateShippingOptionsParams"
		},
		"19534": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/remove-from-shipping-options.ts",
			"qualifiedName": "AdminDeleteTaxRatesTaxRateShippingOptionsParams.expand"
		},
		"19535": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/remove-from-shipping-options.ts",
			"qualifiedName": "AdminDeleteTaxRatesTaxRateShippingOptionsParams.fields"
		},
		"19536": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/add-to-product-types.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateProductTypesReq"
		},
		"19539": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/add-to-product-types.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateProductTypesReq.product_types"
		},
		"19540": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/add-to-product-types.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateProductTypesParams"
		},
		"19543": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/add-to-product-types.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateProductTypesParams.expand"
		},
		"19544": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/add-to-product-types.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateProductTypesParams.fields"
		},
		"19545": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/add-to-products.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateProductsReq"
		},
		"19548": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/add-to-products.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateProductsReq.products"
		},
		"19549": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/add-to-products.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateProductsParams"
		},
		"19552": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/add-to-products.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateProductsParams.expand"
		},
		"19553": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/add-to-products.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateProductsParams.fields"
		},
		"19554": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/add-to-shipping-options.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateShippingOptionsReq"
		},
		"19557": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/add-to-shipping-options.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateShippingOptionsReq.shipping_options"
		},
		"19558": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/add-to-shipping-options.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateShippingOptionsParams"
		},
		"19561": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/add-to-shipping-options.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateShippingOptionsParams.expand"
		},
		"19562": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/add-to-shipping-options.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateShippingOptionsParams.fields"
		},
		"19563": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/create-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesReq"
		},
		"19566": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/create-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesReq.code"
		},
		"19567": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/create-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesReq.name"
		},
		"19568": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/create-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesReq.region_id"
		},
		"19569": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/create-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesReq.rate"
		},
		"19570": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/create-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesReq.products"
		},
		"19571": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/create-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesReq.shipping_options"
		},
		"19572": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/create-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesReq.product_types"
		},
		"19573": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/create-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesParams"
		},
		"19576": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/create-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesParams.expand"
		},
		"19577": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/create-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesParams.fields"
		},
		"19578": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/update-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateReq"
		},
		"19581": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/update-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateReq.code"
		},
		"19582": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/update-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateReq.name"
		},
		"19583": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/update-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateReq.region_id"
		},
		"19584": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/update-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateReq.rate"
		},
		"19585": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/update-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateReq.products"
		},
		"19586": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/update-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateReq.shipping_options"
		},
		"19587": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/update-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateReq.product_types"
		},
		"19588": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/update-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateParams"
		},
		"19591": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/update-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateParams.expand"
		},
		"19592": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/update-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateParams.fields"
		},
		"19593": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/uploads/index.ts",
			"qualifiedName": "AdminUploadsRes"
		},
		"19594": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/uploads/index.ts",
			"qualifiedName": "__type"
		},
		"19595": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/uploads/index.ts",
			"qualifiedName": "__type.uploads"
		},
		"19596": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/uploads/index.ts",
			"qualifiedName": "AdminDeleteUploadsRes"
		},
		"19597": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/uploads/index.ts",
			"qualifiedName": "AdminUploadsDownloadUrlRes"
		},
		"19598": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/uploads/index.ts",
			"qualifiedName": "__type"
		},
		"19599": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/uploads/index.ts",
			"qualifiedName": "__type.download_url"
		},
		"19600": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/uploads/create-upload.ts",
			"qualifiedName": "IAdminPostUploadsFileReq"
		},
		"19603": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/uploads/create-upload.ts",
			"qualifiedName": "IAdminPostUploadsFileReq.originalName"
		},
		"19604": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/uploads/create-upload.ts",
			"qualifiedName": "IAdminPostUploadsFileReq.path"
		},
		"19605": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/uploads/delete-upload.ts",
			"qualifiedName": "AdminDeleteUploadsReq"
		},
		"19608": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/uploads/delete-upload.ts",
			"qualifiedName": "AdminDeleteUploadsReq.file_key"
		},
		"19609": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/uploads/get-download-url.ts",
			"qualifiedName": "AdminPostUploadsDownloadUrlReq"
		},
		"19612": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/uploads/get-download-url.ts",
			"qualifiedName": "AdminPostUploadsDownloadUrlReq.file_key"
		},
		"19613": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/index.ts",
			"qualifiedName": "unauthenticatedUserRoutes"
		},
		"19614": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/index.ts",
			"qualifiedName": "unauthenticatedUserRoutes"
		},
		"19615": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/index.ts",
			"qualifiedName": "app"
		},
		"19616": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/index.ts",
			"qualifiedName": "defaultAdminUserFields"
		},
		"19617": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/index.ts",
			"qualifiedName": "AdminUserRes"
		},
		"19618": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/index.ts",
			"qualifiedName": "__type"
		},
		"19619": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/index.ts",
			"qualifiedName": "__type.user"
		},
		"19620": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/index.ts",
			"qualifiedName": "AdminUsersListRes"
		},
		"19621": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/index.ts",
			"qualifiedName": "__type"
		},
		"19622": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/index.ts",
			"qualifiedName": "__type.users"
		},
		"19623": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/index.ts",
			"qualifiedName": "AdminDeleteUserRes"
		},
		"19624": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/reset-password.ts",
			"qualifiedName": "payload"
		},
		"19625": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/reset-password.ts",
			"qualifiedName": "__type"
		},
		"19626": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/reset-password.ts",
			"qualifiedName": "__type.email"
		},
		"19627": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/reset-password.ts",
			"qualifiedName": "__type.user_id"
		},
		"19628": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/reset-password.ts",
			"qualifiedName": "__type.password"
		},
		"19629": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/reset-password.ts",
			"qualifiedName": "AdminResetPasswordRequest"
		},
		"19632": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/reset-password.ts",
			"qualifiedName": "AdminResetPasswordRequest.email"
		},
		"19633": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/reset-password.ts",
			"qualifiedName": "AdminResetPasswordRequest.token"
		},
		"19634": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/reset-password.ts",
			"qualifiedName": "AdminResetPasswordRequest.password"
		},
		"19635": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/reset-password-token.ts",
			"qualifiedName": "AdminResetPasswordTokenRequest"
		},
		"19638": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/reset-password-token.ts",
			"qualifiedName": "AdminResetPasswordTokenRequest.email"
		},
		"19639": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/create-user.ts",
			"qualifiedName": "AdminCreateUserRequest"
		},
		"19642": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/create-user.ts",
			"qualifiedName": "AdminCreateUserRequest.email"
		},
		"19643": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/create-user.ts",
			"qualifiedName": "AdminCreateUserRequest.first_name"
		},
		"19644": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/create-user.ts",
			"qualifiedName": "AdminCreateUserRequest.last_name"
		},
		"19645": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/create-user.ts",
			"qualifiedName": "AdminCreateUserRequest.role"
		},
		"19646": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/create-user.ts",
			"qualifiedName": "AdminCreateUserRequest.password"
		},
		"19647": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/list-users.ts",
			"qualifiedName": "AdminGetUsersParams"
		},
		"19648": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.__new"
		},
		"19649": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "AdminGetUsersParams"
		},
		"19650": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"19651": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/list-users.ts",
			"qualifiedName": "AdminGetUsersParams.id"
		},
		"19652": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/list-users.ts",
			"qualifiedName": "AdminGetUsersParams.q"
		},
		"19653": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/list-users.ts",
			"qualifiedName": "AdminGetUsersParams.order"
		},
		"19654": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/list-users.ts",
			"qualifiedName": "AdminGetUsersParams.updated_at"
		},
		"19655": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/list-users.ts",
			"qualifiedName": "AdminGetUsersParams.created_at"
		},
		"19656": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/list-users.ts",
			"qualifiedName": "AdminGetUsersParams.deleted_at"
		},
		"19657": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/list-users.ts",
			"qualifiedName": "AdminGetUsersParams.email"
		},
		"19658": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/list-users.ts",
			"qualifiedName": "AdminGetUsersParams.first_name"
		},
		"19659": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/list-users.ts",
			"qualifiedName": "AdminGetUsersParams.last_name"
		},
		"19660": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/list-users.ts",
			"qualifiedName": "AdminGetUsersParams.role"
		},
		"19661": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/list-users.ts",
			"qualifiedName": "AdminGetUsersParams.fields"
		},
		"19662": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"19663": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"19664": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"19665": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/update-user.ts",
			"qualifiedName": "AdminUpdateUserRequest"
		},
		"19668": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/update-user.ts",
			"qualifiedName": "AdminUpdateUserRequest.first_name"
		},
		"19669": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/update-user.ts",
			"qualifiedName": "AdminUpdateUserRequest.last_name"
		},
		"19670": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/update-user.ts",
			"qualifiedName": "AdminUpdateUserRequest.role"
		},
		"19671": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/update-user.ts",
			"qualifiedName": "AdminUpdateUserRequest.api_token"
		},
		"19672": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/update-user.ts",
			"qualifiedName": "AdminUpdateUserRequest.metadata"
		},
		"19673": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/index.ts",
			"qualifiedName": "defaultAdminVariantRelations"
		},
		"19674": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/index.ts",
			"qualifiedName": "defaultAdminVariantFields"
		},
		"19675": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/index.ts",
			"qualifiedName": "AdminVariantsListRes"
		},
		"19676": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/index.ts",
			"qualifiedName": "__type"
		},
		"19677": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/index.ts",
			"qualifiedName": "__type.variants"
		},
		"19678": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/index.ts",
			"qualifiedName": "AdminVariantsRes"
		},
		"19679": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/index.ts",
			"qualifiedName": "__type"
		},
		"19680": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/index.ts",
			"qualifiedName": "__type.variant"
		},
		"19681": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/list-variants.ts",
			"qualifiedName": "AdminGetVariantsParams"
		},
		"19684": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/list-variants.ts",
			"qualifiedName": "AdminGetVariantsParams.q"
		},
		"19685": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/list-variants.ts",
			"qualifiedName": "AdminGetVariantsParams.limit"
		},
		"19686": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/list-variants.ts",
			"qualifiedName": "AdminGetVariantsParams.offset"
		},
		"19687": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/list-variants.ts",
			"qualifiedName": "AdminGetVariantsParams.expand"
		},
		"19688": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/list-variants.ts",
			"qualifiedName": "AdminGetVariantsParams.fields"
		},
		"19689": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/list-variants.ts",
			"qualifiedName": "AdminGetVariantsParams.id"
		},
		"19690": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/list-variants.ts",
			"qualifiedName": "AdminGetVariantsParams.title"
		},
		"19691": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/list-variants.ts",
			"qualifiedName": "AdminGetVariantsParams.inventory_quantity"
		},
		"19692": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/list-variants.ts",
			"qualifiedName": "AdminGetVariantsParams.order"
		},
		"19693": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/list-variants.ts",
			"qualifiedName": "AdminGetVariantsParams.manage_inventory"
		},
		"19694": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/list-variants.ts",
			"qualifiedName": "AdminGetVariantsParams.allow_backorder"
		},
		"19695": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "AdminPriceSelectionParams.customer_id"
		},
		"19696": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.cart_id"
		},
		"19697": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.region_id"
		},
		"19698": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.currency_code"
		},
		"19699": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/get-variant.ts",
			"qualifiedName": "AdminGetVariantParams"
		},
		"19702": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"19703": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"19704": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/get-inventory.ts",
			"qualifiedName": "LevelWithAvailability"
		},
		"19705": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/get-inventory.ts",
			"qualifiedName": "__type"
		},
		"19706": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/get-inventory.ts",
			"qualifiedName": "__type.available_quantity"
		},
		"19707": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/get-inventory.ts",
			"qualifiedName": "ResponseInventoryItem"
		},
		"19708": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/get-inventory.ts",
			"qualifiedName": "__type"
		},
		"19709": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/get-inventory.ts",
			"qualifiedName": "__type.location_levels"
		},
		"19710": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/get-inventory.ts",
			"qualifiedName": "VariantInventory"
		},
		"19711": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/get-inventory.ts",
			"qualifiedName": "__type"
		},
		"19712": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/get-inventory.ts",
			"qualifiedName": "__type.id"
		},
		"19713": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/get-inventory.ts",
			"qualifiedName": "__type.inventory"
		},
		"19714": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/get-inventory.ts",
			"qualifiedName": "__type.sales_channel_availability"
		},
		"19715": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/get-inventory.ts",
			"qualifiedName": "__type"
		},
		"19716": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/get-inventory.ts",
			"qualifiedName": "__type.channel_name"
		},
		"19717": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/get-inventory.ts",
			"qualifiedName": "__type.channel_id"
		},
		"19718": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/get-inventory.ts",
			"qualifiedName": "__type.available_quantity"
		},
		"19719": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/get-inventory.ts",
			"qualifiedName": "AdminGetVariantsVariantInventoryRes"
		},
		"19720": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/get-inventory.ts",
			"qualifiedName": "__type"
		},
		"19721": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/get-inventory.ts",
			"qualifiedName": "__type.variant"
		},
		"19722": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/workflows-executions/query-config.ts",
			"qualifiedName": "defaultAdminWorkflowExecutionsRelations"
		},
		"19723": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/workflows-executions/query-config.ts",
			"qualifiedName": "allowedAdminWorkflowExecutionsRelations"
		},
		"19724": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/workflows-executions/query-config.ts",
			"qualifiedName": "defaultAdminWorkflowExecutionsFields"
		},
		"19725": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/workflows-executions/query-config.ts",
			"qualifiedName": "defaultAdminWorkflowExecutionDetailFields"
		},
		"19726": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/workflows-executions/validators.ts",
			"qualifiedName": "AdminGetWorkflowExecutionDetailsParams"
		},
		"19729": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"19730": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"19731": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/workflows-executions/validators.ts",
			"qualifiedName": "AdminGetWorkflowExecutionsParams"
		},
		"19732": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.__new"
		},
		"19733": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "AdminGetWorkflowExecutionsParams"
		},
		"19734": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"19735": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/workflows-executions/validators.ts",
			"qualifiedName": "AdminGetWorkflowExecutionsParams.transaction_id"
		},
		"19736": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/workflows-executions/validators.ts",
			"qualifiedName": "AdminGetWorkflowExecutionsParams.workflow_id"
		},
		"19737": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"19738": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"19739": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"19740": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"19741": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.order"
		},
		"19742": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/workflows-executions/validators.ts",
			"qualifiedName": "AdminPostWorkflowsRunReq"
		},
		"19745": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/workflows-executions/validators.ts",
			"qualifiedName": "AdminPostWorkflowsRunReq.input"
		},
		"19746": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/workflows-executions/validators.ts",
			"qualifiedName": "AdminPostWorkflowsRunReq.transaction_id"
		},
		"19747": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/workflows-executions/validators.ts",
			"qualifiedName": "AdminPostWorkflowsAsyncResponseReq"
		},
		"19750": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/workflows-executions/validators.ts",
			"qualifiedName": "AdminPostWorkflowsAsyncResponseReq.transaction_id"
		},
		"19751": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/workflows-executions/validators.ts",
			"qualifiedName": "AdminPostWorkflowsAsyncResponseReq.step_id"
		},
		"19752": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/workflows-executions/validators.ts",
			"qualifiedName": "AdminPostWorkflowsAsyncResponseReq.response"
		},
		"19753": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/workflows-executions/validators.ts",
			"qualifiedName": "AdminPostWorkflowsAsyncResponseReq.compensate_input"
		},
		"19754": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/workflows-executions/validators.ts",
			"qualifiedName": "AdminPostWorkflowsAsyncResponseReq.action"
		},
		"19755": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/auth/index.ts",
			"qualifiedName": "StoreAuthRes"
		},
		"19756": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/auth/index.ts",
			"qualifiedName": "__type"
		},
		"19757": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/auth/index.ts",
			"qualifiedName": "__type.customer"
		},
		"19758": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/auth/index.ts",
			"qualifiedName": "StoreBearerAuthRes"
		},
		"19759": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/auth/index.ts",
			"qualifiedName": "__type"
		},
		"19760": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/auth/index.ts",
			"qualifiedName": "__type.access_token"
		},
		"19761": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/auth/index.ts",
			"qualifiedName": "StoreGetAuthEmailRes"
		},
		"19762": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/auth/index.ts",
			"qualifiedName": "__type"
		},
		"19763": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/auth/index.ts",
			"qualifiedName": "__type.exists"
		},
		"19764": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/auth/create-session.ts",
			"qualifiedName": "StorePostAuthReq"
		},
		"19767": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/auth/create-session.ts",
			"qualifiedName": "StorePostAuthReq.email"
		},
		"19768": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/auth/create-session.ts",
			"qualifiedName": "StorePostAuthReq.password"
		},
		"19769": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/index.ts",
			"qualifiedName": "defaultStoreCartFields"
		},
		"19770": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/index.ts",
			"qualifiedName": "defaultStoreCartRelations"
		},
		"19771": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/index.ts",
			"qualifiedName": "StoreCartsRes"
		},
		"19772": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/index.ts",
			"qualifiedName": "__type"
		},
		"19773": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/index.ts",
			"qualifiedName": "__type.cart"
		},
		"19774": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/index.ts",
			"qualifiedName": "StoreCompleteCartRes"
		},
		"19775": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/index.ts",
			"qualifiedName": "__type"
		},
		"19776": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/index.ts",
			"qualifiedName": "__type.type"
		},
		"19777": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/index.ts",
			"qualifiedName": "__type.data"
		},
		"19778": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/index.ts",
			"qualifiedName": "__type"
		},
		"19779": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/index.ts",
			"qualifiedName": "__type.type"
		},
		"19780": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/index.ts",
			"qualifiedName": "__type.data"
		},
		"19781": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/index.ts",
			"qualifiedName": "__type"
		},
		"19782": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/index.ts",
			"qualifiedName": "__type.type"
		},
		"19783": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/index.ts",
			"qualifiedName": "__type.data"
		},
		"19784": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/add-shipping-method.ts",
			"qualifiedName": "StorePostCartsCartShippingMethodReq"
		},
		"19787": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/add-shipping-method.ts",
			"qualifiedName": "StorePostCartsCartShippingMethodReq.option_id"
		},
		"19788": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/add-shipping-method.ts",
			"qualifiedName": "StorePostCartsCartShippingMethodReq.data"
		},
		"19789": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/create-cart.ts",
			"qualifiedName": "Item"
		},
		"19792": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/create-cart.ts",
			"qualifiedName": "Item.variant_id"
		},
		"19793": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/create-cart.ts",
			"qualifiedName": "Item.quantity"
		},
		"19794": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/create-cart.ts",
			"qualifiedName": "StorePostCartReq"
		},
		"19797": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/create-cart.ts",
			"qualifiedName": "StorePostCartReq.region_id"
		},
		"19798": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/create-cart.ts",
			"qualifiedName": "StorePostCartReq.country_code"
		},
		"19799": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/create-cart.ts",
			"qualifiedName": "StorePostCartReq.items"
		},
		"19800": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/create-cart.ts",
			"qualifiedName": "StorePostCartReq.context"
		},
		"19801": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/create-cart.ts",
			"qualifiedName": "StorePostCartReq.sales_channel_id"
		},
		"19802": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/create-line-item/index.ts",
			"qualifiedName": "StorePostCartsCartLineItemsReq"
		},
		"19805": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/create-line-item/index.ts",
			"qualifiedName": "StorePostCartsCartLineItemsReq.variant_id"
		},
		"19806": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/create-line-item/index.ts",
			"qualifiedName": "StorePostCartsCartLineItemsReq.quantity"
		},
		"19807": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/create-line-item/index.ts",
			"qualifiedName": "StorePostCartsCartLineItemsReq.metadata"
		},
		"19808": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/set-payment-session.ts",
			"qualifiedName": "StorePostCartsCartPaymentSessionReq"
		},
		"19811": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/set-payment-session.ts",
			"qualifiedName": "StorePostCartsCartPaymentSessionReq.provider_id"
		},
		"19812": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/update-cart.ts",
			"qualifiedName": "StorePostCartsCartReq"
		},
		"19815": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/update-cart.ts",
			"qualifiedName": "StorePostCartsCartReq.region_id"
		},
		"19816": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/update-cart.ts",
			"qualifiedName": "StorePostCartsCartReq.country_code"
		},
		"19817": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/update-cart.ts",
			"qualifiedName": "StorePostCartsCartReq.email"
		},
		"19818": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/update-cart.ts",
			"qualifiedName": "StorePostCartsCartReq.billing_address"
		},
		"19819": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/update-cart.ts",
			"qualifiedName": "StorePostCartsCartReq.shipping_address"
		},
		"19820": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/update-cart.ts",
			"qualifiedName": "StorePostCartsCartReq.gift_cards"
		},
		"19821": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/update-cart.ts",
			"qualifiedName": "StorePostCartsCartReq.discounts"
		},
		"19822": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/update-cart.ts",
			"qualifiedName": "StorePostCartsCartReq.customer_id"
		},
		"19823": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/update-cart.ts",
			"qualifiedName": "StorePostCartsCartReq.context"
		},
		"19824": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/update-cart.ts",
			"qualifiedName": "StorePostCartsCartReq.sales_channel_id"
		},
		"19825": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/update-line-item.ts",
			"qualifiedName": "StorePostCartsCartLineItemsItemReq"
		},
		"19828": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/update-line-item.ts",
			"qualifiedName": "StorePostCartsCartLineItemsItemReq.quantity"
		},
		"19829": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/update-line-item.ts",
			"qualifiedName": "StorePostCartsCartLineItemsItemReq.metadata"
		},
		"19830": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/update-payment-session.ts",
			"qualifiedName": "StorePostCartsCartPaymentSessionUpdateReq"
		},
		"19833": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/update-payment-session.ts",
			"qualifiedName": "StorePostCartsCartPaymentSessionUpdateReq.data"
		},
		"19834": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/collections/index.ts",
			"qualifiedName": "defaultStoreCollectionRelations"
		},
		"19835": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/collections/index.ts",
			"qualifiedName": "allowedFields"
		},
		"19836": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/collections/index.ts",
			"qualifiedName": "StoreCollectionsListRes"
		},
		"19837": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/collections/index.ts",
			"qualifiedName": "__type"
		},
		"19838": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/collections/index.ts",
			"qualifiedName": "__type.collections"
		},
		"19839": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/collections/index.ts",
			"qualifiedName": "StoreCollectionsRes"
		},
		"19840": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/collections/index.ts",
			"qualifiedName": "__type"
		},
		"19841": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/collections/index.ts",
			"qualifiedName": "__type.collection"
		},
		"19842": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/collections/list-collections.ts",
			"qualifiedName": "StoreGetCollectionsParams"
		},
		"19845": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/collections/list-collections.ts",
			"qualifiedName": "StoreGetCollectionsParams.handle"
		},
		"19846": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/collections/list-collections.ts",
			"qualifiedName": "StoreGetCollectionsParams.limit"
		},
		"19847": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/collections/list-collections.ts",
			"qualifiedName": "StoreGetCollectionsParams.offset"
		},
		"19848": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/collections/list-collections.ts",
			"qualifiedName": "StoreGetCollectionsParams.created_at"
		},
		"19849": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/collections/list-collections.ts",
			"qualifiedName": "StoreGetCollectionsParams.updated_at"
		},
		"19850": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/index.ts",
			"qualifiedName": "defaultStoreCustomersRelations"
		},
		"19851": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/index.ts",
			"qualifiedName": "defaultStoreCustomersFields"
		},
		"19852": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/index.ts",
			"qualifiedName": "allowedStoreCustomersRelations"
		},
		"19853": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/index.ts",
			"qualifiedName": "allowedStoreCustomersFields"
		},
		"19854": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/index.ts",
			"qualifiedName": "StoreCustomersRes"
		},
		"19855": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/index.ts",
			"qualifiedName": "__type"
		},
		"19856": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/index.ts",
			"qualifiedName": "__type.customer"
		},
		"19857": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/index.ts",
			"qualifiedName": "StoreCustomersResetPasswordRes"
		},
		"19858": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/index.ts",
			"qualifiedName": "__type"
		},
		"19859": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/index.ts",
			"qualifiedName": "__type.customer"
		},
		"19860": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/index.ts",
			"qualifiedName": "StoreCustomersListOrdersRes"
		},
		"19861": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/index.ts",
			"qualifiedName": "__type"
		},
		"19862": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/index.ts",
			"qualifiedName": "__type.orders"
		},
		"19863": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/index.ts",
			"qualifiedName": "StoreCustomersListPaymentMethodsRes"
		},
		"19864": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/index.ts",
			"qualifiedName": "__type"
		},
		"19865": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/index.ts",
			"qualifiedName": "__type.payment_methods"
		},
		"19866": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/index.ts",
			"qualifiedName": "__type"
		},
		"19867": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/index.ts",
			"qualifiedName": "__type.provider_id"
		},
		"19868": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/index.ts",
			"qualifiedName": "__type.data"
		},
		"19869": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/create-address.ts",
			"qualifiedName": "StorePostCustomersCustomerAddressesReq"
		},
		"19872": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/create-address.ts",
			"qualifiedName": "StorePostCustomersCustomerAddressesReq.address"
		},
		"19873": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/create-customer.ts",
			"qualifiedName": "StorePostCustomersReq"
		},
		"19876": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/create-customer.ts",
			"qualifiedName": "StorePostCustomersReq.first_name"
		},
		"19877": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/create-customer.ts",
			"qualifiedName": "StorePostCustomersReq.last_name"
		},
		"19878": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/create-customer.ts",
			"qualifiedName": "StorePostCustomersReq.email"
		},
		"19879": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/create-customer.ts",
			"qualifiedName": "StorePostCustomersReq.password"
		},
		"19880": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/create-customer.ts",
			"qualifiedName": "StorePostCustomersReq.phone"
		},
		"19881": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersPaginationParams"
		},
		"19884": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersPaginationParams.limit"
		},
		"19885": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersPaginationParams.offset"
		},
		"19886": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersPaginationParams.fields"
		},
		"19887": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersPaginationParams.expand"
		},
		"19888": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersParams"
		},
		"19891": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersParams.id"
		},
		"19892": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersParams.q"
		},
		"19893": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersParams.status"
		},
		"19894": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersParams.fulfillment_status"
		},
		"19895": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersParams.payment_status"
		},
		"19896": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersParams.display_id"
		},
		"19897": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersParams.cart_id"
		},
		"19898": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersParams.email"
		},
		"19899": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersParams.region_id"
		},
		"19900": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersParams.currency_code"
		},
		"19901": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersParams.tax_rate"
		},
		"19902": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersParams.created_at"
		},
		"19903": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersParams.updated_at"
		},
		"19904": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersParams.canceled_at"
		},
		"19905": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersPaginationParams.limit"
		},
		"19906": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersPaginationParams.offset"
		},
		"19907": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersPaginationParams.fields"
		},
		"19908": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersPaginationParams.expand"
		},
		"19909": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/reset-password.ts",
			"qualifiedName": "StorePostCustomersResetPasswordReq"
		},
		"19912": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/reset-password.ts",
			"qualifiedName": "StorePostCustomersResetPasswordReq.email"
		},
		"19913": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/reset-password.ts",
			"qualifiedName": "StorePostCustomersResetPasswordReq.token"
		},
		"19914": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/reset-password.ts",
			"qualifiedName": "StorePostCustomersResetPasswordReq.password"
		},
		"19915": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/reset-password-token.ts",
			"qualifiedName": "StorePostCustomersCustomerPasswordTokenReq"
		},
		"19918": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/reset-password-token.ts",
			"qualifiedName": "StorePostCustomersCustomerPasswordTokenReq.email"
		},
		"19919": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/update-address.ts",
			"qualifiedName": "StorePostCustomersCustomerAddressesAddressReq"
		},
		"19922": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.first_name"
		},
		"19923": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.last_name"
		},
		"19924": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.phone"
		},
		"19925": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.metadata"
		},
		"19926": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.company"
		},
		"19927": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.address_1"
		},
		"19928": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.address_2"
		},
		"19929": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.city"
		},
		"19930": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.country_code"
		},
		"19931": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.province"
		},
		"19932": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.postal_code"
		},
		"19933": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/update-customer.ts",
			"qualifiedName": "StorePostCustomersCustomerReq"
		},
		"19936": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/update-customer.ts",
			"qualifiedName": "StorePostCustomersCustomerReq.billing_address"
		},
		"19937": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/update-customer.ts",
			"qualifiedName": "StorePostCustomersCustomerReq.first_name"
		},
		"19938": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/update-customer.ts",
			"qualifiedName": "StorePostCustomersCustomerReq.last_name"
		},
		"19939": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/update-customer.ts",
			"qualifiedName": "StorePostCustomersCustomerReq.password"
		},
		"19940": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/update-customer.ts",
			"qualifiedName": "StorePostCustomersCustomerReq.phone"
		},
		"19941": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/update-customer.ts",
			"qualifiedName": "StorePostCustomersCustomerReq.email"
		},
		"19942": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/update-customer.ts",
			"qualifiedName": "StorePostCustomersCustomerReq.metadata"
		},
		"19943": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/gift-cards/index.ts",
			"qualifiedName": "defaultStoreGiftCardRelations"
		},
		"19944": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/gift-cards/index.ts",
			"qualifiedName": "defaultStoreGiftCardFields"
		},
		"19945": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/gift-cards/index.ts",
			"qualifiedName": "allowedStoreGiftCardRelations"
		},
		"19946": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/gift-cards/index.ts",
			"qualifiedName": "allowedStoreGiftCardFields"
		},
		"19947": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/gift-cards/index.ts",
			"qualifiedName": "StoreGiftCardsRes"
		},
		"19948": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/gift-cards/index.ts",
			"qualifiedName": "__type"
		},
		"19949": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/gift-cards/index.ts",
			"qualifiedName": "__type.gift_card"
		},
		"19950": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/order-edits/index.ts",
			"qualifiedName": "StoreOrderEditsRes"
		},
		"19951": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/order-edits/index.ts",
			"qualifiedName": "__type"
		},
		"19952": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/order-edits/index.ts",
			"qualifiedName": "__type.order_edit"
		},
		"19953": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/order-edits/decline-order-edit.ts",
			"qualifiedName": "StorePostOrderEditsOrderEditDecline"
		},
		"19956": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/order-edits/decline-order-edit.ts",
			"qualifiedName": "StorePostOrderEditsOrderEditDecline.declined_reason"
		},
		"19957": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/orders/index.ts",
			"qualifiedName": "defaultStoreOrdersRelations"
		},
		"19958": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/orders/index.ts",
			"qualifiedName": "allowedStoreOrdersRelations"
		},
		"19959": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/orders/index.ts",
			"qualifiedName": "defaultStoreOrdersFields"
		},
		"19960": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/orders/index.ts",
			"qualifiedName": "allowedStoreOrdersFields"
		},
		"19961": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/orders/index.ts",
			"qualifiedName": "StoreOrdersRes"
		},
		"19962": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/orders/index.ts",
			"qualifiedName": "__type"
		},
		"19963": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/orders/index.ts",
			"qualifiedName": "__type.order"
		},
		"19964": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/orders/confirm-order-request.ts",
			"qualifiedName": "StorePostCustomersCustomerAcceptClaimReq"
		},
		"19967": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/orders/confirm-order-request.ts",
			"qualifiedName": "StorePostCustomersCustomerAcceptClaimReq.token"
		},
		"19968": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/orders/lookup-order.ts",
			"qualifiedName": "ShippingAddressPayload"
		},
		"19971": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/orders/lookup-order.ts",
			"qualifiedName": "ShippingAddressPayload.postal_code"
		},
		"19972": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/orders/lookup-order.ts",
			"qualifiedName": "StoreGetOrdersParams"
		},
		"19975": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/orders/lookup-order.ts",
			"qualifiedName": "StoreGetOrdersParams.display_id"
		},
		"19976": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/orders/lookup-order.ts",
			"qualifiedName": "StoreGetOrdersParams.email"
		},
		"19977": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/orders/lookup-order.ts",
			"qualifiedName": "StoreGetOrdersParams.shipping_address"
		},
		"19978": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"19979": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"19980": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/orders/request-order.ts",
			"qualifiedName": "StorePostCustomersCustomerOrderClaimReq"
		},
		"19983": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/orders/request-order.ts",
			"qualifiedName": "StorePostCustomersCustomerOrderClaimReq.order_ids"
		},
		"19984": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/payment-collections/index.ts",
			"qualifiedName": "defaultPaymentCollectionRelations"
		},
		"19985": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/payment-collections/index.ts",
			"qualifiedName": "StorePaymentCollectionsRes"
		},
		"19986": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/payment-collections/index.ts",
			"qualifiedName": "__type"
		},
		"19987": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/payment-collections/index.ts",
			"qualifiedName": "__type.payment_collection"
		},
		"19988": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/payment-collections/index.ts",
			"qualifiedName": "StorePaymentCollectionsSessionRes"
		},
		"19989": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/payment-collections/index.ts",
			"qualifiedName": "__type"
		},
		"19990": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/payment-collections/index.ts",
			"qualifiedName": "__type.payment_session"
		},
		"19991": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/payment-collections/authorize-batch-payment-sessions.ts",
			"qualifiedName": "StorePostPaymentCollectionsBatchSessionsAuthorizeReq"
		},
		"19994": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/payment-collections/authorize-batch-payment-sessions.ts",
			"qualifiedName": "StorePostPaymentCollectionsBatchSessionsAuthorizeReq.session_ids"
		},
		"19995": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/payment-collections/get-payment-collection.ts",
			"qualifiedName": "StoreGetPaymentCollectionsParams"
		},
		"19998": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"19999": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"20000": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/payment-collections/manage-batch-payment-sessions.ts",
			"qualifiedName": "StorePostPaymentCollectionsSessionsReq"
		},
		"20003": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/payment-collections/manage-batch-payment-sessions.ts",
			"qualifiedName": "StorePostPaymentCollectionsSessionsReq.provider_id"
		},
		"20004": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/payment-collections/manage-batch-payment-sessions.ts",
			"qualifiedName": "StorePostPaymentCollectionsSessionsReq.amount"
		},
		"20005": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/payment-collections/manage-batch-payment-sessions.ts",
			"qualifiedName": "StorePostPaymentCollectionsSessionsReq.session_id"
		},
		"20006": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/payment-collections/manage-batch-payment-sessions.ts",
			"qualifiedName": "StorePostPaymentCollectionsBatchSessionsReq"
		},
		"20009": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/payment-collections/manage-batch-payment-sessions.ts",
			"qualifiedName": "StorePostPaymentCollectionsBatchSessionsReq.sessions"
		},
		"20010": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/payment-collections/manage-payment-session.ts",
			"qualifiedName": "StorePaymentCollectionSessionsReq"
		},
		"20013": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/payment-collections/manage-payment-session.ts",
			"qualifiedName": "StorePaymentCollectionSessionsReq.provider_id"
		},
		"20014": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-categories/index.ts",
			"qualifiedName": "defaultStoreProductCategoryRelations"
		},
		"20015": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-categories/index.ts",
			"qualifiedName": "defaultStoreCategoryScope"
		},
		"20016": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-categories/index.ts",
			"qualifiedName": "__object"
		},
		"20017": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-categories/index.ts",
			"qualifiedName": "__object.is_internal"
		},
		"20018": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-categories/index.ts",
			"qualifiedName": "__object.is_active"
		},
		"20019": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-categories/index.ts",
			"qualifiedName": "defaultStoreProductCategoryFields"
		},
		"20020": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-categories/index.ts",
			"qualifiedName": "allowedStoreProductCategoryFields"
		},
		"20021": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-categories/index.ts",
			"qualifiedName": "StoreGetProductCategoriesCategoryRes"
		},
		"20022": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-categories/index.ts",
			"qualifiedName": "__type"
		},
		"20023": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-categories/index.ts",
			"qualifiedName": "__type.product_category"
		},
		"20024": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-categories/index.ts",
			"qualifiedName": "StoreGetProductCategoriesRes"
		},
		"20025": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-categories/index.ts",
			"qualifiedName": "__type"
		},
		"20026": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-categories/index.ts",
			"qualifiedName": "__type.product_categories"
		},
		"20027": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-categories/get-product-category.ts",
			"qualifiedName": "StoreGetProductCategoriesCategoryParams"
		},
		"20030": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"20031": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"20032": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-categories/list-product-categories.ts",
			"qualifiedName": "StoreGetProductCategoriesParams"
		},
		"20033": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.__new"
		},
		"20034": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "StoreGetProductCategoriesParams"
		},
		"20035": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"20036": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-categories/list-product-categories.ts",
			"qualifiedName": "StoreGetProductCategoriesParams.q"
		},
		"20037": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-categories/list-product-categories.ts",
			"qualifiedName": "StoreGetProductCategoriesParams.handle"
		},
		"20038": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-categories/list-product-categories.ts",
			"qualifiedName": "StoreGetProductCategoriesParams.parent_category_id"
		},
		"20039": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-categories/list-product-categories.ts",
			"qualifiedName": "StoreGetProductCategoriesParams.include_descendants_tree"
		},
		"20040": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"20041": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"20042": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"20043": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"20044": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.order"
		},
		"20045": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-tags/index.ts",
			"qualifiedName": "defaultStoreProductTagFields"
		},
		"20046": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-tags/index.ts",
			"qualifiedName": "allowedStoreProductTagFields"
		},
		"20047": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-tags/index.ts",
			"qualifiedName": "defaultStoreProductTagRelations"
		},
		"20048": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-tags/index.ts",
			"qualifiedName": "StoreProductTagsListRes"
		},
		"20049": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-tags/index.ts",
			"qualifiedName": "__type"
		},
		"20050": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-tags/index.ts",
			"qualifiedName": "__type.product_tags"
		},
		"20051": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-tags/list-product-tags.ts",
			"qualifiedName": "StoreGetProductTagsParams"
		},
		"20054": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-tags/list-product-tags.ts",
			"qualifiedName": "StoreGetProductTagsParams.id"
		},
		"20055": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-tags/list-product-tags.ts",
			"qualifiedName": "StoreGetProductTagsParams.q"
		},
		"20056": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-tags/list-product-tags.ts",
			"qualifiedName": "StoreGetProductTagsParams.value"
		},
		"20057": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-tags/list-product-tags.ts",
			"qualifiedName": "StoreGetProductTagsParams.created_at"
		},
		"20058": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-tags/list-product-tags.ts",
			"qualifiedName": "StoreGetProductTagsParams.updated_at"
		},
		"20059": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-tags/list-product-tags.ts",
			"qualifiedName": "StoreGetProductTagsParams.order"
		},
		"20060": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-tags/list-product-tags.ts",
			"qualifiedName": "StoreGetProductTagsParams.discount_condition_id"
		},
		"20061": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"20062": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"20063": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-types/index.ts",
			"qualifiedName": "allowedStoreProductTypeFields"
		},
		"20064": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-types/index.ts",
			"qualifiedName": "defaultStoreProductTypeFields"
		},
		"20065": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-types/index.ts",
			"qualifiedName": "defaultStoreProductTypeRelations"
		},
		"20066": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-types/index.ts",
			"qualifiedName": "StoreProductTypesListRes"
		},
		"20067": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-types/index.ts",
			"qualifiedName": "__type"
		},
		"20068": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-types/index.ts",
			"qualifiedName": "__type.product_types"
		},
		"20069": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-types/list-product-types.ts",
			"qualifiedName": "StoreGetProductTypesParams"
		},
		"20072": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-types/list-product-types.ts",
			"qualifiedName": "StoreGetProductTypesParams.id"
		},
		"20073": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-types/list-product-types.ts",
			"qualifiedName": "StoreGetProductTypesParams.q"
		},
		"20074": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-types/list-product-types.ts",
			"qualifiedName": "StoreGetProductTypesParams.value"
		},
		"20075": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-types/list-product-types.ts",
			"qualifiedName": "StoreGetProductTypesParams.created_at"
		},
		"20076": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-types/list-product-types.ts",
			"qualifiedName": "StoreGetProductTypesParams.updated_at"
		},
		"20077": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-types/list-product-types.ts",
			"qualifiedName": "StoreGetProductTypesParams.order"
		},
		"20078": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-types/list-product-types.ts",
			"qualifiedName": "StoreGetProductTypesParams.discount_condition_id"
		},
		"20079": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"20080": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"20081": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "defaultStoreProductsRelations"
		},
		"20082": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "defaultStoreProductsFields"
		},
		"20083": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "allowedStoreProductsFields"
		},
		"20084": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "allowedStoreProductsRelations"
		},
		"20085": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "defaultStoreProductRemoteQueryObject"
		},
		"20086": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object"
		},
		"20087": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"20088": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.images"
		},
		"20089": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object"
		},
		"20090": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"20091": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.tags"
		},
		"20092": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object"
		},
		"20093": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"20094": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.type"
		},
		"20095": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object"
		},
		"20096": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"20097": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.collection"
		},
		"20098": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object"
		},
		"20099": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"20100": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.options"
		},
		"20101": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object"
		},
		"20102": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"20103": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.values"
		},
		"20104": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object"
		},
		"20105": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"20106": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.variants"
		},
		"20107": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object"
		},
		"20108": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"20109": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.options"
		},
		"20110": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object"
		},
		"20111": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"20112": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.profile"
		},
		"20113": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object"
		},
		"20114": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"20115": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.sales_channels"
		},
		"20116": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object"
		},
		"20117": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"20118": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "StoreProductsRes"
		},
		"20119": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__type"
		},
		"20120": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__type.product"
		},
		"20121": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "StorePostSearchRes"
		},
		"20122": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__type"
		},
		"20123": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__type.hits"
		},
		"20124": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "StoreProductsListRes"
		},
		"20125": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__type"
		},
		"20126": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__type.products"
		},
		"20127": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsPaginationParams"
		},
		"20130": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsPaginationParams.offset"
		},
		"20131": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsPaginationParams.limit"
		},
		"20132": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsPaginationParams.order"
		},
		"20133": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.cart_id"
		},
		"20134": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.region_id"
		},
		"20135": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.currency_code"
		},
		"20136": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"20137": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"20138": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsParams"
		},
		"20141": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsParams.id"
		},
		"20142": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsParams.q"
		},
		"20143": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsParams.collection_id"
		},
		"20144": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsParams.tags"
		},
		"20145": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsParams.title"
		},
		"20146": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsParams.description"
		},
		"20147": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsParams.handle"
		},
		"20148": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsParams.is_giftcard"
		},
		"20149": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsParams.type_id"
		},
		"20150": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsParams.sales_channel_id"
		},
		"20151": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsParams.category_id"
		},
		"20152": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsParams.include_category_children"
		},
		"20153": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsParams.created_at"
		},
		"20154": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsParams.updated_at"
		},
		"20155": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsPaginationParams.offset"
		},
		"20156": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsPaginationParams.limit"
		},
		"20157": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsPaginationParams.order"
		},
		"20158": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.cart_id"
		},
		"20159": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.region_id"
		},
		"20160": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.currency_code"
		},
		"20161": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"20162": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"20163": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/search.ts",
			"qualifiedName": "StorePostSearchReq"
		},
		"20166": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/search.ts",
			"qualifiedName": "StorePostSearchReq.q"
		},
		"20167": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/search.ts",
			"qualifiedName": "StorePostSearchReq.offset"
		},
		"20168": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/search.ts",
			"qualifiedName": "StorePostSearchReq.limit"
		},
		"20169": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/search.ts",
			"qualifiedName": "StorePostSearchReq.filter"
		},
		"20170": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/regions/index.ts",
			"qualifiedName": "defaultStoreRegionRelations"
		},
		"20171": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/regions/index.ts",
			"qualifiedName": "defaultStoreRegionFields"
		},
		"20172": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/regions/index.ts",
			"qualifiedName": "StoreRegionsListRes"
		},
		"20173": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/regions/index.ts",
			"qualifiedName": "__type"
		},
		"20174": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/regions/index.ts",
			"qualifiedName": "__type.regions"
		},
		"20175": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/regions/index.ts",
			"qualifiedName": "StoreRegionsRes"
		},
		"20176": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/regions/index.ts",
			"qualifiedName": "__type"
		},
		"20177": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/regions/index.ts",
			"qualifiedName": "__type.region"
		},
		"20178": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/regions/get-region.ts",
			"qualifiedName": "StoreGetRegionsRegionParams"
		},
		"20181": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"20182": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"20183": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/regions/list-regions.ts",
			"qualifiedName": "StoreGetRegionsParams"
		},
		"20184": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.__new"
		},
		"20185": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "StoreGetRegionsParams"
		},
		"20186": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"20187": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/regions/list-regions.ts",
			"qualifiedName": "StoreGetRegionsParams.created_at"
		},
		"20188": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/regions/list-regions.ts",
			"qualifiedName": "StoreGetRegionsParams.updated_at"
		},
		"20189": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"20190": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"20191": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"20192": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"20193": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.order"
		},
		"20194": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/return-reasons/index.ts",
			"qualifiedName": "defaultStoreReturnReasonFields"
		},
		"20195": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/return-reasons/index.ts",
			"qualifiedName": "defaultStoreReturnReasonRelations"
		},
		"20196": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/return-reasons/index.ts",
			"qualifiedName": "StoreReturnReasonsListRes"
		},
		"20197": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/return-reasons/index.ts",
			"qualifiedName": "__type"
		},
		"20198": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/return-reasons/index.ts",
			"qualifiedName": "__type.return_reasons"
		},
		"20199": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/return-reasons/index.ts",
			"qualifiedName": "StoreReturnReasonsRes"
		},
		"20200": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/return-reasons/index.ts",
			"qualifiedName": "__type"
		},
		"20201": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/return-reasons/index.ts",
			"qualifiedName": "__type.return_reason"
		},
		"20202": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/returns/index.ts",
			"qualifiedName": "StoreReturnsRes"
		},
		"20203": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/returns/index.ts",
			"qualifiedName": "__type"
		},
		"20204": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/returns/index.ts",
			"qualifiedName": "__type.return"
		},
		"20205": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/returns/create-return.ts",
			"qualifiedName": "StorePostReturnsReq"
		},
		"20208": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/returns/create-return.ts",
			"qualifiedName": "StorePostReturnsReq.order_id"
		},
		"20209": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/returns/create-return.ts",
			"qualifiedName": "StorePostReturnsReq.items"
		},
		"20210": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/returns/create-return.ts",
			"qualifiedName": "StorePostReturnsReq.return_shipping"
		},
		"20211": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/shipping-options/index.ts",
			"qualifiedName": "StoreShippingOptionsListRes"
		},
		"20212": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/shipping-options/index.ts",
			"qualifiedName": "__type"
		},
		"20213": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/shipping-options/index.ts",
			"qualifiedName": "__type.shipping_options"
		},
		"20214": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/shipping-options/index.ts",
			"qualifiedName": "StoreCartShippingOptionsListRes"
		},
		"20215": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/shipping-options/index.ts",
			"qualifiedName": "__type"
		},
		"20216": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/shipping-options/index.ts",
			"qualifiedName": "__type.shipping_options"
		},
		"20217": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/shipping-options/list-options.ts",
			"qualifiedName": "StoreGetShippingOptionsParams"
		},
		"20220": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/shipping-options/list-options.ts",
			"qualifiedName": "StoreGetShippingOptionsParams.product_ids"
		},
		"20221": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/shipping-options/list-options.ts",
			"qualifiedName": "StoreGetShippingOptionsParams.region_id"
		},
		"20222": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/shipping-options/list-options.ts",
			"qualifiedName": "StoreGetShippingOptionsParams.is_return"
		},
		"20223": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/swaps/index.ts",
			"qualifiedName": "defaultStoreSwapRelations"
		},
		"20224": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/swaps/index.ts",
			"qualifiedName": "defaultStoreSwapFields"
		},
		"20225": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/swaps/index.ts",
			"qualifiedName": "StoreSwapsRes"
		},
		"20226": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/swaps/index.ts",
			"qualifiedName": "__type"
		},
		"20227": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/swaps/index.ts",
			"qualifiedName": "__type.swap"
		},
		"20228": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/swaps/create-swap.ts",
			"qualifiedName": "StorePostSwapsReq"
		},
		"20231": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/swaps/create-swap.ts",
			"qualifiedName": "StorePostSwapsReq.order_id"
		},
		"20232": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/swaps/create-swap.ts",
			"qualifiedName": "StorePostSwapsReq.return_items"
		},
		"20233": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/swaps/create-swap.ts",
			"qualifiedName": "StorePostSwapsReq.additional_items"
		},
		"20234": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/swaps/create-swap.ts",
			"qualifiedName": "StorePostSwapsReq.return_shipping_option"
		},
		"20235": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/variants/index.ts",
			"qualifiedName": "defaultStoreVariantRelations"
		},
		"20236": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/variants/index.ts",
			"qualifiedName": "allowedStoreVariantRelations"
		},
		"20237": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/variants/index.ts",
			"qualifiedName": "StoreVariantsRes"
		},
		"20238": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/variants/index.ts",
			"qualifiedName": "__type"
		},
		"20239": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/variants/index.ts",
			"qualifiedName": "__type.variant"
		},
		"20240": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/variants/index.ts",
			"qualifiedName": "StoreVariantsListRes"
		},
		"20241": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/variants/index.ts",
			"qualifiedName": "__type"
		},
		"20242": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/variants/index.ts",
			"qualifiedName": "__type.variants"
		},
		"20243": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/variants/get-variant.ts",
			"qualifiedName": "StoreGetVariantsVariantParams"
		},
		"20246": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/variants/get-variant.ts",
			"qualifiedName": "StoreGetVariantsVariantParams.sales_channel_id"
		},
		"20247": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.cart_id"
		},
		"20248": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.region_id"
		},
		"20249": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.currency_code"
		},
		"20250": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"20251": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"20252": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/variants/list-variants.ts",
			"qualifiedName": "StoreGetVariantsParams"
		},
		"20255": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/variants/list-variants.ts",
			"qualifiedName": "StoreGetVariantsParams.limit"
		},
		"20256": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/variants/list-variants.ts",
			"qualifiedName": "StoreGetVariantsParams.offset"
		},
		"20257": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/variants/list-variants.ts",
			"qualifiedName": "StoreGetVariantsParams.ids"
		},
		"20258": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/variants/list-variants.ts",
			"qualifiedName": "StoreGetVariantsParams.sales_channel_id"
		},
		"20259": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/variants/list-variants.ts",
			"qualifiedName": "StoreGetVariantsParams.id"
		},
		"20260": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/variants/list-variants.ts",
			"qualifiedName": "StoreGetVariantsParams.title"
		},
		"20261": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/variants/list-variants.ts",
			"qualifiedName": "StoreGetVariantsParams.inventory_quantity"
		},
		"20262": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.cart_id"
		},
		"20263": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.region_id"
		},
		"20264": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.currency_code"
		},
		"20265": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"20266": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"20267": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/types.ts",
			"qualifiedName": "AdminPromotionsListRes"
		},
		"20268": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/types.ts",
			"qualifiedName": "__type"
		},
		"20269": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/types.ts",
			"qualifiedName": "__type.promotions"
		},
		"20270": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminGetPromotionsPromotionParams"
		},
		"20273": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"20274": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"20275": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminGetPromotionsRuleValueParams"
		},
		"20276": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.__new"
		},
		"20277": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "AdminGetPromotionsRuleValueParams"
		},
		"20278": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"20279": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminGetPromotionsRuleValueParams.q"
		},
		"20280": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"20281": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"20282": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"20283": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"20284": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.order"
		},
		"20285": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminGetPromotionsParams"
		},
		"20286": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.__new"
		},
		"20287": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "AdminGetPromotionsParams"
		},
		"20288": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"20289": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminGetPromotionsParams.code"
		},
		"20290": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminGetPromotionsParams.q"
		},
		"20291": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminGetPromotionsParams.created_at"
		},
		"20292": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminGetPromotionsParams.updated_at"
		},
		"20293": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"20294": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"20295": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"20296": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"20297": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.order"
		},
		"20298": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminPostCreatePromotionRule"
		},
		"20301": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminPostCreatePromotionRule.operator"
		},
		"20302": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminPostCreatePromotionRule.description"
		},
		"20303": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminPostCreatePromotionRule.attribute"
		},
		"20304": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminPostCreatePromotionRule.values"
		},
		"20305": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminPostPromotionsReq"
		},
		"20308": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminPostPromotionsReq.code"
		},
		"20309": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminPostPromotionsReq.is_automatic"
		},
		"20310": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminPostPromotionsReq.type"
		},
		"20311": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminPostPromotionsReq.campaign_id"
		},
		"20312": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminPostPromotionsReq.campaign"
		},
		"20313": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminPostPromotionsReq.application_method"
		},
		"20314": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminPostPromotionsReq.rules"
		},
		"20315": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminPostApplicationMethodsReq"
		},
		"20318": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminPostApplicationMethodsReq.description"
		},
		"20319": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminPostApplicationMethodsReq.value"
		},
		"20320": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminPostApplicationMethodsReq.max_quantity"
		},
		"20321": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminPostApplicationMethodsReq.type"
		},
		"20322": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminPostApplicationMethodsReq.target_type"
		},
		"20323": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminPostApplicationMethodsReq.allocation"
		},
		"20324": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminPostApplicationMethodsReq.target_rules"
		},
		"20325": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminPostApplicationMethodsReq.buy_rules"
		},
		"20326": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminPostApplicationMethodsReq.apply_to_quantity"
		},
		"20327": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminPostApplicationMethodsReq.buy_rules_min_quantity"
		},
		"20328": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminPostApplicationMethodsMethodReq"
		},
		"20331": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminPostApplicationMethodsMethodReq.description"
		},
		"20332": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminPostApplicationMethodsMethodReq.value"
		},
		"20333": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminPostApplicationMethodsMethodReq.max_quantity"
		},
		"20334": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminPostApplicationMethodsMethodReq.type"
		},
		"20335": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminPostApplicationMethodsMethodReq.target_type"
		},
		"20336": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminPostApplicationMethodsMethodReq.allocation"
		},
		"20337": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminPostApplicationMethodsMethodReq.target_rules"
		},
		"20338": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminPostApplicationMethodsMethodReq.buy_rules"
		},
		"20339": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminPostApplicationMethodsMethodReq.apply_to_quantity"
		},
		"20340": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminPostApplicationMethodsMethodReq.buy_rules_min_quantity"
		},
		"20341": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminPostPromotionsPromotionReq"
		},
		"20344": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminPostPromotionsPromotionReq.code"
		},
		"20345": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminPostPromotionsPromotionReq.is_automatic"
		},
		"20346": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminPostPromotionsPromotionReq.type"
		},
		"20347": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminPostPromotionsPromotionReq.campaign_id"
		},
		"20348": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminPostPromotionsPromotionReq.campaign"
		},
		"20349": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminPostPromotionsPromotionReq.application_method"
		},
		"20350": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminPostPromotionsPromotionReq.rules"
		},
		"20351": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminPostBatchAddRules"
		},
		"20354": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminPostBatchAddRules.rules"
		},
		"20355": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminPostBatchRemoveRules"
		},
		"20358": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminPostBatchRemoveRules.rule_ids"
		},
		"20359": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminPostBatchUpdateRules"
		},
		"20362": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminPostBatchUpdateRules.rules"
		},
		"20363": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminPostUpdatePromotionRule"
		},
		"20366": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminPostUpdatePromotionRule.id"
		},
		"20367": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminPostUpdatePromotionRule.operator"
		},
		"20368": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminPostUpdatePromotionRule.description"
		},
		"20369": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminPostUpdatePromotionRule.attribute"
		},
		"20370": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/promotions/validators.ts",
			"qualifiedName": "AdminPostUpdatePromotionRule.values"
		},
		"20371": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/authenticate.ts",
			"qualifiedName": "default"
		},
		"20372": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/authenticate.ts",
			"qualifiedName": "default"
		},
		"20373": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/authenticate-customer.ts",
			"qualifiedName": "default"
		},
		"20374": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/authenticate-customer.ts",
			"qualifiedName": "default"
		},
		"20375": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/await-middleware.ts",
			"qualifiedName": "default"
		},
		"20376": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/await-middleware.ts",
			"qualifiedName": "default"
		},
		"20377": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/await-middleware.ts",
			"qualifiedName": "fn"
		},
		"20378": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/batch-job/can-access-batch-job.ts",
			"qualifiedName": "canAccessBatchJob"
		},
		"20379": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/batch-job/can-access-batch-job.ts",
			"qualifiedName": "canAccessBatchJob"
		},
		"20380": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/batch-job/can-access-batch-job.ts",
			"qualifiedName": "req"
		},
		"20381": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/batch-job/can-access-batch-job.ts",
			"qualifiedName": "res"
		},
		"20382": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/batch-job/can-access-batch-job.ts",
			"qualifiedName": "next"
		},
		"20383": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/batch-job/get-requested-batch-job.ts",
			"qualifiedName": "getRequestedBatchJob"
		},
		"20384": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/batch-job/get-requested-batch-job.ts",
			"qualifiedName": "getRequestedBatchJob"
		},
		"20385": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/batch-job/get-requested-batch-job.ts",
			"qualifiedName": "req"
		},
		"20386": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/batch-job/get-requested-batch-job.ts",
			"qualifiedName": "res"
		},
		"20387": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/batch-job/get-requested-batch-job.ts",
			"qualifiedName": "next"
		},
		"20388": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/discount/does-condition-belong-to-discount.ts",
			"qualifiedName": "doesConditionBelongToDiscount"
		},
		"20389": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/discount/does-condition-belong-to-discount.ts",
			"qualifiedName": "doesConditionBelongToDiscount"
		},
		"20390": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/discount/does-condition-belong-to-discount.ts",
			"qualifiedName": "req"
		},
		"20391": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/discount/does-condition-belong-to-discount.ts",
			"qualifiedName": "res"
		},
		"20392": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/discount/does-condition-belong-to-discount.ts",
			"qualifiedName": "next"
		},
		"20393": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/error-handler.ts",
			"qualifiedName": "default"
		},
		"20394": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/error-handler.ts",
			"qualifiedName": "default"
		},
		"20395": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/error-handler.ts",
			"qualifiedName": "__function"
		},
		"20396": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/error-handler.ts",
			"qualifiedName": "__function"
		},
		"20397": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/error-handler.ts",
			"qualifiedName": "err"
		},
		"20398": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/error-handler.ts",
			"qualifiedName": "req"
		},
		"20399": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/error-handler.ts",
			"qualifiedName": "res"
		},
		"20400": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/error-handler.ts",
			"qualifiedName": "next"
		},
		"20401": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/feature-flag-enabled.ts",
			"qualifiedName": "isFeatureFlagEnabled"
		},
		"20402": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/feature-flag-enabled.ts",
			"qualifiedName": "isFeatureFlagEnabled"
		},
		"20403": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/feature-flag-enabled.ts",
			"qualifiedName": "flagKey"
		},
		"20404": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/feature-flag-enabled.ts",
			"qualifiedName": "__type"
		},
		"20405": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/feature-flag-enabled.ts",
			"qualifiedName": "__type"
		},
		"20406": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/feature-flag-enabled.ts",
			"qualifiedName": "req"
		},
		"20407": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/feature-flag-enabled.ts",
			"qualifiedName": "res"
		},
		"20408": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/feature-flag-enabled.ts",
			"qualifiedName": "next"
		},
		"20409": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/normalized-query.ts",
			"qualifiedName": "default"
		},
		"20410": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/normalized-query.ts",
			"qualifiedName": "default"
		},
		"20411": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/normalized-query.ts",
			"qualifiedName": "__type"
		},
		"20412": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/normalized-query.ts",
			"qualifiedName": "__type"
		},
		"20413": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/normalized-query.ts",
			"qualifiedName": "req"
		},
		"20414": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/normalized-query.ts",
			"qualifiedName": "res"
		},
		"20415": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/normalized-query.ts",
			"qualifiedName": "next"
		},
		"20416": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/require-customer-authentication.ts",
			"qualifiedName": "default"
		},
		"20417": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/require-customer-authentication.ts",
			"qualifiedName": "default"
		},
		"20418": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-body.ts",
			"qualifiedName": "transformBody"
		},
		"20419": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-body.ts",
			"qualifiedName": "transformBody"
		},
		"20420": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-body.ts",
			"qualifiedName": "T"
		},
		"20421": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-body.ts",
			"qualifiedName": "plainToClass"
		},
		"20422": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-body.ts",
			"qualifiedName": "config"
		},
		"20423": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-body.ts",
			"qualifiedName": "__type"
		},
		"20424": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-body.ts",
			"qualifiedName": "__type"
		},
		"20425": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-body.ts",
			"qualifiedName": "req"
		},
		"20426": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-body.ts",
			"qualifiedName": "res"
		},
		"20427": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-body.ts",
			"qualifiedName": "next"
		},
		"20428": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-includes-options.ts",
			"qualifiedName": "transformIncludesOptions"
		},
		"20429": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-includes-options.ts",
			"qualifiedName": "transformIncludesOptions"
		},
		"20430": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-includes-options.ts",
			"qualifiedName": "allowedIncludes"
		},
		"20431": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-includes-options.ts",
			"qualifiedName": "expectedIncludes"
		},
		"20432": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-includes-options.ts",
			"qualifiedName": "__function"
		},
		"20433": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-includes-options.ts",
			"qualifiedName": "__function"
		},
		"20434": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-includes-options.ts",
			"qualifiedName": "req"
		},
		"20435": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-includes-options.ts",
			"qualifiedName": "res"
		},
		"20436": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-includes-options.ts",
			"qualifiedName": "next"
		},
		"20437": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "transformQuery"
		},
		"20438": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "transformQuery"
		},
		"20439": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "T"
		},
		"20440": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "TEntity"
		},
		"20441": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "plainToClass"
		},
		"20442": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "queryConfig"
		},
		"20443": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "config"
		},
		"20444": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "__type"
		},
		"20445": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "__type"
		},
		"20446": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "req"
		},
		"20447": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "res"
		},
		"20448": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "next"
		},
		"20449": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "transformStoreQuery"
		},
		"20450": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "transformStoreQuery"
		},
		"20451": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "T"
		},
		"20452": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "TEntity"
		},
		"20453": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "plainToClass"
		},
		"20454": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "queryConfig"
		},
		"20455": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "config"
		},
		"20456": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "__type"
		},
		"20457": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "__type"
		},
		"20458": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "req"
		},
		"20459": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "res"
		},
		"20460": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "next"
		},
		"20461": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "BatchJobStatus"
		},
		"20462": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "BatchJobStatus.CREATED"
		},
		"20463": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "BatchJobStatus.PRE_PROCESSED"
		},
		"20464": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "BatchJobStatus.CONFIRMED"
		},
		"20465": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "BatchJobStatus.PROCESSING"
		},
		"20466": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "BatchJobStatus.COMPLETED"
		},
		"20467": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "BatchJobStatus.CANCELED"
		},
		"20468": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "BatchJobStatus.FAILED"
		},
		"20469": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "BatchJobUpdateProps"
		},
		"20470": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "CreateBatchJobInput"
		},
		"20471": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "__type"
		},
		"20472": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "__type.type"
		},
		"20473": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "__type.context"
		},
		"20474": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "__type.dry_run"
		},
		"20475": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "BatchJobResultError"
		},
		"20476": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "__type"
		},
		"20477": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "__type.message"
		},
		"20478": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "__type.code"
		},
		"20479": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "__type.__index"
		},
		"20481": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "BatchJobResultStatDescriptor"
		},
		"20482": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "__type"
		},
		"20483": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "__type.key"
		},
		"20484": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "__type.name"
		},
		"20485": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "__type.message"
		},
		"20486": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "FilterableBatchJobProps"
		},
		"20489": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "FilterableBatchJobProps.id"
		},
		"20490": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "FilterableBatchJobProps.status"
		},
		"20491": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "FilterableBatchJobProps.type"
		},
		"20492": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "FilterableBatchJobProps.created_by"
		},
		"20493": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "FilterableBatchJobProps.created_at"
		},
		"20494": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "FilterableBatchJobProps.updated_at"
		},
		"20495": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "BatchJobCreateProps"
		},
		"20496": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "extendedFindParamsMixin"
		},
		"20497": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "extendedFindParamsMixin"
		},
		"20498": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__0"
		},
		"20499": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type"
		},
		"20500": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.limit"
		},
		"20501": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.offset"
		},
		"20502": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.order"
		},
		"20503": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "WithRequiredProperty"
		},
		"20504": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "T"
		},
		"20505": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "K"
		},
		"20506": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "PartialPick"
		},
		"20507": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "T"
		},
		"20508": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "K"
		},
		"20509": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "Writable"
		},
		"20510": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "T"
		},
		"20511": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindConfig"
		},
		"20512": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindConfig.select"
		},
		"20513": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindConfig.skip"
		},
		"20514": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindConfig.take"
		},
		"20515": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindConfig.relations"
		},
		"20516": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindConfig.order"
		},
		"20517": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type"
		},
		"20518": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.__index"
		},
		"20520": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindConfig.Entity"
		},
		"20521": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "ExtendedFindConfig"
		},
		"20522": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type"
		},
		"20523": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.select"
		},
		"20524": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.relations"
		},
		"20525": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.where"
		},
		"20526": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.order"
		},
		"20527": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.skip"
		},
		"20528": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.take"
		},
		"20529": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "TEntity"
		},
		"20530": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "QuerySelector"
		},
		"20531": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type"
		},
		"20532": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.q"
		},
		"20533": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "TEntity"
		},
		"20534": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "TreeQuerySelector"
		},
		"20535": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type"
		},
		"20536": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.include_descendants_tree"
		},
		"20537": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "TEntity"
		},
		"20538": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "Selector"
		},
		"20539": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "TEntity"
		},
		"20540": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "TotalField"
		},
		"20541": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "CustomFindOptions"
		},
		"20542": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "CustomFindOptions.select"
		},
		"20543": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "CustomFindOptions.where"
		},
		"20544": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "CustomFindOptions.order"
		},
		"20545": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "CustomFindOptions.skip"
		},
		"20546": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "CustomFindOptions.take"
		},
		"20547": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "CustomFindOptions.TModel"
		},
		"20548": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "CustomFindOptions.InKeys"
		},
		"20549": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "QueryConfig"
		},
		"20550": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type"
		},
		"20551": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.defaults"
		},
		"20552": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.defaultFields"
		},
		"20553": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.defaultRelations"
		},
		"20554": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.allowed"
		},
		"20555": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.allowedFields"
		},
		"20556": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.allowedRelations"
		},
		"20557": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.defaultLimit"
		},
		"20558": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.isList"
		},
		"20559": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "TEntity"
		},
		"20560": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "RequestQueryFields"
		},
		"20561": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.expand"
		},
		"20562": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.fields"
		},
		"20563": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.offset"
		},
		"20564": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.limit"
		},
		"20565": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.order"
		},
		"20566": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "PaginatedResponse"
		},
		"20567": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.limit"
		},
		"20568": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.offset"
		},
		"20569": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.count"
		},
		"20570": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "DeleteResponse"
		},
		"20571": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.id"
		},
		"20572": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.object"
		},
		"20573": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.deleted"
		},
		"20574": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "EmptyQueryParams"
		},
		"20577": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "DateComparisonOperator"
		},
		"20580": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "DateComparisonOperator.lt"
		},
		"20581": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "DateComparisonOperator.gt"
		},
		"20582": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "DateComparisonOperator.gte"
		},
		"20583": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "DateComparisonOperator.lte"
		},
		"20584": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "StringComparisonOperator"
		},
		"20587": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "StringComparisonOperator.lt"
		},
		"20588": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "StringComparisonOperator.gt"
		},
		"20589": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "StringComparisonOperator.gte"
		},
		"20590": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "StringComparisonOperator.lte"
		},
		"20591": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "StringComparisonOperator.contains"
		},
		"20592": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "StringComparisonOperator.starts_with"
		},
		"20593": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "StringComparisonOperator.ends_with"
		},
		"20594": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "NumericalComparisonOperator"
		},
		"20597": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "NumericalComparisonOperator.lt"
		},
		"20598": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "NumericalComparisonOperator.gt"
		},
		"20599": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "NumericalComparisonOperator.gte"
		},
		"20600": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "NumericalComparisonOperator.lte"
		},
		"20601": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload"
		},
		"20604": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.first_name"
		},
		"20605": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.last_name"
		},
		"20606": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.phone"
		},
		"20607": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.metadata"
		},
		"20608": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.company"
		},
		"20609": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.address_1"
		},
		"20610": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.address_2"
		},
		"20611": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.city"
		},
		"20612": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.country_code"
		},
		"20613": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.province"
		},
		"20614": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.postal_code"
		},
		"20615": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressCreatePayload"
		},
		"20618": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressCreatePayload.first_name"
		},
		"20619": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressCreatePayload.last_name"
		},
		"20620": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressCreatePayload.phone"
		},
		"20621": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressCreatePayload.metadata"
		},
		"20622": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressCreatePayload.company"
		},
		"20623": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressCreatePayload.address_1"
		},
		"20624": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressCreatePayload.address_2"
		},
		"20625": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressCreatePayload.city"
		},
		"20626": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressCreatePayload.country_code"
		},
		"20627": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressCreatePayload.province"
		},
		"20628": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressCreatePayload.postal_code"
		},
		"20629": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams"
		},
		"20632": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"20633": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"20634": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams"
		},
		"20637": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"20638": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"20639": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.order"
		},
		"20640": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "ExtendedRequest"
		},
		"20641": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"20642": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.resource"
		},
		"20643": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "TEntity"
		},
		"20644": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "ClassConstructor"
		},
		"20645": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"20646": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"20647": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"20648": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "T"
		},
		"20649": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "MedusaContainer"
		},
		"20650": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "Logger"
		},
		"20651": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"20652": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.panic"
		},
		"20653": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"20654": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"20655": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "data"
		},
		"20656": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.shouldLog"
		},
		"20657": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"20658": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"20659": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "level"
		},
		"20660": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.setLogLevel"
		},
		"20661": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"20662": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"20663": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "level"
		},
		"20664": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.unsetLogLevel"
		},
		"20665": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"20666": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"20667": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.activity"
		},
		"20668": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"20669": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"20670": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "message"
		},
		"20671": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "config"
		},
		"20672": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.progress"
		},
		"20673": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"20674": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"20675": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "activityId"
		},
		"20676": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "message"
		},
		"20677": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.error"
		},
		"20678": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"20679": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"20680": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "messageOrError"
		},
		"20681": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "error"
		},
		"20682": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.failure"
		},
		"20683": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"20684": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"20685": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "activityId"
		},
		"20686": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "message"
		},
		"20687": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.success"
		},
		"20688": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"20689": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"20690": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "activityId"
		},
		"20691": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "message"
		},
		"20692": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.debug"
		},
		"20693": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"20694": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"20695": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "message"
		},
		"20696": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.info"
		},
		"20697": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"20698": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"20699": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "message"
		},
		"20700": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.warn"
		},
		"20701": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"20702": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"20703": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "message"
		},
		"20704": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.log"
		},
		"20705": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"20706": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"20707": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"20708": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "Constructor"
		},
		"20709": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"20710": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"20711": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"20712": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "T"
		},
		"20713": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "ConfigModule"
		},
		"20714": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "PriceListType"
		},
		"20715": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "PriceListType.SALE"
		},
		"20716": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "PriceListType.OVERRIDE"
		},
		"20717": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "PriceListStatus"
		},
		"20718": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "PriceListStatus.ACTIVE"
		},
		"20719": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "PriceListStatus.DRAFT"
		},
		"20720": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps"
		},
		"20723": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.id"
		},
		"20724": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.q"
		},
		"20725": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.status"
		},
		"20726": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.name"
		},
		"20727": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.customer_groups"
		},
		"20728": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.description"
		},
		"20729": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.type"
		},
		"20730": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.created_at"
		},
		"20731": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.updated_at"
		},
		"20732": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.deleted_at"
		},
		"20733": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "AdminPriceListPricesUpdateReq"
		},
		"20736": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "AdminPriceListPricesUpdateReq.id"
		},
		"20737": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "AdminPriceListPricesUpdateReq.region_id"
		},
		"20738": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "AdminPriceListPricesUpdateReq.currency_code"
		},
		"20739": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "AdminPriceListPricesUpdateReq.variant_id"
		},
		"20740": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "AdminPriceListPricesUpdateReq.amount"
		},
		"20741": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "AdminPriceListPricesUpdateReq.min_quantity"
		},
		"20742": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "AdminPriceListPricesUpdateReq.max_quantity"
		},
		"20743": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "AdminPriceListPricesCreateReq"
		},
		"20746": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "AdminPriceListPricesCreateReq.region_id"
		},
		"20747": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "AdminPriceListPricesCreateReq.currency_code"
		},
		"20748": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "AdminPriceListPricesCreateReq.amount"
		},
		"20749": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "AdminPriceListPricesCreateReq.variant_id"
		},
		"20750": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "AdminPriceListPricesCreateReq.min_quantity"
		},
		"20751": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "AdminPriceListPricesCreateReq.max_quantity"
		},
		"20752": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "CreatePriceListInput"
		},
		"20753": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type"
		},
		"20754": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.name"
		},
		"20755": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.description"
		},
		"20756": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.type"
		},
		"20757": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.status"
		},
		"20758": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.prices"
		},
		"20759": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.customer_groups"
		},
		"20760": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type"
		},
		"20761": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.id"
		},
		"20762": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.starts_at"
		},
		"20763": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.ends_at"
		},
		"20764": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.includes_tax"
		},
		"20765": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "UpdatePriceListInput"
		},
		"20766": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type"
		},
		"20767": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.prices"
		},
		"20768": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.customer_groups"
		},
		"20769": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type"
		},
		"20770": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.id"
		},
		"20771": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "PriceListPriceUpdateInput"
		},
		"20772": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type"
		},
		"20773": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.id"
		},
		"20774": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.variant_id"
		},
		"20775": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.region_id"
		},
		"20776": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.currency_code"
		},
		"20777": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.amount"
		},
		"20778": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.min_quantity"
		},
		"20779": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.max_quantity"
		},
		"20780": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "PriceListPriceCreateInput"
		},
		"20781": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type"
		},
		"20782": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.region_id"
		},
		"20783": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.currency_code"
		},
		"20784": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.variant_id"
		},
		"20785": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.amount"
		},
		"20786": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.min_quantity"
		},
		"20787": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.max_quantity"
		},
		"20788": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "PriceListLoadConfig"
		},
		"20789": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type"
		},
		"20790": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.include_discount_prices"
		},
		"20791": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.customer_id"
		},
		"20792": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.cart_id"
		},
		"20793": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.region_id"
		},
		"20794": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.currency_code"
		},
		"20795": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest"
		},
		"20796": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.validatedBody"
		},
		"20797": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.validatedQuery"
		},
		"20798": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.allowedProperties"
		},
		"20799": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.listConfig"
		},
		"20800": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.retrieveConfig"
		},
		"20801": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.remoteQueryConfig"
		},
		"20802": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type"
		},
		"20803": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.fields"
		},
		"20804": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.pagination"
		},
		"20805": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type"
		},
		"20806": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.order"
		},
		"20807": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.skip"
		},
		"20808": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.take"
		},
		"20809": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.filterableFields"
		},
		"20810": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.includes"
		},
		"20811": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.allowedFields"
		},
		"20812": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.allowed"
		},
		"20813": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.errors"
		},
		"20814": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.scope"
		},
		"20815": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.session"
		},
		"20816": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.rawBody"
		},
		"20817": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.requestId"
		},
		"20818": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__global.Express.Request.user"
		},
		"20819": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.Body"
		},
		"20820": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "AuthenticatedMedusaRequest"
		},
		"20821": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "AuthenticatedMedusaRequest.user"
		},
		"20822": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type"
		},
		"20823": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.customer_id"
		},
		"20824": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.userId"
		},
		"20825": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "AuthenticatedMedusaRequest.auth"
		},
		"20826": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type"
		},
		"20827": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.actor_id"
		},
		"20828": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.auth_user_id"
		},
		"20829": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.app_metadata"
		},
		"20830": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.scope"
		},
		"20831": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.validatedBody"
		},
		"20832": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.validatedQuery"
		},
		"20833": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.allowedProperties"
		},
		"20834": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.listConfig"
		},
		"20835": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.retrieveConfig"
		},
		"20836": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.remoteQueryConfig"
		},
		"20837": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type"
		},
		"20838": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.fields"
		},
		"20839": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.pagination"
		},
		"20840": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type"
		},
		"20841": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.order"
		},
		"20842": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.skip"
		},
		"20843": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.take"
		},
		"20844": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.filterableFields"
		},
		"20845": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.includes"
		},
		"20846": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.allowedFields"
		},
		"20847": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.allowed"
		},
		"20848": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.errors"
		},
		"20849": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.scope"
		},
		"20850": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.session"
		},
		"20851": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.rawBody"
		},
		"20852": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.requestId"
		},
		"20853": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "AuthenticatedMedusaRequest.Body"
		},
		"20854": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaResponse"
		},
		"20855": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaNextFunction"
		},
		"20856": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequestHandler"
		},
		"20857": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type"
		},
		"20858": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type"
		},
		"20859": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "req"
		},
		"20860": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "res"
		},
		"20861": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "next"
		},
		"20862": {
			"sourceFileName": "../../../packages/medusa/src/types/scheduled-jobs.ts",
			"qualifiedName": "ScheduledJobConfig"
		},
		"20863": {
			"sourceFileName": "../../../packages/medusa/src/types/scheduled-jobs.ts",
			"qualifiedName": "__type"
		},
		"20864": {
			"sourceFileName": "../../../packages/medusa/src/types/scheduled-jobs.ts",
			"qualifiedName": "__type.name"
		},
		"20865": {
			"sourceFileName": "../../../packages/medusa/src/types/scheduled-jobs.ts",
			"qualifiedName": "__type.schedule"
		},
		"20866": {
			"sourceFileName": "../../../packages/medusa/src/types/scheduled-jobs.ts",
			"qualifiedName": "__type.data"
		},
		"20867": {
			"sourceFileName": "../../../packages/medusa/src/types/scheduled-jobs.ts",
			"qualifiedName": "T"
		},
		"20868": {
			"sourceFileName": "../../../packages/medusa/src/types/scheduled-jobs.ts",
			"qualifiedName": "ScheduledJobArgs"
		},
		"20869": {
			"sourceFileName": "../../../packages/medusa/src/types/scheduled-jobs.ts",
			"qualifiedName": "__type"
		},
		"20870": {
			"sourceFileName": "../../../packages/medusa/src/types/scheduled-jobs.ts",
			"qualifiedName": "__type.container"
		},
		"20871": {
			"sourceFileName": "../../../packages/medusa/src/types/scheduled-jobs.ts",
			"qualifiedName": "__type.data"
		},
		"20872": {
			"sourceFileName": "../../../packages/medusa/src/types/scheduled-jobs.ts",
			"qualifiedName": "__type.pluginOptions"
		},
		"20873": {
			"sourceFileName": "../../../packages/medusa/src/types/scheduled-jobs.ts",
			"qualifiedName": "T"
		},
		"20874": {
			"sourceFileName": "../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "SubscriberConfig"
		},
		"20875": {
			"sourceFileName": "../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type"
		},
		"20876": {
			"sourceFileName": "../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type.event"
		},
		"20877": {
			"sourceFileName": "../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type.context"
		},
		"20878": {
			"sourceFileName": "../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "SubscriberArgs"
		},
		"20879": {
			"sourceFileName": "../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type"
		},
		"20880": {
			"sourceFileName": "../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type.data"
		},
		"20881": {
			"sourceFileName": "../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type.eventName"
		},
		"20882": {
			"sourceFileName": "../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type.container"
		},
		"20883": {
			"sourceFileName": "../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type.pluginOptions"
		},
		"20884": {
			"sourceFileName": "../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "T"
		},
		"20885": {
			"sourceFileName": "../../../packages/medusa/src/types/customer-groups.ts",
			"qualifiedName": "CustomerGroupsBatchCustomer"
		},
		"20888": {
			"sourceFileName": "../../../packages/medusa/src/types/customer-groups.ts",
			"qualifiedName": "CustomerGroupsBatchCustomer.id"
		},
		"20889": {
			"sourceFileName": "../../../packages/medusa/src/types/customer-groups.ts",
			"qualifiedName": "FilterableCustomerGroupProps"
		},
		"20892": {
			"sourceFileName": "../../../packages/medusa/src/types/customer-groups.ts",
			"qualifiedName": "FilterableCustomerGroupProps.id"
		},
		"20893": {
			"sourceFileName": "../../../packages/medusa/src/types/customer-groups.ts",
			"qualifiedName": "FilterableCustomerGroupProps.q"
		},
		"20894": {
			"sourceFileName": "../../../packages/medusa/src/types/customer-groups.ts",
			"qualifiedName": "FilterableCustomerGroupProps.name"
		},
		"20895": {
			"sourceFileName": "../../../packages/medusa/src/types/customer-groups.ts",
			"qualifiedName": "FilterableCustomerGroupProps.updated_at"
		},
		"20896": {
			"sourceFileName": "../../../packages/medusa/src/types/customer-groups.ts",
			"qualifiedName": "FilterableCustomerGroupProps.created_at"
		},
		"20897": {
			"sourceFileName": "../../../packages/medusa/src/types/customer-groups.ts",
			"qualifiedName": "FilterableCustomerGroupProps.discount_condition_id"
		},
		"20898": {
			"sourceFileName": "../../../packages/medusa/src/types/customers.ts",
			"qualifiedName": "AdminListCustomerSelector"
		},
		"20901": {
			"sourceFileName": "../../../packages/medusa/src/types/customers.ts",
			"qualifiedName": "AdminListCustomerSelector.q"
		},
		"20902": {
			"sourceFileName": "../../../packages/medusa/src/types/customers.ts",
			"qualifiedName": "AdminListCustomerSelector.has_account"
		},
		"20903": {
			"sourceFileName": "../../../packages/medusa/src/types/customers.ts",
			"qualifiedName": "AdminListCustomerSelector.groups"
		},
		"20904": {
			"sourceFileName": "../../../packages/medusa/src/types/customers.ts",
			"qualifiedName": "AdminListCustomerSelector.order"
		},
		"20905": {
			"sourceFileName": "../../../packages/medusa/src/types/customers.ts",
			"qualifiedName": "AdminListCustomerSelector.created_at"
		},
		"20906": {
			"sourceFileName": "../../../packages/medusa/src/types/customers.ts",
			"qualifiedName": "AdminListCustomerSelector.updated_at"
		},
		"20907": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/update-customer.ts",
			"qualifiedName": "Group"
		},
		"20910": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/update-customer.ts",
			"qualifiedName": "Group.id"
		},
		"20911": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq"
		},
		"20914": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.products"
		},
		"20915": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.product_collections"
		},
		"20916": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.product_types"
		},
		"20917": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.product_tags"
		},
		"20918": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.customer_groups"
		},
		"20919": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminGetDiscountsDiscountRuleParams"
		},
		"20922": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminGetDiscountsDiscountRuleParams.type"
		},
		"20923": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminGetDiscountsDiscountRuleParams.allocation"
		},
		"20924": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "Item"
		},
		"20927": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "Item.title"
		},
		"20928": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "Item.unit_price"
		},
		"20929": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "Item.variant_id"
		},
		"20930": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "Item.quantity"
		},
		"20931": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "Item.metadata"
		},
		"20932": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "Discount"
		},
		"20935": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "Discount.code"
		},
		"20936": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "ShippingMethod"
		},
		"20939": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "ShippingMethod.option_id"
		},
		"20940": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "ShippingMethod.data"
		},
		"20941": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "ShippingMethod.price"
		},
		"20942": {
			"sourceFileName": "../../../packages/medusa/src/types/draft-orders.ts",
			"qualifiedName": "DraftOrderStatusValue"
		},
		"20943": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/update-draft-order.ts",
			"qualifiedName": "Discount"
		},
		"20946": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/update-draft-order.ts",
			"qualifiedName": "Discount.code"
		},
		"20947": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "InventoryItemDTO"
		},
		"20948": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type"
		},
		"20949": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.id"
		},
		"20950": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.sku"
		},
		"20951": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.origin_country"
		},
		"20952": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.hs_code"
		},
		"20953": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.requires_shipping"
		},
		"20954": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.mid_code"
		},
		"20955": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.material"
		},
		"20956": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.weight"
		},
		"20957": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.length"
		},
		"20958": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.height"
		},
		"20959": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.width"
		},
		"20960": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.title"
		},
		"20961": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.description"
		},
		"20962": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.thumbnail"
		},
		"20963": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"20964": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.created_at"
		},
		"20965": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.updated_at"
		},
		"20966": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.deleted_at"
		},
		"20967": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "InventoryLevelDTO"
		},
		"20968": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type"
		},
		"20969": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.id"
		},
		"20970": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.inventory_item_id"
		},
		"20971": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.location_id"
		},
		"20972": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.stocked_quantity"
		},
		"20973": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.reserved_quantity"
		},
		"20974": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.incoming_quantity"
		},
		"20975": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"20976": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.created_at"
		},
		"20977": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.updated_at"
		},
		"20978": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.deleted_at"
		},
		"20979": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "PaginatedResponse"
		},
		"20980": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.limit"
		},
		"20981": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.offset"
		},
		"20982": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.count"
		},
		"20983": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "T"
		},
		"20984": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "Item"
		},
		"20987": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "Item.item_id"
		},
		"20988": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "Item.quantity"
		},
		"20989": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "Item.note"
		},
		"20990": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "Item.reason"
		},
		"20991": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "Item.tags"
		},
		"20992": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "Item.images"
		},
		"20993": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "ReturnShipping"
		},
		"20996": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "ReturnShipping.option_id"
		},
		"20997": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "ReturnShipping.price"
		},
		"20998": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "AdditionalItem"
		},
		"21001": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "AdditionalItem.variant_id"
		},
		"21002": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "AdditionalItem.quantity"
		},
		"21003": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "ShippingMethod"
		},
		"21006": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "ShippingMethod.id"
		},
		"21007": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "ShippingMethod.option_id"
		},
		"21008": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "ShippingMethod.price"
		},
		"21009": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "ShippingMethod.data"
		},
		"21010": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-fulfillment.ts",
			"qualifiedName": "Item"
		},
		"21013": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-fulfillment.ts",
			"qualifiedName": "Item.item_id"
		},
		"21014": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-fulfillment.ts",
			"qualifiedName": "Item.quantity"
		},
		"21015": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "ReturnItem"
		},
		"21018": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "ReturnItem.item_id"
		},
		"21019": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "ReturnItem.quantity"
		},
		"21020": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "ReturnItem.reason_id"
		},
		"21021": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "ReturnItem.note"
		},
		"21022": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "ReturnShipping"
		},
		"21025": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "ReturnShipping.option_id"
		},
		"21026": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "ReturnShipping.price"
		},
		"21027": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "AdditionalItem"
		},
		"21030": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "AdditionalItem.variant_id"
		},
		"21031": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "AdditionalItem.quantity"
		},
		"21032": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "CustomShippingOption"
		},
		"21035": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "CustomShippingOption.option_id"
		},
		"21036": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "CustomShippingOption.price"
		},
		"21037": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector"
		},
		"21040": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.q"
		},
		"21041": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.id"
		},
		"21042": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.status"
		},
		"21043": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.fulfillment_status"
		},
		"21044": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.payment_status"
		},
		"21045": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.display_id"
		},
		"21046": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.cart_id"
		},
		"21047": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.customer_id"
		},
		"21048": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.email"
		},
		"21049": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.region_id"
		},
		"21050": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.currency_code"
		},
		"21051": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.tax_rate"
		},
		"21052": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.sales_channel_id"
		},
		"21053": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.canceled_at"
		},
		"21054": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.created_at"
		},
		"21055": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.updated_at"
		},
		"21056": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "OrdersReturnItem"
		},
		"21059": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "OrdersReturnItem.item_id"
		},
		"21060": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "OrdersReturnItem.quantity"
		},
		"21061": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "OrdersReturnItem.reason_id"
		},
		"21062": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "OrdersReturnItem.note"
		},
		"21063": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/request-return.ts",
			"qualifiedName": "ReturnShipping"
		},
		"21066": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/request-return.ts",
			"qualifiedName": "ReturnShipping.option_id"
		},
		"21067": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/request-return.ts",
			"qualifiedName": "ReturnShipping.price"
		},
		"21068": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "Item"
		},
		"21071": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "Item.id"
		},
		"21072": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "Item.note"
		},
		"21073": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "Item.reason"
		},
		"21074": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "Item.images"
		},
		"21075": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "Item.tags"
		},
		"21076": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "Item.metadata"
		},
		"21077": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "ShippingMethod"
		},
		"21080": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "ShippingMethod.id"
		},
		"21081": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "ShippingMethod.option_id"
		},
		"21082": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "ShippingMethod.price"
		},
		"21083": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "ShippingMethod.data"
		},
		"21084": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "PaymentMethod"
		},
		"21087": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "PaymentMethod.provider_id"
		},
		"21088": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "PaymentMethod.data"
		},
		"21089": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "ShippingMethod"
		},
		"21092": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "ShippingMethod.provider_id"
		},
		"21093": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "ShippingMethod.profile_id"
		},
		"21094": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "ShippingMethod.price"
		},
		"21095": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "ShippingMethod.data"
		},
		"21096": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "ShippingMethod.items"
		},
		"21097": {
			"sourceFileName": "../../../packages/utils/dist/pricing/price-list.d.ts",
			"qualifiedName": "PriceListStatus"
		},
		"21098": {
			"sourceFileName": "../../../packages/utils/dist/pricing/price-list.d.ts",
			"qualifiedName": "PriceListStatus.ACTIVE"
		},
		"21099": {
			"sourceFileName": "../../../packages/utils/dist/pricing/price-list.d.ts",
			"qualifiedName": "PriceListStatus.DRAFT"
		},
		"21100": {
			"sourceFileName": "../../../packages/utils/dist/pricing/price-list.d.ts",
			"qualifiedName": "PriceListType"
		},
		"21101": {
			"sourceFileName": "../../../packages/utils/dist/pricing/price-list.d.ts",
			"qualifiedName": "PriceListType.SALE"
		},
		"21102": {
			"sourceFileName": "../../../packages/utils/dist/pricing/price-list.d.ts",
			"qualifiedName": "PriceListType.OVERRIDE"
		},
		"21103": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/create-price-list.ts",
			"qualifiedName": "CustomerGroup"
		},
		"21106": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/create-price-list.ts",
			"qualifiedName": "CustomerGroup.id"
		},
		"21107": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/update-price-list.ts",
			"qualifiedName": "CustomerGroup"
		},
		"21110": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/update-price-list.ts",
			"qualifiedName": "CustomerGroup.id"
		},
		"21111": {
			"sourceFileName": "../../../packages/medusa/src/types/product-category.ts",
			"qualifiedName": "AdminProductCategoriesReqBase"
		},
		"21114": {
			"sourceFileName": "../../../packages/medusa/src/types/product-category.ts",
			"qualifiedName": "AdminProductCategoriesReqBase.description"
		},
		"21115": {
			"sourceFileName": "../../../packages/medusa/src/types/product-category.ts",
			"qualifiedName": "AdminProductCategoriesReqBase.handle"
		},
		"21116": {
			"sourceFileName": "../../../packages/medusa/src/types/product-category.ts",
			"qualifiedName": "AdminProductCategoriesReqBase.is_internal"
		},
		"21117": {
			"sourceFileName": "../../../packages/medusa/src/types/product-category.ts",
			"qualifiedName": "AdminProductCategoriesReqBase.is_active"
		},
		"21118": {
			"sourceFileName": "../../../packages/medusa/src/types/product-category.ts",
			"qualifiedName": "AdminProductCategoriesReqBase.parent_category_id"
		},
		"21119": {
			"sourceFileName": "../../../packages/medusa/src/types/product-category.ts",
			"qualifiedName": "ProductBatchProductCategory"
		},
		"21122": {
			"sourceFileName": "../../../packages/medusa/src/types/product-category.ts",
			"qualifiedName": "ProductBatchProductCategory.id"
		},
		"21123": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "PricedProduct"
		},
		"21124": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "__type"
		},
		"21125": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "__type.variants"
		},
		"21126": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "ProductTypeReq"
		},
		"21129": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "ProductTypeReq.id"
		},
		"21130": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "ProductTypeReq.value"
		},
		"21131": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "ProductTagReq"
		},
		"21134": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "ProductTagReq.id"
		},
		"21135": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "ProductTagReq.value"
		},
		"21136": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "ProductSalesChannelReq"
		},
		"21139": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "ProductSalesChannelReq.id"
		},
		"21140": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "ProductProductCategoryReq"
		},
		"21143": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "ProductProductCategoryReq.id"
		},
		"21144": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductOptionReq"
		},
		"21147": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductOptionReq.title"
		},
		"21148": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantReq"
		},
		"21151": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantReq.title"
		},
		"21152": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantReq.sku"
		},
		"21153": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantReq.ean"
		},
		"21154": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantReq.upc"
		},
		"21155": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantReq.barcode"
		},
		"21156": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantReq.hs_code"
		},
		"21157": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantReq.inventory_quantity"
		},
		"21158": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantReq.allow_backorder"
		},
		"21159": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantReq.manage_inventory"
		},
		"21160": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantReq.weight"
		},
		"21161": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantReq.length"
		},
		"21162": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantReq.height"
		},
		"21163": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantReq.width"
		},
		"21164": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantReq.origin_country"
		},
		"21165": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantReq.mid_code"
		},
		"21166": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantReq.material"
		},
		"21167": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantReq.metadata"
		},
		"21168": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantReq.prices"
		},
		"21169": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantReq.options"
		},
		"21170": {
			"sourceFileName": "../../../packages/medusa/src/types/product-variant.ts",
			"qualifiedName": "ProductVariantPricesCreateReq"
		},
		"21173": {
			"sourceFileName": "../../../packages/medusa/src/types/product-variant.ts",
			"qualifiedName": "ProductVariantPricesCreateReq.region_id"
		},
		"21174": {
			"sourceFileName": "../../../packages/medusa/src/types/product-variant.ts",
			"qualifiedName": "ProductVariantPricesCreateReq.currency_code"
		},
		"21175": {
			"sourceFileName": "../../../packages/medusa/src/types/product-variant.ts",
			"qualifiedName": "ProductVariantPricesCreateReq.amount"
		},
		"21176": {
			"sourceFileName": "../../../packages/medusa/src/types/product-variant.ts",
			"qualifiedName": "ProductVariantPricesCreateReq.min_quantity"
		},
		"21177": {
			"sourceFileName": "../../../packages/medusa/src/types/product-variant.ts",
			"qualifiedName": "ProductVariantPricesCreateReq.max_quantity"
		},
		"21178": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "ProductVariantOptionReq"
		},
		"21181": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "ProductVariantOptionReq.value"
		},
		"21182": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "ProductVariantOptionReq.option_id"
		},
		"21183": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps"
		},
		"21186": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.id"
		},
		"21187": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.q"
		},
		"21188": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.status"
		},
		"21189": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.price_list_id"
		},
		"21190": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.collection_id"
		},
		"21191": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.tags"
		},
		"21192": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.title"
		},
		"21193": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.description"
		},
		"21194": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.handle"
		},
		"21195": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.is_giftcard"
		},
		"21196": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.type_id"
		},
		"21197": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.sales_channel_id"
		},
		"21198": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.discount_condition_id"
		},
		"21199": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.category_id"
		},
		"21200": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.include_category_children"
		},
		"21201": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.created_at"
		},
		"21202": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.updated_at"
		},
		"21203": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.deleted_at"
		},
		"21204": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq"
		},
		"21207": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq.id"
		},
		"21208": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq.title"
		},
		"21209": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq.sku"
		},
		"21210": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq.ean"
		},
		"21211": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq.upc"
		},
		"21212": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq.barcode"
		},
		"21213": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq.hs_code"
		},
		"21214": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq.inventory_quantity"
		},
		"21215": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq.allow_backorder"
		},
		"21216": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq.manage_inventory"
		},
		"21217": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq.weight"
		},
		"21218": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq.length"
		},
		"21219": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq.height"
		},
		"21220": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq.width"
		},
		"21221": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq.origin_country"
		},
		"21222": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq.mid_code"
		},
		"21223": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq.material"
		},
		"21224": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq.metadata"
		},
		"21225": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq.prices"
		},
		"21226": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq.options"
		},
		"21227": {
			"sourceFileName": "../../../packages/medusa/src/types/product-variant.ts",
			"qualifiedName": "ProductVariantPricesUpdateReq"
		},
		"21230": {
			"sourceFileName": "../../../packages/medusa/src/types/product-variant.ts",
			"qualifiedName": "ProductVariantPricesUpdateReq.id"
		},
		"21231": {
			"sourceFileName": "../../../packages/medusa/src/types/product-variant.ts",
			"qualifiedName": "ProductVariantPricesUpdateReq.region_id"
		},
		"21232": {
			"sourceFileName": "../../../packages/medusa/src/types/product-variant.ts",
			"qualifiedName": "ProductVariantPricesUpdateReq.currency_code"
		},
		"21233": {
			"sourceFileName": "../../../packages/medusa/src/types/product-variant.ts",
			"qualifiedName": "ProductVariantPricesUpdateReq.amount"
		},
		"21234": {
			"sourceFileName": "../../../packages/medusa/src/types/product-variant.ts",
			"qualifiedName": "ProductVariantPricesUpdateReq.min_quantity"
		},
		"21235": {
			"sourceFileName": "../../../packages/medusa/src/types/product-variant.ts",
			"qualifiedName": "ProductVariantPricesUpdateReq.max_quantity"
		},
		"21236": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "ProductVariantOptionReq"
		},
		"21239": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "ProductVariantOptionReq.value"
		},
		"21240": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "ProductVariantOptionReq.option_id"
		},
		"21241": {
			"sourceFileName": "../../../packages/medusa/src/types/sales-channels.ts",
			"qualifiedName": "ProductBatchSalesChannel"
		},
		"21244": {
			"sourceFileName": "../../../packages/medusa/src/types/sales-channels.ts",
			"qualifiedName": "ProductBatchSalesChannel.id"
		},
		"21245": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "ReservationItemDTO"
		},
		"21246": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type"
		},
		"21247": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.id"
		},
		"21248": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.location_id"
		},
		"21249": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.inventory_item_id"
		},
		"21250": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.quantity"
		},
		"21251": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.line_item_id"
		},
		"21252": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.description"
		},
		"21253": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.created_by"
		},
		"21254": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"21255": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.created_at"
		},
		"21256": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.updated_at"
		},
		"21257": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.deleted_at"
		},
		"21258": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/receive-return.ts",
			"qualifiedName": "Item"
		},
		"21261": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/receive-return.ts",
			"qualifiedName": "Item.item_id"
		},
		"21262": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/receive-return.ts",
			"qualifiedName": "Item.quantity"
		},
		"21263": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/create-shipping-option.ts",
			"qualifiedName": "OptionRequirement"
		},
		"21266": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/create-shipping-option.ts",
			"qualifiedName": "OptionRequirement.type"
		},
		"21267": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/create-shipping-option.ts",
			"qualifiedName": "OptionRequirement.amount"
		},
		"21268": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/update-shipping-option.ts",
			"qualifiedName": "OptionRequirement"
		},
		"21271": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/update-shipping-option.ts",
			"qualifiedName": "OptionRequirement.id"
		},
		"21272": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/update-shipping-option.ts",
			"qualifiedName": "OptionRequirement.type"
		},
		"21273": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/update-shipping-option.ts",
			"qualifiedName": "OptionRequirement.amount"
		},
		"21274": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "StockLocationDTO"
		},
		"21275": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type"
		},
		"21276": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.id"
		},
		"21277": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.name"
		},
		"21278": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"21279": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address_id"
		},
		"21280": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address"
		},
		"21281": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.created_at"
		},
		"21282": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.updated_at"
		},
		"21283": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.deleted_at"
		},
		"21284": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "DeleteResponse"
		},
		"21285": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"21286": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.id"
		},
		"21287": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.object"
		},
		"21288": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.deleted"
		},
		"21289": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "StockLocationExpandedDTO"
		},
		"21290": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type"
		},
		"21291": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.sales_channels"
		},
		"21292": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/create-stock-location.ts",
			"qualifiedName": "StockLocationAddress"
		},
		"21295": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/create-stock-location.ts",
			"qualifiedName": "StockLocationAddress.address_1"
		},
		"21296": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/create-stock-location.ts",
			"qualifiedName": "StockLocationAddress.address_2"
		},
		"21297": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/create-stock-location.ts",
			"qualifiedName": "StockLocationAddress.company"
		},
		"21298": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/create-stock-location.ts",
			"qualifiedName": "StockLocationAddress.city"
		},
		"21299": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/create-stock-location.ts",
			"qualifiedName": "StockLocationAddress.country_code"
		},
		"21300": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/create-stock-location.ts",
			"qualifiedName": "StockLocationAddress.phone"
		},
		"21301": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/create-stock-location.ts",
			"qualifiedName": "StockLocationAddress.postal_code"
		},
		"21302": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/create-stock-location.ts",
			"qualifiedName": "StockLocationAddress.province"
		},
		"21303": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/update-stock-location.ts",
			"qualifiedName": "StockLocationAddress"
		},
		"21306": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/update-stock-location.ts",
			"qualifiedName": "StockLocationAddress.address_1"
		},
		"21307": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/update-stock-location.ts",
			"qualifiedName": "StockLocationAddress.address_2"
		},
		"21308": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/update-stock-location.ts",
			"qualifiedName": "StockLocationAddress.company"
		},
		"21309": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/update-stock-location.ts",
			"qualifiedName": "StockLocationAddress.city"
		},
		"21310": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/update-stock-location.ts",
			"qualifiedName": "StockLocationAddress.country_code"
		},
		"21311": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/update-stock-location.ts",
			"qualifiedName": "StockLocationAddress.phone"
		},
		"21312": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/update-stock-location.ts",
			"qualifiedName": "StockLocationAddress.postal_code"
		},
		"21313": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/update-stock-location.ts",
			"qualifiedName": "StockLocationAddress.province"
		},
		"21314": {
			"sourceFileName": "../../../packages/medusa/src/types/store.ts",
			"qualifiedName": "ExtendedStoreDTO"
		},
		"21315": {
			"sourceFileName": "../../../packages/medusa/src/types/store.ts",
			"qualifiedName": "__type"
		},
		"21316": {
			"sourceFileName": "../../../packages/medusa/src/types/store.ts",
			"qualifiedName": "__type.payment_providers"
		},
		"21317": {
			"sourceFileName": "../../../packages/medusa/src/types/store.ts",
			"qualifiedName": "__type.fulfillment_providers"
		},
		"21318": {
			"sourceFileName": "../../../packages/medusa/src/types/store.ts",
			"qualifiedName": "__type.feature_flags"
		},
		"21319": {
			"sourceFileName": "../../../packages/medusa/src/types/store.ts",
			"qualifiedName": "__type.modules"
		},
		"21320": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "FileServiceUploadResult"
		},
		"21321": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.url"
		},
		"21322": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.key"
		},
		"21323": {
			"sourceFileName": "../../../packages/medusa/src/types/user.ts",
			"qualifiedName": "UserRole"
		},
		"21324": {
			"sourceFileName": "../../../packages/medusa/src/types/user.ts",
			"qualifiedName": "UserRole.MEMBER"
		},
		"21325": {
			"sourceFileName": "../../../packages/medusa/src/types/user.ts",
			"qualifiedName": "UserRole.ADMIN"
		},
		"21326": {
			"sourceFileName": "../../../packages/medusa/src/types/user.ts",
			"qualifiedName": "UserRole.DEVELOPER"
		},
		"21327": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "PricedVariant"
		},
		"21328": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "AdminPriceSelectionParams"
		},
		"21331": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "AdminPriceSelectionParams.customer_id"
		},
		"21332": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.cart_id"
		},
		"21333": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.region_id"
		},
		"21334": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.currency_code"
		},
		"21335": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"21336": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"21337": {
			"sourceFileName": "../../../packages/utils/dist/orchestration/types.d.ts",
			"qualifiedName": "TransactionHandlerType"
		},
		"21338": {
			"sourceFileName": "../../../packages/utils/dist/orchestration/types.d.ts",
			"qualifiedName": "TransactionHandlerType.INVOKE"
		},
		"21339": {
			"sourceFileName": "../../../packages/utils/dist/orchestration/types.d.ts",
			"qualifiedName": "TransactionHandlerType.COMPENSATE"
		},
		"21340": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/update-cart.ts",
			"qualifiedName": "GiftCard"
		},
		"21343": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/update-cart.ts",
			"qualifiedName": "GiftCard.code"
		},
		"21344": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/update-cart.ts",
			"qualifiedName": "Discount"
		},
		"21347": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/update-cart.ts",
			"qualifiedName": "Discount.code"
		},
		"21348": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams"
		},
		"21351": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.cart_id"
		},
		"21352": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.region_id"
		},
		"21353": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.currency_code"
		},
		"21354": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"21355": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"21356": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/returns/create-return.ts",
			"qualifiedName": "Item"
		},
		"21359": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/returns/create-return.ts",
			"qualifiedName": "Item.item_id"
		},
		"21360": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/returns/create-return.ts",
			"qualifiedName": "Item.quantity"
		},
		"21361": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/returns/create-return.ts",
			"qualifiedName": "Item.reason_id"
		},
		"21362": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/returns/create-return.ts",
			"qualifiedName": "Item.note"
		},
		"21363": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/returns/create-return.ts",
			"qualifiedName": "ReturnShipping"
		},
		"21366": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/returns/create-return.ts",
			"qualifiedName": "ReturnShipping.option_id"
		},
		"21367": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "PricedShippingOption"
		},
		"21368": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/swaps/create-swap.ts",
			"qualifiedName": "Item"
		},
		"21371": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/swaps/create-swap.ts",
			"qualifiedName": "Item.item_id"
		},
		"21372": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/swaps/create-swap.ts",
			"qualifiedName": "Item.quantity"
		},
		"21373": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/swaps/create-swap.ts",
			"qualifiedName": "Item.reason_id"
		},
		"21374": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/swaps/create-swap.ts",
			"qualifiedName": "Item.note"
		},
		"21375": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/swaps/create-swap.ts",
			"qualifiedName": "AdditionalItem"
		},
		"21378": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/swaps/create-swap.ts",
			"qualifiedName": "AdditionalItem.variant_id"
		},
		"21379": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/swaps/create-swap.ts",
			"qualifiedName": "AdditionalItem.quantity"
		},
		"21380": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion.ts",
			"qualifiedName": "PromotionDTO"
		},
		"21381": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion.ts",
			"qualifiedName": "PromotionDTO.id"
		},
		"21382": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion.ts",
			"qualifiedName": "PromotionDTO.code"
		},
		"21383": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion.ts",
			"qualifiedName": "PromotionDTO.type"
		},
		"21384": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion.ts",
			"qualifiedName": "PromotionDTO.is_automatic"
		},
		"21385": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion.ts",
			"qualifiedName": "PromotionDTO.application_method"
		},
		"21386": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion.ts",
			"qualifiedName": "PromotionDTO.rules"
		},
		"21387": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion.ts",
			"qualifiedName": "PromotionDTO.campaign"
		},
		"21388": {
			"sourceFileName": "../../../packages/utils/dist/promotion/index.d.ts",
			"qualifiedName": "PromotionRuleOperator"
		},
		"21389": {
			"sourceFileName": "../../../packages/utils/dist/promotion/index.d.ts",
			"qualifiedName": "PromotionRuleOperator.GTE"
		},
		"21390": {
			"sourceFileName": "../../../packages/utils/dist/promotion/index.d.ts",
			"qualifiedName": "PromotionRuleOperator.LTE"
		},
		"21391": {
			"sourceFileName": "../../../packages/utils/dist/promotion/index.d.ts",
			"qualifiedName": "PromotionRuleOperator.GT"
		},
		"21392": {
			"sourceFileName": "../../../packages/utils/dist/promotion/index.d.ts",
			"qualifiedName": "PromotionRuleOperator.LT"
		},
		"21393": {
			"sourceFileName": "../../../packages/utils/dist/promotion/index.d.ts",
			"qualifiedName": "PromotionRuleOperator.EQ"
		},
		"21394": {
			"sourceFileName": "../../../packages/utils/dist/promotion/index.d.ts",
			"qualifiedName": "PromotionRuleOperator.NE"
		},
		"21395": {
			"sourceFileName": "../../../packages/utils/dist/promotion/index.d.ts",
			"qualifiedName": "PromotionRuleOperator.IN"
		},
		"21396": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion.ts",
			"qualifiedName": "PromotionTypeValues"
		},
		"21397": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/campaigns/validators.ts",
			"qualifiedName": "AdminPostCampaignsReq"
		},
		"21400": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/campaigns/validators.ts",
			"qualifiedName": "AdminPostCampaignsReq.name"
		},
		"21401": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/campaigns/validators.ts",
			"qualifiedName": "AdminPostCampaignsReq.campaign_identifier"
		},
		"21402": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/campaigns/validators.ts",
			"qualifiedName": "AdminPostCampaignsReq.description"
		},
		"21403": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/campaigns/validators.ts",
			"qualifiedName": "AdminPostCampaignsReq.currency"
		},
		"21404": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/campaigns/validators.ts",
			"qualifiedName": "AdminPostCampaignsReq.budget"
		},
		"21405": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/campaigns/validators.ts",
			"qualifiedName": "AdminPostCampaignsReq.starts_at"
		},
		"21406": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/campaigns/validators.ts",
			"qualifiedName": "AdminPostCampaignsReq.ends_at"
		},
		"21407": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/campaigns/validators.ts",
			"qualifiedName": "AdminPostCampaignsReq.promotions"
		},
		"21408": {
			"sourceFileName": "../../../packages/utils/dist/promotion/index.d.ts",
			"qualifiedName": "ApplicationMethodType"
		},
		"21409": {
			"sourceFileName": "../../../packages/utils/dist/promotion/index.d.ts",
			"qualifiedName": "ApplicationMethodType.FIXED"
		},
		"21410": {
			"sourceFileName": "../../../packages/utils/dist/promotion/index.d.ts",
			"qualifiedName": "ApplicationMethodType.PERCENTAGE"
		},
		"21411": {
			"sourceFileName": "../../../packages/utils/dist/promotion/index.d.ts",
			"qualifiedName": "ApplicationMethodTargetType"
		},
		"21412": {
			"sourceFileName": "../../../packages/utils/dist/promotion/index.d.ts",
			"qualifiedName": "ApplicationMethodTargetType.ORDER"
		},
		"21413": {
			"sourceFileName": "../../../packages/utils/dist/promotion/index.d.ts",
			"qualifiedName": "ApplicationMethodTargetType.SHIPPING_METHODS"
		},
		"21414": {
			"sourceFileName": "../../../packages/utils/dist/promotion/index.d.ts",
			"qualifiedName": "ApplicationMethodTargetType.ITEMS"
		},
		"21415": {
			"sourceFileName": "../../../packages/utils/dist/promotion/index.d.ts",
			"qualifiedName": "ApplicationMethodAllocation"
		},
		"21416": {
			"sourceFileName": "../../../packages/utils/dist/promotion/index.d.ts",
			"qualifiedName": "ApplicationMethodAllocation.EACH"
		},
		"21417": {
			"sourceFileName": "../../../packages/utils/dist/promotion/index.d.ts",
			"qualifiedName": "ApplicationMethodAllocation.ACROSS"
		},
		"21418": {
			"sourceFileName": "../../../packages/utils/dist/promotion/index.d.ts",
			"qualifiedName": "PromotionType"
		},
		"21419": {
			"sourceFileName": "../../../packages/utils/dist/promotion/index.d.ts",
			"qualifiedName": "PromotionType.STANDARD"
		},
		"21420": {
			"sourceFileName": "../../../packages/utils/dist/promotion/index.d.ts",
			"qualifiedName": "PromotionType.BUYGET"
		},
		"21421": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/await-middleware.ts",
			"qualifiedName": "handler"
		},
		"21422": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/await-middleware.ts",
			"qualifiedName": "__type"
		},
		"21423": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/await-middleware.ts",
			"qualifiedName": "__type"
		},
		"21424": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/await-middleware.ts",
			"qualifiedName": "req"
		},
		"21425": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/await-middleware.ts",
			"qualifiedName": "res"
		},
		"21426": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "MedusaError"
		},
		"21427": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "MedusaError.Types"
		},
		"21428": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "__type"
		},
		"21429": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "__type.DB_ERROR"
		},
		"21430": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "__type.DUPLICATE_ERROR"
		},
		"21431": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "__type.INVALID_ARGUMENT"
		},
		"21432": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "__type.INVALID_DATA"
		},
		"21433": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "__type.UNAUTHORIZED"
		},
		"21434": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "__type.NOT_FOUND"
		},
		"21435": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "__type.NOT_ALLOWED"
		},
		"21436": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "__type.UNEXPECTED_STATE"
		},
		"21437": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "__type.CONFLICT"
		},
		"21438": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "__type.PAYMENT_AUTHORIZATION_ERROR"
		},
		"21439": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "MedusaError.Codes"
		},
		"21440": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "__type"
		},
		"21441": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "__type.INSUFFICIENT_INVENTORY"
		},
		"21442": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "__type.CART_INCOMPATIBLE_STATE"
		},
		"21443": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "MedusaError.__constructor"
		},
		"21444": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "MedusaError"
		},
		"21445": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "type"
		},
		"21446": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "message"
		},
		"21447": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "code"
		},
		"21448": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "params"
		},
		"21449": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "MedusaError.type"
		},
		"21450": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "MedusaError.message"
		},
		"21451": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "MedusaError.code"
		},
		"21452": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "MedusaError.date"
		},
		"21453": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "InnerSelector"
		},
		"21454": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "TEntity"
		},
		"21455": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/medusa-container.d.ts",
			"qualifiedName": "MedusaContainer"
		},
		"21456": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/medusa-container.d.ts",
			"qualifiedName": "__type"
		},
		"21457": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/medusa-container.d.ts",
			"qualifiedName": "__type.registerAdd"
		},
		"21458": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/medusa-container.d.ts",
			"qualifiedName": "__type"
		},
		"21459": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/medusa-container.d.ts",
			"qualifiedName": "__type"
		},
		"21460": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/medusa-container.d.ts",
			"qualifiedName": "name"
		},
		"21461": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/medusa-container.d.ts",
			"qualifiedName": "registration"
		},
		"21462": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/medusa-container.d.ts",
			"qualifiedName": "T"
		},
		"21463": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/medusa-container.d.ts",
			"qualifiedName": "__type.createScope"
		},
		"21464": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/medusa-container.d.ts",
			"qualifiedName": "__type"
		},
		"21465": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/medusa-container.d.ts",
			"qualifiedName": "__type"
		},
		"21466": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "ConfigModule"
		},
		"21467": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.projectConfig"
		},
		"21468": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.plugins"
		},
		"21469": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"21470": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.resolve"
		},
		"21471": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.options"
		},
		"21472": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.modules"
		},
		"21473": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.featureFlags"
		},
		"21474": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "RequestQueryFields"
		},
		"21475": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.expand"
		},
		"21476": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.fields"
		},
		"21477": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.offset"
		},
		"21478": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.limit"
		},
		"21479": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.order"
		},
		"21480": {
			"sourceFileName": "../../../packages/types/src/common/medusa-container.ts",
			"qualifiedName": "MedusaContainer"
		},
		"21481": {
			"sourceFileName": "../../../packages/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"21491": {
			"sourceFileName": "../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "SubscriberContext"
		},
		"21492": {
			"sourceFileName": "../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "SubscriberContext.subscriberId"
		},
		"21493": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "Image"
		},
		"21496": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "Image.id"
		},
		"21497": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "Image.url"
		},
		"21498": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "Tag"
		},
		"21501": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "Tag.id"
		},
		"21502": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "Tag.value"
		},
		"21503": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantOptionReq"
		},
		"21506": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantOptionReq.value"
		},
		"21507": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantOptionReq"
		},
		"21510": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantOptionReq.value"
		},
		"21511": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantOptionReq.option_id"
		},
		"21512": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "StockLocationAddressDTO"
		},
		"21513": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type"
		},
		"21514": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.id"
		},
		"21515": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address_1"
		},
		"21516": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address_2"
		},
		"21517": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.company"
		},
		"21518": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.country_code"
		},
		"21519": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.city"
		},
		"21520": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.phone"
		},
		"21521": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.postal_code"
		},
		"21522": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.province"
		},
		"21523": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"21524": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.created_at"
		},
		"21525": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.updated_at"
		},
		"21526": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.deleted_at"
		},
		"21527": {
			"sourceFileName": "../../../packages/medusa/src/types/feature-flags.ts",
			"qualifiedName": "FeatureFlagsResponse"
		},
		"21528": {
			"sourceFileName": "../../../packages/medusa/src/types/feature-flags.ts",
			"qualifiedName": "__type"
		},
		"21529": {
			"sourceFileName": "../../../packages/medusa/src/types/feature-flags.ts",
			"qualifiedName": "__type.key"
		},
		"21530": {
			"sourceFileName": "../../../packages/medusa/src/types/feature-flags.ts",
			"qualifiedName": "__type.value"
		},
		"21531": {
			"sourceFileName": "../../../packages/medusa/src/types/store.ts",
			"qualifiedName": "ModulesResponse"
		},
		"21532": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "ProductVariantPricing"
		},
		"21533": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "__type"
		},
		"21534": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "__type.prices"
		},
		"21535": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "__type.original_price"
		},
		"21536": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "__type.calculated_price"
		},
		"21537": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "__type.original_price_includes_tax"
		},
		"21538": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "__type.calculated_price_includes_tax"
		},
		"21539": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "__type.calculated_price_type"
		},
		"21540": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "ShippingOptionPricing"
		},
		"21541": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "__type"
		},
		"21542": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "__type.price_incl_tax"
		},
		"21543": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "__type.tax_rates"
		},
		"21544": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "__type.tax_amount"
		},
		"21545": {
			"sourceFileName": "../../../packages/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodDTO"
		},
		"21546": {
			"sourceFileName": "../../../packages/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodDTO.id"
		},
		"21547": {
			"sourceFileName": "../../../packages/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodDTO.type"
		},
		"21548": {
			"sourceFileName": "../../../packages/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodDTO.target_type"
		},
		"21549": {
			"sourceFileName": "../../../packages/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodDTO.allocation"
		},
		"21550": {
			"sourceFileName": "../../../packages/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodDTO.value"
		},
		"21551": {
			"sourceFileName": "../../../packages/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodDTO.max_quantity"
		},
		"21552": {
			"sourceFileName": "../../../packages/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodDTO.buy_rules_min_quantity"
		},
		"21553": {
			"sourceFileName": "../../../packages/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodDTO.apply_to_quantity"
		},
		"21554": {
			"sourceFileName": "../../../packages/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodDTO.promotion"
		},
		"21555": {
			"sourceFileName": "../../../packages/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodDTO.target_rules"
		},
		"21556": {
			"sourceFileName": "../../../packages/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodDTO.buy_rules"
		},
		"21557": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "PromotionRuleDTO"
		},
		"21558": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "PromotionRuleDTO.id"
		},
		"21559": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "PromotionRuleDTO.description"
		},
		"21560": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "PromotionRuleDTO.attribute"
		},
		"21561": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "PromotionRuleDTO.operator"
		},
		"21562": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "PromotionRuleDTO.values"
		},
		"21563": {
			"sourceFileName": "../../../packages/types/src/promotion/common/campaign.ts",
			"qualifiedName": "CampaignDTO"
		},
		"21564": {
			"sourceFileName": "../../../packages/types/src/promotion/common/campaign.ts",
			"qualifiedName": "CampaignDTO.id"
		},
		"21565": {
			"sourceFileName": "../../../packages/types/src/promotion/common/campaign.ts",
			"qualifiedName": "CampaignDTO.name"
		},
		"21566": {
			"sourceFileName": "../../../packages/types/src/promotion/common/campaign.ts",
			"qualifiedName": "CampaignDTO.description"
		},
		"21567": {
			"sourceFileName": "../../../packages/types/src/promotion/common/campaign.ts",
			"qualifiedName": "CampaignDTO.currency"
		},
		"21568": {
			"sourceFileName": "../../../packages/types/src/promotion/common/campaign.ts",
			"qualifiedName": "CampaignDTO.campaign_identifier"
		},
		"21569": {
			"sourceFileName": "../../../packages/types/src/promotion/common/campaign.ts",
			"qualifiedName": "CampaignDTO.starts_at"
		},
		"21570": {
			"sourceFileName": "../../../packages/types/src/promotion/common/campaign.ts",
			"qualifiedName": "CampaignDTO.ends_at"
		},
		"21571": {
			"sourceFileName": "../../../packages/types/src/promotion/common/campaign.ts",
			"qualifiedName": "CampaignDTO.budget"
		},
		"21572": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/campaigns/validators.ts",
			"qualifiedName": "CampaignBudget"
		},
		"21575": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/campaigns/validators.ts",
			"qualifiedName": "CampaignBudget.type"
		},
		"21576": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/campaigns/validators.ts",
			"qualifiedName": "CampaignBudget.limit"
		},
		"21577": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/campaigns/validators.ts",
			"qualifiedName": "IdObject"
		},
		"21580": {
			"sourceFileName": "../../../packages/medusa/src/api-v2/admin/campaigns/validators.ts",
			"qualifiedName": "IdObject.id"
		},
		"21581": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "ProjectConfigOptions"
		},
		"21582": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.store_cors"
		},
		"21583": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.admin_cors"
		},
		"21584": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.auth_cors"
		},
		"21585": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.cookie_secret"
		},
		"21586": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.jwt_secret"
		},
		"21587": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.database_database"
		},
		"21588": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.database_url"
		},
		"21589": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.database_schema"
		},
		"21590": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.database_logging"
		},
		"21592": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.database_extra"
		},
		"21593": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"21594": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.ssl"
		},
		"21595": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"21596": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.rejectUnauthorized"
		},
		"21597": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.database_driver_options"
		},
		"21598": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"21599": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.connection"
		},
		"21600": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"21601": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.ssl"
		},
		"21602": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"21603": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.rejectUnauthorized"
		},
		"21604": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.redis_url"
		},
		"21605": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.redis_prefix"
		},
		"21606": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.redis_options"
		},
		"21607": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.session_options"
		},
		"21608": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.http_compression"
		},
		"21609": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.jobs_batch_size"
		},
		"21610": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.worker_mode"
		},
		"21611": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "InternalModuleDeclaration"
		},
		"21612": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"21613": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.scope"
		},
		"21614": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.resources"
		},
		"21615": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"21616": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.definition"
		},
		"21617": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.resolve"
		},
		"21618": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"21619": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.alias"
		},
		"21620": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.main"
		},
		"21621": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.worker_mode"
		},
		"21622": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ExternalModuleDeclaration"
		},
		"21623": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"21624": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.scope"
		},
		"21625": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.definition"
		},
		"21626": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.server"
		},
		"21627": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"21628": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.type"
		},
		"21629": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.url"
		},
		"21630": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.keepAlive"
		},
		"21631": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"21632": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.alias"
		},
		"21633": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.main"
		},
		"21634": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModulesResponse"
		},
		"21635": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"21636": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.module"
		},
		"21637": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.resolution"
		},
		"21638": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "TaxedPricing"
		},
		"21639": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "__type"
		},
		"21640": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "__type.original_price_incl_tax"
		},
		"21641": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "__type.calculated_price_incl_tax"
		},
		"21642": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "__type.original_tax"
		},
		"21643": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "__type.calculated_tax"
		},
		"21644": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "__type.tax_rates"
		},
		"21645": {
			"sourceFileName": "../../../packages/medusa/src/types/tax-service.ts",
			"qualifiedName": "TaxServiceRate"
		},
		"21646": {
			"sourceFileName": "../../../packages/medusa/src/types/tax-service.ts",
			"qualifiedName": "__type"
		},
		"21647": {
			"sourceFileName": "../../../packages/medusa/src/types/tax-service.ts",
			"qualifiedName": "__type.rate"
		},
		"21648": {
			"sourceFileName": "../../../packages/medusa/src/types/tax-service.ts",
			"qualifiedName": "__type.name"
		},
		"21649": {
			"sourceFileName": "../../../packages/medusa/src/types/tax-service.ts",
			"qualifiedName": "__type.code"
		},
		"21650": {
			"sourceFileName": "../../../packages/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodTypeValues"
		},
		"21651": {
			"sourceFileName": "../../../packages/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodTargetTypeValues"
		},
		"21652": {
			"sourceFileName": "../../../packages/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodAllocationValues"
		},
		"21653": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "PromotionRuleOperatorValues"
		},
		"21654": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion-rule-value.ts",
			"qualifiedName": "PromotionRuleValueDTO"
		},
		"21655": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion-rule-value.ts",
			"qualifiedName": "PromotionRuleValueDTO.id"
		},
		"21656": {
			"sourceFileName": "../../../packages/types/src/promotion/common/promotion-rule-value.ts",
			"qualifiedName": "PromotionRuleValueDTO.value"
		},
		"21657": {
			"sourceFileName": "../../../packages/types/src/promotion/common/campaign-budget.ts",
			"qualifiedName": "CampaignBudgetDTO"
		},
		"21658": {
			"sourceFileName": "../../../packages/types/src/promotion/common/campaign-budget.ts",
			"qualifiedName": "CampaignBudgetDTO.id"
		},
		"21659": {
			"sourceFileName": "../../../packages/types/src/promotion/common/campaign-budget.ts",
			"qualifiedName": "CampaignBudgetDTO.type"
		},
		"21660": {
			"sourceFileName": "../../../packages/types/src/promotion/common/campaign-budget.ts",
			"qualifiedName": "CampaignBudgetDTO.limit"
		},
		"21661": {
			"sourceFileName": "../../../packages/types/src/promotion/common/campaign-budget.ts",
			"qualifiedName": "CampaignBudgetDTO.used"
		},
		"21662": {
			"sourceFileName": "../../../packages/utils/dist/promotion/index.d.ts",
			"qualifiedName": "CampaignBudgetType"
		},
		"21663": {
			"sourceFileName": "../../../packages/utils/dist/promotion/index.d.ts",
			"qualifiedName": "CampaignBudgetType.SPEND"
		},
		"21664": {
			"sourceFileName": "../../../packages/utils/dist/promotion/index.d.ts",
			"qualifiedName": "CampaignBudgetType.USAGE"
		},
		"21665": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "SessionOptions"
		},
		"21666": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.name"
		},
		"21667": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.resave"
		},
		"21668": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.rolling"
		},
		"21669": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.saveUninitialized"
		},
		"21670": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.secret"
		},
		"21671": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.ttl"
		},
		"21672": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "HttpCompressionOptions"
		},
		"21673": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.enabled"
		},
		"21674": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.level"
		},
		"21675": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.memLevel"
		},
		"21676": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.threshold"
		},
		"21677": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "MODULE_SCOPE.INTERNAL"
		},
		"21678": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "MODULE_RESOURCE_TYPE"
		},
		"21679": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "MODULE_RESOURCE_TYPE.SHARED"
		},
		"21680": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "MODULE_RESOURCE_TYPE.ISOLATED"
		},
		"21681": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleDefinition"
		},
		"21682": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"21683": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.key"
		},
		"21684": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.registrationName"
		},
		"21685": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultPackage"
		},
		"21686": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.label"
		},
		"21687": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isRequired"
		},
		"21688": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isQueryable"
		},
		"21689": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isLegacy"
		},
		"21690": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"21691": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultModuleDeclaration"
		},
		"21692": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleExports"
		},
		"21693": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"21694": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.service"
		},
		"21695": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.loaders"
		},
		"21696": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.migrations"
		},
		"21697": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.models"
		},
		"21698": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.runMigrations"
		},
		"21699": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.runMigrations"
		},
		"21700": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"21701": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"21702": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.revertMigration"
		},
		"21703": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.revertMigration"
		},
		"21704": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"21705": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"21706": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "MODULE_SCOPE.EXTERNAL"
		},
		"21707": {
			"sourceFileName": "../../../packages/types/src/promotion/common/campaign-budget.ts",
			"qualifiedName": "CampaignBudgetTypeValues"
		},
		"21708": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "Constructor"
		},
		"21709": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"21710": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"21711": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "args"
		},
		"21712": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "T"
		},
		"21713": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleLoaderFunction"
		},
		"21714": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"21715": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"21716": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"21717": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"21718": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "LoaderOptions"
		},
		"21719": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"21720": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.container"
		},
		"21721": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"21722": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.logger"
		},
		"21723": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dataLoaderOnly"
		},
		"21724": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "TOptions"
		},
		"21725": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger"
		},
		"21726": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.panic"
		},
		"21727": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"21728": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"21729": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "data"
		},
		"21730": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.shouldLog"
		},
		"21731": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"21732": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"21733": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "level"
		},
		"21734": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.setLogLevel"
		},
		"21735": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"21736": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"21737": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "level"
		},
		"21738": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.unsetLogLevel"
		},
		"21739": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"21740": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"21741": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.activity"
		},
		"21742": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"21743": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"21744": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"21745": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "config"
		},
		"21746": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.progress"
		},
		"21747": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"21748": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"21749": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "activityId"
		},
		"21750": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"21751": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.error"
		},
		"21752": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"21753": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"21754": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "messageOrError"
		},
		"21755": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "error"
		},
		"21756": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.failure"
		},
		"21757": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"21758": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"21759": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "activityId"
		},
		"21760": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"21761": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.success"
		},
		"21762": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"21763": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"21764": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "activityId"
		},
		"21765": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"21766": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.debug"
		},
		"21767": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"21768": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"21769": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"21770": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.info"
		},
		"21771": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"21772": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"21773": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"21774": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.warn"
		},
		"21775": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"21776": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"21777": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"21778": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "Logger.log"
		},
		"21779": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"21780": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"21781": {
			"sourceFileName": "../../../packages/types/src/logger/index.ts",
			"qualifiedName": "args"
		}
	}
}