{
	"id": 8139,
	"name": "store",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 8272,
			"name": "FindConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to configure how an entity is retrieved from the database. It accepts as a typed parameter an "
					},
					{
						"kind": "code",
						"text": "`Entity`"
					},
					{
						"kind": "text",
						"text": " class,\nwhich provides correct typing of field names in its properties."
					}
				]
			},
			"children": [
				{
					"id": 8273,
					"name": "select",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being attribute names of the entity to retrieve in the result."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": 8283,
										"name": "Entity",
										"package": "@medusajs/types",
										"qualifiedName": "FindConfig.Entity",
										"refersToTypeParameter": true
									}
								}
							]
						}
					}
				},
				{
					"id": 8274,
					"name": "skip",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A number indicating the number of records to skip before retrieving the results."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 8275,
					"name": "take",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A number indicating the number of records to return in the result."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 8276,
					"name": "relations",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being relation names of the entity to retrieve in the result."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 8277,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to specify how to sort the returned records. Its keys are the names of attributes of the entity, and a key's value can either be "
							},
							{
								"kind": "code",
								"text": "`ASC`"
							},
							{
								"kind": "text",
								"text": "\nto sort retrieved records in an ascending order, or "
							},
							{
								"kind": "code",
								"text": "`DESC`"
							},
							{
								"kind": "text",
								"text": " to sort retrieved records in a descending order."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 8278,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"indexSignature": {
								"id": 8279,
								"name": "__index",
								"variant": "signature",
								"kind": 8192,
								"flags": {},
								"parameters": [
									{
										"id": 8280,
										"name": "K",
										"variant": "param",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "ASC"
										},
										{
											"type": "literal",
											"value": "DESC"
										}
									]
								}
							}
						}
					}
				},
				{
					"id": 8281,
					"name": "withDeleted",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean indicating whether deleted records should also be retrieved as part of the result. This only works if the entity extends the\n"
							},
							{
								"kind": "code",
								"text": "`SoftDeletableEntity`"
							},
							{
								"kind": "text",
								"text": " class."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 8282,
					"name": "filters",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Enable ORM specific defined filters"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8273,
						8274,
						8275,
						8276,
						8277,
						8281,
						8282
					]
				}
			],
			"typeParameters": [
				{
					"id": 8283,
					"name": "Entity",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 8331,
			"name": "BaseFilterable",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object used to allow specifying flexible queries with and/or conditions."
					}
				]
			},
			"children": [
				{
					"id": 8332,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 8331,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8334,
											"name": "T",
											"package": "@medusajs/types",
											"qualifiedName": "BaseFilterable.T",
											"refersToTypeParameter": true
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 8334,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "BaseFilterable.T",
									"refersToTypeParameter": true
								}
							]
						}
					}
				},
				{
					"id": 8333,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 8331,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8334,
											"name": "T",
											"package": "@medusajs/types",
											"qualifiedName": "BaseFilterable.T",
											"refersToTypeParameter": true
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 8334,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "BaseFilterable.T",
									"refersToTypeParameter": true
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8332,
						8333
					]
				}
			],
			"typeParameters": [
				{
					"id": 8334,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 8267,
					"name": "FilterableStoreProps"
				}
			]
		},
		{
			"id": 8284,
			"name": "SoftDeleteReturn",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
					}
				]
			},
			"children": [
				{
					"id": 8285,
					"name": "returnLinkableKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being the ID attribute names of the entity's relations."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 8286,
							"name": "TReturnableLinkableKeys",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8285
					]
				}
			],
			"typeParameters": [
				{
					"id": 8286,
					"name": "TReturnableLinkableKeys",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 8287,
			"name": "RestoreReturn",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to specify an entity's related entities that should be restored when the main entity is restored."
					}
				]
			},
			"children": [
				{
					"id": 8288,
					"name": "returnLinkableKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being the ID attribute names of the entity's relations."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 8289,
							"name": "TReturnableLinkableKeys",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8288
					]
				}
			],
			"typeParameters": [
				{
					"id": 8289,
					"name": "TReturnableLinkableKeys",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 8389,
			"name": "MessageBody",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 8398,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 8390,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 8391,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 8392,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 8393,
											"name": "service",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 8394,
											"name": "action",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 8395,
											"name": "object",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 8396,
											"name": "eventGroupId",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												8393,
												8394,
												8395,
												8396
											]
										}
									]
								}
							}
						},
						{
							"id": 8397,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 8398,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								8391,
								8397
							]
						}
					]
				}
			}
		},
		{
			"id": 8353,
			"name": "Message",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 8358,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 8354,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 8355,
							"name": "eventName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 8356,
							"name": "body",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 8389,
								"typeArguments": [
									{
										"type": "reference",
										"target": 8358,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "MessageBody",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 8357,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								8355,
								8356,
								8357
							]
						}
					]
				}
			}
		},
		{
			"id": 8365,
			"name": "MessageFormat",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 8375,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 8366,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 8367,
							"name": "eventName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 8368,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 8369,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 8370,
											"name": "service",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 8371,
											"name": "action",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 8372,
											"name": "object",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 8373,
											"name": "eventGroupId",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												8370,
												8371,
												8372,
												8373
											]
										}
									]
								}
							}
						},
						{
							"id": 8374,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 8375,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8375,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								8367,
								8368,
								8374
							]
						}
					]
				}
			}
		},
		{
			"id": 8379,
			"name": "JoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 8380,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 8381,
							"name": "alias",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 8382,
							"name": "foreignKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 8383,
							"name": "primaryKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 8384,
							"name": "serviceName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 8385,
							"name": "isInternalService",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the relationship is an internal service from the medusa core\nTODO: Remove when there are no more \"internal\" services"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 8386,
							"name": "inverse",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "In an inverted relationship the foreign key is on the other service and the primary key is on the current service"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 8387,
							"name": "isList",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Force the relationship to return a list"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 8388,
							"name": "args",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Extra arguments to pass to the remoteFetchData callback"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								8381,
								8382,
								8383,
								8384,
								8385,
								8386,
								8387,
								8388
							]
						}
					]
				}
			}
		},
		{
			"id": 8376,
			"name": "JoinerServiceConfigAlias",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 8377,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 8378,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8377,
						8378
					]
				}
			]
		},
		{
			"id": 8335,
			"name": "JoinerServiceConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 8336,
					"name": "serviceName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8337,
					"name": "alias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Property name to use as entrypoint to the service"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 8376,
								"name": "JoinerServiceConfigAlias",
								"package": "@medusajs/types"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 8376,
									"name": "JoinerServiceConfigAlias",
									"package": "@medusajs/types"
								}
							}
						]
					}
				},
				{
					"id": 8338,
					"name": "fieldAlias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "alias for deeper nested relationships (e.g. { 'price': 'prices.calculated_price_set.amount' })"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 8339,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 8340,
													"name": "path",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 8341,
													"name": "forwardArgumentsOnPath",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														8340,
														8341
													]
												}
											]
										}
									}
								]
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 8342,
					"name": "primaryKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 8343,
					"name": "relationships",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 8379,
							"name": "JoinerRelationship",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 8344,
					"name": "extends",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 8345,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 8346,
										"name": "serviceName",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 8347,
										"name": "relationship",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "reference",
											"target": 8379,
											"name": "JoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											8346,
											8347
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 8348,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8336,
						8337,
						8338,
						8342,
						8343,
						8344,
						8348
					]
				}
			]
		},
		{
			"id": 8290,
			"name": "ModuleJoinerConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 8335,
								"name": "JoinerServiceConfig",
								"package": "@medusajs/types"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "serviceName"
									},
									{
										"type": "literal",
										"value": "primaryKeys"
									},
									{
										"type": "literal",
										"value": "relationships"
									},
									{
										"type": "literal",
										"value": "extends"
									}
								]
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 8291,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 8292,
									"name": "schema",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "GraphQL schema for the all module's available entities and fields"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 8293,
									"name": "relationships",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8349,
											"name": "ModuleJoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 8294,
									"name": "extends",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 8295,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 8296,
														"name": "serviceName",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 8297,
														"name": "fieldAlias",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "Record"
															},
															"typeArguments": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "reflection",
																			"declaration": {
																				"id": 8298,
																				"name": "__type",
																				"variant": "declaration",
																				"kind": 65536,
																				"flags": {},
																				"children": [
																					{
																						"id": 8299,
																						"name": "path",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					},
																					{
																						"id": 8300,
																						"name": "forwardArgumentsOnPath",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {},
																						"type": {
																							"type": "array",
																							"elementType": {
																								"type": "intrinsic",
																								"name": "string"
																							}
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"children": [
																							8299,
																							8300
																						]
																					}
																				]
																			}
																		}
																	]
																}
															],
															"name": "Record",
															"package": "typescript"
														}
													},
													{
														"id": 8301,
														"name": "relationship",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": 8349,
															"name": "ModuleJoinerRelationship",
															"package": "@medusajs/types"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															8296,
															8297,
															8301
														]
													}
												]
											}
										}
									}
								},
								{
									"id": 8302,
									"name": "serviceName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 8303,
									"name": "primaryKeys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 8304,
									"name": "isLink",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If the module is a link module"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 8305,
									"name": "linkableKeys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Keys that can be used to link to other modules. e.g { product_id: \"Product\" } \"Product\" being the entity it refers to"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 8306,
									"name": "isReadOnlyLink",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true it expands a RemoteQuery property but doesn't create a pivot table"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 8307,
									"name": "databaseConfig",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 8308,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 8309,
													"name": "tableName",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Name of the pivot table. If not provided it is auto generated"
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 8310,
													"name": "idPrefix",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Prefix for the id column. If not provided it is \"link\""
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 8311,
													"name": "extraFields",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 8312,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 8313,
																			"name": "type",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": "date"
																					},
																					{
																						"type": "literal",
																						"value": "time"
																					},
																					{
																						"type": "literal",
																						"value": "datetime"
																					},
																					{
																						"type": "literal",
																						"value": "bigint"
																					},
																					{
																						"type": "literal",
																						"value": "blob"
																					},
																					{
																						"type": "literal",
																						"value": "uint8array"
																					},
																					{
																						"type": "literal",
																						"value": "array"
																					},
																					{
																						"type": "literal",
																						"value": "enumArray"
																					},
																					{
																						"type": "literal",
																						"value": "enum"
																					},
																					{
																						"type": "literal",
																						"value": "json"
																					},
																					{
																						"type": "literal",
																						"value": "integer"
																					},
																					{
																						"type": "literal",
																						"value": "smallint"
																					},
																					{
																						"type": "literal",
																						"value": "tinyint"
																					},
																					{
																						"type": "literal",
																						"value": "mediumint"
																					},
																					{
																						"type": "literal",
																						"value": "float"
																					},
																					{
																						"type": "literal",
																						"value": "double"
																					},
																					{
																						"type": "literal",
																						"value": "boolean"
																					},
																					{
																						"type": "literal",
																						"value": "decimal"
																					},
																					{
																						"type": "literal",
																						"value": "string"
																					},
																					{
																						"type": "literal",
																						"value": "uuid"
																					},
																					{
																						"type": "literal",
																						"value": "text"
																					}
																				]
																			}
																		},
																		{
																			"id": 8314,
																			"name": "defaultValue",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 8315,
																			"name": "nullable",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "boolean"
																			}
																		},
																		{
																			"id": 8316,
																			"name": "options",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "Mikro-orm options for the column"
																					}
																				]
																			},
																			"type": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																					"qualifiedName": "Record"
																				},
																				"typeArguments": [
																					{
																						"type": "intrinsic",
																						"name": "string"
																					},
																					{
																						"type": "intrinsic",
																						"name": "unknown"
																					}
																				],
																				"name": "Record",
																				"package": "typescript"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				8313,
																				8314,
																				8315,
																				8316
																			]
																		}
																	]
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														8309,
														8310,
														8311
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										8292,
										8293,
										8294,
										8302,
										8303,
										8304,
										8305,
										8306,
										8307
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 8349,
			"name": "ModuleJoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 8379,
						"name": "JoinerRelationship",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 8350,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 8351,
									"name": "isInternalService",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true, the relationship is an internal service from the medusa core TODO: Remove when there are no more \"internal\" services"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 8352,
									"name": "deleteCascade",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true, the link joiner will cascade deleting the relationship"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										8351,
										8352
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 8208,
			"name": "IModuleService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"extendedBy": [
				{
					"type": "reference",
					"target": 8140,
					"name": "IStoreModuleService"
				}
			]
		},
		{
			"id": 8359,
			"name": "MessageAggregatorFormat",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 8360,
					"name": "groupBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 8361,
					"name": "sortBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 8362,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"indexSignature": {
								"id": 8363,
								"name": "__index",
								"variant": "signature",
								"kind": 8192,
								"flags": {},
								"parameters": [
									{
										"id": 8364,
										"name": "key",
										"variant": "param",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "union",
									"types": [
										{
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "number"
										}
									]
								}
							}
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8360,
						8361
					]
				}
			]
		},
		{
			"id": 8317,
			"name": "IMessageAggregator",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 8318,
					"name": "save",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8319,
							"name": "save",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 8320,
									"name": "msg",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 8353,
												"name": "Message",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 8353,
													"name": "Message",
													"package": "@medusajs/types"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 8321,
					"name": "getMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8322,
							"name": "getMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 8323,
									"name": "format",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 8359,
										"name": "MessageAggregatorFormat",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8353,
											"name": "Message",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8324,
					"name": "clearMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8325,
							"name": "clearMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 8326,
					"name": "saveRawMessageData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8327,
							"name": "saveRawMessageData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameter": [
								{
									"id": 8328,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 8329,
									"name": "messageData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 8365,
												"typeArguments": [
													{
														"type": "reference",
														"target": 8328,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "MessageFormat",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 8365,
													"typeArguments": [
														{
															"type": "reference",
															"target": 8328,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													],
													"name": "MessageFormat",
													"package": "@medusajs/types"
												}
											}
										]
									}
								},
								{
									"id": 8330,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						8318,
						8321,
						8324,
						8326
					]
				}
			]
		},
		{
			"id": 8227,
			"name": "Context",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A context used to share resources, such as transaction manager, between the application and the module."
					}
				]
			},
			"children": [
				{
					"id": 8228,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "literal",
						"value": "MedusaContext"
					}
				},
				{
					"id": 8229,
					"name": "transactionManager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a transaction manager of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`transactionManager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8238,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 8230,
					"name": "manager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a manager, typically an entity manager, of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`manager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8238,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 8231,
					"name": "isolationLevel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the isolation level of the context. Possible values are "
							},
							{
								"kind": "code",
								"text": "`READ UNCOMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`READ COMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`REPEATABLE READ`"
							},
							{
								"kind": "text",
								"text": ", or "
							},
							{
								"kind": "code",
								"text": "`SERIALIZABLE`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8232,
					"name": "enableNestedTransactions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean value indicating whether nested transactions are enabled."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 8233,
					"name": "eventGroupId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the group to aggregate the events to be emitted at a later point."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8234,
					"name": "transactionId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current transaction."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8235,
					"name": "messageAggregator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a message aggregator, which is used to aggregate messages to be emitted at a later point."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8317,
						"name": "IMessageAggregator",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8236,
					"name": "requestId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current request."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8237,
					"name": "idempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the idempotencyKey of the current workflow execution."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8228,
						8229,
						8230,
						8231,
						8232,
						8233,
						8234,
						8235,
						8236,
						8237
					]
				}
			],
			"typeParameters": [
				{
					"id": 8238,
					"name": "TManager",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			]
		},
		{
			"id": 8239,
			"name": "StoreDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The store details."
					}
				]
			},
			"children": [
				{
					"id": 8240,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the store."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8241,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the store."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8242,
					"name": "supported_currency_codes",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The supported currency codes of the store."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 8243,
					"name": "default_currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The default currency code of the store."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8244,
					"name": "default_sales_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated default sales channel's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8245,
					"name": "default_region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated default region's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8246,
					"name": "default_location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated default location's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8247,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 8248,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The created at of the store."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8249,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The updated at of the store."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8240,
						8241,
						8242,
						8243,
						8244,
						8245,
						8246,
						8247,
						8248,
						8249
					]
				}
			]
		},
		{
			"id": 8267,
			"name": "FilterableStoreProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on the retrieved stores."
					}
				]
			},
			"children": [
				{
					"id": 8270,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 8267,
									"name": "FilterableStoreProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 8331,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8267,
											"name": "FilterableStoreProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8332,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 8271,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 8267,
									"name": "FilterableStoreProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 8331,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8267,
											"name": "FilterableStoreProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8333,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 8268,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the stores by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 8269,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter stores by their names."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8270,
						8271,
						8268,
						8269
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 8331,
					"typeArguments": [
						{
							"type": "reference",
							"target": 8267,
							"name": "FilterableStoreProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 8219,
			"name": "CreateStoreDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The store to be created."
					}
				]
			},
			"children": [
				{
					"id": 8220,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the store."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8221,
					"name": "supported_currency_codes",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The supported currency codes of the store."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 8222,
					"name": "default_currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The default currency code of the store."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8223,
					"name": "default_sales_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated default sales channel's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8224,
					"name": "default_region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated default region's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8225,
					"name": "default_location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated default location's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8226,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8220,
						8221,
						8222,
						8223,
						8224,
						8225,
						8226
					]
				}
			]
		},
		{
			"id": 8250,
			"name": "UpsertStoreDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes in the store to be created or updated."
					}
				]
			},
			"children": [
				{
					"id": 8251,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the store."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8252,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the store."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8253,
					"name": "supported_currency_codes",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The supported currency codes of the store."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 8254,
					"name": "default_currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The default currency code of the store."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8255,
					"name": "default_sales_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated default sales channel's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8256,
					"name": "default_region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated default region's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8257,
					"name": "default_location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated default location's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8258,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8251,
						8252,
						8253,
						8254,
						8255,
						8256,
						8257,
						8258
					]
				}
			]
		},
		{
			"id": 8259,
			"name": "UpdateStoreDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in the store."
					}
				]
			},
			"children": [
				{
					"id": 8260,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the store."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8261,
					"name": "supported_currency_codes",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The supported currency codes of the store."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 8262,
					"name": "default_currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The default currency code of the store."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8263,
					"name": "default_sales_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated default sales channel's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8264,
					"name": "default_region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated default region's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8265,
					"name": "default_location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated default location's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8266,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8260,
						8261,
						8262,
						8263,
						8264,
						8265,
						8266
					]
				}
			]
		},
		{
			"id": 8140,
			"name": "IStoreModuleService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The main service interface for the Store Module."
					}
				]
			},
			"children": [
				{
					"id": 8141,
					"name": "create",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8142,
							"name": "create",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates stores."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created stores."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst stores = await storeModuleService.create([\n  {\n    name: \"Acme\",\n    supported_currency_codes: [\"usd\", \"eur\"],\n    default_currency_code: \"usd\",\n  },\n  {\n    name: \"Acme 2\",\n    supported_currency_codes: [\"usd\"],\n    default_currency_code: \"usd\",\n  },\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8143,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The stores to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8219,
											"name": "CreateStoreDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 8144,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8227,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8239,
											"name": "StoreDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 8145,
							"name": "create",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates a store."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created store."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst store = await storeModuleService.create({\n  name: \"Acme\",\n  supported_currency_codes: [\"usd\", \"eur\"],\n  default_currency_code: \"usd\",\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8146,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The store to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8219,
										"name": "CreateStoreDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8147,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8227,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 8239,
										"name": "StoreDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8148,
					"name": "upsert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8149,
							"name": "upsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates or creates stores if they don't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created or updated stores."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst stores = await storeModuleService.upsert([\n  {\n    id: \"store_123\",\n    name: \"Acme\",\n  },\n  {\n    name: \"Acme 2\",\n    supported_currency_codes: [\"usd\"],\n    default_currency_code: \"usd\",\n  },\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8150,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes in the stores to be created or updated."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8250,
											"name": "UpsertStoreDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 8151,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8227,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8239,
											"name": "StoreDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 8152,
							"name": "upsert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates or creates a store if it doesn't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created or updated store."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst store = await storeModuleService.upsert({\n  id: \"store_123\",\n  name: \"Acme\",\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8153,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes in the store to be created or updated."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8250,
										"name": "UpsertStoreDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8154,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8227,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 8239,
										"name": "StoreDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8155,
					"name": "update",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8156,
							"name": "update",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates an existing store."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated store."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst store = await storeModuleService.update(\"store_123\", {\n  name: \"Acme\",\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8157,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the store."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 8158,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the store."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8259,
										"name": "UpdateStoreDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8159,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8227,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 8239,
										"name": "StoreDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 8160,
							"name": "update",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing stores matching the specified filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated stores."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst store = await storeModuleService.update(\n  {\n    name: [\"Acme\"],\n  },\n  {\n    default_currency_code: \"usd\",\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8161,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters specifying which stores to update."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8267,
										"name": "FilterableStoreProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8162,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the store."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8259,
										"name": "UpdateStoreDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8163,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8227,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8239,
											"name": "StoreDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8164,
					"name": "delete",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8165,
							"name": "delete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes stores by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the stores are deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait storeModuleService.delete([\"store_123\", \"store_321\"])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8166,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the stores."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 8167,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8227,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 8168,
							"name": "delete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes a store by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the store is deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait storeModuleService.delete(\"store_123\")\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8169,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the store."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 8170,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8227,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8171,
					"name": "retrieve",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8172,
							"name": "retrieve",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a store by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved store."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst store = await storeModuleService.retrieve(\"store_123\")\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8173,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the store."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 8174,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the store is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a store."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8272,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8239,
												"name": "StoreDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8175,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8227,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 8239,
										"name": "StoreDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8176,
					"name": "list",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8177,
							"name": "list",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of stores based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of stores."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of stores using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst stores = await storeModuleService.list({\n  id: [\"store_123\", \"store_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst stores = await storeModuleService.list(\n  {\n    id: [\"store_123\", \"store_321\"],\n  },\n  {\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8178,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved stores."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8267,
										"name": "FilterableStoreProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8179,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the store is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a store."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8272,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8239,
												"name": "StoreDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8180,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8227,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8239,
											"name": "StoreDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8181,
					"name": "listAndCount",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8182,
							"name": "listAndCount",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of stores along with the total count of available stores satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of stores along with their total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of stores using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [stores, count] = await storeModuleService.listAndCount(\n  {\n    id: [\"store_123\", \"store_321\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [stores, count] = await storeModuleService.listAndCount(\n  {\n    id: [\"store_123\", \"store_321\"],\n  },\n  {\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8183,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved stores."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8267,
										"name": "FilterableStoreProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8184,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the store is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a store."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8272,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8239,
												"name": "StoreDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8185,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8227,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 8239,
													"name": "StoreDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8186,
					"name": "softDelete",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8187,
							"name": "softDelete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method soft deletes a store by its IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted.\nIf there are no related records, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait storeModuleService.softDelete([\n  \"store_123\",\n  \"store_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 8188,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 8189,
									"name": "storeIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the stores."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 8190,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8284,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8188,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8191,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8227,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8192,
					"name": "restore",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8193,
							"name": "restore",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method restores a soft deleted store by its IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored.\nIf there are no related records restored, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait storeModuleService.restore([\"store_123\", \"store_321\"])\n```"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 8194,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 8195,
									"name": "storeIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the stores."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 8196,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the store. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the store's relation attribute names."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8287,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8194,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8197,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8227,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						8141,
						8148,
						8155,
						8164,
						8171,
						8176,
						8181,
						8186,
						8192
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 8208,
					"name": "IModuleService",
					"package": "@medusajs/types"
				}
			]
		}
	],
	"groups": [
		{
			"title": "Interfaces",
			"children": [
				8272,
				8331,
				8284,
				8287,
				8376,
				8335,
				8208,
				8359,
				8317,
				8227,
				8239,
				8267,
				8219,
				8250,
				8259,
				8140
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				8389,
				8353,
				8365,
				8379,
				8290,
				8349
			]
		}
	],
	"packageName": "@medusajs/types",
	"symbolIdMap": {
		"8139": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": ""
		},
		"8140": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "IStoreModuleService"
		},
		"8141": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "IStoreModuleService.create"
		},
		"8142": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "IStoreModuleService.create"
		},
		"8143": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "data"
		},
		"8144": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8145": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "IStoreModuleService.create"
		},
		"8146": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "data"
		},
		"8147": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8148": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "IStoreModuleService.upsert"
		},
		"8149": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "IStoreModuleService.upsert"
		},
		"8150": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "data"
		},
		"8151": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8152": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "IStoreModuleService.upsert"
		},
		"8153": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "data"
		},
		"8154": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8155": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "IStoreModuleService.update"
		},
		"8156": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "IStoreModuleService.update"
		},
		"8157": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "id"
		},
		"8158": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "data"
		},
		"8159": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8160": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "IStoreModuleService.update"
		},
		"8161": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "selector"
		},
		"8162": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "data"
		},
		"8163": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8164": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "IStoreModuleService.delete"
		},
		"8165": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "IStoreModuleService.delete"
		},
		"8166": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "ids"
		},
		"8167": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8168": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "IStoreModuleService.delete"
		},
		"8169": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "id"
		},
		"8170": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8171": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "IStoreModuleService.retrieve"
		},
		"8172": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "IStoreModuleService.retrieve"
		},
		"8173": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "id"
		},
		"8174": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "config"
		},
		"8175": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8176": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "IStoreModuleService.list"
		},
		"8177": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "IStoreModuleService.list"
		},
		"8178": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "filters"
		},
		"8179": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "config"
		},
		"8180": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8181": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "IStoreModuleService.listAndCount"
		},
		"8182": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "IStoreModuleService.listAndCount"
		},
		"8183": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "filters"
		},
		"8184": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "config"
		},
		"8185": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8186": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "IStoreModuleService.softDelete"
		},
		"8187": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "IStoreModuleService.softDelete"
		},
		"8188": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"8189": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "storeIds"
		},
		"8190": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "config"
		},
		"8191": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8192": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "IStoreModuleService.restore"
		},
		"8193": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "IStoreModuleService.restore"
		},
		"8194": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"8195": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "storeIds"
		},
		"8196": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "config"
		},
		"8197": {
			"sourceFileName": "../../../packages/types/src/store/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8208": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "IModuleService"
		},
		"8219": {
			"sourceFileName": "../../../packages/types/src/store/mutations/store.ts",
			"qualifiedName": "CreateStoreDTO"
		},
		"8220": {
			"sourceFileName": "../../../packages/types/src/store/mutations/store.ts",
			"qualifiedName": "CreateStoreDTO.name"
		},
		"8221": {
			"sourceFileName": "../../../packages/types/src/store/mutations/store.ts",
			"qualifiedName": "CreateStoreDTO.supported_currency_codes"
		},
		"8222": {
			"sourceFileName": "../../../packages/types/src/store/mutations/store.ts",
			"qualifiedName": "CreateStoreDTO.default_currency_code"
		},
		"8223": {
			"sourceFileName": "../../../packages/types/src/store/mutations/store.ts",
			"qualifiedName": "CreateStoreDTO.default_sales_channel_id"
		},
		"8224": {
			"sourceFileName": "../../../packages/types/src/store/mutations/store.ts",
			"qualifiedName": "CreateStoreDTO.default_region_id"
		},
		"8225": {
			"sourceFileName": "../../../packages/types/src/store/mutations/store.ts",
			"qualifiedName": "CreateStoreDTO.default_location_id"
		},
		"8226": {
			"sourceFileName": "../../../packages/types/src/store/mutations/store.ts",
			"qualifiedName": "CreateStoreDTO.metadata"
		},
		"8227": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "Context"
		},
		"8228": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.__type"
		},
		"8229": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionManager"
		},
		"8230": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.manager"
		},
		"8231": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"8232": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"8233": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"8234": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionId"
		},
		"8235": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.messageAggregator"
		},
		"8236": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.requestId"
		},
		"8237": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.idempotencyKey"
		},
		"8238": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "TManager"
		},
		"8239": {
			"sourceFileName": "../../../packages/types/src/store/common/store.ts",
			"qualifiedName": "StoreDTO"
		},
		"8240": {
			"sourceFileName": "../../../packages/types/src/store/common/store.ts",
			"qualifiedName": "StoreDTO.id"
		},
		"8241": {
			"sourceFileName": "../../../packages/types/src/store/common/store.ts",
			"qualifiedName": "StoreDTO.name"
		},
		"8242": {
			"sourceFileName": "../../../packages/types/src/store/common/store.ts",
			"qualifiedName": "StoreDTO.supported_currency_codes"
		},
		"8243": {
			"sourceFileName": "../../../packages/types/src/store/common/store.ts",
			"qualifiedName": "StoreDTO.default_currency_code"
		},
		"8244": {
			"sourceFileName": "../../../packages/types/src/store/common/store.ts",
			"qualifiedName": "StoreDTO.default_sales_channel_id"
		},
		"8245": {
			"sourceFileName": "../../../packages/types/src/store/common/store.ts",
			"qualifiedName": "StoreDTO.default_region_id"
		},
		"8246": {
			"sourceFileName": "../../../packages/types/src/store/common/store.ts",
			"qualifiedName": "StoreDTO.default_location_id"
		},
		"8247": {
			"sourceFileName": "../../../packages/types/src/store/common/store.ts",
			"qualifiedName": "StoreDTO.metadata"
		},
		"8248": {
			"sourceFileName": "../../../packages/types/src/store/common/store.ts",
			"qualifiedName": "StoreDTO.created_at"
		},
		"8249": {
			"sourceFileName": "../../../packages/types/src/store/common/store.ts",
			"qualifiedName": "StoreDTO.updated_at"
		},
		"8250": {
			"sourceFileName": "../../../packages/types/src/store/mutations/store.ts",
			"qualifiedName": "UpsertStoreDTO"
		},
		"8251": {
			"sourceFileName": "../../../packages/types/src/store/mutations/store.ts",
			"qualifiedName": "UpsertStoreDTO.id"
		},
		"8252": {
			"sourceFileName": "../../../packages/types/src/store/mutations/store.ts",
			"qualifiedName": "UpsertStoreDTO.name"
		},
		"8253": {
			"sourceFileName": "../../../packages/types/src/store/mutations/store.ts",
			"qualifiedName": "UpsertStoreDTO.supported_currency_codes"
		},
		"8254": {
			"sourceFileName": "../../../packages/types/src/store/mutations/store.ts",
			"qualifiedName": "UpsertStoreDTO.default_currency_code"
		},
		"8255": {
			"sourceFileName": "../../../packages/types/src/store/mutations/store.ts",
			"qualifiedName": "UpsertStoreDTO.default_sales_channel_id"
		},
		"8256": {
			"sourceFileName": "../../../packages/types/src/store/mutations/store.ts",
			"qualifiedName": "UpsertStoreDTO.default_region_id"
		},
		"8257": {
			"sourceFileName": "../../../packages/types/src/store/mutations/store.ts",
			"qualifiedName": "UpsertStoreDTO.default_location_id"
		},
		"8258": {
			"sourceFileName": "../../../packages/types/src/store/mutations/store.ts",
			"qualifiedName": "UpsertStoreDTO.metadata"
		},
		"8259": {
			"sourceFileName": "../../../packages/types/src/store/mutations/store.ts",
			"qualifiedName": "UpdateStoreDTO"
		},
		"8260": {
			"sourceFileName": "../../../packages/types/src/store/mutations/store.ts",
			"qualifiedName": "UpdateStoreDTO.name"
		},
		"8261": {
			"sourceFileName": "../../../packages/types/src/store/mutations/store.ts",
			"qualifiedName": "UpdateStoreDTO.supported_currency_codes"
		},
		"8262": {
			"sourceFileName": "../../../packages/types/src/store/mutations/store.ts",
			"qualifiedName": "UpdateStoreDTO.default_currency_code"
		},
		"8263": {
			"sourceFileName": "../../../packages/types/src/store/mutations/store.ts",
			"qualifiedName": "UpdateStoreDTO.default_sales_channel_id"
		},
		"8264": {
			"sourceFileName": "../../../packages/types/src/store/mutations/store.ts",
			"qualifiedName": "UpdateStoreDTO.default_region_id"
		},
		"8265": {
			"sourceFileName": "../../../packages/types/src/store/mutations/store.ts",
			"qualifiedName": "UpdateStoreDTO.default_location_id"
		},
		"8266": {
			"sourceFileName": "../../../packages/types/src/store/mutations/store.ts",
			"qualifiedName": "UpdateStoreDTO.metadata"
		},
		"8267": {
			"sourceFileName": "../../../packages/types/src/store/common/store.ts",
			"qualifiedName": "FilterableStoreProps"
		},
		"8268": {
			"sourceFileName": "../../../packages/types/src/store/common/store.ts",
			"qualifiedName": "FilterableStoreProps.id"
		},
		"8269": {
			"sourceFileName": "../../../packages/types/src/store/common/store.ts",
			"qualifiedName": "FilterableStoreProps.name"
		},
		"8270": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"8271": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"8272": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig"
		},
		"8273": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.select"
		},
		"8274": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.skip"
		},
		"8275": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.take"
		},
		"8276": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.relations"
		},
		"8277": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.order"
		},
		"8278": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"8279": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.__index"
		},
		"8281": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.withDeleted"
		},
		"8282": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.filters"
		},
		"8283": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.Entity"
		},
		"8284": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "SoftDeleteReturn"
		},
		"8285": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.returnLinkableKeys"
		},
		"8286": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"8287": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "RestoreReturn"
		},
		"8288": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.returnLinkableKeys"
		},
		"8289": {
			"sourceFileName": "../../../packages/types/src/dal/repository-service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"8290": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerConfig"
		},
		"8291": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"8292": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.schema"
		},
		"8293": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationships"
		},
		"8294": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extends"
		},
		"8295": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"8296": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"8297": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.fieldAlias"
		},
		"8298": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"8299": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.path"
		},
		"8300": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"8301": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"8302": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"8303": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.primaryKeys"
		},
		"8304": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isLink"
		},
		"8305": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.linkableKeys"
		},
		"8306": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isReadOnlyLink"
		},
		"8307": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.databaseConfig"
		},
		"8308": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"8309": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.tableName"
		},
		"8310": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.idPrefix"
		},
		"8311": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraFields"
		},
		"8312": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"8313": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.type"
		},
		"8314": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultValue"
		},
		"8315": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.nullable"
		},
		"8316": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"8317": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator"
		},
		"8318": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"8319": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"8320": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "msg"
		},
		"8321": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"8322": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"8323": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "format"
		},
		"8324": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"8325": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"8326": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"8327": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"8328": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "T"
		},
		"8329": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "messageData"
		},
		"8330": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "options"
		},
		"8331": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable"
		},
		"8332": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"8333": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"8334": {
			"sourceFileName": "../../../packages/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.T"
		},
		"8335": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig"
		},
		"8336": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.serviceName"
		},
		"8337": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.alias"
		},
		"8338": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.fieldAlias"
		},
		"8339": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"8340": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.path"
		},
		"8341": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"8342": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.primaryKeys"
		},
		"8343": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.relationships"
		},
		"8344": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.extends"
		},
		"8345": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"8346": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"8347": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"8348": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.args"
		},
		"8349": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerRelationship"
		},
		"8350": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"8351": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isInternalService"
		},
		"8352": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.deleteCascade"
		},
		"8353": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "Message"
		},
		"8354": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"8355": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventName"
		},
		"8356": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.body"
		},
		"8357": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"8358": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "T"
		},
		"8359": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat"
		},
		"8360": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.groupBy"
		},
		"8361": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.sortBy"
		},
		"8362": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type"
		},
		"8363": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.__index"
		},
		"8365": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "MessageFormat"
		},
		"8366": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"8367": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventName"
		},
		"8368": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"8369": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"8370": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.service"
		},
		"8371": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.action"
		},
		"8372": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.object"
		},
		"8373": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"8374": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"8375": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "T"
		},
		"8376": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias"
		},
		"8377": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.name"
		},
		"8378": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.args"
		},
		"8379": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerRelationship"
		},
		"8380": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"8381": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.alias"
		},
		"8382": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.foreignKey"
		},
		"8383": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.primaryKey"
		},
		"8384": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"8385": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.isInternalService"
		},
		"8386": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.inverse"
		},
		"8387": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.isList"
		},
		"8388": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.args"
		},
		"8389": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "MessageBody"
		},
		"8390": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"8391": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"8392": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"8393": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.service"
		},
		"8394": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.action"
		},
		"8395": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.object"
		},
		"8396": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"8397": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"8398": {
			"sourceFileName": "../../../packages/types/src/event-bus/common.ts",
			"qualifiedName": "T"
		}
	}
}